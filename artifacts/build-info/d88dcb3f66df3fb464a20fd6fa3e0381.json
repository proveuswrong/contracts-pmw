{"id":"d88dcb3f66df3fb464a20fd6fa3e0381","_format":"hh-sol-build-info-1","solcVersion":"0.8.26","solcLongVersion":"0.8.26+commit.8a97fa7a","input":{"language":"Solidity","sources":{"@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol":{"content":"// SPDX-License-Identifier: MIT\n\n/**\n *  @authors: [@ferittuncer]\n *  @reviewers: [@mtsalenc*, @hbarcelos*, @unknownunknown1, @MerlinEgalite, @fnanni-0*, @shalzz]\n *  @auditors: []\n *  @bounties: []\n *  @deployments: []\n */\n\npragma solidity ^0.8.0;\n\nimport \"@kleros/erc-792/contracts/IArbitrable.sol\";\nimport \"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\";\nimport \"@kleros/erc-792/contracts/IArbitrator.sol\";\n\n/**\n *  @title This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet.\n    This interface is used in Dispute Resolver (resolve.kleros.io).\n */\nabstract contract IDisputeResolver is IArbitrable, IEvidence {\n    string public constant VERSION = \"2.0.0\"; // Can be used to distinguish between multiple deployed versions, if necessary.\n\n    /** @dev Raised when a contribution is made, inside fundAppeal function.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _round The round number the contribution was made to.\n     *  @param ruling Indicates the ruling option which got the contribution.\n     *  @param _contributor Caller of fundAppeal function.\n     *  @param _amount Contribution amount.\n     */\n    event Contribution(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 ruling, address indexed _contributor, uint256 _amount);\n\n    /** @dev Raised when a contributor withdraws non-zero value.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _round The round number the withdrawal was made from.\n     *  @param _ruling Indicates the ruling option which contributor gets rewards from.\n     *  @param _contributor The beneficiary of withdrawal.\n     *  @param _reward Total amount of withdrawal, consists of reimbursed deposits plus rewards.\n     */\n    event Withdrawal(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 _ruling, address indexed _contributor, uint256 _reward);\n\n    /** @dev To be raised when a ruling option is fully funded for appeal.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _round Number of the round this ruling option was fully funded in.\n     *  @param _ruling The ruling option which just got fully funded.\n     */\n    event RulingFunded(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 indexed _ruling);\n\n    /** @dev Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\n     *  @param _externalDisputeID Dispute id as in arbitrator contract.\n     *  @return localDisputeID Dispute id as in arbitrable contract.\n     */\n    function externalIDtoLocalID(uint256 _externalDisputeID) external virtual returns (uint256 localDisputeID);\n\n    /** @dev Returns number of possible ruling options. Valid rulings are [0, return value].\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @return count The number of ruling options.\n     */\n    function numberOfRulingOptions(uint256 _localDisputeID) external view virtual returns (uint256 count);\n\n    /** @dev Allows to submit evidence for a given dispute.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\n     */\n    function submitEvidence(uint256 _localDisputeID, string calldata _evidenceURI) external virtual;\n\n    /** @dev Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _ruling The ruling option to which the caller wants to contribute.\n     *  @return fullyFunded True if the ruling option got fully funded as a result of this contribution.\n     */\n    function fundAppeal(uint256 _localDisputeID, uint256 _ruling) external payable virtual returns (bool fullyFunded);\n\n    /** @dev Returns appeal multipliers.\n     *  @return winnerStakeMultiplier Winners stake multiplier.\n     *  @return loserStakeMultiplier Losers stake multiplier.\n     *  @return loserAppealPeriodMultiplier Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\n     *  @return denominator Multiplier denominator in basis points.\n     */\n    function getMultipliers()\n        external\n        view\n        virtual\n        returns (\n            uint256 winnerStakeMultiplier,\n            uint256 loserStakeMultiplier,\n            uint256 loserAppealPeriodMultiplier,\n            uint256 denominator\n        );\n\n    /** @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _contributor Beneficiary of withdraw operation.\n     *  @param _round Number of the round that caller wants to execute withdraw on.\n     *  @param _ruling A ruling option that caller wants to execute withdraw on.\n     *  @return sum The amount that is going to be transferred to contributor as a result of this function call.\n     */\n    function withdrawFeesAndRewards(\n        uint256 _localDisputeID,\n        address payable _contributor,\n        uint256 _round,\n        uint256 _ruling\n    ) external virtual returns (uint256 sum);\n\n    /** @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _contributor Beneficiary of withdraw operation.\n     *  @param _ruling Ruling option that caller wants to execute withdraw on.\n     */\n    function withdrawFeesAndRewardsForAllRounds(\n        uint256 _localDisputeID,\n        address payable _contributor,\n        uint256 _ruling\n    ) external virtual;\n\n    /** @dev Returns the sum of withdrawable amount.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _contributor Beneficiary of withdraw operation.\n     *  @param _ruling Ruling option that caller wants to get withdrawable amount from.\n     *  @return sum The total amount available to withdraw.\n     */\n    function getTotalWithdrawableAmount(\n        uint256 _localDisputeID,\n        address payable _contributor,\n        uint256 _ruling\n    ) external view virtual returns (uint256 sum);\n}\n"},"@kleros/erc-792/contracts/erc-1497/IEvidence.sol":{"content":"/**\n * @authors: [@ferittuncer, @hbarcelos]\n * @reviewers: []\n * @auditors: []\n * @bounties: []\n * @deployments: []\n * SPDX-License-Identifier: MIT\n */\npragma solidity ^0.8.0;\n\nimport \"../IArbitrator.sol\";\n\n/** @title IEvidence\n *  ERC-1497: Evidence Standard\n */\ninterface IEvidence {\n    /**\n     * @dev To be emitted when meta-evidence is submitted.\n     * @param _metaEvidenceID Unique identifier of meta-evidence.\n     * @param _evidence IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'\n     */\n    event MetaEvidence(uint256 indexed _metaEvidenceID, string _evidence);\n\n    /**\n     * @dev To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).\n     * @param _arbitrator The arbitrator of the contract.\n     * @param _evidenceGroupID Unique identifier of the evidence group the evidence belongs to.\n     * @param _party The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\n     * @param _evidence IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\n     */\n    event Evidence(\n        IArbitrator indexed _arbitrator,\n        uint256 indexed _evidenceGroupID,\n        address indexed _party,\n        string _evidence\n    );\n\n    /**\n     * @dev To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.\n     * @param _arbitrator The arbitrator of the contract.\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\n     * @param _metaEvidenceID Unique identifier of meta-evidence.\n     * @param _evidenceGroupID Unique identifier of the evidence group that is linked to this dispute.\n     */\n    event Dispute(\n        IArbitrator indexed _arbitrator,\n        uint256 indexed _disputeID,\n        uint256 _metaEvidenceID,\n        uint256 _evidenceGroupID\n    );\n}\n"},"@kleros/erc-792/contracts/IArbitrable.sol":{"content":"/**\n * @authors: [@ferittuncer, @hbarcelos]\n * @reviewers: [@remedcu]\n * @auditors: []\n * @bounties: []\n * @deployments: []\n * SPDX-License-Identifier: MIT\n */\npragma solidity ^0.8.0;\n\nimport \"./IArbitrator.sol\";\n\n/**\n * @title IArbitrable\n * Arbitrable interface.\n * When developing arbitrable contracts, we need to:\n * - Define the action taken when a ruling is received by the contract.\n * - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);\n */\ninterface IArbitrable {\n    /**\n     * @dev To be raised when a ruling is given.\n     * @param _arbitrator The arbitrator giving the ruling.\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\n     * @param _ruling The ruling which was given.\n     */\n    event Ruling(IArbitrator indexed _arbitrator, uint256 indexed _disputeID, uint256 _ruling);\n\n    /**\n     * @dev Give a ruling for a dispute. Must be called by the arbitrator.\n     * The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\n     * @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\n     */\n    function rule(uint256 _disputeID, uint256 _ruling) external;\n}\n"},"@kleros/erc-792/contracts/IArbitrator.sol":{"content":"/**\n * @authors: [@ferittuncer, @hbarcelos]\n * @reviewers: [@remedcu]\n * @auditors: []\n * @bounties: []\n * @deployments: []\n * SPDX-License-Identifier: MIT\n */\n\npragma solidity ^0.8.0;\n\nimport \"./IArbitrable.sol\";\n\n/**\n * @title Arbitrator\n * Arbitrator abstract contract.\n * When developing arbitrator contracts we need to:\n * - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\n * - Define the functions for cost display (arbitrationCost and appealCost).\n * - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\n */\ninterface IArbitrator {\n    enum DisputeStatus {\n        Waiting,\n        Appealable,\n        Solved\n    }\n\n    /**\n     * @dev To be emitted when a dispute is created.\n     * @param _disputeID ID of the dispute.\n     * @param _arbitrable The contract which created the dispute.\n     */\n    event DisputeCreation(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\n\n    /**\n     * @dev To be emitted when a dispute can be appealed.\n     * @param _disputeID ID of the dispute.\n     * @param _arbitrable The contract which created the dispute.\n     */\n    event AppealPossible(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\n\n    /**\n     * @dev To be emitted when the current ruling is appealed.\n     * @param _disputeID ID of the dispute.\n     * @param _arbitrable The contract which created the dispute.\n     */\n    event AppealDecision(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\n\n    /**\n     * @dev Create a dispute. Must be called by the arbitrable contract.\n     * Must be paid at least arbitrationCost(_extraData).\n     * @param _choices Amount of choices the arbitrator can make in this dispute.\n     * @param _extraData Can be used to give additional info on the dispute to be created.\n     * @return disputeID ID of the dispute created.\n     */\n    function createDispute(uint256 _choices, bytes calldata _extraData) external payable returns (uint256 disputeID);\n\n    /**\n     * @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n     * @param _extraData Can be used to give additional info on the dispute to be created.\n     * @return cost Amount to be paid.\n     */\n    function arbitrationCost(bytes calldata _extraData) external view returns (uint256 cost);\n\n    /**\n     * @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\n     * @param _disputeID ID of the dispute to be appealed.\n     * @param _extraData Can be used to give extra info on the appeal.\n     */\n    function appeal(uint256 _disputeID, bytes calldata _extraData) external payable;\n\n    /**\n     * @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n     * @param _disputeID ID of the dispute to be appealed.\n     * @param _extraData Can be used to give additional info on the dispute to be created.\n     * @return cost Amount to be paid.\n     */\n    function appealCost(uint256 _disputeID, bytes calldata _extraData) external view returns (uint256 cost);\n\n    /**\n     * @dev Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\n     * @param _disputeID ID of the dispute.\n     * @return start The start of the period.\n     * @return end The end of the period.\n     */\n    function appealPeriod(uint256 _disputeID) external view returns (uint256 start, uint256 end);\n\n    /**\n     * @dev Return the status of a dispute.\n     * @param _disputeID ID of the dispute to rule.\n     * @return status The status of the dispute.\n     */\n    function disputeStatus(uint256 _disputeID) external view returns (DisputeStatus status);\n\n    /**\n     * @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\n     * @param _disputeID ID of the dispute.\n     * @return ruling The ruling which has been given or the one which will be given if there is no appeal.\n     */\n    function currentRuling(uint256 _disputeID) external view returns (uint256 ruling);\n}\n"},"contracts/for-testing-purposes/Arbitrator.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.10;\n\nimport \"@kleros/erc-792/contracts/IArbitrable.sol\";\nimport \"@kleros/erc-792/contracts/IArbitrator.sol\";\n\n/** @title An IArbitrator implemetation for testing purposes.\n *  @dev DON'T USE ON PRODUCTION.\n */\ncontract Arbitrator is IArbitrator {\n  address public governor = msg.sender;\n  uint256 internal arbitrationPrice = 1_000_000_000_000_000_000;\n\n  struct Dispute {\n    IArbitrable arbitrated;\n    uint256 appealDeadline;\n    uint256 numberOfRulingOptions;\n    uint256 ruling;\n    DisputeStatus status;\n  }\n\n  modifier onlyGovernor() {\n    require(msg.sender == governor, \"Can only be called by the governor.\");\n    _;\n  }\n\n  Dispute[] public disputes;\n\n  function setArbitrationPrice(uint256 _arbitrationPrice) external onlyGovernor {\n    arbitrationPrice = _arbitrationPrice;\n  }\n\n  function arbitrationCost(bytes memory) public view override returns (uint256 fee) {\n    return arbitrationPrice;\n  }\n\n  function appealCost(uint256, bytes memory) public view override returns (uint256 fee) {\n    return arbitrationCost(\"UNUSED\");\n  }\n\n  function createDispute(uint256 _choices, bytes memory _extraData) public payable override returns (uint256 disputeID) {\n    uint256 arbitrationFee = arbitrationCost(_extraData);\n    require(msg.value >= arbitrationFee, \"Value is less than required arbitration fee.\");\n    disputes.push(\n      Dispute({\n        arbitrated: IArbitrable(msg.sender),\n        numberOfRulingOptions: _choices,\n        ruling: 0,\n        status: DisputeStatus.Waiting,\n        appealDeadline: 0\n      })\n    );\n    disputeID = disputes.length - 1;\n    emit DisputeCreation(disputeID, IArbitrable(msg.sender));\n  }\n\n  function giveRuling(\n    uint256 _disputeID,\n    uint256 _ruling,\n    uint256 _appealWindow\n  ) external onlyGovernor {\n    Dispute storage dispute = disputes[_disputeID];\n    require(_ruling <= dispute.numberOfRulingOptions, \"Invalid ruling.\");\n    require(dispute.status == DisputeStatus.Waiting, \"The dispute must be waiting for arbitration.\");\n\n    dispute.ruling = _ruling;\n    dispute.status = DisputeStatus.Appealable;\n    dispute.appealDeadline = block.timestamp + _appealWindow;\n\n    emit AppealPossible(_disputeID, dispute.arbitrated);\n  }\n\n  function appeal(uint256 _disputeID, bytes memory _extraData) public payable override {\n    Dispute storage dispute = disputes[_disputeID];\n    uint256 appealFee = appealCost(_disputeID, _extraData);\n    require(dispute.status == DisputeStatus.Appealable, \"The dispute must be appealable.\");\n    require(block.timestamp < dispute.appealDeadline, \"The appeal must occur before the end of the appeal period.\");\n    require(msg.value >= appealFee, \"Value is less than required appeal fee\");\n\n    dispute.appealDeadline = 0;\n    dispute.status = DisputeStatus.Waiting;\n    emit AppealDecision(_disputeID, IArbitrable(msg.sender));\n  }\n\n  function executeRuling(uint256 _disputeID) external {\n    Dispute storage dispute = disputes[_disputeID];\n    require(dispute.status == DisputeStatus.Appealable, \"The dispute must be appealable.\");\n    require(block.timestamp >= dispute.appealDeadline, \"The dispute must be executed after its appeal period has ended.\");\n\n    dispute.status = DisputeStatus.Solved;\n    dispute.arbitrated.rule(_disputeID, dispute.ruling);\n  }\n\n  function disputeStatus(uint256 _disputeID) public view override returns (DisputeStatus status) {\n    Dispute storage dispute = disputes[_disputeID];\n    if (disputes[_disputeID].status == DisputeStatus.Appealable && block.timestamp >= dispute.appealDeadline)\n      // If the appeal period is over, consider it solved even if rule has not been called yet.\n      return DisputeStatus.Solved;\n    else return disputes[_disputeID].status;\n  }\n\n  function currentRuling(uint256 _disputeID) public view override returns (uint256 ruling) {\n    return disputes[_disputeID].ruling;\n  }\n\n  function appealPeriod(uint256 _disputeID) public view override returns (uint256 start, uint256 end) {\n    Dispute storage dispute = disputes[_disputeID];\n    return (block.timestamp, dispute.appealDeadline);\n  }\n}\n"},"contracts/ITruthPost.sol":{"content":"/// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\n/// @title  The Truth Post: Accurate and Relevant News\n/// @author https://github.com/proveuswrong<0xferit, gratestas>\n/// @dev    This contract serves as a standard interface among multiple deployments of the Truth Post contracts.\n///         You should target this interface contract for interactions, not the concrete contract; otherwise you risk incompatibility across versions.\n/// @custom:approvals 0xferit, gratestas\nabstract contract ITruthPost {\n    string public constant VERSION = \"1.2.0\";\n\n    enum RulingOptions {\n        Tied,\n        ChallengeFailed,\n        Debunked\n    }\n\n    bool isPublishingEnabled = true;\n    address payable public TREASURY;\n    uint256 public treasuryBalance;\n    uint256 public constant NUMBER_OF_RULING_OPTIONS = 2;\n    uint256 public constant MULTIPLIER_DENOMINATOR = 1024; // Denominator for multipliers.\n    uint256 public LOSER_APPEAL_PERIOD_MULTIPLIER = 512; // Multiplier of the appeal period for losers (any other ruling options) in basis points. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\n    uint256 public ARTICLE_WITHDRAWAL_TIMELOCK; // To prevent authors to act fast and escape punishment.\n    uint256 public WINNER_STAKE_MULTIPLIER; // Multiplier of the arbitration cost that the winner has to pay as fee stake for a round in basis points.\n    uint256 public LOSER_STAKE_MULTIPLIER; // Multiplier of the arbitration cost that the loser has to pay as fee stake for a round in basis points.\n    uint256 public challengeTaxRate = 16;\n\n    constructor(\n        uint256 _articleWithdrawalTimelock,\n        uint256 _winnerStakeMultiplier,\n        uint256 _loserStakeMultiplier,\n        address payable _treasury\n    ) {\n        ARTICLE_WITHDRAWAL_TIMELOCK = _articleWithdrawalTimelock;\n        WINNER_STAKE_MULTIPLIER = _winnerStakeMultiplier;\n        LOSER_STAKE_MULTIPLIER = _loserStakeMultiplier;\n        TREASURY = _treasury;\n    }\n\n    event NewArticle(string articleID, uint8 category, uint256 articleAddress);\n    event Debunked(uint256 articleAddress);\n    event ArticleWithdrawn(uint256 articleAddress);\n    event BalanceUpdate(uint256 articleAddress, uint256 newTotal);\n    event TimelockStarted(uint256 articleAddress);\n    event Challenge(uint256 indexed articleAddress, address challanger, uint256 disputeID);\n    event Contribution(\n        uint256 indexed disputeId,\n        uint256 indexed round,\n        RulingOptions ruling,\n        address indexed contributor,\n        uint256 amount\n    );\n    event Withdrawal(\n        uint256 indexed disputeId,\n        uint256 indexed round,\n        RulingOptions ruling,\n        address indexed contributor,\n        uint256 reward\n    );\n    event RulingFunded(uint256 indexed disputeId, uint256 indexed round, RulingOptions indexed ruling);\n    event OwnershipTransfer(address indexed _newOwner);\n    event AdminUpdate(address indexed _newAdmin);\n    event WinnerStakeMultiplierUpdate(uint256 indexed _newWinnerStakeMultiplier);\n    event LoserStakeMultiplierUpdate(uint256 indexed _newLoserStakeMultiplier);\n    event LoserAppealPeriodMultiplierUpdate(uint256 indexed _newLoserAppealPeriodMultiplier);\n    event ArticleWithdrawalTimelockUpdate(uint256 indexed _newWithdrawalTimelock);\n    event ChallengeTaxRateUpdate(uint256 indexed _newTaxRate);\n    event TreasuryUpdate(address indexed _newTreasury);\n    event TreasuryBalanceUpdate(uint256 indexed _byAmount);\n\n    /// @notice Submit an evidence.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\n    function submitEvidence(uint256 _disputeID, string calldata _evidenceURI) external virtual;\n\n    /// @notice Fund a crowdfunding appeal.\n    /// @dev Lets user to contribute funding of an appeal round. Emits Contribution. If fully funded, emits RulingFunded.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _ruling The ruling option to which the caller wants to contribute.\n    /// @return fullyFunded True if the ruling option got fully funded as a result of this contribution.\n    function fundAppeal(uint256 _disputeID, RulingOptions _ruling) external payable virtual returns (bool fullyFunded);\n\n    /// @notice Publish an article.\n    /// @dev    Do not confuse articleID with articleAddress. Emits NewArticle.\n    /// @param _articleID Unique identifier of an article in IPFS content identifier format.\n    /// @param _category The category code of this new article.\n    /// @param _searchPointer Starting point of the search. Find a vacant storage slot before calling this function to minimize gas cost.\n    function initializeArticle(\n        string calldata _articleID,\n        uint8 _category,\n        uint72 _searchPointer\n    ) external payable virtual;\n\n    /// @notice Increase bounty.\n    /// @dev Lets author to increase a bounty of a live article. Emits BalanceUpdate.\n    /// @param _articleStorageAddress The address of the article in the storage.\n    function increaseBounty(uint72 _articleStorageAddress) external payable virtual;\n\n    /// @notice Initiate unpublishing process.\n    /// @dev Lets an author to start unpublishing process. Emits TimelockStarted.\n    /// @param _articleStorageAddress The address of the article in the storage.\n    function initiateWithdrawal(uint72 _articleStorageAddress) external virtual;\n\n    /// @notice Execute unpublishing.\n    /// @dev Executes unpublishing of an article. Emits Withdrew.\n    /// @param _articleStorageAddress The address of the article in the storage.\n    function withdraw(uint72 _articleStorageAddress) external virtual;\n\n    /// @notice Challenge article.\n    /// @dev Challenges the article at the given storage address. Emits Challenge.\n    /// @param _articleStorageAddress The address of the article in the storage.\n    function challenge(uint72 _articleStorageAddress) external payable virtual;\n\n    /// @notice Transfer ownership of an article.\n    /// @dev Lets you to transfer ownership of an article.\n    ///      This is useful when you want to change owner account without withdrawing and resubmitting.\n    ///      Emits OwnershipTransfer.\n    /// @param _articleStorageAddress The address of article in the storage.\n    /// @param _newOwner The new owner of the article which resides in the storage address, provided by the previous parameter.\n    function transferOwnership(uint72 _articleStorageAddress, address payable _newOwner) external virtual;\n\n    /// @notice Update the arbitration cost for the winner.\n    /// @dev Sets the multiplier of the arbitration cost that the winner has to pay as fee stake to a new value.\n    ///      Emits WinnerStakeMultiplierUpdate.\n    /// @param _newWinnerStakeMultiplier The new value of WINNER_STAKE_MULTIPLIER.\n    function changeWinnerStakeMultiplier(uint256 _newWinnerStakeMultiplier) external virtual;\n\n    /// @notice Update the arbitration cost for the loser.\n    /// @dev Sets the multiplier of the arbitration cost that the loser has to pay as fee stake to a new value.\n    ///      Emits LoserStakeMultiplierUpdate.\n    /// @param _newLoserStakeMultiplier The new value of LOSER_STAKE_MULTIPLIER.\n\n    function changeLoserStakeMultiplier(uint256 _newLoserStakeMultiplier) external virtual;\n\n    /// @notice Update the appeal window for the loser.\n    /// @dev Sets the multiplier of the appeal window for the loser to a new value. Emits LoserAppealPeriodMultiplierUpdate.\n    /// @param _newLoserAppealPeriodMultiplier The new value of LOSER_APPEAL_PERIOD_MULTIPLIER.\n    function changeLoserAppealPeriodMultiplier(uint256 _newLoserAppealPeriodMultiplier) external virtual;\n\n    /// @notice Update the timelock for the article withdtrawal.\n    /// @dev Sets the timelock before an author can initiate the withdrawal of an article to a new value.\n    ///      Emits ArticleWithdrawalTimelockUpdate.\n    /// @param _newArticleWithdrawalTimelock The new value of ARTICLE_WITHDRAWAL_TIMELOCK.\n    function changeArticleWithdrawalTimelock(uint256 _newArticleWithdrawalTimelock) external virtual;\n\n    /// @notice Find a vacant storage slot for an article.\n    /// @dev Helper function to find a vacant slot for article. Use this function before calling initialize to minimize your gas cost.\n    /// @param _searchPointer Starting point of the search. If you do not have a guess, just pass 0.\n    function findVacantStorageSlot(uint72 _searchPointer) external view virtual returns (uint256 vacantSlotIndex);\n\n    /// @notice Get required challenge fee.\n    /// @dev Returns the total amount needs to be paid to challenge an article, including taxes if any.\n    /// @param _articleStorageAddress The address of article in the storage.\n    function challengeFee(uint72 _articleStorageAddress) public view virtual returns (uint256 challengeFee);\n\n    /// @notice Get required appeal fee and deposit.\n    /// @dev Returns the total amount needs to be paid to appeal a dispute, including fees and stake deposit.\n    /// @param _disputeID ID of the dispute as in arbitrator.\n    function appealFee(uint256 _disputeID) external view virtual returns (uint256 arbitrationFee);\n\n    /// @notice Withdraw appeal crowdfunding balance.\n    /// @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _contributor Beneficiary of withdraw operation.\n    /// @param _round Number of the round that caller wants to execute withdraw on.\n    /// @param _ruling A ruling option that caller wants to execute withdraw on.\n    /// @return sum The amount that is going to be transferred to contributor as a result of this function call.\n    function withdrawFeesAndRewards(\n        uint256 _disputeID,\n        address payable _contributor,\n        uint256 _round,\n        RulingOptions _ruling\n    ) external virtual returns (uint256 sum);\n\n    /// @notice Withdraw appeal crowdfunding balance for given ruling option for all rounds.\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _contributor Beneficiary of withdraw operation.\n    /// @param _ruling Ruling option that caller wants to execute withdraw on.\n    function withdrawFeesAndRewardsForAllRounds(\n        uint256 _disputeID,\n        address payable _contributor,\n        RulingOptions _ruling\n    ) external virtual;\n\n    /// @notice Withdraw appeal crowdfunding balance for given ruling option and for given rounds.\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for given positions at once.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _contributor Beneficiary of withdraw operation.\n    /// @param positions [rounds][rulings].\n    function withdrawFeesAndRewardsForGivenPositions(\n        uint256 _disputeID,\n        address payable _contributor,\n        uint256[][] calldata positions\n    ) external virtual;\n\n    /// @notice Withdraw appeal crowdfunding balance for all ruling options and all rounds.\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds and all rulings at once.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _contributor Beneficiary of withdraw operation.\n    function withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256 _disputeID, address payable _contributor)\n        external\n        virtual;\n\n    /// @notice Learn the total amount of appeal crowdfunding balance available.\n    /// @dev Returns the sum of withdrawable amount and 2D array of positions[round][ruling].\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _contributor Beneficiary of withdraw operation.\n    /// @return sum The total amount available to withdraw.\n    function getTotalWithdrawableAmount(uint256 _disputeID, address payable _contributor)\n        external\n        view\n        virtual\n        returns (uint256 sum, uint256[][] memory positions);\n\n    /// @notice Learn about given dispute round.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _round Round ID.\n    /// @return hasPaid Whether given ruling option was fully funded.\n    /// @return totalPerRuling The total raised per ruling option.\n    /// @return totalClaimableAfterExpenses Total amount will be distributed back to winners, after deducting expenses.\n    function getRoundInfo(uint256 _disputeID, uint256 _round)\n        external\n        view\n        virtual\n        returns (\n            bool[NUMBER_OF_RULING_OPTIONS + 1] memory hasPaid,\n            uint256[NUMBER_OF_RULING_OPTIONS + 1] memory totalPerRuling,\n            uint256 totalClaimableAfterExpenses\n        );\n\n    /// @notice Learn about how much more needs to be raised for given ruling option.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _ruling The ruling option to query.\n    /// @return Amount needs to be raised\n    function getAmountRemainsToBeRaised(uint256 _disputeID, RulingOptions _ruling)\n        external\n        view\n        virtual\n        returns (uint256);\n\n    /// @notice Get return of investment ratio.\n    /// @dev Purely depends on whether given ruling option is winner and stake multipliers.\n    /// @param _ruling The ruling option to query.\n    /// @param _lastRoundWinner Winner of the last round.\n    /// @return Return of investment ratio, denominated by MULTIPLIER_DENOMINATOR.\n    function getReturnOfInvestmentRatio(RulingOptions _ruling, RulingOptions _lastRoundWinner)\n        external\n        view\n        virtual\n        returns (uint256);\n\n    /// @notice Get appeal time window.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _ruling The ruling option to query.\n    /// @return Start\n    /// @return End\n    function getAppealPeriod(uint256 _disputeID, RulingOptions _ruling)\n        external\n        view\n        virtual\n        returns (uint256, uint256);\n\n    /// @notice Get last round's winner.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @return Winning ruling option.\n    function getLastRoundWinner(uint256 _disputeID) public view virtual returns (uint256);\n\n    /// @notice Switches publishing lock.\n    /// @dev    Useful when it's no longer safe or secure to use this contract.\n    ///         Prevents new articles to be published. Only intended for privileges users.\n    function switchPublishingLock() public virtual;\n}\n"},"contracts/TruthPost.sol":{"content":"/// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\nimport \"@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol\";\nimport \"./ITruthPost.sol\";\n\n/// @title  The Trust Post\n/// @author https://github.com/proveuswrong<0xferit, gratestas>\n/// @notice Smart contract for a type of curation, where submitted items are on hold until they are withdrawn and the amount of security deposits are determined by submitters.\n/// @dev    You should target ITruthPost interface contract for building on top. Otherwise you risk incompatibility across versions.\n///         Articles are not addressed with their identifiers. That enables us to reuse same storage address for another article later.///         Arbitrator is fixed, but subcourts, jury size and metaevidence are not.\n///         We prevent articles to get withdrawn immediately. This is to prevent submitter to escape punishment in case someone discovers an argument to debunk the article.\n///         Bounty amounts are compressed with a lossy compression method to save on storage cost.\n/// @custom:approvals 0xferit, gratestas\ncontract TruthPost is ITruthPost, IArbitrable, IEvidence {\n    IArbitrator public immutable ARBITRATOR;\n    uint256 public constant NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE = 32; // To compress bounty amount to gain space in struct. Lossy compression.\n\n    uint8 public categoryCounter = 0;\n\n    address payable public admin = payable(msg.sender);\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin);\n        _;\n    }\n\n    struct DisputeData {\n        address payable challenger;\n        RulingOptions outcome;\n        uint8 articleCategory;\n        bool resolved; // To remove dependency to disputeStatus function of arbitrator. This function is likely to be removed in Kleros v2.\n        uint72 articleStorageAddress; // 2^16 is sufficient. Just using extra available space.\n        Round[] rounds; // Tracks each appeal round of a dispute.\n    }\n\n    struct Round {\n        mapping(address => uint256[NUMBER_OF_RULING_OPTIONS + 1]) contributions;\n        bool[NUMBER_OF_RULING_OPTIONS + 1] hasPaid; // True if the fees for this particular answer has been fully paid in the form hasPaid[rulingOutcome].\n        uint256[NUMBER_OF_RULING_OPTIONS + 1] totalPerRuling;\n        uint256 totalClaimableAfterExpenses;\n    }\n\n    struct Article {\n        address payable owner;\n        uint32 withdrawalPermittedAt; // Overflows in year 2106.\n        uint56 bountyAmount; // 32-bits compression. Decompressed size is 88 bits.\n        uint8 category;\n    }\n\n    bytes[64] public categoryToArbitratorExtraData;\n\n    mapping(uint72 => Article) public articleStorage; // Key: Storage address of article. Articles are not addressed with their identifiers, to enable reusing a storage slot.\n    mapping(uint256 => DisputeData) public disputes; // Key: Dispute ID as in arbitrator.\n\n    constructor(\n        IArbitrator _arbitrator,\n        bytes memory _arbitratorExtraData,\n        string memory _metaevidenceIpfsUri,\n        uint256 _articleWithdrawalTimelock,\n        uint256 _winnerStakeMultiplier,\n        uint256 _loserStakeMultiplier,\n        address payable _treasury\n    ) ITruthPost(_articleWithdrawalTimelock, _winnerStakeMultiplier, _loserStakeMultiplier, _treasury) {\n        ARBITRATOR = _arbitrator;\n        newCategory(_metaevidenceIpfsUri, _arbitratorExtraData);\n    }\n\n    /// @inheritdoc ITruthPost\n    function initializeArticle(\n        string calldata _articleID,\n        uint8 _category,\n        uint72 _searchPointer\n    ) external payable override {\n        require(_category < categoryCounter, \"This category does not exist\");\n\n        Article storage article;\n        do {\n            article = articleStorage[_searchPointer++];\n        } while (article.bountyAmount != 0);\n\n        article.owner = payable(msg.sender);\n        article.bountyAmount = uint56(msg.value >> NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE);\n        article.category = _category;\n\n        require(article.bountyAmount > 0, \"You can't initialize an article without putting a bounty.\");\n\n        uint256 articleStorageAddress = _searchPointer - 1;\n        emit NewArticle(_articleID, _category, articleStorageAddress);\n        emit BalanceUpdate(\n            articleStorageAddress,\n            uint256(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE\n        );\n    }\n\n    /// @inheritdoc ITruthPost\n    function submitEvidence(uint256 _disputeID, string calldata _evidenceURI) external override {\n        emit Evidence(ARBITRATOR, _disputeID, msg.sender, _evidenceURI);\n    }\n\n    /// @inheritdoc ITruthPost\n    function increaseBounty(uint72 _articleStorageAddress) external payable override {\n        Article storage article = articleStorage[_articleStorageAddress];\n        require(msg.sender == article.owner, \"Only author can increase bounty of an article.\");\n        // To prevent mistakes.\n\n        article.bountyAmount += uint56(msg.value >> NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE);\n\n        emit BalanceUpdate(\n            _articleStorageAddress,\n            uint256(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE\n        );\n    }\n\n    /// @inheritdoc ITruthPost\n    function initiateWithdrawal(uint72 _articleStorageAddress) external override {\n        Article storage article = articleStorage[_articleStorageAddress];\n        require(msg.sender == article.owner, \"Only author can withdraw an article.\");\n        require(article.withdrawalPermittedAt == 0, \"Withdrawal already initiated or there is a challenge.\");\n\n        article.withdrawalPermittedAt = uint32(block.timestamp + ARTICLE_WITHDRAWAL_TIMELOCK);\n        emit TimelockStarted(_articleStorageAddress);\n    }\n\n    /// @inheritdoc ITruthPost\n    function withdraw(uint72 _articleStorageAddress) external override {\n        Article storage article = articleStorage[_articleStorageAddress];\n\n        require(msg.sender == article.owner, \"Only author can withdraw an article.\");\n        require(article.withdrawalPermittedAt != 0, \"You need to initiate withdrawal first.\");\n        require(\n            article.withdrawalPermittedAt <= block.timestamp,\n            \"You need to wait for timelock or wait until the challenge ends.\"\n        );\n\n        uint256 withdrawal = uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE;\n        article.bountyAmount = 0;\n        // This is critical to reset.\n        article.withdrawalPermittedAt = 0;\n        // This too, otherwise new article inside the same slot can withdraw instantly.\n        payable(msg.sender).transfer(withdrawal);\n        emit ArticleWithdrawn(_articleStorageAddress);\n    }\n\n    /// @inheritdoc ITruthPost\n    function challenge(uint72 _articleStorageAddress) external payable override {\n        Article storage article = articleStorage[_articleStorageAddress];\n        require(article.bountyAmount > 0, \"Nothing to challenge.\");\n        require(article.withdrawalPermittedAt != type(uint32).max, \"There is an ongoing challenge.\");\n        article.withdrawalPermittedAt = type(uint32).max;\n        // Mark as challenged.\n\n        require(msg.value >= challengeFee(_articleStorageAddress), \"Insufficient funds to challenge.\");\n\n        uint256 taxAmount = ((uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE) *\n            challengeTaxRate) / MULTIPLIER_DENOMINATOR;\n        treasuryBalance += taxAmount;\n\n        uint256 disputeID = ARBITRATOR.createDispute{value: msg.value - taxAmount}(\n            NUMBER_OF_RULING_OPTIONS,\n            categoryToArbitratorExtraData[article.category]\n        );\n\n        disputes[disputeID].challenger = payable(msg.sender);\n        disputes[disputeID].rounds.push();\n        disputes[disputeID].articleStorageAddress = uint72(_articleStorageAddress);\n        disputes[disputeID].articleCategory = article.category;\n\n        // Evidence group ID is dispute ID.\n        emit Dispute(ARBITRATOR, disputeID, article.category, disputeID);\n        // This event links the dispute to an article storage address.\n        emit Challenge(_articleStorageAddress, msg.sender, disputeID);\n    }\n\n    /// @inheritdoc ITruthPost\n    function fundAppeal(uint256 _disputeID, RulingOptions _supportedRuling)\n        external\n        payable\n        override\n        returns (bool fullyFunded)\n    {\n        DisputeData storage dispute = disputes[_disputeID];\n\n        RulingOptions currentRuling = RulingOptions(ARBITRATOR.currentRuling(_disputeID));\n        uint256 basicCost;\n        uint256 totalCost;\n        {\n            (uint256 appealWindowStart, uint256 appealWindowEnd) = ARBITRATOR.appealPeriod(_disputeID);\n\n            uint256 multiplier;\n\n            if (_supportedRuling == currentRuling) {\n                require(block.timestamp < appealWindowEnd, \"Funding must be made within the appeal period.\");\n\n                multiplier = WINNER_STAKE_MULTIPLIER;\n            } else {\n                require(\n                    block.timestamp <\n                        (appealWindowStart +\n                            (((appealWindowEnd - appealWindowStart) * LOSER_APPEAL_PERIOD_MULTIPLIER) /\n                                MULTIPLIER_DENOMINATOR)),\n                    \"Funding must be made within the first half appeal period.\"\n                );\n\n                multiplier = LOSER_STAKE_MULTIPLIER;\n            }\n\n            basicCost = ARBITRATOR.appealCost(_disputeID, categoryToArbitratorExtraData[dispute.articleCategory]);\n            totalCost = basicCost + ((basicCost * (multiplier)) / MULTIPLIER_DENOMINATOR);\n        }\n\n        RulingOptions supportedRulingOutcome = RulingOptions(_supportedRuling);\n\n        uint256 lastRoundIndex = dispute.rounds.length - 1;\n        Round storage lastRound = dispute.rounds[lastRoundIndex];\n        require(!lastRound.hasPaid[uint256(supportedRulingOutcome)], \"Appeal fee has already been paid.\");\n\n        uint256 contribution;\n        {\n            uint256 paidSoFar = lastRound.totalPerRuling[uint256(supportedRulingOutcome)];\n\n            if (paidSoFar >= totalCost) {\n                contribution = 0;\n                // This can happen if arbitration fee gets lowered in between contributions.\n            } else {\n                contribution = totalCost - paidSoFar > msg.value ? msg.value : totalCost - paidSoFar;\n            }\n        }\n\n        emit Contribution(_disputeID, lastRoundIndex, _supportedRuling, msg.sender, contribution);\n\n        lastRound.contributions[msg.sender][uint256(supportedRulingOutcome)] += contribution;\n        lastRound.totalPerRuling[uint256(supportedRulingOutcome)] += contribution;\n\n        if (lastRound.totalPerRuling[uint256(supportedRulingOutcome)] >= totalCost) {\n            lastRound.totalClaimableAfterExpenses += lastRound.totalPerRuling[uint256(supportedRulingOutcome)];\n            lastRound.hasPaid[uint256(supportedRulingOutcome)] = true;\n            emit RulingFunded(_disputeID, lastRoundIndex, _supportedRuling);\n        }\n\n        if (\n            lastRound.hasPaid[uint256(RulingOptions.ChallengeFailed)] &&\n            lastRound.hasPaid[uint256(RulingOptions.Debunked)]\n        ) {\n            dispute.rounds.push();\n            lastRound.totalClaimableAfterExpenses -= basicCost;\n            ARBITRATOR.appeal{value: basicCost}(_disputeID, categoryToArbitratorExtraData[dispute.articleCategory]);\n        }\n\n        // Ignoring failure condition deliberately.\n        if (msg.value - contribution > 0) payable(msg.sender).send(msg.value - contribution);\n\n        return lastRound.hasPaid[uint256(supportedRulingOutcome)];\n    }\n\n    /// @notice Execute a ruling\n    /// @dev This is only for arbitrator to use.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _ruling Winning ruling option.\n    function rule(uint256 _disputeID, uint256 _ruling) external override {\n        require(IArbitrator(msg.sender) == ARBITRATOR);\n\n        DisputeData storage dispute = disputes[_disputeID];\n        Round storage lastRound = dispute.rounds[dispute.rounds.length - 1];\n\n        // Appeal overrides arbitrator ruling. If a ruling option was not fully funded and the counter ruling option was funded, funded ruling option wins by default.\n        RulingOptions wonByDefault;\n        if (lastRound.hasPaid[uint256(RulingOptions.ChallengeFailed)]) {\n            wonByDefault = RulingOptions.ChallengeFailed;\n        } else if (lastRound.hasPaid[uint256(RulingOptions.ChallengeFailed)]) {\n            wonByDefault = RulingOptions.Debunked;\n        }\n\n        RulingOptions actualRuling = wonByDefault != RulingOptions.Tied ? wonByDefault : RulingOptions(_ruling);\n        dispute.outcome = actualRuling;\n\n        uint72 articleStorageAddress = dispute.articleStorageAddress;\n\n        Article storage article = articleStorage[articleStorageAddress];\n\n        if (actualRuling == RulingOptions.Debunked) {\n            uint256 bounty = uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE;\n            article.bountyAmount = 0;\n\n            emit Debunked(articleStorageAddress);\n            disputes[_disputeID].challenger.send(bounty);\n            // Ignoring failure condition deliberately.\n        }\n        // In case of tie, article stands.\n        article.withdrawalPermittedAt = 0;\n        // Unmark as challenged.\n        dispute.resolved = true;\n\n        emit Ruling(IArbitrator(msg.sender), _disputeID, _ruling);\n    }\n\n    /// @inheritdoc ITruthPost\n    function withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256 _disputeID, address payable _contributor)\n        external\n        override\n    {\n        DisputeData storage dispute = disputes[_disputeID];\n        uint256 noOfRounds = dispute.rounds.length;\n        for (uint256 roundNumber = 0; roundNumber < noOfRounds; roundNumber++) {\n            for (uint256 rulingOption = 0; rulingOption <= NUMBER_OF_RULING_OPTIONS; rulingOption++)\n                withdrawFeesAndRewards(_disputeID, _contributor, roundNumber, RulingOptions(rulingOption));\n        }\n    }\n\n    /// @inheritdoc ITruthPost\n    function withdrawFeesAndRewardsForAllRounds(\n        uint256 _disputeID,\n        address payable _contributor,\n        RulingOptions _ruling\n    ) external override {\n        DisputeData storage dispute = disputes[_disputeID];\n        uint256 noOfRounds = dispute.rounds.length;\n        for (uint256 roundNumber = 0; roundNumber < noOfRounds; roundNumber++) {\n            withdrawFeesAndRewards(_disputeID, _contributor, roundNumber, _ruling);\n        }\n    }\n\n    /// @inheritdoc ITruthPost\n    function withdrawFeesAndRewardsForGivenPositions(\n        uint256 _disputeID,\n        address payable _contributor,\n        uint256[][] calldata positions\n    ) external override {\n        for (uint256 roundNumber = 0; roundNumber < positions.length; roundNumber++) {\n            for (uint256 rulingOption = 0; rulingOption < positions[roundNumber].length; rulingOption++) {\n                if (positions[roundNumber][rulingOption] > 0) {\n                    withdrawFeesAndRewards(_disputeID, _contributor, roundNumber, RulingOptions(rulingOption));\n                }\n            }\n        }\n    }\n\n    /// @inheritdoc ITruthPost\n    function withdrawFeesAndRewards(\n        uint256 _disputeID,\n        address payable _contributor,\n        uint256 _roundNumber,\n        RulingOptions _ruling\n    ) public override returns (uint256 amount) {\n        DisputeData storage dispute = disputes[_disputeID];\n        require(dispute.resolved, \"There is no ruling yet.\");\n\n        Round storage round = dispute.rounds[_roundNumber];\n\n        amount = getWithdrawableAmount(round, _contributor, _ruling, dispute.outcome);\n\n        if (amount != 0) {\n            round.contributions[_contributor][uint256(RulingOptions(_ruling))] = 0;\n            _contributor.send(amount);\n            // Ignoring failure condition deliberately.\n            emit Withdrawal(_disputeID, _roundNumber, _ruling, _contributor, amount);\n        }\n    }\n\n    /// @notice Updates the challenge tax rate of the contract to a new value.\n    /// @dev    The new challenge tax rate must be at most 25% based on MULTIPLIER_DENOMINATOR.\n    ///         Only the current administrator can call this function. Emits ChallengeTaxRateUpdate.\n    /// @param _newChallengeTaxRate The new challenge tax rate to be set.\n    function updateChallengeTaxRate(uint256 _newChallengeTaxRate) external onlyAdmin {\n        require(_newChallengeTaxRate <= 256, \"The tax rate can only be increased by a maximum of 25%\");\n        challengeTaxRate = _newChallengeTaxRate;\n        emit ChallengeTaxRateUpdate(_newChallengeTaxRate);\n    }\n\n    /// @notice Transfers the balance of the contract to the treasury.\n    /// @dev    Allows the contract to send its entire balance to the treasury address.\n    ///         It is important to ensure that the treasury address is set correctly.\n    ///         If the transfer fails, an exception will be raised, and the funds will remain in the contract.\n    ///         Emits TreasuryBalanceUpdate.\n    function transferBalanceToTreasury() public {\n        uint256 amount = treasuryBalance;\n        treasuryBalance = 0;\n        TREASURY.send(amount);\n        emit TreasuryBalanceUpdate(amount);\n    }\n\n    /// @inheritdoc ITruthPost\n    function switchPublishingLock() public override onlyAdmin {\n        isPublishingEnabled = !isPublishingEnabled;\n    }\n\n    /// @notice Changes the administrator of the contract to a new address.\n    /// @dev    Only the current administrator can call this function. Emits AdminUpdate.\n    /// @param  _newAdmin The address of the new administrator.\n    function changeAdmin(address payable _newAdmin) external onlyAdmin {\n        admin = _newAdmin;\n        emit AdminUpdate(_newAdmin);\n    }\n\n    /// @notice Changes the treasury address of the contract to a new address.\n    /// @dev    Only the current administrator can call this function. Emits TreasuryUpdate.\n    /// @param  _newTreasury The address of the new treasury.\n    function changeTreasury(address payable _newTreasury) external onlyAdmin {\n        TREASURY = _newTreasury;\n        emit TreasuryUpdate(_newTreasury);\n    }\n\n    /// @inheritdoc ITruthPost\n    function changeWinnerStakeMultiplier(uint256 _newWinnerStakeMultiplier) external override onlyAdmin {\n        WINNER_STAKE_MULTIPLIER = _newWinnerStakeMultiplier;\n        emit WinnerStakeMultiplierUpdate(_newWinnerStakeMultiplier);\n    }\n\n    /// @inheritdoc ITruthPost\n    function changeLoserStakeMultiplier(uint256 _newLoserStakeMultiplier) external override onlyAdmin {\n        LOSER_STAKE_MULTIPLIER = _newLoserStakeMultiplier;\n        emit LoserStakeMultiplierUpdate(_newLoserStakeMultiplier);\n    }\n\n    /// @inheritdoc ITruthPost\n    function changeLoserAppealPeriodMultiplier(uint256 _newLoserAppealPeriodMultiplier) external override onlyAdmin {\n        LOSER_APPEAL_PERIOD_MULTIPLIER = _newLoserAppealPeriodMultiplier;\n        emit LoserAppealPeriodMultiplierUpdate(_newLoserAppealPeriodMultiplier);\n    }\n\n    /// @inheritdoc ITruthPost\n    function changeArticleWithdrawalTimelock(uint256 _newArticleWithdrawalTimelock) external override onlyAdmin {\n        ARTICLE_WITHDRAWAL_TIMELOCK = _newArticleWithdrawalTimelock;\n        emit ArticleWithdrawalTimelockUpdate(_newArticleWithdrawalTimelock);\n    }\n\n    /// @notice Initialize a category.\n    /// @param _metaevidenceIpfsUri IPFS content identifier for metaevidence.\n    /// @param _arbitratorExtraData Extra data of Kleros arbitrator, signaling subcourt and jury size selection.\n    function newCategory(string memory _metaevidenceIpfsUri, bytes memory _arbitratorExtraData) public {\n        require(categoryCounter + 1 != 0, \"No space left for a new category\");\n        emit MetaEvidence(categoryCounter, _metaevidenceIpfsUri);\n        categoryToArbitratorExtraData[categoryCounter] = _arbitratorExtraData;\n\n        categoryCounter++;\n    }\n\n    /// @inheritdoc ITruthPost\n    function transferOwnership(uint72 _articleStorageAddress, address payable _newOwner) external override {\n        Article storage article = articleStorage[_articleStorageAddress];\n        require(msg.sender == article.owner, \"Only author can transfer ownership.\");\n        article.owner = _newOwner;\n        emit OwnershipTransfer(_newOwner);\n    }\n\n    /// @inheritdoc ITruthPost\n    function challengeFee(uint72 _articleStorageAddress) public view override returns (uint256) {\n        Article storage article = articleStorage[_articleStorageAddress];\n\n        uint256 arbitrationFee = ARBITRATOR.arbitrationCost(categoryToArbitratorExtraData[article.category]);\n        uint256 challengeTax = ((uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE) *\n            challengeTaxRate) / MULTIPLIER_DENOMINATOR;\n\n        return arbitrationFee + challengeTax;\n    }\n\n    /// @inheritdoc ITruthPost\n    function appealFee(uint256 _disputeID) external view override returns (uint256 arbitrationFee) {\n        DisputeData storage dispute = disputes[_disputeID];\n        arbitrationFee = ARBITRATOR.appealCost(_disputeID, categoryToArbitratorExtraData[dispute.articleCategory]);\n    }\n\n    /// @inheritdoc ITruthPost\n    function findVacantStorageSlot(uint72 _searchPointer) external view override returns (uint256 vacantSlotIndex) {\n        Article storage article;\n        do {\n            article = articleStorage[_searchPointer++];\n        } while (article.bountyAmount != 0);\n\n        return _searchPointer - 1;\n    }\n\n    /// @inheritdoc ITruthPost\n    function getTotalWithdrawableAmount(uint256 _disputeID, address payable _contributor)\n        external\n        view\n        override\n        returns (uint256 sum, uint256[][] memory amounts)\n    {\n        DisputeData storage dispute = disputes[_disputeID];\n        if (!dispute.resolved) return (uint256(0), amounts);\n        uint256 noOfRounds = dispute.rounds.length;\n        RulingOptions finalRuling = dispute.outcome;\n\n        amounts = new uint256[][](noOfRounds);\n        for (uint256 roundNumber = 0; roundNumber < noOfRounds; roundNumber++) {\n            amounts[roundNumber] = new uint256[](NUMBER_OF_RULING_OPTIONS + 1);\n\n            Round storage round = dispute.rounds[roundNumber];\n            for (uint256 rulingOption = 0; rulingOption <= NUMBER_OF_RULING_OPTIONS; rulingOption++) {\n                uint256 currentAmount = getWithdrawableAmount(\n                    round,\n                    _contributor,\n                    RulingOptions(rulingOption),\n                    finalRuling\n                );\n                if (currentAmount > 0) {\n                    sum += getWithdrawableAmount(round, _contributor, RulingOptions(rulingOption), finalRuling);\n                    amounts[roundNumber][rulingOption] = currentAmount;\n                }\n            }\n        }\n    }\n\n    /// @notice Returns withdrawable amount for given parameters.\n    function getWithdrawableAmount(\n        Round storage _round,\n        address _contributor,\n        RulingOptions _ruling,\n        RulingOptions _finalRuling\n    ) internal view returns (uint256 amount) {\n        RulingOptions givenRuling = RulingOptions(_ruling);\n\n        if (!_round.hasPaid[uint256(givenRuling)]) {\n            // Allow to reimburse if funding was unsuccessful for this ruling option.\n            amount = _round.contributions[_contributor][uint256(givenRuling)];\n        } else {\n            // Funding was successful for this ruling option.\n            if (_ruling == _finalRuling) {\n                // This ruling option is the ultimate winner.\n                amount = _round.totalPerRuling[uint256(givenRuling)] > 0\n                    ? (_round.contributions[_contributor][uint256(givenRuling)] * _round.totalClaimableAfterExpenses) /\n                        _round.totalPerRuling[uint256(givenRuling)]\n                    : 0;\n            } else if (!_round.hasPaid[uint256(RulingOptions(_finalRuling))]) {\n                // The ultimate winner was not funded in this round. Contributions discounting the appeal fee are reimbursed proportionally.\n                amount =\n                    (_round.contributions[_contributor][uint256(givenRuling)] * _round.totalClaimableAfterExpenses) /\n                    (_round.totalPerRuling[uint256(RulingOptions.ChallengeFailed)] +\n                        _round.totalPerRuling[uint256(RulingOptions.Debunked)]);\n            }\n        }\n    }\n\n    /// @inheritdoc ITruthPost\n    function getRoundInfo(uint256 _disputeID, uint256 _round)\n        external\n        view\n        override\n        returns (\n            bool[NUMBER_OF_RULING_OPTIONS + 1] memory hasPaid,\n            uint256[NUMBER_OF_RULING_OPTIONS + 1] memory totalPerRuling,\n            uint256 totalClaimableAfterExpenses\n        )\n    {\n        Round storage round = disputes[_disputeID].rounds[_round];\n        return (round.hasPaid, round.totalPerRuling, round.totalClaimableAfterExpenses);\n    }\n\n    /// @inheritdoc ITruthPost\n    function getLastRoundWinner(uint256 _disputeID) public view override returns (uint256) {\n        return ARBITRATOR.currentRuling(_disputeID);\n    }\n\n    /// @inheritdoc ITruthPost\n    function getAppealPeriod(uint256 _disputeID, RulingOptions _ruling)\n        external\n        view\n        override\n        returns (uint256, uint256)\n    {\n        (uint256 appealWindowStart, uint256 appealWindowEnd) = ARBITRATOR.appealPeriod(_disputeID);\n        uint256 loserAppealWindowEnd = appealWindowStart +\n            (((appealWindowEnd - appealWindowStart) * LOSER_APPEAL_PERIOD_MULTIPLIER) / MULTIPLIER_DENOMINATOR);\n\n        bool isWinner = RulingOptions(getLastRoundWinner(_disputeID)) == _ruling;\n        return isWinner ? (appealWindowStart, appealWindowEnd) : (appealWindowStart, loserAppealWindowEnd);\n    }\n\n    /// @inheritdoc ITruthPost\n    function getReturnOfInvestmentRatio(RulingOptions _ruling, RulingOptions _lastRoundWinner)\n        external\n        view\n        override\n        returns (uint256)\n    {\n        bool isWinner = _lastRoundWinner == _ruling;\n        uint256 DECIMAL_PRECISION = 1000;\n        uint256 multiplier = isWinner ? WINNER_STAKE_MULTIPLIER : LOSER_STAKE_MULTIPLIER;\n        return (((WINNER_STAKE_MULTIPLIER + LOSER_STAKE_MULTIPLIER + MULTIPLIER_DENOMINATOR) * DECIMAL_PRECISION) /\n            (multiplier + MULTIPLIER_DENOMINATOR));\n    }\n\n    /// @inheritdoc ITruthPost\n    function getAmountRemainsToBeRaised(uint256 _disputeID, RulingOptions _ruling)\n        external\n        view\n        override\n        returns (uint256)\n    {\n        DisputeData storage dispute = disputes[_disputeID];\n        uint256 lastRoundIndex = dispute.rounds.length - 1;\n        Round storage lastRound = dispute.rounds[lastRoundIndex];\n\n        bool isWinner = RulingOptions(getLastRoundWinner(_disputeID)) == _ruling;\n        uint256 multiplier = isWinner ? WINNER_STAKE_MULTIPLIER : LOSER_STAKE_MULTIPLIER;\n\n        uint256 raisedSoFar = lastRound.totalPerRuling[uint256(_ruling)];\n        uint256 basicCost = ARBITRATOR.appealCost(_disputeID, categoryToArbitratorExtraData[dispute.articleCategory]);\n        uint256 totalCost = basicCost + ((basicCost * (multiplier)) / MULTIPLIER_DENOMINATOR);\n\n        return totalCost - raisedSoFar;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":1000},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"3149","formattedMessage":"Warning: The result type of the shift operation is equal to the type of the first operand (uint96) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.\n   --> contracts/TruthPost.sol:137:30:\n    |\n137 |         uint256 withdrawal = uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE;\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"The result type of the shift operation is equal to the type of the first operand (uint96) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.","severity":"warning","sourceLocation":{"end":6365,"file":"contracts/TruthPost.sol","start":6291},"type":"Warning"},{"component":"general","errorCode":"3149","formattedMessage":"Warning: The result type of the shift operation is equal to the type of the first operand (uint96) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.\n   --> contracts/TruthPost.sol:156:31:\n    |\n156 |         uint256 taxAmount = ((uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE) *\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"The result type of the shift operation is equal to the type of the first operand (uint96) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.","severity":"warning","sourceLocation":{"end":7338,"file":"contracts/TruthPost.sol","start":7264},"type":"Warning"},{"component":"general","errorCode":"5878","formattedMessage":"Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n   --> contracts/TruthPost.sol:252:43:\n    |\n252 |         if (msg.value - contribution > 0) payable(msg.sender).send(msg.value - contribution);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Failure condition of 'send' ignored. Consider using 'transfer' instead.","severity":"warning","sourceLocation":{"end":11529,"file":"contracts/TruthPost.sol","start":11479},"type":"Warning"},{"component":"general","errorCode":"3149","formattedMessage":"Warning: The result type of the shift operation is equal to the type of the first operand (uint96) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.\n   --> contracts/TruthPost.sol:283:30:\n    |\n283 |             uint256 bounty = uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE;\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"The result type of the shift operation is equal to the type of the first operand (uint96) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.","severity":"warning","sourceLocation":{"end":12995,"file":"contracts/TruthPost.sol","start":12921},"type":"Warning"},{"component":"general","errorCode":"5878","formattedMessage":"Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n   --> contracts/TruthPost.sol:287:13:\n    |\n287 |             disputes[_disputeID].challenger.send(bounty);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Failure condition of 'send' ignored. Consider using 'transfer' instead.","severity":"warning","sourceLocation":{"end":13142,"file":"contracts/TruthPost.sol","start":13098},"type":"Warning"},{"component":"general","errorCode":"5878","formattedMessage":"Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n   --> contracts/TruthPost.sol:355:13:\n    |\n355 |             _contributor.send(amount);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Failure condition of 'send' ignored. Consider using 'transfer' instead.","severity":"warning","sourceLocation":{"end":15832,"file":"contracts/TruthPost.sol","start":15807},"type":"Warning"},{"component":"general","errorCode":"5878","formattedMessage":"Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n   --> contracts/TruthPost.sol:379:9:\n    |\n379 |         TREASURY.send(amount);\n    |         ^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Failure condition of 'send' ignored. Consider using 'transfer' instead.","severity":"warning","sourceLocation":{"end":17200,"file":"contracts/TruthPost.sol","start":17179},"type":"Warning"},{"component":"general","errorCode":"3149","formattedMessage":"Warning: The result type of the shift operation is equal to the type of the first operand (uint96) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.\n   --> contracts/TruthPost.sol:452:34:\n    |\n452 |         uint256 challengeTax = ((uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE) *\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"The result type of the shift operation is equal to the type of the first operand (uint96) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.","severity":"warning","sourceLocation":{"end":20727,"file":"contracts/TruthPost.sol","start":20653},"type":"Warning"}],"sources":{"@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol":{"ast":{"absolutePath":"@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol","exportedSymbols":{"IArbitrable":[153],"IArbitrator":[249],"IDisputeResolver":[130],"IEvidence":[285]},"id":131,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"225:23:0"},{"absolutePath":"@kleros/erc-792/contracts/IArbitrable.sol","file":"@kleros/erc-792/contracts/IArbitrable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":131,"sourceUnit":154,"src":"250:51:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@kleros/erc-792/contracts/erc-1497/IEvidence.sol","file":"@kleros/erc-792/contracts/erc-1497/IEvidence.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":131,"sourceUnit":286,"src":"302:58:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@kleros/erc-792/contracts/IArbitrator.sol","file":"@kleros/erc-792/contracts/IArbitrator.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":131,"sourceUnit":250,"src":"361:51:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6,"name":"IArbitrable","nameLocations":["700:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"700:11:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"700:11:0"},{"baseName":{"id":8,"name":"IEvidence","nameLocations":["713:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":285,"src":"713:9:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"713:9:0"}],"canonicalName":"IDisputeResolver","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"414:247:0","text":"  @title This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet.\nThis interface is used in Dispute Resolver (resolve.kleros.io)."},"fullyImplemented":false,"id":130,"linearizedBaseContracts":[130,285,153],"name":"IDisputeResolver","nameLocation":"680:16:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"ffa1ad74","id":12,"mutability":"constant","name":"VERSION","nameLocation":"752:7:0","nodeType":"VariableDeclaration","scope":130,"src":"729:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10,"name":"string","nodeType":"ElementaryTypeName","src":"729:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"322e302e30","id":11,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"762:7:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4bcb154e38601c389396fa918314da42d4626f13ef6d0ceb07e5f5d26b2fbc3","typeString":"literal_string \"2.0.0\""},"value":"2.0.0"},"visibility":"public"},{"anonymous":false,"documentation":{"id":13,"nodeType":"StructuredDocumentation","src":"856:489:0","text":"@dev Raised when a contribution is made, inside fundAppeal function.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _round The round number the contribution was made to.\n  @param ruling Indicates the ruling option which got the contribution.\n  @param _contributor Caller of fundAppeal function.\n  @param _amount Contribution amount."},"eventSelector":"cae597f39a3ad75c2e10d46b031f023c5c2babcd58ca0491b122acda3968d4c0","id":25,"name":"Contribution","nameLocation":"1356:12:0","nodeType":"EventDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"indexed":true,"mutability":"mutable","name":"_localDisputeID","nameLocation":"1385:15:0","nodeType":"VariableDeclaration","scope":25,"src":"1369:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17,"indexed":true,"mutability":"mutable","name":"_round","nameLocation":"1418:6:0","nodeType":"VariableDeclaration","scope":25,"src":"1402:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16,"name":"uint256","nodeType":"ElementaryTypeName","src":"1402:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19,"indexed":false,"mutability":"mutable","name":"ruling","nameLocation":"1434:6:0","nodeType":"VariableDeclaration","scope":25,"src":"1426:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"1426:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":21,"indexed":true,"mutability":"mutable","name":"_contributor","nameLocation":"1458:12:0","nodeType":"VariableDeclaration","scope":25,"src":"1442:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20,"name":"address","nodeType":"ElementaryTypeName","src":"1442:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":23,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"1480:7:0","nodeType":"VariableDeclaration","scope":25,"src":"1472:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"1472:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1368:120:0"},"src":"1350:139:0"},{"anonymous":false,"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1495:540:0","text":"@dev Raised when a contributor withdraws non-zero value.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _round The round number the withdrawal was made from.\n  @param _ruling Indicates the ruling option which contributor gets rewards from.\n  @param _contributor The beneficiary of withdrawal.\n  @param _reward Total amount of withdrawal, consists of reimbursed deposits plus rewards."},"eventSelector":"54b3cab3cb5c4aca3209db1151caff092e878011202e43a36782d4ebe0b963ae","id":38,"name":"Withdrawal","nameLocation":"2046:10:0","nodeType":"EventDefinition","parameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"indexed":true,"mutability":"mutable","name":"_localDisputeID","nameLocation":"2073:15:0","nodeType":"VariableDeclaration","scope":38,"src":"2057:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"2057:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30,"indexed":true,"mutability":"mutable","name":"_round","nameLocation":"2106:6:0","nodeType":"VariableDeclaration","scope":38,"src":"2090:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29,"name":"uint256","nodeType":"ElementaryTypeName","src":"2090:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32,"indexed":false,"mutability":"mutable","name":"_ruling","nameLocation":"2122:7:0","nodeType":"VariableDeclaration","scope":38,"src":"2114:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"2114:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34,"indexed":true,"mutability":"mutable","name":"_contributor","nameLocation":"2147:12:0","nodeType":"VariableDeclaration","scope":38,"src":"2131:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33,"name":"address","nodeType":"ElementaryTypeName","src":"2131:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36,"indexed":false,"mutability":"mutable","name":"_reward","nameLocation":"2169:7:0","nodeType":"VariableDeclaration","scope":38,"src":"2161:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35,"name":"uint256","nodeType":"ElementaryTypeName","src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2056:121:0"},"src":"2040:138:0"},{"anonymous":false,"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2184:389:0","text":"@dev To be raised when a ruling option is fully funded for appeal.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _round Number of the round this ruling option was fully funded in.\n  @param _ruling The ruling option which just got fully funded."},"eventSelector":"39493c1b78d9a13bcc9e1d532fc7faed3889248d93affa811416ce3c6bcb1a68","id":47,"name":"RulingFunded","nameLocation":"2584:12:0","nodeType":"EventDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"indexed":true,"mutability":"mutable","name":"_localDisputeID","nameLocation":"2613:15:0","nodeType":"VariableDeclaration","scope":47,"src":"2597:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":43,"indexed":true,"mutability":"mutable","name":"_round","nameLocation":"2646:6:0","nodeType":"VariableDeclaration","scope":47,"src":"2630:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"2630:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":45,"indexed":true,"mutability":"mutable","name":"_ruling","nameLocation":"2670:7:0","nodeType":"VariableDeclaration","scope":47,"src":"2654:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":44,"name":"uint256","nodeType":"ElementaryTypeName","src":"2654:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2596:82:0"},"src":"2578:101:0"},{"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"2685:234:0","text":"@dev Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\n  @param _externalDisputeID Dispute id as in arbitrator contract.\n  @return localDisputeID Dispute id as in arbitrable contract."},"functionSelector":"c21ae061","id":55,"implemented":false,"kind":"function","modifiers":[],"name":"externalIDtoLocalID","nameLocation":"2933:19:0","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"_externalDisputeID","nameLocation":"2961:18:0","nodeType":"VariableDeclaration","scope":55,"src":"2953:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"2953:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2952:28:0"},"returnParameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"localDisputeID","nameLocation":"3015:14:0","nodeType":"VariableDeclaration","scope":55,"src":"3007:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"3007:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3006:24:0"},"scope":130,"src":"2924:107:0","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"3037:307:0","text":"@dev Returns number of possible ruling options. Valid rulings are [0, return value].\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @return count The number of ruling options."},"functionSelector":"8d8b2d7e","id":63,"implemented":false,"kind":"function","modifiers":[],"name":"numberOfRulingOptions","nameLocation":"3358:21:0","nodeType":"FunctionDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"_localDisputeID","nameLocation":"3388:15:0","nodeType":"VariableDeclaration","scope":63,"src":"3380:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"3380:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3379:25:0"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"count","nameLocation":"3444:5:0","nodeType":"VariableDeclaration","scope":63,"src":"3436:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60,"name":"uint256","nodeType":"ElementaryTypeName","src":"3436:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3435:15:0"},"scope":130,"src":"3349:102:0","stateMutability":"view","virtual":true,"visibility":"external"},{"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"3457:351:0","text":"@dev Allows to submit evidence for a given dispute.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'"},"functionSelector":"a6a7f0eb","id":71,"implemented":false,"kind":"function","modifiers":[],"name":"submitEvidence","nameLocation":"3822:14:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"_localDisputeID","nameLocation":"3845:15:0","nodeType":"VariableDeclaration","scope":71,"src":"3837:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65,"name":"uint256","nodeType":"ElementaryTypeName","src":"3837:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"_evidenceURI","nameLocation":"3878:12:0","nodeType":"VariableDeclaration","scope":71,"src":"3862:28:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":67,"name":"string","nodeType":"ElementaryTypeName","src":"3862:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3836:55:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"3908:0:0"},"scope":130,"src":"3813:96:0","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3915:502:0","text":"@dev Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _ruling The ruling option to which the caller wants to contribute.\n  @return fullyFunded True if the ruling option got fully funded as a result of this contribution."},"functionSelector":"4b2f0ea0","id":81,"implemented":false,"kind":"function","modifiers":[],"name":"fundAppeal","nameLocation":"4431:10:0","nodeType":"FunctionDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"_localDisputeID","nameLocation":"4450:15:0","nodeType":"VariableDeclaration","scope":81,"src":"4442:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"4442:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"_ruling","nameLocation":"4475:7:0","nodeType":"VariableDeclaration","scope":81,"src":"4467:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"4467:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4441:42:0"},"returnParameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"fullyFunded","nameLocation":"4523:11:0","nodeType":"VariableDeclaration","scope":81,"src":"4518:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":78,"name":"bool","nodeType":"ElementaryTypeName","src":"4518:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4517:18:0"},"scope":130,"src":"4422:114:0","stateMutability":"payable","virtual":true,"visibility":"external"},{"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"4542:417:0","text":"@dev Returns appeal multipliers.\n  @return winnerStakeMultiplier Winners stake multiplier.\n  @return loserStakeMultiplier Losers stake multiplier.\n  @return loserAppealPeriodMultiplier Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\n  @return denominator Multiplier denominator in basis points."},"functionSelector":"79873f8a","id":93,"implemented":false,"kind":"function","modifiers":[],"name":"getMultipliers","nameLocation":"4973:14:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"4987:2:0"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"winnerStakeMultiplier","nameLocation":"5074:21:0","nodeType":"VariableDeclaration","scope":93,"src":"5066:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"5066:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"loserStakeMultiplier","nameLocation":"5117:20:0","nodeType":"VariableDeclaration","scope":93,"src":"5109:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint256","nodeType":"ElementaryTypeName","src":"5109:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"loserAppealPeriodMultiplier","nameLocation":"5159:27:0","nodeType":"VariableDeclaration","scope":93,"src":"5151:35:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88,"name":"uint256","nodeType":"ElementaryTypeName","src":"5151:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":91,"mutability":"mutable","name":"denominator","nameLocation":"5208:11:0","nodeType":"VariableDeclaration","scope":93,"src":"5200:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"5200:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5052:177:0"},"scope":130,"src":"4964:266:0","stateMutability":"view","virtual":true,"visibility":"external"},{"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"5236:601:0","text":"@dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _contributor Beneficiary of withdraw operation.\n  @param _round Number of the round that caller wants to execute withdraw on.\n  @param _ruling A ruling option that caller wants to execute withdraw on.\n  @return sum The amount that is going to be transferred to contributor as a result of this function call."},"functionSelector":"362c3479","id":107,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawFeesAndRewards","nameLocation":"5851:22:0","nodeType":"FunctionDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"_localDisputeID","nameLocation":"5891:15:0","nodeType":"VariableDeclaration","scope":107,"src":"5883:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"5883:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"_contributor","nameLocation":"5932:12:0","nodeType":"VariableDeclaration","scope":107,"src":"5916:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"5916:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"_round","nameLocation":"5962:6:0","nodeType":"VariableDeclaration","scope":107,"src":"5954:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":99,"name":"uint256","nodeType":"ElementaryTypeName","src":"5954:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"_ruling","nameLocation":"5986:7:0","nodeType":"VariableDeclaration","scope":107,"src":"5978:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"5978:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5873:126:0"},"returnParameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"mutability":"mutable","name":"sum","nameLocation":"6034:3:0","nodeType":"VariableDeclaration","scope":107,"src":"6026:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":104,"name":"uint256","nodeType":"ElementaryTypeName","src":"6026:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6025:13:0"},"scope":130,"src":"5842:197:0","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"6045:425:0","text":"@dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _contributor Beneficiary of withdraw operation.\n  @param _ruling Ruling option that caller wants to execute withdraw on."},"functionSelector":"fe2dddeb","id":117,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawFeesAndRewardsForAllRounds","nameLocation":"6484:34:0","nodeType":"FunctionDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"_localDisputeID","nameLocation":"6536:15:0","nodeType":"VariableDeclaration","scope":117,"src":"6528:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":109,"name":"uint256","nodeType":"ElementaryTypeName","src":"6528:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"_contributor","nameLocation":"6577:12:0","nodeType":"VariableDeclaration","scope":117,"src":"6561:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"6561:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"_ruling","nameLocation":"6607:7:0","nodeType":"VariableDeclaration","scope":117,"src":"6599:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":113,"name":"uint256","nodeType":"ElementaryTypeName","src":"6599:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:102:0"},"returnParameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"6637:0:0"},"scope":130,"src":"6475:163:0","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"6644:426:0","text":"@dev Returns the sum of withdrawable amount.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _contributor Beneficiary of withdraw operation.\n  @param _ruling Ruling option that caller wants to get withdrawable amount from.\n  @return sum The total amount available to withdraw."},"functionSelector":"ec85635b","id":129,"implemented":false,"kind":"function","modifiers":[],"name":"getTotalWithdrawableAmount","nameLocation":"7084:26:0","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"_localDisputeID","nameLocation":"7128:15:0","nodeType":"VariableDeclaration","scope":129,"src":"7120:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"7120:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":122,"mutability":"mutable","name":"_contributor","nameLocation":"7169:12:0","nodeType":"VariableDeclaration","scope":129,"src":"7153:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"7153:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":124,"mutability":"mutable","name":"_ruling","nameLocation":"7199:7:0","nodeType":"VariableDeclaration","scope":129,"src":"7191:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint256","nodeType":"ElementaryTypeName","src":"7191:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7110:102:0"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"sum","nameLocation":"7252:3:0","nodeType":"VariableDeclaration","scope":129,"src":"7244:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"7244:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7243:13:0"},"scope":130,"src":"7075:182:0","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":131,"src":"662:6597:0","usedErrors":[],"usedEvents":[25,38,47,144,260,272,284]}],"src":"225:7035:0"},"id":0},"@kleros/erc-792/contracts/IArbitrable.sol":{"ast":{"absolutePath":"@kleros/erc-792/contracts/IArbitrable.sol","exportedSymbols":{"IArbitrable":[153],"IArbitrator":[249]},"id":154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":132,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"160:23:1"},{"absolutePath":"@kleros/erc-792/contracts/IArbitrator.sol","file":"./IArbitrator.sol","id":133,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":154,"sourceUnit":250,"src":"185:27:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IArbitrable","contractDependencies":[],"contractKind":"interface","documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"214:298:1","text":" @title IArbitrable\n Arbitrable interface.\n When developing arbitrable contracts, we need to:\n - Define the action taken when a ruling is received by the contract.\n - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);"},"fullyImplemented":false,"id":153,"linearizedBaseContracts":[153],"name":"IArbitrable","nameLocation":"523:11:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"541:241:1","text":" @dev To be raised when a ruling is given.\n @param _arbitrator The arbitrator giving the ruling.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling The ruling which was given."},"eventSelector":"394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e75622276","id":144,"name":"Ruling","nameLocation":"793:6:1","nodeType":"EventDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"indexed":true,"mutability":"mutable","name":"_arbitrator","nameLocation":"820:11:1","nodeType":"VariableDeclaration","scope":144,"src":"800:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"},"typeName":{"id":137,"nodeType":"UserDefinedTypeName","pathNode":{"id":136,"name":"IArbitrator","nameLocations":["800:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":249,"src":"800:11:1"},"referencedDeclaration":249,"src":"800:11:1","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"visibility":"internal"},{"constant":false,"id":140,"indexed":true,"mutability":"mutable","name":"_disputeID","nameLocation":"849:10:1","nodeType":"VariableDeclaration","scope":144,"src":"833:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":139,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":142,"indexed":false,"mutability":"mutable","name":"_ruling","nameLocation":"869:7:1","nodeType":"VariableDeclaration","scope":144,"src":"861:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"861:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"799:78:1"},"src":"787:91:1"},{"documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"884:394:1","text":" @dev Give a ruling for a dispute. Must be called by the arbitrator.\n The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\"."},"functionSelector":"311a6c56","id":152,"implemented":false,"kind":"function","modifiers":[],"name":"rule","nameLocation":"1292:4:1","nodeType":"FunctionDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"_disputeID","nameLocation":"1305:10:1","nodeType":"VariableDeclaration","scope":152,"src":"1297:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"1297:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":149,"mutability":"mutable","name":"_ruling","nameLocation":"1325:7:1","nodeType":"VariableDeclaration","scope":152,"src":"1317:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1317:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1296:37:1"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"1342:0:1"},"scope":153,"src":"1283:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":154,"src":"513:832:1","usedErrors":[],"usedEvents":[144]}],"src":"160:1186:1"},"id":1},"@kleros/erc-792/contracts/IArbitrator.sol":{"ast":{"absolutePath":"@kleros/erc-792/contracts/IArbitrator.sol","exportedSymbols":{"IArbitrable":[153],"IArbitrator":[249]},"id":250,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":155,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"161:23:2"},{"absolutePath":"@kleros/erc-792/contracts/IArbitrable.sol","file":"./IArbitrable.sol","id":156,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":250,"sourceUnit":154,"src":"186:27:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IArbitrator","contractDependencies":[],"contractKind":"interface","documentation":{"id":157,"nodeType":"StructuredDocumentation","src":"215:473:2","text":" @title Arbitrator\n Arbitrator abstract contract.\n When developing arbitrator contracts we need to:\n - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\n - Define the functions for cost display (arbitrationCost and appealCost).\n - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling)."},"fullyImplemented":false,"id":249,"linearizedBaseContracts":[249],"name":"IArbitrator","nameLocation":"699:11:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IArbitrator.DisputeStatus","id":161,"members":[{"id":158,"name":"Waiting","nameLocation":"746:7:2","nodeType":"EnumValue","src":"746:7:2"},{"id":159,"name":"Appealable","nameLocation":"763:10:2","nodeType":"EnumValue","src":"763:10:2"},{"id":160,"name":"Solved","nameLocation":"783:6:2","nodeType":"EnumValue","src":"783:6:2"}],"name":"DisputeStatus","nameLocation":"722:13:2","nodeType":"EnumDefinition","src":"717:78:2"},{"anonymous":false,"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"801:174:2","text":" @dev To be emitted when a dispute is created.\n @param _disputeID ID of the dispute.\n @param _arbitrable The contract which created the dispute."},"eventSelector":"141dfc18aa6a56fc816f44f0e9e2f1ebc92b15ab167770e17db5b084c10ed995","id":169,"name":"DisputeCreation","nameLocation":"986:15:2","nodeType":"EventDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"indexed":true,"mutability":"mutable","name":"_disputeID","nameLocation":"1018:10:2","nodeType":"VariableDeclaration","scope":169,"src":"1002:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":167,"indexed":true,"mutability":"mutable","name":"_arbitrable","nameLocation":"1050:11:2","nodeType":"VariableDeclaration","scope":169,"src":"1030:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"},"typeName":{"id":166,"nodeType":"UserDefinedTypeName","pathNode":{"id":165,"name":"IArbitrable","nameLocations":["1030:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1030:11:2"},"referencedDeclaration":153,"src":"1030:11:2","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"}},"visibility":"internal"}],"src":"1001:61:2"},"src":"980:83:2"},{"anonymous":false,"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1069:179:2","text":" @dev To be emitted when a dispute can be appealed.\n @param _disputeID ID of the dispute.\n @param _arbitrable The contract which created the dispute."},"eventSelector":"a5d41b970d849372be1da1481ffd78d162bfe57a7aa2fe4e5fb73481fa5ac24f","id":177,"name":"AppealPossible","nameLocation":"1259:14:2","nodeType":"EventDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"indexed":true,"mutability":"mutable","name":"_disputeID","nameLocation":"1290:10:2","nodeType":"VariableDeclaration","scope":177,"src":"1274:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"indexed":true,"mutability":"mutable","name":"_arbitrable","nameLocation":"1322:11:2","nodeType":"VariableDeclaration","scope":177,"src":"1302:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"},"typeName":{"id":174,"nodeType":"UserDefinedTypeName","pathNode":{"id":173,"name":"IArbitrable","nameLocations":["1302:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1302:11:2"},"referencedDeclaration":153,"src":"1302:11:2","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"}},"visibility":"internal"}],"src":"1273:61:2"},"src":"1253:82:2"},{"anonymous":false,"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"1341:184:2","text":" @dev To be emitted when the current ruling is appealed.\n @param _disputeID ID of the dispute.\n @param _arbitrable The contract which created the dispute."},"eventSelector":"9c9b64db9e130f48381bf697abf638e73117dbfbfd7a4484f2da3ba188f4187d","id":185,"name":"AppealDecision","nameLocation":"1536:14:2","nodeType":"EventDefinition","parameters":{"id":184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"indexed":true,"mutability":"mutable","name":"_disputeID","nameLocation":"1567:10:2","nodeType":"VariableDeclaration","scope":185,"src":"1551:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":183,"indexed":true,"mutability":"mutable","name":"_arbitrable","nameLocation":"1599:11:2","nodeType":"VariableDeclaration","scope":185,"src":"1579:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"},"typeName":{"id":182,"nodeType":"UserDefinedTypeName","pathNode":{"id":181,"name":"IArbitrable","nameLocations":["1579:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1579:11:2"},"referencedDeclaration":153,"src":"1579:11:2","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"}},"visibility":"internal"}],"src":"1550:61:2"},"src":"1530:82:2"},{"documentation":{"id":186,"nodeType":"StructuredDocumentation","src":"1618:367:2","text":" @dev Create a dispute. Must be called by the arbitrable contract.\n Must be paid at least arbitrationCost(_extraData).\n @param _choices Amount of choices the arbitrator can make in this dispute.\n @param _extraData Can be used to give additional info on the dispute to be created.\n @return disputeID ID of the dispute created."},"functionSelector":"c13517e1","id":195,"implemented":false,"kind":"function","modifiers":[],"name":"createDispute","nameLocation":"1999:13:2","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"mutability":"mutable","name":"_choices","nameLocation":"2021:8:2","nodeType":"VariableDeclaration","scope":195,"src":"2013:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"_extraData","nameLocation":"2046:10:2","nodeType":"VariableDeclaration","scope":195,"src":"2031:25:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":189,"name":"bytes","nodeType":"ElementaryTypeName","src":"2031:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2012:45:2"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"disputeID","nameLocation":"2092:9:2","nodeType":"VariableDeclaration","scope":195,"src":"2084:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"2084:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2083:19:2"},"scope":249,"src":"1990:113:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2109:333:2","text":" @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n @param _extraData Can be used to give additional info on the dispute to be created.\n @return cost Amount to be paid."},"functionSelector":"f7434ea9","id":203,"implemented":false,"kind":"function","modifiers":[],"name":"arbitrationCost","nameLocation":"2456:15:2","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"_extraData","nameLocation":"2487:10:2","nodeType":"VariableDeclaration","scope":203,"src":"2472:25:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":197,"name":"bytes","nodeType":"ElementaryTypeName","src":"2472:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2471:27:2"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"cost","nameLocation":"2530:4:2","nodeType":"VariableDeclaration","scope":203,"src":"2522:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"2522:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2521:14:2"},"scope":249,"src":"2447:89:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"2542:243:2","text":" @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\n @param _disputeID ID of the dispute to be appealed.\n @param _extraData Can be used to give extra info on the appeal."},"functionSelector":"49912f88","id":211,"implemented":false,"kind":"function","modifiers":[],"name":"appeal","nameLocation":"2799:6:2","nodeType":"FunctionDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"_disputeID","nameLocation":"2814:10:2","nodeType":"VariableDeclaration","scope":211,"src":"2806:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint256","nodeType":"ElementaryTypeName","src":"2806:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"_extraData","nameLocation":"2841:10:2","nodeType":"VariableDeclaration","scope":211,"src":"2826:25:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":207,"name":"bytes","nodeType":"ElementaryTypeName","src":"2826:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2805:47:2"},"returnParameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"2869:0:2"},"scope":249,"src":"2790:80:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"2876:386:2","text":" @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n @param _disputeID ID of the dispute to be appealed.\n @param _extraData Can be used to give additional info on the dispute to be created.\n @return cost Amount to be paid."},"functionSelector":"f23f16e6","id":221,"implemented":false,"kind":"function","modifiers":[],"name":"appealCost","nameLocation":"3276:10:2","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"_disputeID","nameLocation":"3295:10:2","nodeType":"VariableDeclaration","scope":221,"src":"3287:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"3287:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"_extraData","nameLocation":"3322:10:2","nodeType":"VariableDeclaration","scope":221,"src":"3307:25:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":215,"name":"bytes","nodeType":"ElementaryTypeName","src":"3307:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3286:47:2"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"cost","nameLocation":"3365:4:2","nodeType":"VariableDeclaration","scope":221,"src":"3357:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3357:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3356:14:2"},"scope":249,"src":"3267:104:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"3377:302:2","text":" @dev Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\n @param _disputeID ID of the dispute.\n @return start The start of the period.\n @return end The end of the period."},"functionSelector":"afe15cfb","id":231,"implemented":false,"kind":"function","modifiers":[],"name":"appealPeriod","nameLocation":"3693:12:2","nodeType":"FunctionDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"_disputeID","nameLocation":"3714:10:2","nodeType":"VariableDeclaration","scope":231,"src":"3706:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3706:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3705:20:2"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"start","nameLocation":"3757:5:2","nodeType":"VariableDeclaration","scope":231,"src":"3749:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"3749:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"end","nameLocation":"3772:3:2","nodeType":"VariableDeclaration","scope":231,"src":"3764:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"3764:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3748:28:2"},"scope":249,"src":"3684:93:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"3783:156:2","text":" @dev Return the status of a dispute.\n @param _disputeID ID of the dispute to rule.\n @return status The status of the dispute."},"functionSelector":"10f169e8","id":240,"implemented":false,"kind":"function","modifiers":[],"name":"disputeStatus","nameLocation":"3953:13:2","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"_disputeID","nameLocation":"3975:10:2","nodeType":"VariableDeclaration","scope":240,"src":"3967:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"3967:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3966:20:2"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"status","nameLocation":"4024:6:2","nodeType":"VariableDeclaration","scope":240,"src":"4010:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"},"typeName":{"id":237,"nodeType":"UserDefinedTypeName","pathNode":{"id":236,"name":"DisputeStatus","nameLocations":["4010:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":161,"src":"4010:13:2"},"referencedDeclaration":161,"src":"4010:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"visibility":"internal"}],"src":"4009:22:2"},"scope":249,"src":"3944:88:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"4038:273:2","text":" @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\n @param _disputeID ID of the dispute.\n @return ruling The ruling which has been given or the one which will be given if there is no appeal."},"functionSelector":"1c3db16d","id":248,"implemented":false,"kind":"function","modifiers":[],"name":"currentRuling","nameLocation":"4325:13:2","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"_disputeID","nameLocation":"4347:10:2","nodeType":"VariableDeclaration","scope":248,"src":"4339:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4339:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4338:20:2"},"returnParameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"ruling","nameLocation":"4390:6:2","nodeType":"VariableDeclaration","scope":248,"src":"4382:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"4382:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4381:16:2"},"scope":249,"src":"4316:82:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":250,"src":"689:3711:2","usedErrors":[],"usedEvents":[169,177,185]}],"src":"161:4240:2"},"id":2},"@kleros/erc-792/contracts/erc-1497/IEvidence.sol":{"ast":{"absolutePath":"@kleros/erc-792/contracts/erc-1497/IEvidence.sol","exportedSymbols":{"IArbitrable":[153],"IArbitrator":[249],"IEvidence":[285]},"id":286,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":251,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"152:23:3"},{"absolutePath":"@kleros/erc-792/contracts/IArbitrator.sol","file":"../IArbitrator.sol","id":252,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":286,"sourceUnit":250,"src":"177:28:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IEvidence","contractDependencies":[],"contractKind":"interface","documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"207:56:3","text":"@title IEvidence\n  ERC-1497: Evidence Standard"},"fullyImplemented":true,"id":285,"linearizedBaseContracts":[285],"name":"IEvidence","nameLocation":"274:9:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"290:269:3","text":" @dev To be emitted when meta-evidence is submitted.\n @param _metaEvidenceID Unique identifier of meta-evidence.\n @param _evidence IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'"},"eventSelector":"61606860eb6c87306811e2695215385101daab53bd6ab4e9f9049aead9363c7d","id":260,"name":"MetaEvidence","nameLocation":"570:12:3","nodeType":"EventDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"indexed":true,"mutability":"mutable","name":"_metaEvidenceID","nameLocation":"599:15:3","nodeType":"VariableDeclaration","scope":260,"src":"583:31:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"583:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":258,"indexed":false,"mutability":"mutable","name":"_evidence","nameLocation":"623:9:3","nodeType":"VariableDeclaration","scope":260,"src":"616:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":257,"name":"string","nodeType":"ElementaryTypeName","src":"616:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"582:51:3"},"src":"564:70:3"},{"anonymous":false,"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"640:572:3","text":" @dev To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).\n @param _arbitrator The arbitrator of the contract.\n @param _evidenceGroupID Unique identifier of the evidence group the evidence belongs to.\n @param _party The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\n @param _evidence IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'"},"eventSelector":"dccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c","id":272,"name":"Evidence","nameLocation":"1223:8:3","nodeType":"EventDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"indexed":true,"mutability":"mutable","name":"_arbitrator","nameLocation":"1261:11:3","nodeType":"VariableDeclaration","scope":272,"src":"1241:31:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"},"typeName":{"id":263,"nodeType":"UserDefinedTypeName","pathNode":{"id":262,"name":"IArbitrator","nameLocations":["1241:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":249,"src":"1241:11:3"},"referencedDeclaration":249,"src":"1241:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"visibility":"internal"},{"constant":false,"id":266,"indexed":true,"mutability":"mutable","name":"_evidenceGroupID","nameLocation":"1298:16:3","nodeType":"VariableDeclaration","scope":272,"src":"1282:32:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1282:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":268,"indexed":true,"mutability":"mutable","name":"_party","nameLocation":"1340:6:3","nodeType":"VariableDeclaration","scope":272,"src":"1324:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":270,"indexed":false,"mutability":"mutable","name":"_evidence","nameLocation":"1363:9:3","nodeType":"VariableDeclaration","scope":272,"src":"1356:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":269,"name":"string","nodeType":"ElementaryTypeName","src":"1356:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1231:147:3"},"src":"1217:162:3"},{"anonymous":false,"documentation":{"id":273,"nodeType":"StructuredDocumentation","src":"1385:413:3","text":" @dev To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.\n @param _arbitrator The arbitrator of the contract.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _metaEvidenceID Unique identifier of meta-evidence.\n @param _evidenceGroupID Unique identifier of the evidence group that is linked to this dispute."},"eventSelector":"74baab670a4015ab2f1b467c5252a96141a2573f2908e58a92081e80d3cfde3d","id":284,"name":"Dispute","nameLocation":"1809:7:3","nodeType":"EventDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"indexed":true,"mutability":"mutable","name":"_arbitrator","nameLocation":"1846:11:3","nodeType":"VariableDeclaration","scope":284,"src":"1826:31:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"},"typeName":{"id":275,"nodeType":"UserDefinedTypeName","pathNode":{"id":274,"name":"IArbitrator","nameLocations":["1826:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":249,"src":"1826:11:3"},"referencedDeclaration":249,"src":"1826:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"visibility":"internal"},{"constant":false,"id":278,"indexed":true,"mutability":"mutable","name":"_disputeID","nameLocation":"1883:10:3","nodeType":"VariableDeclaration","scope":284,"src":"1867:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"1867:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":280,"indexed":false,"mutability":"mutable","name":"_metaEvidenceID","nameLocation":"1911:15:3","nodeType":"VariableDeclaration","scope":284,"src":"1903:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1903:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":282,"indexed":false,"mutability":"mutable","name":"_evidenceGroupID","nameLocation":"1944:16:3","nodeType":"VariableDeclaration","scope":284,"src":"1936:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1936:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1816:150:3"},"src":"1803:164:3"}],"scope":286,"src":"264:1705:3","usedErrors":[],"usedEvents":[260,272,284]}],"src":"152:1818:3"},"id":3},"contracts/ITruthPost.sol":{"ast":{"absolutePath":"contracts/ITruthPost.sol","exportedSymbols":{"ITruthPost":[693]},"id":694,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":287,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"34:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"ITruthPost","contractDependencies":[],"contractKind":"contract","documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"60:424:4","text":"@title  The Truth Post: Accurate and Relevant News\n @author https://github.com/proveuswrong<0xferit, gratestas>\n @dev    This contract serves as a standard interface among multiple deployments of the Truth Post contracts.\n         You should target this interface contract for interactions, not the concrete contract; otherwise you risk incompatibility across versions.\n @custom:approvals 0xferit, gratestas"},"fullyImplemented":false,"id":693,"linearizedBaseContracts":[693],"name":"ITruthPost","nameLocation":"502:10:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"ffa1ad74","id":291,"mutability":"constant","name":"VERSION","nameLocation":"542:7:4","nodeType":"VariableDeclaration","scope":693,"src":"519:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":289,"name":"string","nodeType":"ElementaryTypeName","src":"519:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"312e322e30","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"552:7:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_e374587661e69268352d25204d81b23ce801573f4b09f3545e69536dc085a37a","typeString":"literal_string \"1.2.0\""},"value":"1.2.0"},"visibility":"public"},{"canonicalName":"ITruthPost.RulingOptions","id":295,"members":[{"id":292,"name":"Tied","nameLocation":"595:4:4","nodeType":"EnumValue","src":"595:4:4"},{"id":293,"name":"ChallengeFailed","nameLocation":"609:15:4","nodeType":"EnumValue","src":"609:15:4"},{"id":294,"name":"Debunked","nameLocation":"634:8:4","nodeType":"EnumValue","src":"634:8:4"}],"name":"RulingOptions","nameLocation":"571:13:4","nodeType":"EnumDefinition","src":"566:82:4"},{"constant":false,"id":298,"mutability":"mutable","name":"isPublishingEnabled","nameLocation":"659:19:4","nodeType":"VariableDeclaration","scope":693,"src":"654:31:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":296,"name":"bool","nodeType":"ElementaryTypeName","src":"654:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"74727565","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"681:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"internal"},{"constant":false,"functionSelector":"2d2c5565","id":300,"mutability":"mutable","name":"TREASURY","nameLocation":"714:8:4","nodeType":"VariableDeclaration","scope":693,"src":"691:31:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"691:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"public"},{"constant":false,"functionSelector":"313dab20","id":302,"mutability":"mutable","name":"treasuryBalance","nameLocation":"743:15:4","nodeType":"VariableDeclaration","scope":693,"src":"728:30:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"728:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"7597b3cb","id":305,"mutability":"constant","name":"NUMBER_OF_RULING_OPTIONS","nameLocation":"788:24:4","nodeType":"VariableDeclaration","scope":693,"src":"764:52:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"764:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"815:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"constant":true,"functionSelector":"fe6ca782","id":308,"mutability":"constant","name":"MULTIPLIER_DENOMINATOR","nameLocation":"846:22:4","nodeType":"VariableDeclaration","scope":693,"src":"822:53:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303234","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"871:4:4","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"value":"1024"},"visibility":"public"},{"constant":false,"functionSelector":"be467604","id":311,"mutability":"mutable","name":"LOSER_APPEAL_PERIOD_MULTIPLIER","nameLocation":"928:30:4","nodeType":"VariableDeclaration","scope":693,"src":"913:51:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"913:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353132","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"961:3:4","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"value":"512"},"visibility":"public"},{"constant":false,"functionSelector":"d3b476b1","id":313,"mutability":"mutable","name":"ARTICLE_WITHDRAWAL_TIMELOCK","nameLocation":"1177:27:4","nodeType":"VariableDeclaration","scope":693,"src":"1162:42:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"1162:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"e349ad30","id":315,"mutability":"mutable","name":"WINNER_STAKE_MULTIPLIER","nameLocation":"1282:23:4","nodeType":"VariableDeclaration","scope":693,"src":"1267:38:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b34bfaa8","id":317,"mutability":"mutable","name":"LOSER_STAKE_MULTIPLIER","nameLocation":"1433:22:4","nodeType":"VariableDeclaration","scope":693,"src":"1418:37:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"1418:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"fc0ac672","id":320,"mutability":"mutable","name":"challengeTaxRate","nameLocation":"1582:16:4","nodeType":"VariableDeclaration","scope":693,"src":"1567:36:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":318,"name":"uint256","nodeType":"ElementaryTypeName","src":"1567:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3136","id":319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1601:2:4","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"visibility":"public"},{"body":{"id":347,"nodeType":"Block","src":"1786:217:4","statements":[{"expression":{"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":331,"name":"ARTICLE_WITHDRAWAL_TIMELOCK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"1796:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":332,"name":"_articleWithdrawalTimelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"1826:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1796:56:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":334,"nodeType":"ExpressionStatement","src":"1796:56:4"},{"expression":{"id":337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":335,"name":"WINNER_STAKE_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1862:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":336,"name":"_winnerStakeMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1888:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1862:48:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":338,"nodeType":"ExpressionStatement","src":"1862:48:4"},{"expression":{"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":339,"name":"LOSER_STAKE_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1920:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":340,"name":"_loserStakeMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"1945:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1920:46:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":342,"nodeType":"ExpressionStatement","src":"1920:46:4"},{"expression":{"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":343,"name":"TREASURY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"1976:8:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":344,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"1987:9:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1976:20:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":346,"nodeType":"ExpressionStatement","src":"1976:20:4"}]},"id":348,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"_articleWithdrawalTimelock","nameLocation":"1639:26:4","nodeType":"VariableDeclaration","scope":348,"src":"1631:34:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1631:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"_winnerStakeMultiplier","nameLocation":"1683:22:4","nodeType":"VariableDeclaration","scope":348,"src":"1675:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1675:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":326,"mutability":"mutable","name":"_loserStakeMultiplier","nameLocation":"1723:21:4","nodeType":"VariableDeclaration","scope":348,"src":"1715:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":328,"mutability":"mutable","name":"_treasury","nameLocation":"1770:9:4","nodeType":"VariableDeclaration","scope":348,"src":"1754:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"1754:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"1621:164:4"},"returnParameters":{"id":330,"nodeType":"ParameterList","parameters":[],"src":"1786:0:4"},"scope":693,"src":"1610:393:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"anonymous":false,"eventSelector":"4f9a2b734331c583faf3f19d1feb5f08b742e016a56fb61379950beaf3e22341","id":356,"name":"NewArticle","nameLocation":"2015:10:4","nodeType":"EventDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"indexed":false,"mutability":"mutable","name":"articleID","nameLocation":"2033:9:4","nodeType":"VariableDeclaration","scope":356,"src":"2026:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":349,"name":"string","nodeType":"ElementaryTypeName","src":"2026:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":352,"indexed":false,"mutability":"mutable","name":"category","nameLocation":"2050:8:4","nodeType":"VariableDeclaration","scope":356,"src":"2044:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":351,"name":"uint8","nodeType":"ElementaryTypeName","src":"2044:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":354,"indexed":false,"mutability":"mutable","name":"articleAddress","nameLocation":"2068:14:4","nodeType":"VariableDeclaration","scope":356,"src":"2060:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2060:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:58:4"},"src":"2009:75:4"},{"anonymous":false,"eventSelector":"8271992f9b3a3f30dc2a464982dc4a136e7357403462443a171a0fb0c6ccc265","id":360,"name":"Debunked","nameLocation":"2095:8:4","nodeType":"EventDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"indexed":false,"mutability":"mutable","name":"articleAddress","nameLocation":"2112:14:4","nodeType":"VariableDeclaration","scope":360,"src":"2104:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"2104:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2103:24:4"},"src":"2089:39:4"},{"anonymous":false,"eventSelector":"70b41d8cca762ceec66d93f536dbb31f5cabbf1901f862508b9438de54fce4eb","id":364,"name":"ArticleWithdrawn","nameLocation":"2139:16:4","nodeType":"EventDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"indexed":false,"mutability":"mutable","name":"articleAddress","nameLocation":"2164:14:4","nodeType":"VariableDeclaration","scope":364,"src":"2156:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"2156:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2155:24:4"},"src":"2133:47:4"},{"anonymous":false,"eventSelector":"df5fc410d3381cc7f0a7fe3af72f4e3cf53ef5787f20554af69035a950e1b2e3","id":370,"name":"BalanceUpdate","nameLocation":"2191:13:4","nodeType":"EventDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"indexed":false,"mutability":"mutable","name":"articleAddress","nameLocation":"2213:14:4","nodeType":"VariableDeclaration","scope":370,"src":"2205:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"2205:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":368,"indexed":false,"mutability":"mutable","name":"newTotal","nameLocation":"2237:8:4","nodeType":"VariableDeclaration","scope":370,"src":"2229:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":367,"name":"uint256","nodeType":"ElementaryTypeName","src":"2229:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2204:42:4"},"src":"2185:62:4"},{"anonymous":false,"eventSelector":"416c1ad2b96c356f3bbd35431f86cce449ddbb4f8c3755ea9d2776b04c2e9c8f","id":374,"name":"TimelockStarted","nameLocation":"2258:15:4","nodeType":"EventDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"indexed":false,"mutability":"mutable","name":"articleAddress","nameLocation":"2282:14:4","nodeType":"VariableDeclaration","scope":374,"src":"2274:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"2274:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2273:24:4"},"src":"2252:46:4"},{"anonymous":false,"eventSelector":"1e5338a1fb672aa84963dc9f9e4afd009b4ed726debb09224bf4d02a6c68b4e4","id":382,"name":"Challenge","nameLocation":"2309:9:4","nodeType":"EventDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"indexed":true,"mutability":"mutable","name":"articleAddress","nameLocation":"2335:14:4","nodeType":"VariableDeclaration","scope":382,"src":"2319:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":378,"indexed":false,"mutability":"mutable","name":"challanger","nameLocation":"2359:10:4","nodeType":"VariableDeclaration","scope":382,"src":"2351:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":377,"name":"address","nodeType":"ElementaryTypeName","src":"2351:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":380,"indexed":false,"mutability":"mutable","name":"disputeID","nameLocation":"2379:9:4","nodeType":"VariableDeclaration","scope":382,"src":"2371:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":379,"name":"uint256","nodeType":"ElementaryTypeName","src":"2371:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2318:71:4"},"src":"2303:87:4"},{"anonymous":false,"eventSelector":"2b4ef80a862edc5616a4e61c11f4a368f33323faca91fa7635d48b85c183e66a","id":395,"name":"Contribution","nameLocation":"2401:12:4","nodeType":"EventDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"indexed":true,"mutability":"mutable","name":"disputeId","nameLocation":"2439:9:4","nodeType":"VariableDeclaration","scope":395,"src":"2423:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint256","nodeType":"ElementaryTypeName","src":"2423:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":386,"indexed":true,"mutability":"mutable","name":"round","nameLocation":"2474:5:4","nodeType":"VariableDeclaration","scope":395,"src":"2458:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":389,"indexed":false,"mutability":"mutable","name":"ruling","nameLocation":"2503:6:4","nodeType":"VariableDeclaration","scope":395,"src":"2489:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":388,"nodeType":"UserDefinedTypeName","pathNode":{"id":387,"name":"RulingOptions","nameLocations":["2489:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"2489:13:4"},"referencedDeclaration":295,"src":"2489:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"},{"constant":false,"id":391,"indexed":true,"mutability":"mutable","name":"contributor","nameLocation":"2535:11:4","nodeType":"VariableDeclaration","scope":395,"src":"2519:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"2519:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":393,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2564:6:4","nodeType":"VariableDeclaration","scope":395,"src":"2556:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"2556:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2413:163:4"},"src":"2395:182:4"},{"anonymous":false,"eventSelector":"ff2b7c936d6023fea901b3455cefc23b124c1ca5997dc5b48c461fd20984289d","id":408,"name":"Withdrawal","nameLocation":"2588:10:4","nodeType":"EventDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"indexed":true,"mutability":"mutable","name":"disputeId","nameLocation":"2624:9:4","nodeType":"VariableDeclaration","scope":408,"src":"2608:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":399,"indexed":true,"mutability":"mutable","name":"round","nameLocation":"2659:5:4","nodeType":"VariableDeclaration","scope":408,"src":"2643:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"2643:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":402,"indexed":false,"mutability":"mutable","name":"ruling","nameLocation":"2688:6:4","nodeType":"VariableDeclaration","scope":408,"src":"2674:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":401,"nodeType":"UserDefinedTypeName","pathNode":{"id":400,"name":"RulingOptions","nameLocations":["2674:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"2674:13:4"},"referencedDeclaration":295,"src":"2674:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"},{"constant":false,"id":404,"indexed":true,"mutability":"mutable","name":"contributor","nameLocation":"2720:11:4","nodeType":"VariableDeclaration","scope":408,"src":"2704:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"2704:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":406,"indexed":false,"mutability":"mutable","name":"reward","nameLocation":"2749:6:4","nodeType":"VariableDeclaration","scope":408,"src":"2741:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"2741:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2598:163:4"},"src":"2582:180:4"},{"anonymous":false,"eventSelector":"b5681f036910f38d8c2fa06f2cbedc227ecf03d7c4a358ee9096197b15ff8fd0","id":417,"name":"RulingFunded","nameLocation":"2773:12:4","nodeType":"EventDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"indexed":true,"mutability":"mutable","name":"disputeId","nameLocation":"2802:9:4","nodeType":"VariableDeclaration","scope":417,"src":"2786:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2786:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":412,"indexed":true,"mutability":"mutable","name":"round","nameLocation":"2829:5:4","nodeType":"VariableDeclaration","scope":417,"src":"2813:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":415,"indexed":true,"mutability":"mutable","name":"ruling","nameLocation":"2858:6:4","nodeType":"VariableDeclaration","scope":417,"src":"2836:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":414,"nodeType":"UserDefinedTypeName","pathNode":{"id":413,"name":"RulingOptions","nameLocations":["2836:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"2836:13:4"},"referencedDeclaration":295,"src":"2836:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"src":"2785:80:4"},"src":"2767:99:4"},{"anonymous":false,"eventSelector":"dfc39691aec87dc6aa51ff70c0e592f260c54d2ed6c64e8c4c2306da0eec872b","id":421,"name":"OwnershipTransfer","nameLocation":"2877:17:4","nodeType":"EventDefinition","parameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"indexed":true,"mutability":"mutable","name":"_newOwner","nameLocation":"2911:9:4","nodeType":"VariableDeclaration","scope":421,"src":"2895:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"2895:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2894:27:4"},"src":"2871:51:4"},{"anonymous":false,"eventSelector":"0c2515f25186df02132ad46f01e062c3b8982c8de57fa2b1b0a280d8e810f39b","id":425,"name":"AdminUpdate","nameLocation":"2933:11:4","nodeType":"EventDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"indexed":true,"mutability":"mutable","name":"_newAdmin","nameLocation":"2961:9:4","nodeType":"VariableDeclaration","scope":425,"src":"2945:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"2945:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2944:27:4"},"src":"2927:45:4"},{"anonymous":false,"eventSelector":"8df75282265171690a1298cf028f5e3c7d8d42313394a4f25d4aeea6c1ea62cf","id":429,"name":"WinnerStakeMultiplierUpdate","nameLocation":"2983:27:4","nodeType":"EventDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"indexed":true,"mutability":"mutable","name":"_newWinnerStakeMultiplier","nameLocation":"3027:25:4","nodeType":"VariableDeclaration","scope":429,"src":"3011:41:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"3011:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3010:43:4"},"src":"2977:77:4"},{"anonymous":false,"eventSelector":"505f3bf1e426c82f14f7c9cfb2d31ef5b7bb76428e16bd90dabec113e3d4a2bc","id":433,"name":"LoserStakeMultiplierUpdate","nameLocation":"3065:26:4","nodeType":"EventDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"indexed":true,"mutability":"mutable","name":"_newLoserStakeMultiplier","nameLocation":"3108:24:4","nodeType":"VariableDeclaration","scope":433,"src":"3092:40:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"3092:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3091:42:4"},"src":"3059:75:4"},{"anonymous":false,"eventSelector":"bf39faa024d2f97599a0095e84098ee2171b6681738416c0030f442ba956d52b","id":437,"name":"LoserAppealPeriodMultiplierUpdate","nameLocation":"3145:33:4","nodeType":"EventDefinition","parameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"indexed":true,"mutability":"mutable","name":"_newLoserAppealPeriodMultiplier","nameLocation":"3195:31:4","nodeType":"VariableDeclaration","scope":437,"src":"3179:47:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"3179:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3178:49:4"},"src":"3139:89:4"},{"anonymous":false,"eventSelector":"207e19e347becb468ef02d25790188e4d5da0fe37176d3bbb7940168ec5d6136","id":441,"name":"ArticleWithdrawalTimelockUpdate","nameLocation":"3239:31:4","nodeType":"EventDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"indexed":true,"mutability":"mutable","name":"_newWithdrawalTimelock","nameLocation":"3287:22:4","nodeType":"VariableDeclaration","scope":441,"src":"3271:38:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":438,"name":"uint256","nodeType":"ElementaryTypeName","src":"3271:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3270:40:4"},"src":"3233:78:4"},{"anonymous":false,"eventSelector":"5100ab374784a62034356f9af3b71ea723c1e89beb5627c6c1dacea1117250b8","id":445,"name":"ChallengeTaxRateUpdate","nameLocation":"3322:22:4","nodeType":"EventDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"indexed":true,"mutability":"mutable","name":"_newTaxRate","nameLocation":"3361:11:4","nodeType":"VariableDeclaration","scope":445,"src":"3345:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":442,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3344:29:4"},"src":"3316:58:4"},{"anonymous":false,"eventSelector":"8a3509a4057c89a5993a4a3140c2ebf7e829d325d8998eaa6c48adcff98b2cef","id":449,"name":"TreasuryUpdate","nameLocation":"3385:14:4","nodeType":"EventDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"indexed":true,"mutability":"mutable","name":"_newTreasury","nameLocation":"3416:12:4","nodeType":"VariableDeclaration","scope":449,"src":"3400:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3399:30:4"},"src":"3379:51:4"},{"anonymous":false,"eventSelector":"b315332b30dc40d1e51def214ce42d93a73bd0c17b08db04b34f10736bb2f06f","id":453,"name":"TreasuryBalanceUpdate","nameLocation":"3441:21:4","nodeType":"EventDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"indexed":true,"mutability":"mutable","name":"_byAmount","nameLocation":"3479:9:4","nodeType":"VariableDeclaration","scope":453,"src":"3463:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"3463:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3462:27:4"},"src":"3435:55:4"},{"documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"3496:219:4","text":"@notice Submit an evidence.\n @param _disputeID The dispute ID as in arbitrator.\n @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'"},"functionSelector":"a6a7f0eb","id":461,"implemented":false,"kind":"function","modifiers":[],"name":"submitEvidence","nameLocation":"3729:14:4","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":456,"mutability":"mutable","name":"_disputeID","nameLocation":"3752:10:4","nodeType":"VariableDeclaration","scope":461,"src":"3744:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"3744:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"_evidenceURI","nameLocation":"3780:12:4","nodeType":"VariableDeclaration","scope":461,"src":"3764:28:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":457,"name":"string","nodeType":"ElementaryTypeName","src":"3764:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3743:50:4"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"3810:0:4"},"scope":693,"src":"3720:91:4","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"3817:407:4","text":"@notice Fund a crowdfunding appeal.\n @dev Lets user to contribute funding of an appeal round. Emits Contribution. If fully funded, emits RulingFunded.\n @param _disputeID The dispute ID as in arbitrator.\n @param _ruling The ruling option to which the caller wants to contribute.\n @return fullyFunded True if the ruling option got fully funded as a result of this contribution."},"functionSelector":"12b3a2c0","id":472,"implemented":false,"kind":"function","modifiers":[],"name":"fundAppeal","nameLocation":"4238:10:4","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"_disputeID","nameLocation":"4257:10:4","nodeType":"VariableDeclaration","scope":472,"src":"4249:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"4249:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":467,"mutability":"mutable","name":"_ruling","nameLocation":"4283:7:4","nodeType":"VariableDeclaration","scope":472,"src":"4269:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":466,"nodeType":"UserDefinedTypeName","pathNode":{"id":465,"name":"RulingOptions","nameLocations":["4269:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"4269:13:4"},"referencedDeclaration":295,"src":"4269:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"src":"4248:43:4"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"fullyFunded","nameLocation":"4331:11:4","nodeType":"VariableDeclaration","scope":472,"src":"4326:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":469,"name":"bool","nodeType":"ElementaryTypeName","src":"4326:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4325:18:4"},"scope":693,"src":"4229:115:4","stateMutability":"payable","virtual":true,"visibility":"external"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"4350:406:4","text":"@notice Publish an article.\n @dev    Do not confuse articleID with articleAddress. Emits NewArticle.\n @param _articleID Unique identifier of an article in IPFS content identifier format.\n @param _category The category code of this new article.\n @param _searchPointer Starting point of the search. Find a vacant storage slot before calling this function to minimize gas cost."},"functionSelector":"faa0ba9d","id":482,"implemented":false,"kind":"function","modifiers":[],"name":"initializeArticle","nameLocation":"4770:17:4","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"_articleID","nameLocation":"4813:10:4","nodeType":"VariableDeclaration","scope":482,"src":"4797:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":474,"name":"string","nodeType":"ElementaryTypeName","src":"4797:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"_category","nameLocation":"4839:9:4","nodeType":"VariableDeclaration","scope":482,"src":"4833:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":476,"name":"uint8","nodeType":"ElementaryTypeName","src":"4833:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"_searchPointer","nameLocation":"4865:14:4","nodeType":"VariableDeclaration","scope":482,"src":"4858:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":478,"name":"uint72","nodeType":"ElementaryTypeName","src":"4858:6:4","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"4787:98:4"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"4910:0:4"},"scope":693,"src":"4761:150:4","stateMutability":"payable","virtual":true,"visibility":"external"},{"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"4917:195:4","text":"@notice Increase bounty.\n @dev Lets author to increase a bounty of a live article. Emits BalanceUpdate.\n @param _articleStorageAddress The address of the article in the storage."},"functionSelector":"44b9ad06","id":488,"implemented":false,"kind":"function","modifiers":[],"name":"increaseBounty","nameLocation":"5126:14:4","nodeType":"FunctionDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"_articleStorageAddress","nameLocation":"5148:22:4","nodeType":"VariableDeclaration","scope":488,"src":"5141:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":484,"name":"uint72","nodeType":"ElementaryTypeName","src":"5141:6:4","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"5140:31:4"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[],"src":"5196:0:4"},"scope":693,"src":"5117:80:4","stateMutability":"payable","virtual":true,"visibility":"external"},{"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"5203:205:4","text":"@notice Initiate unpublishing process.\n @dev Lets an author to start unpublishing process. Emits TimelockStarted.\n @param _articleStorageAddress The address of the article in the storage."},"functionSelector":"ba4c8f8f","id":494,"implemented":false,"kind":"function","modifiers":[],"name":"initiateWithdrawal","nameLocation":"5422:18:4","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"_articleStorageAddress","nameLocation":"5448:22:4","nodeType":"VariableDeclaration","scope":494,"src":"5441:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":490,"name":"uint72","nodeType":"ElementaryTypeName","src":"5441:6:4","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"5440:31:4"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[],"src":"5488:0:4"},"scope":693,"src":"5413:76:4","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"5495:180:4","text":"@notice Execute unpublishing.\n @dev Executes unpublishing of an article. Emits Withdrew.\n @param _articleStorageAddress The address of the article in the storage."},"functionSelector":"a92c4707","id":500,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"5689:8:4","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"_articleStorageAddress","nameLocation":"5705:22:4","nodeType":"VariableDeclaration","scope":500,"src":"5698:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":496,"name":"uint72","nodeType":"ElementaryTypeName","src":"5698:6:4","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"5697:31:4"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"5745:0:4"},"scope":693,"src":"5680:66:4","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"5752:194:4","text":"@notice Challenge article.\n @dev Challenges the article at the given storage address. Emits Challenge.\n @param _articleStorageAddress The address of the article in the storage."},"functionSelector":"12a145e1","id":506,"implemented":false,"kind":"function","modifiers":[],"name":"challenge","nameLocation":"5960:9:4","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"_articleStorageAddress","nameLocation":"5977:22:4","nodeType":"VariableDeclaration","scope":506,"src":"5970:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":502,"name":"uint72","nodeType":"ElementaryTypeName","src":"5970:6:4","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"5969:31:4"},"returnParameters":{"id":505,"nodeType":"ParameterList","parameters":[],"src":"6025:0:4"},"scope":693,"src":"5951:75:4","stateMutability":"payable","virtual":true,"visibility":"external"},{"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"6032:451:4","text":"@notice Transfer ownership of an article.\n @dev Lets you to transfer ownership of an article.\n      This is useful when you want to change owner account without withdrawing and resubmitting.\n      Emits OwnershipTransfer.\n @param _articleStorageAddress The address of article in the storage.\n @param _newOwner The new owner of the article which resides in the storage address, provided by the previous parameter."},"functionSelector":"ec4adca9","id":514,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"6497:17:4","nodeType":"FunctionDefinition","parameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"_articleStorageAddress","nameLocation":"6522:22:4","nodeType":"VariableDeclaration","scope":514,"src":"6515:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":508,"name":"uint72","nodeType":"ElementaryTypeName","src":"6515:6:4","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"_newOwner","nameLocation":"6562:9:4","nodeType":"VariableDeclaration","scope":514,"src":"6546:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"6546:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6514:58:4"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[],"src":"6589:0:4"},"scope":693,"src":"6488:102:4","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"6596:299:4","text":"@notice Update the arbitration cost for the winner.\n @dev Sets the multiplier of the arbitration cost that the winner has to pay as fee stake to a new value.\n      Emits WinnerStakeMultiplierUpdate.\n @param _newWinnerStakeMultiplier The new value of WINNER_STAKE_MULTIPLIER."},"functionSelector":"adc7faba","id":520,"implemented":false,"kind":"function","modifiers":[],"name":"changeWinnerStakeMultiplier","nameLocation":"6909:27:4","nodeType":"FunctionDefinition","parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"_newWinnerStakeMultiplier","nameLocation":"6945:25:4","nodeType":"VariableDeclaration","scope":520,"src":"6937:33:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"6937:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6936:35:4"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"6988:0:4"},"scope":693,"src":"6900:89:4","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"6995:295:4","text":"@notice Update the arbitration cost for the loser.\n @dev Sets the multiplier of the arbitration cost that the loser has to pay as fee stake to a new value.\n      Emits LoserStakeMultiplierUpdate.\n @param _newLoserStakeMultiplier The new value of LOSER_STAKE_MULTIPLIER."},"functionSelector":"92239dff","id":526,"implemented":false,"kind":"function","modifiers":[],"name":"changeLoserStakeMultiplier","nameLocation":"7304:26:4","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"_newLoserStakeMultiplier","nameLocation":"7339:24:4","nodeType":"VariableDeclaration","scope":526,"src":"7331:32:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint256","nodeType":"ElementaryTypeName","src":"7331:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7330:34:4"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[],"src":"7381:0:4"},"scope":693,"src":"7295:87:4","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"7388:272:4","text":"@notice Update the appeal window for the loser.\n @dev Sets the multiplier of the appeal window for the loser to a new value. Emits LoserAppealPeriodMultiplierUpdate.\n @param _newLoserAppealPeriodMultiplier The new value of LOSER_APPEAL_PERIOD_MULTIPLIER."},"functionSelector":"c94828f0","id":532,"implemented":false,"kind":"function","modifiers":[],"name":"changeLoserAppealPeriodMultiplier","nameLocation":"7674:33:4","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"_newLoserAppealPeriodMultiplier","nameLocation":"7716:31:4","nodeType":"VariableDeclaration","scope":532,"src":"7708:39:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"7708:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7707:41:4"},"returnParameters":{"id":531,"nodeType":"ParameterList","parameters":[],"src":"7765:0:4"},"scope":693,"src":"7665:101:4","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"7772:309:4","text":"@notice Update the timelock for the article withdtrawal.\n @dev Sets the timelock before an author can initiate the withdrawal of an article to a new value.\n      Emits ArticleWithdrawalTimelockUpdate.\n @param _newArticleWithdrawalTimelock The new value of ARTICLE_WITHDRAWAL_TIMELOCK."},"functionSelector":"92e25925","id":538,"implemented":false,"kind":"function","modifiers":[],"name":"changeArticleWithdrawalTimelock","nameLocation":"8095:31:4","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"_newArticleWithdrawalTimelock","nameLocation":"8135:29:4","nodeType":"VariableDeclaration","scope":538,"src":"8127:37:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"8127:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8126:39:4"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"8182:0:4"},"scope":693,"src":"8086:97:4","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"8189:290:4","text":"@notice Find a vacant storage slot for an article.\n @dev Helper function to find a vacant slot for article. Use this function before calling initialize to minimize your gas cost.\n @param _searchPointer Starting point of the search. If you do not have a guess, just pass 0."},"functionSelector":"e165720c","id":546,"implemented":false,"kind":"function","modifiers":[],"name":"findVacantStorageSlot","nameLocation":"8493:21:4","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"_searchPointer","nameLocation":"8522:14:4","nodeType":"VariableDeclaration","scope":546,"src":"8515:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":540,"name":"uint72","nodeType":"ElementaryTypeName","src":"8515:6:4","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"8514:23:4"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"vacantSlotIndex","nameLocation":"8577:15:4","nodeType":"VariableDeclaration","scope":546,"src":"8569:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint256","nodeType":"ElementaryTypeName","src":"8569:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8568:25:4"},"scope":693,"src":"8484:110:4","stateMutability":"view","virtual":true,"visibility":"external"},{"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"8600:220:4","text":"@notice Get required challenge fee.\n @dev Returns the total amount needs to be paid to challenge an article, including taxes if any.\n @param _articleStorageAddress The address of article in the storage."},"functionSelector":"37641483","id":554,"implemented":false,"kind":"function","modifiers":[],"name":"challengeFee","nameLocation":"8834:12:4","nodeType":"FunctionDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"_articleStorageAddress","nameLocation":"8854:22:4","nodeType":"VariableDeclaration","scope":554,"src":"8847:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":548,"name":"uint72","nodeType":"ElementaryTypeName","src":"8847:6:4","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"8846:31:4"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"challengeFee","nameLocation":"8915:12:4","nodeType":"VariableDeclaration","scope":554,"src":"8907:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"8907:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8906:22:4"},"scope":693,"src":"8825:104:4","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"8935:220:4","text":"@notice Get required appeal fee and deposit.\n @dev Returns the total amount needs to be paid to appeal a dispute, including fees and stake deposit.\n @param _disputeID ID of the dispute as in arbitrator."},"functionSelector":"1e26de34","id":562,"implemented":false,"kind":"function","modifiers":[],"name":"appealFee","nameLocation":"9169:9:4","nodeType":"FunctionDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"_disputeID","nameLocation":"9187:10:4","nodeType":"VariableDeclaration","scope":562,"src":"9179:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":556,"name":"uint256","nodeType":"ElementaryTypeName","src":"9179:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9178:20:4"},"returnParameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"arbitrationFee","nameLocation":"9238:14:4","nodeType":"VariableDeclaration","scope":562,"src":"9230:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"9230:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9229:24:4"},"scope":693,"src":"9160:94:4","stateMutability":"view","virtual":true,"visibility":"external"},{"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"9260:547:4","text":"@notice Withdraw appeal crowdfunding balance.\n @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\n @param _disputeID The dispute ID as in arbitrator.\n @param _contributor Beneficiary of withdraw operation.\n @param _round Number of the round that caller wants to execute withdraw on.\n @param _ruling A ruling option that caller wants to execute withdraw on.\n @return sum The amount that is going to be transferred to contributor as a result of this function call."},"functionSelector":"dc227fc2","id":577,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawFeesAndRewards","nameLocation":"9821:22:4","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"_disputeID","nameLocation":"9861:10:4","nodeType":"VariableDeclaration","scope":577,"src":"9853:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"9853:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"_contributor","nameLocation":"9897:12:4","nodeType":"VariableDeclaration","scope":577,"src":"9881:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"9881:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"_round","nameLocation":"9927:6:4","nodeType":"VariableDeclaration","scope":577,"src":"9919:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":568,"name":"uint256","nodeType":"ElementaryTypeName","src":"9919:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"_ruling","nameLocation":"9957:7:4","nodeType":"VariableDeclaration","scope":577,"src":"9943:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":571,"nodeType":"UserDefinedTypeName","pathNode":{"id":570,"name":"RulingOptions","nameLocations":["9943:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"9943:13:4"},"referencedDeclaration":295,"src":"9943:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"src":"9843:127:4"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"sum","nameLocation":"10005:3:4","nodeType":"VariableDeclaration","scope":577,"src":"9997:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"9997:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9996:13:4"},"scope":693,"src":"9812:198:4","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":578,"nodeType":"StructuredDocumentation","src":"10016:410:4","text":"@notice Withdraw appeal crowdfunding balance for given ruling option for all rounds.\n @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\n @param _disputeID The dispute ID as in arbitrator.\n @param _contributor Beneficiary of withdraw operation.\n @param _ruling Ruling option that caller wants to execute withdraw on."},"functionSelector":"6760aeb0","id":588,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawFeesAndRewardsForAllRounds","nameLocation":"10440:34:4","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"_disputeID","nameLocation":"10492:10:4","nodeType":"VariableDeclaration","scope":588,"src":"10484:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"10484:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"_contributor","nameLocation":"10528:12:4","nodeType":"VariableDeclaration","scope":588,"src":"10512:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"10512:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"_ruling","nameLocation":"10564:7:4","nodeType":"VariableDeclaration","scope":588,"src":"10550:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":584,"nodeType":"UserDefinedTypeName","pathNode":{"id":583,"name":"RulingOptions","nameLocations":["10550:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"10550:13:4"},"referencedDeclaration":295,"src":"10550:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"src":"10474:103:4"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[],"src":"10594:0:4"},"scope":693,"src":"10431:164:4","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"10601:386:4","text":"@notice Withdraw appeal crowdfunding balance for given ruling option and for given rounds.\n @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for given positions at once.\n @param _disputeID The dispute ID as in arbitrator.\n @param _contributor Beneficiary of withdraw operation.\n @param positions [rounds][rulings]."},"functionSelector":"67284f21","id":600,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawFeesAndRewardsForGivenPositions","nameLocation":"11001:39:4","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"_disputeID","nameLocation":"11058:10:4","nodeType":"VariableDeclaration","scope":600,"src":"11050:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":590,"name":"uint256","nodeType":"ElementaryTypeName","src":"11050:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"_contributor","nameLocation":"11094:12:4","nodeType":"VariableDeclaration","scope":600,"src":"11078:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"11078:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"positions","nameLocation":"11137:9:4","nodeType":"VariableDeclaration","scope":600,"src":"11116:30:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"11116:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":595,"nodeType":"ArrayTypeName","src":"11116:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":596,"nodeType":"ArrayTypeName","src":"11116:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"}],"src":"11040:112:4"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"11169:0:4"},"scope":693,"src":"10992:178:4","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"11176:346:4","text":"@notice Withdraw appeal crowdfunding balance for all ruling options and all rounds.\n @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds and all rulings at once.\n @param _disputeID The dispute ID as in arbitrator.\n @param _contributor Beneficiary of withdraw operation."},"functionSelector":"c9330c0f","id":608,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawFeesAndRewardsForAllRoundsAndAllRulings","nameLocation":"11536:47:4","nodeType":"FunctionDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"_disputeID","nameLocation":"11592:10:4","nodeType":"VariableDeclaration","scope":608,"src":"11584:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"11584:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"_contributor","nameLocation":"11620:12:4","nodeType":"VariableDeclaration","scope":608,"src":"11604:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"11604:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"11583:50:4"},"returnParameters":{"id":607,"nodeType":"ParameterList","parameters":[],"src":"11666:0:4"},"scope":693,"src":"11527:140:4","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"11673:352:4","text":"@notice Learn the total amount of appeal crowdfunding balance available.\n @dev Returns the sum of withdrawable amount and 2D array of positions[round][ruling].\n @param _disputeID The dispute ID as in arbitrator.\n @param _contributor Beneficiary of withdraw operation.\n @return sum The total amount available to withdraw."},"functionSelector":"af4a9144","id":622,"implemented":false,"kind":"function","modifiers":[],"name":"getTotalWithdrawableAmount","nameLocation":"12039:26:4","nodeType":"FunctionDefinition","parameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"_disputeID","nameLocation":"12074:10:4","nodeType":"VariableDeclaration","scope":622,"src":"12066:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"12066:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":613,"mutability":"mutable","name":"_contributor","nameLocation":"12102:12:4","nodeType":"VariableDeclaration","scope":622,"src":"12086:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"12086:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"12065:50:4"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"sum","nameLocation":"12187:3:4","nodeType":"VariableDeclaration","scope":622,"src":"12179:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"12179:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"positions","nameLocation":"12211:9:4","nodeType":"VariableDeclaration","scope":622,"src":"12192:28:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":617,"name":"uint256","nodeType":"ElementaryTypeName","src":"12192:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":618,"nodeType":"ArrayTypeName","src":"12192:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":619,"nodeType":"ArrayTypeName","src":"12192:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"}],"src":"12178:43:4"},"scope":693,"src":"12030:192:4","stateMutability":"view","virtual":true,"visibility":"external"},{"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"12228:392:4","text":"@notice Learn about given dispute round.\n @param _disputeID The dispute ID as in arbitrator.\n @param _round Round ID.\n @return hasPaid Whether given ruling option was fully funded.\n @return totalPerRuling The total raised per ruling option.\n @return totalClaimableAfterExpenses Total amount will be distributed back to winners, after deducting expenses."},"functionSelector":"8a9bb02a","id":644,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundInfo","nameLocation":"12634:12:4","nodeType":"FunctionDefinition","parameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"_disputeID","nameLocation":"12655:10:4","nodeType":"VariableDeclaration","scope":644,"src":"12647:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint256","nodeType":"ElementaryTypeName","src":"12647:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"_round","nameLocation":"12675:6:4","nodeType":"VariableDeclaration","scope":644,"src":"12667:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12646:36:4"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"hasPaid","nameLocation":"12801:7:4","nodeType":"VariableDeclaration","scope":644,"src":"12759:49:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_memory_ptr","typeString":"bool[3]"},"typeName":{"baseType":{"id":629,"name":"bool","nodeType":"ElementaryTypeName","src":"12759:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":633,"length":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":630,"name":"NUMBER_OF_RULING_OPTIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"12764:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12791:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12764:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"ArrayTypeName","src":"12759:34:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_storage_ptr","typeString":"bool[3]"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"totalPerRuling","nameLocation":"12867:14:4","nodeType":"VariableDeclaration","scope":644,"src":"12822:59:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"12822:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":639,"length":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":636,"name":"NUMBER_OF_RULING_OPTIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"12830:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12857:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12830:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"ArrayTypeName","src":"12822:37:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"totalClaimableAfterExpenses","nameLocation":"12903:27:4","nodeType":"VariableDeclaration","scope":644,"src":"12895:35:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"12895:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12745:195:4"},"scope":693,"src":"12625:316:4","stateMutability":"view","virtual":true,"visibility":"external"},{"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"12947:233:4","text":"@notice Learn about how much more needs to be raised for given ruling option.\n @param _disputeID The dispute ID as in arbitrator.\n @param _ruling The ruling option to query.\n @return Amount needs to be raised"},"functionSelector":"a509efeb","id":655,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountRemainsToBeRaised","nameLocation":"13194:26:4","nodeType":"FunctionDefinition","parameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"_disputeID","nameLocation":"13229:10:4","nodeType":"VariableDeclaration","scope":655,"src":"13221:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"13221:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":650,"mutability":"mutable","name":"_ruling","nameLocation":"13255:7:4","nodeType":"VariableDeclaration","scope":655,"src":"13241:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":649,"nodeType":"UserDefinedTypeName","pathNode":{"id":648,"name":"RulingOptions","nameLocations":["13241:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"13241:13:4"},"referencedDeclaration":295,"src":"13241:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"src":"13220:43:4"},"returnParameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":655,"src":"13327:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"13327:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13326:9:4"},"scope":693,"src":"13185:151:4","stateMutability":"view","virtual":true,"visibility":"external"},{"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"13342:327:4","text":"@notice Get return of investment ratio.\n @dev Purely depends on whether given ruling option is winner and stake multipliers.\n @param _ruling The ruling option to query.\n @param _lastRoundWinner Winner of the last round.\n @return Return of investment ratio, denominated by MULTIPLIER_DENOMINATOR."},"functionSelector":"b4c70581","id":667,"implemented":false,"kind":"function","modifiers":[],"name":"getReturnOfInvestmentRatio","nameLocation":"13683:26:4","nodeType":"FunctionDefinition","parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"_ruling","nameLocation":"13724:7:4","nodeType":"VariableDeclaration","scope":667,"src":"13710:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":658,"nodeType":"UserDefinedTypeName","pathNode":{"id":657,"name":"RulingOptions","nameLocations":["13710:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"13710:13:4"},"referencedDeclaration":295,"src":"13710:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"_lastRoundWinner","nameLocation":"13747:16:4","nodeType":"VariableDeclaration","scope":667,"src":"13733:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":661,"nodeType":"UserDefinedTypeName","pathNode":{"id":660,"name":"RulingOptions","nameLocations":["13733:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"13733:13:4"},"referencedDeclaration":295,"src":"13733:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"src":"13709:55:4"},"returnParameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"13828:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"13828:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13827:9:4"},"scope":693,"src":"13674:163:4","stateMutability":"view","virtual":true,"visibility":"external"},{"documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"13843:187:4","text":"@notice Get appeal time window.\n @param _disputeID The dispute ID as in arbitrator.\n @param _ruling The ruling option to query.\n @return Start\n @return End"},"functionSelector":"638af3da","id":680,"implemented":false,"kind":"function","modifiers":[],"name":"getAppealPeriod","nameLocation":"14044:15:4","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"_disputeID","nameLocation":"14068:10:4","nodeType":"VariableDeclaration","scope":680,"src":"14060:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"14060:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":673,"mutability":"mutable","name":"_ruling","nameLocation":"14094:7:4","nodeType":"VariableDeclaration","scope":680,"src":"14080:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":672,"nodeType":"UserDefinedTypeName","pathNode":{"id":671,"name":"RulingOptions","nameLocations":["14080:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"14080:13:4"},"referencedDeclaration":295,"src":"14080:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"src":"14059:43:4"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":680,"src":"14166:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"14166:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":680,"src":"14175:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint256","nodeType":"ElementaryTypeName","src":"14175:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14165:18:4"},"scope":693,"src":"14035:149:4","stateMutability":"view","virtual":true,"visibility":"external"},{"documentation":{"id":681,"nodeType":"StructuredDocumentation","src":"14190:134:4","text":"@notice Get last round's winner.\n @param _disputeID The dispute ID as in arbitrator.\n @return Winning ruling option."},"functionSelector":"7f67bd6c","id":688,"implemented":false,"kind":"function","modifiers":[],"name":"getLastRoundWinner","nameLocation":"14338:18:4","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"_disputeID","nameLocation":"14365:10:4","nodeType":"VariableDeclaration","scope":688,"src":"14357:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"14357:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14356:20:4"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"14406:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":685,"name":"uint256","nodeType":"ElementaryTypeName","src":"14406:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14405:9:4"},"scope":693,"src":"14329:86:4","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"14421:208:4","text":"@notice Switches publishing lock.\n @dev    Useful when it's no longer safe or secure to use this contract.\n         Prevents new articles to be published. Only intended for privileges users."},"functionSelector":"ba0ec60b","id":692,"implemented":false,"kind":"function","modifiers":[],"name":"switchPublishingLock","nameLocation":"14643:20:4","nodeType":"FunctionDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"14663:2:4"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[],"src":"14680:0:4"},"scope":693,"src":"14634:47:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":694,"src":"484:14199:4","usedErrors":[],"usedEvents":[356,360,364,370,374,382,395,408,417,421,425,429,433,437,441,445,449,453]}],"src":"34:14650:4"},"id":4},"contracts/TruthPost.sol":{"ast":{"absolutePath":"contracts/TruthPost.sol","exportedSymbols":{"IArbitrable":[153],"IArbitrator":[249],"IDisputeResolver":[130],"IEvidence":[285],"ITruthPost":[693],"TruthPost":[2850]},"id":2851,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":695,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"34:24:5"},{"absolutePath":"@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol","file":"@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol","id":696,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2851,"sourceUnit":131,"src":"60:84:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ITruthPost.sol","file":"./ITruthPost.sol","id":697,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2851,"sourceUnit":694,"src":"145:26:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":699,"name":"ITruthPost","nameLocations":["1127:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":693,"src":"1127:10:5"},"id":700,"nodeType":"InheritanceSpecifier","src":"1127:10:5"},{"baseName":{"id":701,"name":"IArbitrable","nameLocations":["1139:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1139:11:5"},"id":702,"nodeType":"InheritanceSpecifier","src":"1139:11:5"},{"baseName":{"id":703,"name":"IEvidence","nameLocations":["1152:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":285,"src":"1152:9:5"},"id":704,"nodeType":"InheritanceSpecifier","src":"1152:9:5"}],"canonicalName":"TruthPost","contractDependencies":[],"contractKind":"contract","documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"173:932:5","text":"@title  The Trust Post\n @author https://github.com/proveuswrong<0xferit, gratestas>\n @notice Smart contract for a type of curation, where submitted items are on hold until they are withdrawn and the amount of security deposits are determined by submitters.\n @dev    You should target ITruthPost interface contract for building on top. Otherwise you risk incompatibility across versions.\n         Articles are not addressed with their identifiers. That enables us to reuse same storage address for another article later.///         Arbitrator is fixed, but subcourts, jury size and metaevidence are not.\n         We prevent articles to get withdrawn immediately. This is to prevent submitter to escape punishment in case someone discovers an argument to debunk the article.\n         Bounty amounts are compressed with a lossy compression method to save on storage cost.\n @custom:approvals 0xferit, gratestas"},"fullyImplemented":true,"id":2850,"linearizedBaseContracts":[2850,285,153,693],"name":"TruthPost","nameLocation":"1114:9:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"68871c9c","id":707,"mutability":"immutable","name":"ARBITRATOR","nameLocation":"1197:10:5","nodeType":"VariableDeclaration","scope":2850,"src":"1168:39:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"},"typeName":{"id":706,"nodeType":"UserDefinedTypeName","pathNode":{"id":705,"name":"IArbitrator","nameLocations":["1168:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":249,"src":"1168:11:5"},"referencedDeclaration":249,"src":"1168:11:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"visibility":"public"},{"constant":true,"functionSelector":"d970d18c","id":710,"mutability":"constant","name":"NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE","nameLocation":"1237:42:5","nodeType":"VariableDeclaration","scope":2850,"src":"1213:71:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1282:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"public"},{"constant":false,"functionSelector":"03624fc0","id":713,"mutability":"mutable","name":"categoryCounter","nameLocation":"1377:15:5","nodeType":"VariableDeclaration","scope":2850,"src":"1364:32:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":711,"name":"uint8","nodeType":"ElementaryTypeName","src":"1364:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"30","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1395:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"f851a440","id":720,"mutability":"mutable","name":"admin","nameLocation":"1426:5:5","nodeType":"VariableDeclaration","scope":2850,"src":"1403:50:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"1403:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":{"arguments":[{"expression":{"id":717,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1442:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1446:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1442:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1434:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"1434:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1434:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"public"},{"body":{"id":730,"nodeType":"Block","src":"1481:56:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":723,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1499:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1499:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":725,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"1513:5:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1499:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":722,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1491:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1491:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":728,"nodeType":"ExpressionStatement","src":"1491:28:5"},{"id":729,"nodeType":"PlaceholderStatement","src":"1529:1:5"}]},"id":731,"name":"onlyAdmin","nameLocation":"1469:9:5","nodeType":"ModifierDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[],"src":"1478:2:5"},"src":"1460:77:5","virtual":false,"visibility":"internal"},{"canonicalName":"TruthPost.DisputeData","id":747,"members":[{"constant":false,"id":733,"mutability":"mutable","name":"challenger","nameLocation":"1588:10:5","nodeType":"VariableDeclaration","scope":747,"src":"1572:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":732,"name":"address","nodeType":"ElementaryTypeName","src":"1572:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"outcome","nameLocation":"1622:7:5","nodeType":"VariableDeclaration","scope":747,"src":"1608:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":735,"nodeType":"UserDefinedTypeName","pathNode":{"id":734,"name":"RulingOptions","nameLocations":["1608:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"1608:13:5"},"referencedDeclaration":295,"src":"1608:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"},{"constant":false,"id":738,"mutability":"mutable","name":"articleCategory","nameLocation":"1645:15:5","nodeType":"VariableDeclaration","scope":747,"src":"1639:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":737,"name":"uint8","nodeType":"ElementaryTypeName","src":"1639:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"resolved","nameLocation":"1675:8:5","nodeType":"VariableDeclaration","scope":747,"src":"1670:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":739,"name":"bool","nodeType":"ElementaryTypeName","src":"1670:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":742,"mutability":"mutable","name":"articleStorageAddress","nameLocation":"1817:21:5","nodeType":"VariableDeclaration","scope":747,"src":"1810:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":741,"name":"uint72","nodeType":"ElementaryTypeName","src":"1810:6:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"rounds","nameLocation":"1913:6:5","nodeType":"VariableDeclaration","scope":747,"src":"1905:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$770_storage_$dyn_storage_ptr","typeString":"struct TruthPost.Round[]"},"typeName":{"baseType":{"id":744,"nodeType":"UserDefinedTypeName","pathNode":{"id":743,"name":"Round","nameLocations":["1905:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":770,"src":"1905:5:5"},"referencedDeclaration":770,"src":"1905:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round"}},"id":745,"nodeType":"ArrayTypeName","src":"1905:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$770_storage_$dyn_storage_ptr","typeString":"struct TruthPost.Round[]"}},"visibility":"internal"}],"name":"DisputeData","nameLocation":"1550:11:5","nodeType":"StructDefinition","scope":2850,"src":"1543:425:5","visibility":"public"},{"canonicalName":"TruthPost.Round","id":770,"members":[{"constant":false,"id":755,"mutability":"mutable","name":"contributions","nameLocation":"2055:13:5","nodeType":"VariableDeclaration","scope":770,"src":"1997:71:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$3_storage_$","typeString":"mapping(address => uint256[3])"},"typeName":{"id":754,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"2005:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1997:57:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$3_storage_$","typeString":"mapping(address => uint256[3])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":753,"length":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":750,"name":"NUMBER_OF_RULING_OPTIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"2024:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2051:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2024:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"ArrayTypeName","src":"2016:37:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"hasPaid","nameLocation":"2113:7:5","nodeType":"VariableDeclaration","scope":770,"src":"2078:42:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_storage_ptr","typeString":"bool[3]"},"typeName":{"baseType":{"id":756,"name":"bool","nodeType":"ElementaryTypeName","src":"2078:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":760,"length":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":757,"name":"NUMBER_OF_RULING_OPTIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"2083:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2110:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2083:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"ArrayTypeName","src":"2078:34:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_storage_ptr","typeString":"bool[3]"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"totalPerRuling","nameLocation":"2271:14:5","nodeType":"VariableDeclaration","scope":770,"src":"2233:52:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"2233:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":766,"length":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":763,"name":"NUMBER_OF_RULING_OPTIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"2241:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2268:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2241:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"ArrayTypeName","src":"2233:37:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"totalClaimableAfterExpenses","nameLocation":"2303:27:5","nodeType":"VariableDeclaration","scope":770,"src":"2295:35:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"2295:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Round","nameLocation":"1981:5:5","nodeType":"StructDefinition","scope":2850,"src":"1974:363:5","visibility":"public"},{"canonicalName":"TruthPost.Article","id":779,"members":[{"constant":false,"id":772,"mutability":"mutable","name":"owner","nameLocation":"2384:5:5","nodeType":"VariableDeclaration","scope":779,"src":"2368:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"2368:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":774,"mutability":"mutable","name":"withdrawalPermittedAt","nameLocation":"2406:21:5","nodeType":"VariableDeclaration","scope":779,"src":"2399:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":773,"name":"uint32","nodeType":"ElementaryTypeName","src":"2399:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"bountyAmount","nameLocation":"2471:12:5","nodeType":"VariableDeclaration","scope":779,"src":"2464:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":775,"name":"uint56","nodeType":"ElementaryTypeName","src":"2464:6:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"category","nameLocation":"2553:8:5","nodeType":"VariableDeclaration","scope":779,"src":"2547:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":777,"name":"uint8","nodeType":"ElementaryTypeName","src":"2547:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"Article","nameLocation":"2350:7:5","nodeType":"StructDefinition","scope":2850,"src":"2343:225:5","visibility":"public"},{"constant":false,"functionSelector":"4de12db0","id":783,"mutability":"mutable","name":"categoryToArbitratorExtraData","nameLocation":"2591:29:5","nodeType":"VariableDeclaration","scope":2850,"src":"2574:46:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$64_storage","typeString":"bytes[64]"},"typeName":{"baseType":{"id":780,"name":"bytes","nodeType":"ElementaryTypeName","src":"2574:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":782,"length":{"hexValue":"3634","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2580:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"ArrayTypeName","src":"2574:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$64_storage_ptr","typeString":"bytes[64]"}},"visibility":"public"},{"constant":false,"functionSelector":"3e556162","id":788,"mutability":"mutable","name":"articleStorage","nameLocation":"2661:14:5","nodeType":"VariableDeclaration","scope":2850,"src":"2627:48:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint72_$_t_struct$_Article_$779_storage_$","typeString":"mapping(uint72 => struct TruthPost.Article)"},"typeName":{"id":787,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":784,"name":"uint72","nodeType":"ElementaryTypeName","src":"2635:6:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"nodeType":"Mapping","src":"2627:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint72_$_t_struct$_Article_$779_storage_$","typeString":"mapping(uint72 => struct TruthPost.Article)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":786,"nodeType":"UserDefinedTypeName","pathNode":{"id":785,"name":"Article","nameLocations":["2645:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":779,"src":"2645:7:5"},"referencedDeclaration":779,"src":"2645:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"}}},"visibility":"public"},{"constant":false,"functionSelector":"564a565d","id":793,"mutability":"mutable","name":"disputes","nameLocation":"2841:8:5","nodeType":"VariableDeclaration","scope":2850,"src":"2802:47:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$","typeString":"mapping(uint256 => struct TruthPost.DisputeData)"},"typeName":{"id":792,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":789,"name":"uint256","nodeType":"ElementaryTypeName","src":"2810:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2802:31:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$","typeString":"mapping(uint256 => struct TruthPost.DisputeData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":791,"nodeType":"UserDefinedTypeName","pathNode":{"id":790,"name":"DisputeData","nameLocations":["2821:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":747,"src":"2821:11:5"},"referencedDeclaration":747,"src":"2821:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"}}},"visibility":"public"},{"body":{"id":826,"nodeType":"Block","src":"3286:106:5","statements":[{"expression":{"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":817,"name":"ARBITRATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"3296:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":818,"name":"_arbitrator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"3309:11:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"src":"3296:24:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"id":820,"nodeType":"ExpressionStatement","src":"3296:24:5"},{"expression":{"arguments":[{"id":822,"name":"_metaevidenceIpfsUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"3342:20:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":823,"name":"_arbitratorExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"3364:20:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":821,"name":"newCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"3330:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (string memory,bytes memory)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":825,"nodeType":"ExpressionStatement","src":"3330:55:5"}]},"id":827,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":811,"name":"_articleWithdrawalTimelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"3200:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":812,"name":"_winnerStakeMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"3228:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":813,"name":"_loserStakeMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"3252:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":814,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"3275:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":815,"kind":"baseConstructorSpecifier","modifierName":{"id":810,"name":"ITruthPost","nameLocations":["3189:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":693,"src":"3189:10:5"},"nodeType":"ModifierInvocation","src":"3189:96:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"_arbitrator","nameLocation":"2926:11:5","nodeType":"VariableDeclaration","scope":827,"src":"2914:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"},"typeName":{"id":795,"nodeType":"UserDefinedTypeName","pathNode":{"id":794,"name":"IArbitrator","nameLocations":["2914:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":249,"src":"2914:11:5"},"referencedDeclaration":249,"src":"2914:11:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"visibility":"internal"},{"constant":false,"id":798,"mutability":"mutable","name":"_arbitratorExtraData","nameLocation":"2960:20:5","nodeType":"VariableDeclaration","scope":827,"src":"2947:33:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":797,"name":"bytes","nodeType":"ElementaryTypeName","src":"2947:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"_metaevidenceIpfsUri","nameLocation":"3004:20:5","nodeType":"VariableDeclaration","scope":827,"src":"2990:34:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":799,"name":"string","nodeType":"ElementaryTypeName","src":"2990:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"_articleWithdrawalTimelock","nameLocation":"3042:26:5","nodeType":"VariableDeclaration","scope":827,"src":"3034:34:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"3034:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"_winnerStakeMultiplier","nameLocation":"3086:22:5","nodeType":"VariableDeclaration","scope":827,"src":"3078:30:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"3078:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"_loserStakeMultiplier","nameLocation":"3126:21:5","nodeType":"VariableDeclaration","scope":827,"src":"3118:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"3118:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"_treasury","nameLocation":"3173:9:5","nodeType":"VariableDeclaration","scope":827,"src":"3157:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"3157:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"2904:284:5"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"3286:0:5"},"scope":2850,"src":"2893:499:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[482],"body":{"id":921,"nodeType":"Block","src":"3580:812:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":839,"name":"_category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"3598:9:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":840,"name":"categoryCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"3610:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3598:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546869732063617465676f727920646f6573206e6f74206578697374","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3627:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_de142eb746bdd0d0ef7f42e32a89b1f8be902652448bd9ef60b61b168c6d9194","typeString":"literal_string \"This category does not exist\""},"value":"This category does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_de142eb746bdd0d0ef7f42e32a89b1f8be902652448bd9ef60b61b168c6d9194","typeString":"literal_string \"This category does not exist\""}],"id":838,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3590:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3590:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":844,"nodeType":"ExpressionStatement","src":"3590:68:5"},{"assignments":[847],"declarations":[{"constant":false,"id":847,"mutability":"mutable","name":"article","nameLocation":"3685:7:5","nodeType":"VariableDeclaration","scope":921,"src":"3669:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"},"typeName":{"id":846,"nodeType":"UserDefinedTypeName","pathNode":{"id":845,"name":"Article","nameLocations":["3669:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":779,"src":"3669:7:5"},"referencedDeclaration":779,"src":"3669:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"}},"visibility":"internal"}],"id":848,"nodeType":"VariableDeclarationStatement","src":"3669:23:5"},{"body":{"id":856,"nodeType":"Block","src":"3705:67:5","statements":[{"expression":{"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":849,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"3719:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":850,"name":"articleStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"3729:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint72_$_t_struct$_Article_$779_storage_$","typeString":"mapping(uint72 => struct TruthPost.Article storage ref)"}},"id":853,"indexExpression":{"id":852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3744:16:5","subExpression":{"id":851,"name":"_searchPointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"3744:14:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3729:32:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage","typeString":"struct TruthPost.Article storage ref"}},"src":"3719:42:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":855,"nodeType":"ExpressionStatement","src":"3719:42:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint56","typeString":"uint56"},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":857,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"3780:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":858,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3788:12:5","memberName":"bountyAmount","nodeType":"MemberAccess","referencedDeclaration":776,"src":"3780:20:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3804:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3780:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":861,"nodeType":"DoWhileStatement","src":"3702:105:5"},{"expression":{"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":862,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"3817:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3825:5:5","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":772,"src":"3817:13:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":867,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3841:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3845:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3841:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3833:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"3833:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3833:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"3817:35:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":871,"nodeType":"ExpressionStatement","src":"3817:35:5"},{"expression":{"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":872,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"3862:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3870:12:5","memberName":"bountyAmount","nodeType":"MemberAccess","referencedDeclaration":776,"src":"3862:20:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":877,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3892:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3896:5:5","memberName":"value","nodeType":"MemberAccess","src":"3892:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":879,"name":"NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"3905:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3892:55:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3885:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":875,"name":"uint56","nodeType":"ElementaryTypeName","src":"3885:6:5","typeDescriptions":{}}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3885:63:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"3862:86:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"id":883,"nodeType":"ExpressionStatement","src":"3862:86:5"},{"expression":{"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":884,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"3958:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3966:8:5","memberName":"category","nodeType":"MemberAccess","referencedDeclaration":778,"src":"3958:16:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":887,"name":"_category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"3977:9:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3958:28:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":889,"nodeType":"ExpressionStatement","src":"3958:28:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint56","typeString":"uint56"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":891,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"4005:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":892,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4013:12:5","memberName":"bountyAmount","nodeType":"MemberAccess","referencedDeclaration":776,"src":"4005:20:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4028:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4005:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752063616e277420696e697469616c697a6520616e2061727469636c6520776974686f75742070757474696e67206120626f756e74792e","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4031:59:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_735d504b2c5de2f29425b794cdb33103551951bc0508e48cdd57a296c3d28554","typeString":"literal_string \"You can't initialize an article without putting a bounty.\""},"value":"You can't initialize an article without putting a bounty."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_735d504b2c5de2f29425b794cdb33103551951bc0508e48cdd57a296c3d28554","typeString":"literal_string \"You can't initialize an article without putting a bounty.\""}],"id":890,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3997:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3997:94:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":897,"nodeType":"ExpressionStatement","src":"3997:94:5"},{"assignments":[899],"declarations":[{"constant":false,"id":899,"mutability":"mutable","name":"articleStorageAddress","nameLocation":"4110:21:5","nodeType":"VariableDeclaration","scope":921,"src":"4102:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"4102:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":903,"initialValue":{"commonType":{"typeIdentifier":"t_uint72","typeString":"uint72"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":900,"name":"_searchPointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"4134:14:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4151:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4134:18:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"nodeType":"VariableDeclarationStatement","src":"4102:50:5"},{"eventCall":{"arguments":[{"id":905,"name":"_articleID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"4178:10:5","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":906,"name":"_category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"4190:9:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":907,"name":"articleStorageAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"4201:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":904,"name":"NewArticle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"4167:10:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (string memory,uint8,uint256)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":909,"nodeType":"EmitStatement","src":"4162:61:5"},{"eventCall":{"arguments":[{"id":911,"name":"articleStorageAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"4265:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":914,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"4308:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4316:12:5","memberName":"bountyAmount","nodeType":"MemberAccess","referencedDeclaration":776,"src":"4308:20:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint56","typeString":"uint56"}],"id":913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4300:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"4300:7:5","typeDescriptions":{}}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":917,"name":"NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"4333:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4300:75:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":910,"name":"BalanceUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4238:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4238:147:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":920,"nodeType":"EmitStatement","src":"4233:152:5"}]},"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"3398:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"faa0ba9d","id":922,"implemented":true,"kind":"function","modifiers":[],"name":"initializeArticle","nameLocation":"3438:17:5","nodeType":"FunctionDefinition","overrides":{"id":836,"nodeType":"OverrideSpecifier","overrides":[],"src":"3571:8:5"},"parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"_articleID","nameLocation":"3481:10:5","nodeType":"VariableDeclaration","scope":922,"src":"3465:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":829,"name":"string","nodeType":"ElementaryTypeName","src":"3465:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"_category","nameLocation":"3507:9:5","nodeType":"VariableDeclaration","scope":922,"src":"3501:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":831,"name":"uint8","nodeType":"ElementaryTypeName","src":"3501:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"_searchPointer","nameLocation":"3533:14:5","nodeType":"VariableDeclaration","scope":922,"src":"3526:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":833,"name":"uint72","nodeType":"ElementaryTypeName","src":"3526:6:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"3455:98:5"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[],"src":"3580:0:5"},"scope":2850,"src":"3429:963:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[461],"body":{"id":939,"nodeType":"Block","src":"4521:80:5","statements":[{"eventCall":{"arguments":[{"id":932,"name":"ARBITRATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"4545:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},{"id":933,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"4557:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":934,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4569:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4573:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4569:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":936,"name":"_evidenceURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"4581:12:5","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":931,"name":"Evidence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"4536:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IArbitrator_$249_$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (contract IArbitrator,uint256,address,string memory)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4536:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":938,"nodeType":"EmitStatement","src":"4531:63:5"}]},"documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"4398:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"a6a7f0eb","id":940,"implemented":true,"kind":"function","modifiers":[],"name":"submitEvidence","nameLocation":"4438:14:5","nodeType":"FunctionDefinition","overrides":{"id":929,"nodeType":"OverrideSpecifier","overrides":[],"src":"4512:8:5"},"parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"_disputeID","nameLocation":"4461:10:5","nodeType":"VariableDeclaration","scope":940,"src":"4453:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"4453:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"_evidenceURI","nameLocation":"4489:12:5","nodeType":"VariableDeclaration","scope":940,"src":"4473:28:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":926,"name":"string","nodeType":"ElementaryTypeName","src":"4473:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4452:50:5"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[],"src":"4521:0:5"},"scope":2850,"src":"4429:172:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[488],"body":{"id":986,"nodeType":"Block","src":"4719:471:5","statements":[{"assignments":[949],"declarations":[{"constant":false,"id":949,"mutability":"mutable","name":"article","nameLocation":"4745:7:5","nodeType":"VariableDeclaration","scope":986,"src":"4729:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"},"typeName":{"id":948,"nodeType":"UserDefinedTypeName","pathNode":{"id":947,"name":"Article","nameLocations":["4729:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":779,"src":"4729:7:5"},"referencedDeclaration":779,"src":"4729:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"}},"visibility":"internal"}],"id":953,"initialValue":{"baseExpression":{"id":950,"name":"articleStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"4755:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint72_$_t_struct$_Article_$779_storage_$","typeString":"mapping(uint72 => struct TruthPost.Article storage ref)"}},"id":952,"indexExpression":{"id":951,"name":"_articleStorageAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"4770:22:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4755:38:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage","typeString":"struct TruthPost.Article storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4729:64:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":955,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4811:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4815:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4811:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":957,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4825:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4833:5:5","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":772,"src":"4825:13:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"4811:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920617574686f722063616e20696e63726561736520626f756e7479206f6620616e2061727469636c652e","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4840:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a40667c3d5ae3c08746fe24fceae1033d89d0e1de162ecdda7e68141465d7af7","typeString":"literal_string \"Only author can increase bounty of an article.\""},"value":"Only author can increase bounty of an article."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a40667c3d5ae3c08746fe24fceae1033d89d0e1de162ecdda7e68141465d7af7","typeString":"literal_string \"Only author can increase bounty of an article.\""}],"id":954,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4803:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4803:86:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":962,"nodeType":"ExpressionStatement","src":"4803:86:5"},{"expression":{"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":963,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4932:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":965,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4940:12:5","memberName":"bountyAmount","nodeType":"MemberAccess","referencedDeclaration":776,"src":"4932:20:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":968,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4963:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4967:5:5","memberName":"value","nodeType":"MemberAccess","src":"4963:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":970,"name":"NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"4976:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4963:55:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4956:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":966,"name":"uint56","nodeType":"ElementaryTypeName","src":"4956:6:5","typeDescriptions":{}}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4956:63:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"4932:87:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"id":974,"nodeType":"ExpressionStatement","src":"4932:87:5"},{"eventCall":{"arguments":[{"id":976,"name":"_articleStorageAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"5062:22:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":979,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"5106:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5114:12:5","memberName":"bountyAmount","nodeType":"MemberAccess","referencedDeclaration":776,"src":"5106:20:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint56","typeString":"uint56"}],"id":978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5098:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"5098:7:5","typeDescriptions":{}}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":982,"name":"NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"5131:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5098:75:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint72","typeString":"uint72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":975,"name":"BalanceUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"5035:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5035:148:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":985,"nodeType":"EmitStatement","src":"5030:153:5"}]},"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"4607:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"44b9ad06","id":987,"implemented":true,"kind":"function","modifiers":[],"name":"increaseBounty","nameLocation":"4647:14:5","nodeType":"FunctionDefinition","overrides":{"id":945,"nodeType":"OverrideSpecifier","overrides":[],"src":"4710:8:5"},"parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"_articleStorageAddress","nameLocation":"4669:22:5","nodeType":"VariableDeclaration","scope":987,"src":"4662:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":942,"name":"uint72","nodeType":"ElementaryTypeName","src":"4662:6:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"4661:31:5"},"returnParameters":{"id":946,"nodeType":"ParameterList","parameters":[],"src":"4719:0:5"},"scope":2850,"src":"4638:552:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[494],"body":{"id":1034,"nodeType":"Block","src":"5304:427:5","statements":[{"assignments":[996],"declarations":[{"constant":false,"id":996,"mutability":"mutable","name":"article","nameLocation":"5330:7:5","nodeType":"VariableDeclaration","scope":1034,"src":"5314:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"},"typeName":{"id":995,"nodeType":"UserDefinedTypeName","pathNode":{"id":994,"name":"Article","nameLocations":["5314:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":779,"src":"5314:7:5"},"referencedDeclaration":779,"src":"5314:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"}},"visibility":"internal"}],"id":1000,"initialValue":{"baseExpression":{"id":997,"name":"articleStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"5340:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint72_$_t_struct$_Article_$779_storage_$","typeString":"mapping(uint72 => struct TruthPost.Article storage ref)"}},"id":999,"indexExpression":{"id":998,"name":"_articleStorageAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"5355:22:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5340:38:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage","typeString":"struct TruthPost.Article storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5314:64:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1002,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5396:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5400:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5396:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1004,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5410:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5418:5:5","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":772,"src":"5410:13:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5396:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920617574686f722063616e20776974686472617720616e2061727469636c652e","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5425:38:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a7ac09dd6d1a595ef63e3c006cc799fa0704d926f43c9ba8a2701161a095cea","typeString":"literal_string \"Only author can withdraw an article.\""},"value":"Only author can withdraw an article."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6a7ac09dd6d1a595ef63e3c006cc799fa0704d926f43c9ba8a2701161a095cea","typeString":"literal_string \"Only author can withdraw an article.\""}],"id":1001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5388:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:76:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1009,"nodeType":"ExpressionStatement","src":"5388:76:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1011,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5482:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5490:21:5","memberName":"withdrawalPermittedAt","nodeType":"MemberAccess","referencedDeclaration":774,"src":"5482:29:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5515:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5482:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177616c20616c726561647920696e69746961746564206f722074686572652069732061206368616c6c656e67652e","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5518:55:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_09736bc764ff8f7b07f5d004c384a229ed4912017c53bd247c8e39209b9ae7f6","typeString":"literal_string \"Withdrawal already initiated or there is a challenge.\""},"value":"Withdrawal already initiated or there is a challenge."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09736bc764ff8f7b07f5d004c384a229ed4912017c53bd247c8e39209b9ae7f6","typeString":"literal_string \"Withdrawal already initiated or there is a challenge.\""}],"id":1010,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5474:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5474:100:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1017,"nodeType":"ExpressionStatement","src":"5474:100:5"},{"expression":{"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1018,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5585:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5593:21:5","memberName":"withdrawalPermittedAt","nodeType":"MemberAccess","referencedDeclaration":774,"src":"5585:29:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1023,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5624:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5630:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"5624:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1025,"name":"ARTICLE_WITHDRAWAL_TIMELOCK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"5642:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5624:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1021,"name":"uint32","nodeType":"ElementaryTypeName","src":"5617:6:5","typeDescriptions":{}}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5585:85:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1029,"nodeType":"ExpressionStatement","src":"5585:85:5"},{"eventCall":{"arguments":[{"id":1031,"name":"_articleStorageAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"5701:22:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint72","typeString":"uint72"}],"id":1030,"name":"TimelockStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"5685:15:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5685:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1033,"nodeType":"EmitStatement","src":"5680:44:5"}]},"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"5196:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"ba4c8f8f","id":1035,"implemented":true,"kind":"function","modifiers":[],"name":"initiateWithdrawal","nameLocation":"5236:18:5","nodeType":"FunctionDefinition","overrides":{"id":992,"nodeType":"OverrideSpecifier","overrides":[],"src":"5295:8:5"},"parameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"_articleStorageAddress","nameLocation":"5262:22:5","nodeType":"VariableDeclaration","scope":1035,"src":"5255:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":989,"name":"uint72","nodeType":"ElementaryTypeName","src":"5255:6:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"5254:31:5"},"returnParameters":{"id":993,"nodeType":"ParameterList","parameters":[],"src":"5304:0:5"},"scope":2850,"src":"5227:504:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[500],"body":{"id":1110,"nodeType":"Block","src":"5835:845:5","statements":[{"assignments":[1044],"declarations":[{"constant":false,"id":1044,"mutability":"mutable","name":"article","nameLocation":"5861:7:5","nodeType":"VariableDeclaration","scope":1110,"src":"5845:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"},"typeName":{"id":1043,"nodeType":"UserDefinedTypeName","pathNode":{"id":1042,"name":"Article","nameLocations":["5845:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":779,"src":"5845:7:5"},"referencedDeclaration":779,"src":"5845:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"}},"visibility":"internal"}],"id":1048,"initialValue":{"baseExpression":{"id":1045,"name":"articleStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"5871:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint72_$_t_struct$_Article_$779_storage_$","typeString":"mapping(uint72 => struct TruthPost.Article storage ref)"}},"id":1047,"indexExpression":{"id":1046,"name":"_articleStorageAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5886:22:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5871:38:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage","typeString":"struct TruthPost.Article storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5845:64:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1050,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5928:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5932:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5928:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1052,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"5942:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5950:5:5","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":772,"src":"5942:13:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5928:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920617574686f722063616e20776974686472617720616e2061727469636c652e","id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5957:38:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a7ac09dd6d1a595ef63e3c006cc799fa0704d926f43c9ba8a2701161a095cea","typeString":"literal_string \"Only author can withdraw an article.\""},"value":"Only author can withdraw an article."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6a7ac09dd6d1a595ef63e3c006cc799fa0704d926f43c9ba8a2701161a095cea","typeString":"literal_string \"Only author can withdraw an article.\""}],"id":1049,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5920:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5920:76:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"ExpressionStatement","src":"5920:76:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1059,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"6014:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6022:21:5","memberName":"withdrawalPermittedAt","nodeType":"MemberAccess","referencedDeclaration":774,"src":"6014:29:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6047:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6014:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206e65656420746f20696e697469617465207769746864726177616c2066697273742e","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6050:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_646d3354d32a4e6f10f97f8e4dafb31e5ad3c387e7ce2b3b8fd9a6cf92aec955","typeString":"literal_string \"You need to initiate withdrawal first.\""},"value":"You need to initiate withdrawal first."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_646d3354d32a4e6f10f97f8e4dafb31e5ad3c387e7ce2b3b8fd9a6cf92aec955","typeString":"literal_string \"You need to initiate withdrawal first.\""}],"id":1058,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6006:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6006:85:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1065,"nodeType":"ExpressionStatement","src":"6006:85:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1067,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"6122:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6130:21:5","memberName":"withdrawalPermittedAt","nodeType":"MemberAccess","referencedDeclaration":774,"src":"6122:29:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1069,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6155:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6161:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"6155:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6122:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206e65656420746f207761697420666f722074696d656c6f636b206f72207761697420756e74696c20746865206368616c6c656e676520656e64732e","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6184:65:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7c0c82b0d480101a30f3ad2e3ccc7970d31d7e8da6ac4e66c07d00ffcf930f48","typeString":"literal_string \"You need to wait for timelock or wait until the challenge ends.\""},"value":"You need to wait for timelock or wait until the challenge ends."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7c0c82b0d480101a30f3ad2e3ccc7970d31d7e8da6ac4e66c07d00ffcf930f48","typeString":"literal_string \"You need to wait for timelock or wait until the challenge ends.\""}],"id":1066,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6101:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6101:158:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1074,"nodeType":"ExpressionStatement","src":"6101:158:5"},{"assignments":[1076],"declarations":[{"constant":false,"id":1076,"mutability":"mutable","name":"withdrawal","nameLocation":"6278:10:5","nodeType":"VariableDeclaration","scope":1110,"src":"6270:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1075,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1084,"initialValue":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1079,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"6298:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1080,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6306:12:5","memberName":"bountyAmount","nodeType":"MemberAccess","referencedDeclaration":776,"src":"6298:20:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint56","typeString":"uint56"}],"id":1078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6291:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1077,"name":"uint96","nodeType":"ElementaryTypeName","src":"6291:6:5","typeDescriptions":{}}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6291:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1082,"name":"NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6323:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6291:74:5","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"6270:95:5"},{"expression":{"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1085,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"6375:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6383:12:5","memberName":"bountyAmount","nodeType":"MemberAccess","referencedDeclaration":776,"src":"6375:20:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6375:24:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"id":1090,"nodeType":"ExpressionStatement","src":"6375:24:5"},{"expression":{"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1091,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"6447:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6455:21:5","memberName":"withdrawalPermittedAt","nodeType":"MemberAccess","referencedDeclaration":774,"src":"6447:29:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6479:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6447:33:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1096,"nodeType":"ExpressionStatement","src":"6447:33:5"},{"expression":{"arguments":[{"id":1103,"name":"withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6607:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1099,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6586:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6590:6:5","memberName":"sender","nodeType":"MemberAccess","src":"6586:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6578:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"6578:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6578:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6598:8:5","memberName":"transfer","nodeType":"MemberAccess","src":"6578:28:5","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6578:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1105,"nodeType":"ExpressionStatement","src":"6578:40:5"},{"eventCall":{"arguments":[{"id":1107,"name":"_articleStorageAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"6650:22:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint72","typeString":"uint72"}],"id":1106,"name":"ArticleWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"6633:16:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1109,"nodeType":"EmitStatement","src":"6628:45:5"}]},"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"5737:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"a92c4707","id":1111,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"5777:8:5","nodeType":"FunctionDefinition","overrides":{"id":1040,"nodeType":"OverrideSpecifier","overrides":[],"src":"5826:8:5"},"parameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"_articleStorageAddress","nameLocation":"5793:22:5","nodeType":"VariableDeclaration","scope":1111,"src":"5786:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":1037,"name":"uint72","nodeType":"ElementaryTypeName","src":"5786:6:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"5785:31:5"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[],"src":"5835:0:5"},"scope":2850,"src":"5768:912:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[506],"body":{"id":1252,"nodeType":"Block","src":"6793:1357:5","statements":[{"assignments":[1120],"declarations":[{"constant":false,"id":1120,"mutability":"mutable","name":"article","nameLocation":"6819:7:5","nodeType":"VariableDeclaration","scope":1252,"src":"6803:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"},"typeName":{"id":1119,"nodeType":"UserDefinedTypeName","pathNode":{"id":1118,"name":"Article","nameLocations":["6803:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":779,"src":"6803:7:5"},"referencedDeclaration":779,"src":"6803:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"}},"visibility":"internal"}],"id":1124,"initialValue":{"baseExpression":{"id":1121,"name":"articleStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"6829:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint72_$_t_struct$_Article_$779_storage_$","typeString":"mapping(uint72 => struct TruthPost.Article storage ref)"}},"id":1123,"indexExpression":{"id":1122,"name":"_articleStorageAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"6844:22:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6829:38:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage","typeString":"struct TruthPost.Article storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6803:64:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint56","typeString":"uint56"},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1126,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"6885:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6893:12:5","memberName":"bountyAmount","nodeType":"MemberAccess","referencedDeclaration":776,"src":"6885:20:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6908:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6885:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7468696e6720746f206368616c6c656e67652e","id":1130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6911:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0fb9b5de11a486bb1b8d34864ad6b246b0b983476450ee45857735429bd77eb9","typeString":"literal_string \"Nothing to challenge.\""},"value":"Nothing to challenge."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0fb9b5de11a486bb1b8d34864ad6b246b0b983476450ee45857735429bd77eb9","typeString":"literal_string \"Nothing to challenge.\""}],"id":1125,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6877:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6877:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1132,"nodeType":"ExpressionStatement","src":"6877:58:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1134,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"6953:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6961:21:5","memberName":"withdrawalPermittedAt","nodeType":"MemberAccess","referencedDeclaration":774,"src":"6953:29:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6991:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1137,"name":"uint32","nodeType":"ElementaryTypeName","src":"6991:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":1136,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6986:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6986:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6999:3:5","memberName":"max","nodeType":"MemberAccess","src":"6986:16:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6953:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546865726520697320616e206f6e676f696e67206368616c6c656e67652e","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7004:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b54a59a715146ed6c99f49691f55e62e941bfed713a75eda7bc62bf50148d555","typeString":"literal_string \"There is an ongoing challenge.\""},"value":"There is an ongoing challenge."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b54a59a715146ed6c99f49691f55e62e941bfed713a75eda7bc62bf50148d555","typeString":"literal_string \"There is an ongoing challenge.\""}],"id":1133,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6945:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6945:92:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1144,"nodeType":"ExpressionStatement","src":"6945:92:5"},{"expression":{"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1145,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"7047:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7055:21:5","memberName":"withdrawalPermittedAt","nodeType":"MemberAccess","referencedDeclaration":774,"src":"7047:29:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":1150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7084:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1149,"name":"uint32","nodeType":"ElementaryTypeName","src":"7084:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":1148,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7079:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7079:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7092:3:5","memberName":"max","nodeType":"MemberAccess","src":"7079:16:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7047:48:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1154,"nodeType":"ExpressionStatement","src":"7047:48:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1156,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7145:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7149:5:5","memberName":"value","nodeType":"MemberAccess","src":"7145:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":1159,"name":"_articleStorageAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"7171:22:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint72","typeString":"uint72"}],"id":1158,"name":"challengeFee","nodeType":"Identifier","overloadedDeclarations":[2268],"referencedDeclaration":2268,"src":"7158:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint72_$returns$_t_uint256_$","typeString":"function (uint72) view returns (uint256)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7158:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7145:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e647320746f206368616c6c656e67652e","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7196:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c03e9d393d30f62793e04d553e45144120700c0c39d75130bccb90781d9e9e5","typeString":"literal_string \"Insufficient funds to challenge.\""},"value":"Insufficient funds to challenge."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0c03e9d393d30f62793e04d553e45144120700c0c39d75130bccb90781d9e9e5","typeString":"literal_string \"Insufficient funds to challenge.\""}],"id":1155,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7137:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7137:94:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1164,"nodeType":"ExpressionStatement","src":"7137:94:5"},{"assignments":[1166],"declarations":[{"constant":false,"id":1166,"mutability":"mutable","name":"taxAmount","nameLocation":"7250:9:5","nodeType":"VariableDeclaration","scope":1252,"src":"7242:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1165,"name":"uint256","nodeType":"ElementaryTypeName","src":"7242:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1180,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1169,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"7271:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7279:12:5","memberName":"bountyAmount","nodeType":"MemberAccess","referencedDeclaration":776,"src":"7271:20:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint56","typeString":"uint56"}],"id":1168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7264:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1167,"name":"uint96","nodeType":"ElementaryTypeName","src":"7264:6:5","typeDescriptions":{}}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7264:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1172,"name":"NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"7296:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7264:74:5","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"id":1174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7263:76:5","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1175,"name":"challengeTaxRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"7354:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7263:107:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7262:109:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1178,"name":"MULTIPLIER_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"7374:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7262:134:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7242:154:5"},{"expression":{"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1181,"name":"treasuryBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"7406:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1182,"name":"taxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"7425:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7406:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1184,"nodeType":"ExpressionStatement","src":"7406:28:5"},{"assignments":[1186],"declarations":[{"constant":false,"id":1186,"mutability":"mutable","name":"disputeID","nameLocation":"7453:9:5","nodeType":"VariableDeclaration","scope":1252,"src":"7445:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"7445:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1200,"initialValue":{"arguments":[{"id":1194,"name":"NUMBER_OF_RULING_OPTIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"7533:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1195,"name":"categoryToArbitratorExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"7571:29:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$64_storage","typeString":"bytes storage ref[64] storage ref"}},"id":1198,"indexExpression":{"expression":{"id":1196,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"7601:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7609:8:5","memberName":"category","nodeType":"MemberAccess","referencedDeclaration":778,"src":"7601:16:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7571:47:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"expression":{"id":1187,"name":"ARBITRATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"7465:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7476:13:5","memberName":"createDispute","nodeType":"MemberAccess","referencedDeclaration":195,"src":"7465:24:5","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,bytes memory) payable external returns (uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1189,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7497:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7501:5:5","memberName":"value","nodeType":"MemberAccess","src":"7497:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1191,"name":"taxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"7509:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7497:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7465:54:5","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$value","typeString":"function (uint256,bytes memory) payable external returns (uint256)"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7465:163:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7445:183:5"},{"expression":{"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1201,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7639:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$","typeString":"mapping(uint256 => struct TruthPost.DisputeData storage ref)"}},"id":1203,"indexExpression":{"id":1202,"name":"disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"7648:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7639:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage","typeString":"struct TruthPost.DisputeData storage ref"}},"id":1204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7659:10:5","memberName":"challenger","nodeType":"MemberAccess","referencedDeclaration":733,"src":"7639:30:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1207,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7680:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7684:6:5","memberName":"sender","nodeType":"MemberAccess","src":"7680:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7672:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"7672:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7672:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"7639:52:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1211,"nodeType":"ExpressionStatement","src":"7639:52:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"baseExpression":{"id":1212,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7701:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$","typeString":"mapping(uint256 => struct TruthPost.DisputeData storage ref)"}},"id":1214,"indexExpression":{"id":1213,"name":"disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"7710:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7701:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage","typeString":"struct TruthPost.DisputeData storage ref"}},"id":1215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7721:6:5","memberName":"rounds","nodeType":"MemberAccess","referencedDeclaration":746,"src":"7701:26:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$770_storage_$dyn_storage","typeString":"struct TruthPost.Round storage ref[] storage ref"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7728:4:5","memberName":"push","nodeType":"MemberAccess","src":"7701:31:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Round_$770_storage_$dyn_storage_ptr_$returns$_t_struct$_Round_$770_storage_$attached_to$_t_array$_t_struct$_Round_$770_storage_$dyn_storage_ptr_$","typeString":"function (struct TruthPost.Round storage ref[] storage pointer) returns (struct TruthPost.Round storage ref)"}},"id":1217,"isConstant":false,"isLValue":true,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7701:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage","typeString":"struct TruthPost.Round storage ref"}},"id":1218,"nodeType":"ExpressionStatement","src":"7701:33:5"},{"expression":{"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1219,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7744:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$","typeString":"mapping(uint256 => struct TruthPost.DisputeData storage ref)"}},"id":1221,"indexExpression":{"id":1220,"name":"disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"7753:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7744:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage","typeString":"struct TruthPost.DisputeData storage ref"}},"id":1222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7764:21:5","memberName":"articleStorageAddress","nodeType":"MemberAccess","referencedDeclaration":742,"src":"7744:41:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1225,"name":"_articleStorageAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"7795:22:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint72","typeString":"uint72"}],"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7788:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":1223,"name":"uint72","nodeType":"ElementaryTypeName","src":"7788:6:5","typeDescriptions":{}}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7788:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"7744:74:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"id":1228,"nodeType":"ExpressionStatement","src":"7744:74:5"},{"expression":{"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1229,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7828:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$","typeString":"mapping(uint256 => struct TruthPost.DisputeData storage ref)"}},"id":1231,"indexExpression":{"id":1230,"name":"disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"7837:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7828:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage","typeString":"struct TruthPost.DisputeData storage ref"}},"id":1232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7848:15:5","memberName":"articleCategory","nodeType":"MemberAccess","referencedDeclaration":738,"src":"7828:35:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1233,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"7866:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7874:8:5","memberName":"category","nodeType":"MemberAccess","referencedDeclaration":778,"src":"7866:16:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7828:54:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1236,"nodeType":"ExpressionStatement","src":"7828:54:5"},{"eventCall":{"arguments":[{"id":1238,"name":"ARBITRATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"7950:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},{"id":1239,"name":"disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"7962:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1240,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"7973:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7981:8:5","memberName":"category","nodeType":"MemberAccess","referencedDeclaration":778,"src":"7973:16:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1242,"name":"disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"7991:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1237,"name":"Dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"7942:7:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IArbitrator_$249_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (contract IArbitrator,uint256,uint256,uint256)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7942:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1244,"nodeType":"EmitStatement","src":"7937:64:5"},{"eventCall":{"arguments":[{"id":1246,"name":"_articleStorageAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"8097:22:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},{"expression":{"id":1247,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8121:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8125:6:5","memberName":"sender","nodeType":"MemberAccess","src":"8121:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1249,"name":"disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"8133:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint72","typeString":"uint72"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1245,"name":"Challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"8087:9:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1251,"nodeType":"EmitStatement","src":"8082:61:5"}]},"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"6686:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"12a145e1","id":1253,"implemented":true,"kind":"function","modifiers":[],"name":"challenge","nameLocation":"6726:9:5","nodeType":"FunctionDefinition","overrides":{"id":1116,"nodeType":"OverrideSpecifier","overrides":[],"src":"6784:8:5"},"parameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"_articleStorageAddress","nameLocation":"6743:22:5","nodeType":"VariableDeclaration","scope":1253,"src":"6736:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":1113,"name":"uint72","nodeType":"ElementaryTypeName","src":"6736:6:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"6735:31:5"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[],"src":"6793:0:5"},"scope":2850,"src":"6717:1433:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[472],"body":{"id":1586,"nodeType":"Block","src":"8348:3256:5","statements":[{"assignments":[1267],"declarations":[{"constant":false,"id":1267,"mutability":"mutable","name":"dispute","nameLocation":"8378:7:5","nodeType":"VariableDeclaration","scope":1586,"src":"8358:27:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"},"typeName":{"id":1266,"nodeType":"UserDefinedTypeName","pathNode":{"id":1265,"name":"DisputeData","nameLocations":["8358:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":747,"src":"8358:11:5"},"referencedDeclaration":747,"src":"8358:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"}},"visibility":"internal"}],"id":1271,"initialValue":{"baseExpression":{"id":1268,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"8388:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$","typeString":"mapping(uint256 => struct TruthPost.DisputeData storage ref)"}},"id":1270,"indexExpression":{"id":1269,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"8397:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8388:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage","typeString":"struct TruthPost.DisputeData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8358:50:5"},{"assignments":[1274],"declarations":[{"constant":false,"id":1274,"mutability":"mutable","name":"currentRuling","nameLocation":"8433:13:5","nodeType":"VariableDeclaration","scope":1586,"src":"8419:27:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":1273,"nodeType":"UserDefinedTypeName","pathNode":{"id":1272,"name":"RulingOptions","nameLocations":["8419:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"8419:13:5"},"referencedDeclaration":295,"src":"8419:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"id":1281,"initialValue":{"arguments":[{"arguments":[{"id":1278,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"8488:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1276,"name":"ARBITRATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"8463:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8474:13:5","memberName":"currentRuling","nodeType":"MemberAccess","referencedDeclaration":248,"src":"8463:24:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8463:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1275,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"8449:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8449:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"nodeType":"VariableDeclarationStatement","src":"8419:81:5"},{"assignments":[1283],"declarations":[{"constant":false,"id":1283,"mutability":"mutable","name":"basicCost","nameLocation":"8518:9:5","nodeType":"VariableDeclaration","scope":1586,"src":"8510:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"8510:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1284,"nodeType":"VariableDeclarationStatement","src":"8510:17:5"},{"assignments":[1286],"declarations":[{"constant":false,"id":1286,"mutability":"mutable","name":"totalCost","nameLocation":"8545:9:5","nodeType":"VariableDeclaration","scope":1586,"src":"8537:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"8537:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1287,"nodeType":"VariableDeclarationStatement","src":"8537:17:5"},{"id":1366,"nodeType":"Block","src":"8564:1032:5","statements":[{"assignments":[1289,1291],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"appealWindowStart","nameLocation":"8587:17:5","nodeType":"VariableDeclaration","scope":1366,"src":"8579:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"appealWindowEnd","nameLocation":"8614:15:5","nodeType":"VariableDeclaration","scope":1366,"src":"8606:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"8606:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1296,"initialValue":{"arguments":[{"id":1294,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"8657:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1292,"name":"ARBITRATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"8633:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8644:12:5","memberName":"appealPeriod","nodeType":"MemberAccess","referencedDeclaration":231,"src":"8633:23:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view external returns (uint256,uint256)"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8633:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8578:90:5"},{"assignments":[1298],"declarations":[{"constant":false,"id":1298,"mutability":"mutable","name":"multiplier","nameLocation":"8691:10:5","nodeType":"VariableDeclaration","scope":1366,"src":"8683:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"8683:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1299,"nodeType":"VariableDeclarationStatement","src":"8683:18:5"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1300,"name":"_supportedRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"8720:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1301,"name":"currentRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"8740:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"src":"8720:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1340,"nodeType":"Block","src":"8941:438:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1317,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8988:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8994:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"8988:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1319,"name":"appealWindowStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"9031:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1320,"name":"appealWindowEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"9082:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1321,"name":"appealWindowStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"9100:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9082:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9081:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1324,"name":"LOSER_APPEAL_PERIOD_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"9121:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9081:70:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9080:72:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1327,"name":"MULTIPLIER_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"9187:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9080:129:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9079:131:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9031:179:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9030:181:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8988:223:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e64696e67206d757374206265206d6164652077697468696e207468652066697273742068616c662061707065616c20706572696f642e","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9233:59:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3418d70ac679d1f67a83336adc36c46a5610f9d2455f76fc28495336bbc06ed","typeString":"literal_string \"Funding must be made within the first half appeal period.\""},"value":"Funding must be made within the first half appeal period."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3418d70ac679d1f67a83336adc36c46a5610f9d2455f76fc28495336bbc06ed","typeString":"literal_string \"Funding must be made within the first half appeal period.\""}],"id":1316,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8959:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8959:351:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1335,"nodeType":"ExpressionStatement","src":"8959:351:5"},{"expression":{"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1336,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"9329:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1337,"name":"LOSER_STAKE_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"9342:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9329:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1339,"nodeType":"ExpressionStatement","src":"9329:35:5"}]},"id":1341,"nodeType":"IfStatement","src":"8716:663:5","trueBody":{"id":1315,"nodeType":"Block","src":"8755:180:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1304,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8781:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8787:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"8781:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1306,"name":"appealWindowEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"8799:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8781:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e64696e67206d757374206265206d6164652077697468696e207468652061707065616c20706572696f642e","id":1308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8816:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0345b6b07b3f7ea23ce7c0682ae193a7b3933d232b736d656630025e0007450f","typeString":"literal_string \"Funding must be made within the appeal period.\""},"value":"Funding must be made within the appeal period."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0345b6b07b3f7ea23ce7c0682ae193a7b3933d232b736d656630025e0007450f","typeString":"literal_string \"Funding must be made within the appeal period.\""}],"id":1303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8773:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8773:92:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1310,"nodeType":"ExpressionStatement","src":"8773:92:5"},{"expression":{"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1311,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"8884:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1312,"name":"WINNER_STAKE_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"8897:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8884:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1314,"nodeType":"ExpressionStatement","src":"8884:36:5"}]}},{"expression":{"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1342,"name":"basicCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"9393:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1345,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"9427:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1346,"name":"categoryToArbitratorExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"9439:29:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$64_storage","typeString":"bytes storage ref[64] storage ref"}},"id":1349,"indexExpression":{"expression":{"id":1347,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"9469:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":1348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9477:15:5","memberName":"articleCategory","nodeType":"MemberAccess","referencedDeclaration":738,"src":"9469:23:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9439:54:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"expression":{"id":1343,"name":"ARBITRATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"9405:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9416:10:5","memberName":"appealCost","nodeType":"MemberAccess","referencedDeclaration":221,"src":"9405:21:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,bytes memory) view external returns (uint256)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9405:89:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9393:101:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1352,"nodeType":"ExpressionStatement","src":"9393:101:5"},{"expression":{"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1353,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"9508:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1354,"name":"basicCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"9520:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1355,"name":"basicCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"9534:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"id":1356,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"9547:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9546:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9534:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9533:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1360,"name":"MULTIPLIER_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"9562:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9533:51:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1362,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9532:53:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9520:65:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9508:77:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1365,"nodeType":"ExpressionStatement","src":"9508:77:5"}]},{"assignments":[1369],"declarations":[{"constant":false,"id":1369,"mutability":"mutable","name":"supportedRulingOutcome","nameLocation":"9620:22:5","nodeType":"VariableDeclaration","scope":1586,"src":"9606:36:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":1368,"nodeType":"UserDefinedTypeName","pathNode":{"id":1367,"name":"RulingOptions","nameLocations":["9606:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"9606:13:5"},"referencedDeclaration":295,"src":"9606:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"id":1373,"initialValue":{"arguments":[{"id":1371,"name":"_supportedRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"9659:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1370,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"9645:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9645:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"nodeType":"VariableDeclarationStatement","src":"9606:70:5"},{"assignments":[1375],"declarations":[{"constant":false,"id":1375,"mutability":"mutable","name":"lastRoundIndex","nameLocation":"9695:14:5","nodeType":"VariableDeclaration","scope":1586,"src":"9687:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"9687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1381,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1376,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"9712:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":1377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9720:6:5","memberName":"rounds","nodeType":"MemberAccess","referencedDeclaration":746,"src":"9712:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$770_storage_$dyn_storage","typeString":"struct TruthPost.Round storage ref[] storage ref"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9727:6:5","memberName":"length","nodeType":"MemberAccess","src":"9712:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9736:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9712:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9687:50:5"},{"assignments":[1384],"declarations":[{"constant":false,"id":1384,"mutability":"mutable","name":"lastRound","nameLocation":"9761:9:5","nodeType":"VariableDeclaration","scope":1586,"src":"9747:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round"},"typeName":{"id":1383,"nodeType":"UserDefinedTypeName","pathNode":{"id":1382,"name":"Round","nameLocations":["9747:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":770,"src":"9747:5:5"},"referencedDeclaration":770,"src":"9747:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round"}},"visibility":"internal"}],"id":1389,"initialValue":{"baseExpression":{"expression":{"id":1385,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"9773:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":1386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9781:6:5","memberName":"rounds","nodeType":"MemberAccess","referencedDeclaration":746,"src":"9773:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$770_storage_$dyn_storage","typeString":"struct TruthPost.Round storage ref[] storage ref"}},"id":1388,"indexExpression":{"id":1387,"name":"lastRoundIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"9788:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9773:30:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage","typeString":"struct TruthPost.Round storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9747:56:5"},{"expression":{"arguments":[{"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9821:51:5","subExpression":{"baseExpression":{"expression":{"id":1391,"name":"lastRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"9822:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":1392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9832:7:5","memberName":"hasPaid","nodeType":"MemberAccess","referencedDeclaration":761,"src":"9822:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_storage","typeString":"bool[3] storage ref"}},"id":1397,"indexExpression":{"arguments":[{"id":1395,"name":"supportedRulingOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"9848:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9840:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:5","typeDescriptions":{}}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9840:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9822:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41707065616c206665652068617320616c7265616479206265656e20706169642e","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9874:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c2f2256a77e1cd7cdc564a3b966df4f3e5bfbdc15f00156637ffbff138e529be","typeString":"literal_string \"Appeal fee has already been paid.\""},"value":"Appeal fee has already been paid."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c2f2256a77e1cd7cdc564a3b966df4f3e5bfbdc15f00156637ffbff138e529be","typeString":"literal_string \"Appeal fee has already been paid.\""}],"id":1390,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9813:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9813:97:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1401,"nodeType":"ExpressionStatement","src":"9813:97:5"},{"assignments":[1403],"declarations":[{"constant":false,"id":1403,"mutability":"mutable","name":"contribution","nameLocation":"9929:12:5","nodeType":"VariableDeclaration","scope":1586,"src":"9921:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"9921:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1404,"nodeType":"VariableDeclarationStatement","src":"9921:20:5"},{"id":1440,"nodeType":"Block","src":"9951:409:5","statements":[{"assignments":[1406],"declarations":[{"constant":false,"id":1406,"mutability":"mutable","name":"paidSoFar","nameLocation":"9973:9:5","nodeType":"VariableDeclaration","scope":1440,"src":"9965:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"9965:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1414,"initialValue":{"baseExpression":{"expression":{"id":1407,"name":"lastRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"9985:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":1408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9995:14:5","memberName":"totalPerRuling","nodeType":"MemberAccess","referencedDeclaration":767,"src":"9985:24:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":1413,"indexExpression":{"arguments":[{"id":1411,"name":"supportedRulingOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"10018:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10010:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"10010:7:5","typeDescriptions":{}}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10010:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9985:57:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9965:77:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1415,"name":"paidSoFar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10061:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1416,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"10074:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10061:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1438,"nodeType":"Block","src":"10233:117:5","statements":[{"expression":{"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1423,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10251:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1424,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"10266:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1425,"name":"paidSoFar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10278:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10266:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1427,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10290:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10294:5:5","memberName":"value","nodeType":"MemberAccess","src":"10290:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10266:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1432,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"10314:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1433,"name":"paidSoFar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10326:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10314:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10266:69:5","trueExpression":{"expression":{"id":1430,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10302:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10306:5:5","memberName":"value","nodeType":"MemberAccess","src":"10302:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10251:84:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1437,"nodeType":"ExpressionStatement","src":"10251:84:5"}]},"id":1439,"nodeType":"IfStatement","src":"10057:293:5","trueBody":{"id":1422,"nodeType":"Block","src":"10085:142:5","statements":[{"expression":{"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1418,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10103:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10103:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1421,"nodeType":"ExpressionStatement","src":"10103:16:5"}]}}]},{"eventCall":{"arguments":[{"id":1442,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"10388:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1443,"name":"lastRoundIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"10400:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1444,"name":"_supportedRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"10416:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},{"expression":{"id":1445,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10434:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10438:6:5","memberName":"sender","nodeType":"MemberAccess","src":"10434:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1447,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10446:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1441,"name":"Contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"10375:12:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_enum$_RulingOptions_$295_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,enum ITruthPost.RulingOptions,address,uint256)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:84:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1449,"nodeType":"EmitStatement","src":"10370:89:5"},{"expression":{"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1450,"name":"lastRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"10470:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":1458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10480:13:5","memberName":"contributions","nodeType":"MemberAccess","referencedDeclaration":755,"src":"10470:23:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$3_storage_$","typeString":"mapping(address => uint256[3] storage ref)"}},"id":1459,"indexExpression":{"expression":{"id":1452,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10494:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10498:6:5","memberName":"sender","nodeType":"MemberAccess","src":"10494:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10470:35:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":1460,"indexExpression":{"arguments":[{"id":1456,"name":"supportedRulingOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"10514:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10506:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"10506:7:5","typeDescriptions":{}}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10506:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10470:68:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1461,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10542:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10470:84:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1463,"nodeType":"ExpressionStatement","src":"10470:84:5"},{"expression":{"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1464,"name":"lastRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"10564:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":1470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10574:14:5","memberName":"totalPerRuling","nodeType":"MemberAccess","referencedDeclaration":767,"src":"10564:24:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":1471,"indexExpression":{"arguments":[{"id":1468,"name":"supportedRulingOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"10597:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10589:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1466,"name":"uint256","nodeType":"ElementaryTypeName","src":"10589:7:5","typeDescriptions":{}}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10589:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10564:57:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1472,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10625:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10564:73:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1474,"nodeType":"ExpressionStatement","src":"10564:73:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1475,"name":"lastRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"10652:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":1476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10662:14:5","memberName":"totalPerRuling","nodeType":"MemberAccess","referencedDeclaration":767,"src":"10652:24:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":1481,"indexExpression":{"arguments":[{"id":1479,"name":"supportedRulingOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"10685:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10677:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"10677:7:5","typeDescriptions":{}}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10677:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10652:57:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1482,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"10713:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10652:70:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1514,"nodeType":"IfStatement","src":"10648:347:5","trueBody":{"id":1513,"nodeType":"Block","src":"10724:271:5","statements":[{"expression":{"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1484,"name":"lastRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"10738:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":1486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10748:27:5","memberName":"totalClaimableAfterExpenses","nodeType":"MemberAccess","referencedDeclaration":769,"src":"10738:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"expression":{"id":1487,"name":"lastRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"10779:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":1488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10789:14:5","memberName":"totalPerRuling","nodeType":"MemberAccess","referencedDeclaration":767,"src":"10779:24:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":1493,"indexExpression":{"arguments":[{"id":1491,"name":"supportedRulingOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"10812:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10804:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"10804:7:5","typeDescriptions":{}}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10804:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10779:57:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10738:98:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1495,"nodeType":"ExpressionStatement","src":"10738:98:5"},{"expression":{"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1496,"name":"lastRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"10850:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":1502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10860:7:5","memberName":"hasPaid","nodeType":"MemberAccess","referencedDeclaration":761,"src":"10850:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_storage","typeString":"bool[3] storage ref"}},"id":1503,"indexExpression":{"arguments":[{"id":1500,"name":"supportedRulingOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"10876:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10868:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"10868:7:5","typeDescriptions":{}}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10868:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10850:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10903:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10850:57:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1506,"nodeType":"ExpressionStatement","src":"10850:57:5"},{"eventCall":{"arguments":[{"id":1508,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"10939:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1509,"name":"lastRoundIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"10951:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1510,"name":"_supportedRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"10967:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1507,"name":"RulingFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"10926:12:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_enum$_RulingOptions_$295_$returns$__$","typeString":"function (uint256,uint256,enum ITruthPost.RulingOptions)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10926:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1512,"nodeType":"EmitStatement","src":"10921:63:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1515,"name":"lastRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"11022:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":1516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11032:7:5","memberName":"hasPaid","nodeType":"MemberAccess","referencedDeclaration":761,"src":"11022:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_storage","typeString":"bool[3] storage ref"}},"id":1522,"indexExpression":{"arguments":[{"expression":{"id":1519,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"11048:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11062:15:5","memberName":"ChallengeFailed","nodeType":"MemberAccess","referencedDeclaration":293,"src":"11048:29:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11040:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"11040:7:5","typeDescriptions":{}}},"id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11040:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11022:57:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"baseExpression":{"expression":{"id":1523,"name":"lastRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"11095:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":1524,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11105:7:5","memberName":"hasPaid","nodeType":"MemberAccess","referencedDeclaration":761,"src":"11095:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_storage","typeString":"bool[3] storage ref"}},"id":1530,"indexExpression":{"arguments":[{"expression":{"id":1527,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"11121:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11135:8:5","memberName":"Debunked","nodeType":"MemberAccess","referencedDeclaration":294,"src":"11121:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11113:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1525,"name":"uint256","nodeType":"ElementaryTypeName","src":"11113:7:5","typeDescriptions":{}}},"id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11113:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11095:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11022:123:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1558,"nodeType":"IfStatement","src":"11005:378:5","trueBody":{"id":1557,"nodeType":"Block","src":"11156:227:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1532,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"11170:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":1535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11178:6:5","memberName":"rounds","nodeType":"MemberAccess","referencedDeclaration":746,"src":"11170:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$770_storage_$dyn_storage","typeString":"struct TruthPost.Round storage ref[] storage ref"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11185:4:5","memberName":"push","nodeType":"MemberAccess","src":"11170:19:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Round_$770_storage_$dyn_storage_ptr_$returns$_t_struct$_Round_$770_storage_$attached_to$_t_array$_t_struct$_Round_$770_storage_$dyn_storage_ptr_$","typeString":"function (struct TruthPost.Round storage ref[] storage pointer) returns (struct TruthPost.Round storage ref)"}},"id":1537,"isConstant":false,"isLValue":true,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11170:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage","typeString":"struct TruthPost.Round storage ref"}},"id":1538,"nodeType":"ExpressionStatement","src":"11170:21:5"},{"expression":{"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1539,"name":"lastRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"11205:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":1541,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11215:27:5","memberName":"totalClaimableAfterExpenses","nodeType":"MemberAccess","referencedDeclaration":769,"src":"11205:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1542,"name":"basicCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"11246:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11205:50:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1544,"nodeType":"ExpressionStatement","src":"11205:50:5"},{"expression":{"arguments":[{"id":1550,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"11305:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1551,"name":"categoryToArbitratorExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"11317:29:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$64_storage","typeString":"bytes storage ref[64] storage ref"}},"id":1554,"indexExpression":{"expression":{"id":1552,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"11347:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":1553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11355:15:5","memberName":"articleCategory","nodeType":"MemberAccess","referencedDeclaration":738,"src":"11347:23:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11317:54:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"expression":{"id":1545,"name":"ARBITRATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"11269:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11280:6:5","memberName":"appeal","nodeType":"MemberAccess","referencedDeclaration":211,"src":"11269:17:5","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,bytes memory) payable external"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1548,"name":"basicCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"11294:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11269:35:5","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$value","typeString":"function (uint256,bytes memory) payable external"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11269:103:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1556,"nodeType":"ExpressionStatement","src":"11269:103:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1559,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11449:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11453:5:5","memberName":"value","nodeType":"MemberAccess","src":"11449:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1561,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"11461:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11449:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11449:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1577,"nodeType":"IfStatement","src":"11445:84:5","trueBody":{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1571,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11504:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11508:5:5","memberName":"value","nodeType":"MemberAccess","src":"11504:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1573,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"11516:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11504:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1567,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11487:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11491:6:5","memberName":"sender","nodeType":"MemberAccess","src":"11487:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1565,"name":"address","nodeType":"ElementaryTypeName","src":"11479:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11499:4:5","memberName":"send","nodeType":"MemberAccess","src":"11479:24:5","typeDescriptions":{"typeIdentifier":"t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) returns (bool)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1576,"nodeType":"ExpressionStatement","src":"11479:50:5"}},{"expression":{"baseExpression":{"expression":{"id":1578,"name":"lastRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"11547:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":1579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11557:7:5","memberName":"hasPaid","nodeType":"MemberAccess","referencedDeclaration":761,"src":"11547:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_storage","typeString":"bool[3] storage ref"}},"id":1584,"indexExpression":{"arguments":[{"id":1582,"name":"supportedRulingOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"11573:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11565:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"11565:7:5","typeDescriptions":{}}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11565:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11547:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1264,"id":1585,"nodeType":"Return","src":"11540:57:5"}]},"documentation":{"id":1254,"nodeType":"StructuredDocumentation","src":"8156:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"12b3a2c0","id":1587,"implemented":true,"kind":"function","modifiers":[],"name":"fundAppeal","nameLocation":"8196:10:5","nodeType":"FunctionDefinition","overrides":{"id":1261,"nodeType":"OverrideSpecifier","overrides":[],"src":"8300:8:5"},"parameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"_disputeID","nameLocation":"8215:10:5","nodeType":"VariableDeclaration","scope":1587,"src":"8207:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"8207:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"_supportedRuling","nameLocation":"8241:16:5","nodeType":"VariableDeclaration","scope":1587,"src":"8227:30:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":1258,"nodeType":"UserDefinedTypeName","pathNode":{"id":1257,"name":"RulingOptions","nameLocations":["8227:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"8227:13:5"},"referencedDeclaration":295,"src":"8227:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"src":"8206:52:5"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"fullyFunded","nameLocation":"8331:11:5","nodeType":"VariableDeclaration","scope":1587,"src":"8326:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1262,"name":"bool","nodeType":"ElementaryTypeName","src":"8326:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8325:18:5"},"scope":2850,"src":"8187:3417:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[152],"body":{"id":1744,"nodeType":"Block","src":"11866:1569:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1598,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11896:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11900:6:5","memberName":"sender","nodeType":"MemberAccess","src":"11896:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1597,"name":"IArbitrator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"11884:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IArbitrator_$249_$","typeString":"type(contract IArbitrator)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11884:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1601,"name":"ARBITRATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"11911:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"src":"11884:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1596,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11876:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11876:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1604,"nodeType":"ExpressionStatement","src":"11876:46:5"},{"assignments":[1607],"declarations":[{"constant":false,"id":1607,"mutability":"mutable","name":"dispute","nameLocation":"11953:7:5","nodeType":"VariableDeclaration","scope":1744,"src":"11933:27:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"},"typeName":{"id":1606,"nodeType":"UserDefinedTypeName","pathNode":{"id":1605,"name":"DisputeData","nameLocations":["11933:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":747,"src":"11933:11:5"},"referencedDeclaration":747,"src":"11933:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"}},"visibility":"internal"}],"id":1611,"initialValue":{"baseExpression":{"id":1608,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"11963:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$","typeString":"mapping(uint256 => struct TruthPost.DisputeData storage ref)"}},"id":1610,"indexExpression":{"id":1609,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"11972:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11963:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage","typeString":"struct TruthPost.DisputeData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11933:50:5"},{"assignments":[1614],"declarations":[{"constant":false,"id":1614,"mutability":"mutable","name":"lastRound","nameLocation":"12007:9:5","nodeType":"VariableDeclaration","scope":1744,"src":"11993:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round"},"typeName":{"id":1613,"nodeType":"UserDefinedTypeName","pathNode":{"id":1612,"name":"Round","nameLocations":["11993:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":770,"src":"11993:5:5"},"referencedDeclaration":770,"src":"11993:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round"}},"visibility":"internal"}],"id":1623,"initialValue":{"baseExpression":{"expression":{"id":1615,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"12019:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":1616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12027:6:5","memberName":"rounds","nodeType":"MemberAccess","referencedDeclaration":746,"src":"12019:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$770_storage_$dyn_storage","typeString":"struct TruthPost.Round storage ref[] storage ref"}},"id":1622,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1617,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"12034:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":1618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12042:6:5","memberName":"rounds","nodeType":"MemberAccess","referencedDeclaration":746,"src":"12034:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$770_storage_$dyn_storage","typeString":"struct TruthPost.Round storage ref[] storage ref"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12049:6:5","memberName":"length","nodeType":"MemberAccess","src":"12034:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12058:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12034:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12019:41:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage","typeString":"struct TruthPost.Round storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11993:67:5"},{"assignments":[1626],"declarations":[{"constant":false,"id":1626,"mutability":"mutable","name":"wonByDefault","nameLocation":"12252:12:5","nodeType":"VariableDeclaration","scope":1744,"src":"12238:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":1625,"nodeType":"UserDefinedTypeName","pathNode":{"id":1624,"name":"RulingOptions","nameLocations":["12238:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"12238:13:5"},"referencedDeclaration":295,"src":"12238:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"id":1627,"nodeType":"VariableDeclarationStatement","src":"12238:26:5"},{"condition":{"baseExpression":{"expression":{"id":1628,"name":"lastRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"12278:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":1629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12288:7:5","memberName":"hasPaid","nodeType":"MemberAccess","referencedDeclaration":761,"src":"12278:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_storage","typeString":"bool[3] storage ref"}},"id":1635,"indexExpression":{"arguments":[{"expression":{"id":1632,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"12304:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12318:15:5","memberName":"ChallengeFailed","nodeType":"MemberAccess","referencedDeclaration":293,"src":"12304:29:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12296:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"12296:7:5","typeDescriptions":{}}},"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12296:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12278:57:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"baseExpression":{"expression":{"id":1642,"name":"lastRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"12416:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":1643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12426:7:5","memberName":"hasPaid","nodeType":"MemberAccess","referencedDeclaration":761,"src":"12416:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_storage","typeString":"bool[3] storage ref"}},"id":1649,"indexExpression":{"arguments":[{"expression":{"id":1646,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"12442:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12456:15:5","memberName":"ChallengeFailed","nodeType":"MemberAccess","referencedDeclaration":293,"src":"12442:29:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12434:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"12434:7:5","typeDescriptions":{}}},"id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12434:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12416:57:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1656,"nodeType":"IfStatement","src":"12412:125:5","trueBody":{"id":1655,"nodeType":"Block","src":"12475:62:5","statements":[{"expression":{"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1650,"name":"wonByDefault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"12489:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1651,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"12504:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12518:8:5","memberName":"Debunked","nodeType":"MemberAccess","referencedDeclaration":294,"src":"12504:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"src":"12489:37:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"id":1654,"nodeType":"ExpressionStatement","src":"12489:37:5"}]}},"id":1657,"nodeType":"IfStatement","src":"12274:263:5","trueBody":{"id":1641,"nodeType":"Block","src":"12337:69:5","statements":[{"expression":{"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1636,"name":"wonByDefault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"12351:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1637,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"12366:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12380:15:5","memberName":"ChallengeFailed","nodeType":"MemberAccess","referencedDeclaration":293,"src":"12366:29:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"src":"12351:44:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"id":1640,"nodeType":"ExpressionStatement","src":"12351:44:5"}]}},{"assignments":[1660],"declarations":[{"constant":false,"id":1660,"mutability":"mutable","name":"actualRuling","nameLocation":"12561:12:5","nodeType":"VariableDeclaration","scope":1744,"src":"12547:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":1659,"nodeType":"UserDefinedTypeName","pathNode":{"id":1658,"name":"RulingOptions","nameLocations":["12547:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"12547:13:5"},"referencedDeclaration":295,"src":"12547:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"id":1670,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1661,"name":"wonByDefault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"12576:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1662,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"12592:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12606:4:5","memberName":"Tied","nodeType":"MemberAccess","referencedDeclaration":292,"src":"12592:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"src":"12576:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1667,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"12642:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1666,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"12628:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12628:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12576:74:5","trueExpression":{"id":1665,"name":"wonByDefault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"12613:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"nodeType":"VariableDeclarationStatement","src":"12547:103:5"},{"expression":{"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1671,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"12660:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":1673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12668:7:5","memberName":"outcome","nodeType":"MemberAccess","referencedDeclaration":736,"src":"12660:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1674,"name":"actualRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"12678:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"src":"12660:30:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"id":1676,"nodeType":"ExpressionStatement","src":"12660:30:5"},{"assignments":[1678],"declarations":[{"constant":false,"id":1678,"mutability":"mutable","name":"articleStorageAddress","nameLocation":"12708:21:5","nodeType":"VariableDeclaration","scope":1744,"src":"12701:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":1677,"name":"uint72","nodeType":"ElementaryTypeName","src":"12701:6:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"id":1681,"initialValue":{"expression":{"id":1679,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"12732:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":1680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12740:21:5","memberName":"articleStorageAddress","nodeType":"MemberAccess","referencedDeclaration":742,"src":"12732:29:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"nodeType":"VariableDeclarationStatement","src":"12701:60:5"},{"assignments":[1684],"declarations":[{"constant":false,"id":1684,"mutability":"mutable","name":"article","nameLocation":"12788:7:5","nodeType":"VariableDeclaration","scope":1744,"src":"12772:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"},"typeName":{"id":1683,"nodeType":"UserDefinedTypeName","pathNode":{"id":1682,"name":"Article","nameLocations":["12772:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":779,"src":"12772:7:5"},"referencedDeclaration":779,"src":"12772:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"}},"visibility":"internal"}],"id":1688,"initialValue":{"baseExpression":{"id":1685,"name":"articleStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"12798:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint72_$_t_struct$_Article_$779_storage_$","typeString":"mapping(uint72 => struct TruthPost.Article storage ref)"}},"id":1687,"indexExpression":{"id":1686,"name":"articleStorageAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"12813:21:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12798:37:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage","typeString":"struct TruthPost.Article storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12772:63:5"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1689,"name":"actualRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"12850:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1690,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"12866:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12880:8:5","memberName":"Debunked","nodeType":"MemberAccess","referencedDeclaration":294,"src":"12866:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"src":"12850:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1722,"nodeType":"IfStatement","src":"12846:363:5","trueBody":{"id":1721,"nodeType":"Block","src":"12890:319:5","statements":[{"assignments":[1694],"declarations":[{"constant":false,"id":1694,"mutability":"mutable","name":"bounty","nameLocation":"12912:6:5","nodeType":"VariableDeclaration","scope":1721,"src":"12904:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"12904:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1702,"initialValue":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1697,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"12928:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12936:12:5","memberName":"bountyAmount","nodeType":"MemberAccess","referencedDeclaration":776,"src":"12928:20:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint56","typeString":"uint56"}],"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12921:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1695,"name":"uint96","nodeType":"ElementaryTypeName","src":"12921:6:5","typeDescriptions":{}}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1700,"name":"NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"12953:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12921:74:5","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"12904:91:5"},{"expression":{"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1703,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"13009:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13017:12:5","memberName":"bountyAmount","nodeType":"MemberAccess","referencedDeclaration":776,"src":"13009:20:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13032:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13009:24:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"id":1708,"nodeType":"ExpressionStatement","src":"13009:24:5"},{"eventCall":{"arguments":[{"id":1710,"name":"articleStorageAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"13062:21:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint72","typeString":"uint72"}],"id":1709,"name":"Debunked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"13053:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1712,"nodeType":"EmitStatement","src":"13048:36:5"},{"expression":{"arguments":[{"id":1718,"name":"bounty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"13135:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"baseExpression":{"id":1713,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"13098:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$","typeString":"mapping(uint256 => struct TruthPost.DisputeData storage ref)"}},"id":1715,"indexExpression":{"id":1714,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"13107:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13098:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage","typeString":"struct TruthPost.DisputeData storage ref"}},"id":1716,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13119:10:5","memberName":"challenger","nodeType":"MemberAccess","referencedDeclaration":733,"src":"13098:31:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13130:4:5","memberName":"send","nodeType":"MemberAccess","src":"13098:36:5","typeDescriptions":{"typeIdentifier":"t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) returns (bool)"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13098:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1720,"nodeType":"ExpressionStatement","src":"13098:44:5"}]}},{"expression":{"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1723,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"13261:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":1725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13269:21:5","memberName":"withdrawalPermittedAt","nodeType":"MemberAccess","referencedDeclaration":774,"src":"13261:29:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13293:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13261:33:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1728,"nodeType":"ExpressionStatement","src":"13261:33:5"},{"expression":{"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1729,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"13337:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":1731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13345:8:5","memberName":"resolved","nodeType":"MemberAccess","referencedDeclaration":740,"src":"13337:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13356:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13337:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1734,"nodeType":"ExpressionStatement","src":"13337:23:5"},{"eventCall":{"arguments":[{"arguments":[{"expression":{"id":1737,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13395:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13399:6:5","memberName":"sender","nodeType":"MemberAccess","src":"13395:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1736,"name":"IArbitrator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"13383:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IArbitrator_$249_$","typeString":"type(contract IArbitrator)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13383:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},{"id":1740,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"13408:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1741,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"13420:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1735,"name":"Ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"13376:6:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IArbitrator_$249_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (contract IArbitrator,uint256,uint256)"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13376:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1743,"nodeType":"EmitStatement","src":"13371:57:5"}]},"documentation":{"id":1588,"nodeType":"StructuredDocumentation","src":"11610:182:5","text":"@notice Execute a ruling\n @dev This is only for arbitrator to use.\n @param _disputeID The dispute ID as in arbitrator.\n @param _ruling Winning ruling option."},"functionSelector":"311a6c56","id":1745,"implemented":true,"kind":"function","modifiers":[],"name":"rule","nameLocation":"11806:4:5","nodeType":"FunctionDefinition","overrides":{"id":1594,"nodeType":"OverrideSpecifier","overrides":[],"src":"11857:8:5"},"parameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"_disputeID","nameLocation":"11819:10:5","nodeType":"VariableDeclaration","scope":1745,"src":"11811:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1589,"name":"uint256","nodeType":"ElementaryTypeName","src":"11811:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1592,"mutability":"mutable","name":"_ruling","nameLocation":"11839:7:5","nodeType":"VariableDeclaration","scope":1745,"src":"11831:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"11831:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11810:37:5"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[],"src":"11866:0:5"},"scope":2850,"src":"11797:1638:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[608],"body":{"id":1799,"nodeType":"Block","src":"13617:419:5","statements":[{"assignments":[1756],"declarations":[{"constant":false,"id":1756,"mutability":"mutable","name":"dispute","nameLocation":"13647:7:5","nodeType":"VariableDeclaration","scope":1799,"src":"13627:27:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"},"typeName":{"id":1755,"nodeType":"UserDefinedTypeName","pathNode":{"id":1754,"name":"DisputeData","nameLocations":["13627:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":747,"src":"13627:11:5"},"referencedDeclaration":747,"src":"13627:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"}},"visibility":"internal"}],"id":1760,"initialValue":{"baseExpression":{"id":1757,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"13657:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$","typeString":"mapping(uint256 => struct TruthPost.DisputeData storage ref)"}},"id":1759,"indexExpression":{"id":1758,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"13666:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13657:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage","typeString":"struct TruthPost.DisputeData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13627:50:5"},{"assignments":[1762],"declarations":[{"constant":false,"id":1762,"mutability":"mutable","name":"noOfRounds","nameLocation":"13695:10:5","nodeType":"VariableDeclaration","scope":1799,"src":"13687:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"13687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1766,"initialValue":{"expression":{"expression":{"id":1763,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"13708:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":1764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13716:6:5","memberName":"rounds","nodeType":"MemberAccess","referencedDeclaration":746,"src":"13708:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$770_storage_$dyn_storage","typeString":"struct TruthPost.Round storage ref[] storage ref"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13723:6:5","memberName":"length","nodeType":"MemberAccess","src":"13708:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13687:42:5"},{"body":{"id":1797,"nodeType":"Block","src":"13810:220:5","statements":[{"body":{"expression":{"arguments":[{"id":1788,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"13952:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1789,"name":"_contributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"13964:12:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1790,"name":"roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"13978:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1792,"name":"rulingOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"14005:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1791,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"13991:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13991:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1787,"name":"withdrawFeesAndRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"13929:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_payable_$_t_uint256_$_t_enum$_RulingOptions_$295_$returns$_t_uint256_$","typeString":"function (uint256,address payable,uint256,enum ITruthPost.RulingOptions) returns (uint256)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13929:90:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1795,"nodeType":"ExpressionStatement","src":"13929:90:5"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1781,"name":"rulingOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"13855:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1782,"name":"NUMBER_OF_RULING_OPTIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"13871:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13855:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1796,"initializationExpression":{"assignments":[1778],"declarations":[{"constant":false,"id":1778,"mutability":"mutable","name":"rulingOption","nameLocation":"13837:12:5","nodeType":"VariableDeclaration","scope":1796,"src":"13829:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"13829:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1780,"initialValue":{"hexValue":"30","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13852:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13829:24:5"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13897:14:5","subExpression":{"id":1784,"name":"rulingOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"13897:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1786,"nodeType":"ExpressionStatement","src":"13897:14:5"},"nodeType":"ForStatement","src":"13824:195:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1771,"name":"roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"13769:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1772,"name":"noOfRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"13783:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13769:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1798,"initializationExpression":{"assignments":[1768],"declarations":[{"constant":false,"id":1768,"mutability":"mutable","name":"roundNumber","nameLocation":"13752:11:5","nodeType":"VariableDeclaration","scope":1798,"src":"13744:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"13744:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1770,"initialValue":{"hexValue":"30","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13766:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13744:23:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13795:13:5","subExpression":{"id":1774,"name":"roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"13795:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1776,"nodeType":"ExpressionStatement","src":"13795:13:5"},"nodeType":"ForStatement","src":"13739:291:5"}]},"documentation":{"id":1746,"nodeType":"StructuredDocumentation","src":"13441:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"c9330c0f","id":1800,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawFeesAndRewardsForAllRoundsAndAllRulings","nameLocation":"13481:47:5","nodeType":"FunctionDefinition","overrides":{"id":1752,"nodeType":"OverrideSpecifier","overrides":[],"src":"13604:8:5"},"parameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"_disputeID","nameLocation":"13537:10:5","nodeType":"VariableDeclaration","scope":1800,"src":"13529:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"13529:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"_contributor","nameLocation":"13565:12:5","nodeType":"VariableDeclaration","scope":1800,"src":"13549:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1749,"name":"address","nodeType":"ElementaryTypeName","src":"13549:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"13528:50:5"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"13617:0:5"},"scope":2850,"src":"13472:564:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[588],"body":{"id":1844,"nodeType":"Block","src":"14238:294:5","statements":[{"assignments":[1814],"declarations":[{"constant":false,"id":1814,"mutability":"mutable","name":"dispute","nameLocation":"14268:7:5","nodeType":"VariableDeclaration","scope":1844,"src":"14248:27:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"},"typeName":{"id":1813,"nodeType":"UserDefinedTypeName","pathNode":{"id":1812,"name":"DisputeData","nameLocations":["14248:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":747,"src":"14248:11:5"},"referencedDeclaration":747,"src":"14248:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"}},"visibility":"internal"}],"id":1818,"initialValue":{"baseExpression":{"id":1815,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"14278:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$","typeString":"mapping(uint256 => struct TruthPost.DisputeData storage ref)"}},"id":1817,"indexExpression":{"id":1816,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"14287:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14278:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage","typeString":"struct TruthPost.DisputeData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14248:50:5"},{"assignments":[1820],"declarations":[{"constant":false,"id":1820,"mutability":"mutable","name":"noOfRounds","nameLocation":"14316:10:5","nodeType":"VariableDeclaration","scope":1844,"src":"14308:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"14308:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1824,"initialValue":{"expression":{"expression":{"id":1821,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"14329:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":1822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14337:6:5","memberName":"rounds","nodeType":"MemberAccess","referencedDeclaration":746,"src":"14329:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$770_storage_$dyn_storage","typeString":"struct TruthPost.Round storage ref[] storage ref"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14344:6:5","memberName":"length","nodeType":"MemberAccess","src":"14329:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14308:42:5"},{"body":{"id":1842,"nodeType":"Block","src":"14431:95:5","statements":[{"expression":{"arguments":[{"id":1836,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"14468:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1837,"name":"_contributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"14480:12:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1838,"name":"roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"14494:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1839,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"14507:7:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1835,"name":"withdrawFeesAndRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"14445:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_payable_$_t_uint256_$_t_enum$_RulingOptions_$295_$returns$_t_uint256_$","typeString":"function (uint256,address payable,uint256,enum ITruthPost.RulingOptions) returns (uint256)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14445:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1841,"nodeType":"ExpressionStatement","src":"14445:70:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1829,"name":"roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"14390:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1830,"name":"noOfRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"14404:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14390:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1843,"initializationExpression":{"assignments":[1826],"declarations":[{"constant":false,"id":1826,"mutability":"mutable","name":"roundNumber","nameLocation":"14373:11:5","nodeType":"VariableDeclaration","scope":1843,"src":"14365:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"14365:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1828,"initialValue":{"hexValue":"30","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14387:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14365:23:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14416:13:5","subExpression":{"id":1832,"name":"roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"14416:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1834,"nodeType":"ExpressionStatement","src":"14416:13:5"},"nodeType":"ForStatement","src":"14360:166:5"}]},"documentation":{"id":1801,"nodeType":"StructuredDocumentation","src":"14042:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"6760aeb0","id":1845,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawFeesAndRewardsForAllRounds","nameLocation":"14082:34:5","nodeType":"FunctionDefinition","overrides":{"id":1810,"nodeType":"OverrideSpecifier","overrides":[],"src":"14229:8:5"},"parameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"_disputeID","nameLocation":"14134:10:5","nodeType":"VariableDeclaration","scope":1845,"src":"14126:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1802,"name":"uint256","nodeType":"ElementaryTypeName","src":"14126:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1805,"mutability":"mutable","name":"_contributor","nameLocation":"14170:12:5","nodeType":"VariableDeclaration","scope":1845,"src":"14154:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1804,"name":"address","nodeType":"ElementaryTypeName","src":"14154:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"_ruling","nameLocation":"14206:7:5","nodeType":"VariableDeclaration","scope":1845,"src":"14192:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":1807,"nodeType":"UserDefinedTypeName","pathNode":{"id":1806,"name":"RulingOptions","nameLocations":["14192:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"14192:13:5"},"referencedDeclaration":295,"src":"14192:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"src":"14116:103:5"},"returnParameters":{"id":1811,"nodeType":"ParameterList","parameters":[],"src":"14238:0:5"},"scope":2850,"src":"14073:459:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[600],"body":{"id":1904,"nodeType":"Block","src":"14748:419:5","statements":[{"body":{"id":1902,"nodeType":"Block","src":"14835:326:5","statements":[{"body":{"id":1900,"nodeType":"Block","src":"14942:209:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":1882,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"14964:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"uint256[] calldata[] calldata"}},"id":1884,"indexExpression":{"id":1883,"name":"roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"14974:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14964:22:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1886,"indexExpression":{"id":1885,"name":"rulingOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"14987:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14964:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15003:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14964:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1899,"nodeType":"IfStatement","src":"14960:177:5","trueBody":{"id":1898,"nodeType":"Block","src":"15006:131:5","statements":[{"expression":{"arguments":[{"id":1890,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"15051:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1891,"name":"_contributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"15063:12:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1892,"name":"roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"15077:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1894,"name":"rulingOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"15104:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1893,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"15090:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15090:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1889,"name":"withdrawFeesAndRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"15028:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_payable_$_t_uint256_$_t_enum$_RulingOptions_$295_$returns$_t_uint256_$","typeString":"function (uint256,address payable,uint256,enum ITruthPost.RulingOptions) returns (uint256)"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15028:90:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1897,"nodeType":"ExpressionStatement","src":"15028:90:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1873,"name":"rulingOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"14880:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":1874,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"14895:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"uint256[] calldata[] calldata"}},"id":1876,"indexExpression":{"id":1875,"name":"roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"14905:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14895:22:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14918:6:5","memberName":"length","nodeType":"MemberAccess","src":"14895:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14880:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1901,"initializationExpression":{"assignments":[1870],"declarations":[{"constant":false,"id":1870,"mutability":"mutable","name":"rulingOption","nameLocation":"14862:12:5","nodeType":"VariableDeclaration","scope":1901,"src":"14854:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"14854:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1872,"initialValue":{"hexValue":"30","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14877:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14854:24:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14926:14:5","subExpression":{"id":1879,"name":"rulingOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"14926:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1881,"nodeType":"ExpressionStatement","src":"14926:14:5"},"nodeType":"ForStatement","src":"14849:302:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1862,"name":"roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"14788:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1863,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"14802:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"uint256[] calldata[] calldata"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14812:6:5","memberName":"length","nodeType":"MemberAccess","src":"14802:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14788:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1903,"initializationExpression":{"assignments":[1859],"declarations":[{"constant":false,"id":1859,"mutability":"mutable","name":"roundNumber","nameLocation":"14771:11:5","nodeType":"VariableDeclaration","scope":1903,"src":"14763:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"14763:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1861,"initialValue":{"hexValue":"30","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14785:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14763:23:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14820:13:5","subExpression":{"id":1866,"name":"roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"14820:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1868,"nodeType":"ExpressionStatement","src":"14820:13:5"},"nodeType":"ForStatement","src":"14758:403:5"}]},"documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"14538:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"67284f21","id":1905,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawFeesAndRewardsForGivenPositions","nameLocation":"14578:39:5","nodeType":"FunctionDefinition","overrides":{"id":1856,"nodeType":"OverrideSpecifier","overrides":[],"src":"14739:8:5"},"parameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"_disputeID","nameLocation":"14635:10:5","nodeType":"VariableDeclaration","scope":1905,"src":"14627:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"14627:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"_contributor","nameLocation":"14671:12:5","nodeType":"VariableDeclaration","scope":1905,"src":"14655:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"14655:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"positions","nameLocation":"14714:9:5","nodeType":"VariableDeclaration","scope":1905,"src":"14693:30:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"14693:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1852,"nodeType":"ArrayTypeName","src":"14693:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":1853,"nodeType":"ArrayTypeName","src":"14693:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"}],"src":"14617:112:5"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[],"src":"14748:0:5"},"scope":2850,"src":"14569:598:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[577],"body":{"id":1986,"nodeType":"Block","src":"15410:581:5","statements":[{"assignments":[1923],"declarations":[{"constant":false,"id":1923,"mutability":"mutable","name":"dispute","nameLocation":"15440:7:5","nodeType":"VariableDeclaration","scope":1986,"src":"15420:27:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"},"typeName":{"id":1922,"nodeType":"UserDefinedTypeName","pathNode":{"id":1921,"name":"DisputeData","nameLocations":["15420:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":747,"src":"15420:11:5"},"referencedDeclaration":747,"src":"15420:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"}},"visibility":"internal"}],"id":1927,"initialValue":{"baseExpression":{"id":1924,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"15450:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$","typeString":"mapping(uint256 => struct TruthPost.DisputeData storage ref)"}},"id":1926,"indexExpression":{"id":1925,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"15459:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15450:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage","typeString":"struct TruthPost.DisputeData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15420:50:5"},{"expression":{"arguments":[{"expression":{"id":1929,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"15488:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":1930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15496:8:5","memberName":"resolved","nodeType":"MemberAccess","referencedDeclaration":740,"src":"15488:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468657265206973206e6f2072756c696e67207965742e","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15506:25:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9591a49cf5d9e3ba9b3aea5505a2b8a639d2f239a0cb6a9059466b60c54a080f","typeString":"literal_string \"There is no ruling yet.\""},"value":"There is no ruling yet."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9591a49cf5d9e3ba9b3aea5505a2b8a639d2f239a0cb6a9059466b60c54a080f","typeString":"literal_string \"There is no ruling yet.\""}],"id":1928,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15480:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15480:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1933,"nodeType":"ExpressionStatement","src":"15480:52:5"},{"assignments":[1936],"declarations":[{"constant":false,"id":1936,"mutability":"mutable","name":"round","nameLocation":"15557:5:5","nodeType":"VariableDeclaration","scope":1986,"src":"15543:19:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round"},"typeName":{"id":1935,"nodeType":"UserDefinedTypeName","pathNode":{"id":1934,"name":"Round","nameLocations":["15543:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":770,"src":"15543:5:5"},"referencedDeclaration":770,"src":"15543:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round"}},"visibility":"internal"}],"id":1941,"initialValue":{"baseExpression":{"expression":{"id":1937,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"15565:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":1938,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15573:6:5","memberName":"rounds","nodeType":"MemberAccess","referencedDeclaration":746,"src":"15565:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$770_storage_$dyn_storage","typeString":"struct TruthPost.Round storage ref[] storage ref"}},"id":1940,"indexExpression":{"id":1939,"name":"_roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"15580:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15565:28:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage","typeString":"struct TruthPost.Round storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15543:50:5"},{"expression":{"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1942,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"15604:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1944,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"15635:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},{"id":1945,"name":"_contributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"15642:12:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1946,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"15656:7:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},{"expression":{"id":1947,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"15665:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":1948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15673:7:5","memberName":"outcome","nodeType":"MemberAccess","referencedDeclaration":736,"src":"15665:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1943,"name":"getWithdrawableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"15613:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Round_$770_storage_ptr_$_t_address_$_t_enum$_RulingOptions_$295_$_t_enum$_RulingOptions_$295_$returns$_t_uint256_$","typeString":"function (struct TruthPost.Round storage pointer,address,enum ITruthPost.RulingOptions,enum ITruthPost.RulingOptions) view returns (uint256)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15613:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15604:77:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1951,"nodeType":"ExpressionStatement","src":"15604:77:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1952,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"15696:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15706:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15696:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1985,"nodeType":"IfStatement","src":"15692:293:5","trueBody":{"id":1984,"nodeType":"Block","src":"15709:276:5","statements":[{"expression":{"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1955,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"15723:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":1964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15729:13:5","memberName":"contributions","nodeType":"MemberAccess","referencedDeclaration":755,"src":"15723:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$3_storage_$","typeString":"mapping(address => uint256[3] storage ref)"}},"id":1965,"indexExpression":{"id":1957,"name":"_contributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"15743:12:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15723:33:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":1966,"indexExpression":{"arguments":[{"arguments":[{"id":1961,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"15779:7:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1960,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"15765:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15765:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15757:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1958,"name":"uint256","nodeType":"ElementaryTypeName","src":"15757:7:5","typeDescriptions":{}}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15757:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15723:66:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15723:70:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1969,"nodeType":"ExpressionStatement","src":"15723:70:5"},{"expression":{"arguments":[{"id":1973,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"15825:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1970,"name":"_contributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"15807:12:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15820:4:5","memberName":"send","nodeType":"MemberAccess","src":"15807:17:5","typeDescriptions":{"typeIdentifier":"t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) returns (bool)"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15807:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1975,"nodeType":"ExpressionStatement","src":"15807:25:5"},{"eventCall":{"arguments":[{"id":1977,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"15918:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1978,"name":"_roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"15930:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1979,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"15944:7:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},{"id":1980,"name":"_contributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"15953:12:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1981,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"15967:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1976,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"15907:10:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_enum$_RulingOptions_$295_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,enum ITruthPost.RulingOptions,address,uint256)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15907:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1983,"nodeType":"EmitStatement","src":"15902:72:5"}]}}]},"documentation":{"id":1906,"nodeType":"StructuredDocumentation","src":"15173:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"dc227fc2","id":1987,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawFeesAndRewards","nameLocation":"15213:22:5","nodeType":"FunctionDefinition","overrides":{"id":1917,"nodeType":"OverrideSpecifier","overrides":[],"src":"15376:8:5"},"parameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"_disputeID","nameLocation":"15253:10:5","nodeType":"VariableDeclaration","scope":1987,"src":"15245:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1907,"name":"uint256","nodeType":"ElementaryTypeName","src":"15245:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1910,"mutability":"mutable","name":"_contributor","nameLocation":"15289:12:5","nodeType":"VariableDeclaration","scope":1987,"src":"15273:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1909,"name":"address","nodeType":"ElementaryTypeName","src":"15273:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1912,"mutability":"mutable","name":"_roundNumber","nameLocation":"15319:12:5","nodeType":"VariableDeclaration","scope":1987,"src":"15311:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1911,"name":"uint256","nodeType":"ElementaryTypeName","src":"15311:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1915,"mutability":"mutable","name":"_ruling","nameLocation":"15355:7:5","nodeType":"VariableDeclaration","scope":1987,"src":"15341:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":1914,"nodeType":"UserDefinedTypeName","pathNode":{"id":1913,"name":"RulingOptions","nameLocations":["15341:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"15341:13:5"},"referencedDeclaration":295,"src":"15341:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"src":"15235:133:5"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"amount","nameLocation":"15402:6:5","nodeType":"VariableDeclaration","scope":1987,"src":"15394:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1918,"name":"uint256","nodeType":"ElementaryTypeName","src":"15394:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15393:16:5"},"scope":2850,"src":"15204:787:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2010,"nodeType":"Block","src":"16428:219:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1996,"name":"_newChallengeTaxRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"16446:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"323536","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16470:3:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"16446:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652074617820726174652063616e206f6e6c7920626520696e637265617365642062792061206d6178696d756d206f6620323525","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16475:56:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5943b819c05c7059125985bc4ac5cf738c94c0822c506b598ab2eced554e2f50","typeString":"literal_string \"The tax rate can only be increased by a maximum of 25%\""},"value":"The tax rate can only be increased by a maximum of 25%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5943b819c05c7059125985bc4ac5cf738c94c0822c506b598ab2eced554e2f50","typeString":"literal_string \"The tax rate can only be increased by a maximum of 25%\""}],"id":1995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"16438:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16438:94:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2001,"nodeType":"ExpressionStatement","src":"16438:94:5"},{"expression":{"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2002,"name":"challengeTaxRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"16542:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2003,"name":"_newChallengeTaxRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"16561:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16542:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2005,"nodeType":"ExpressionStatement","src":"16542:39:5"},{"eventCall":{"arguments":[{"id":2007,"name":"_newChallengeTaxRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"16619:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2006,"name":"ChallengeTaxRateUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"16596:22:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16596:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2009,"nodeType":"EmitStatement","src":"16591:49:5"}]},"documentation":{"id":1988,"nodeType":"StructuredDocumentation","src":"15997:345:5","text":"@notice Updates the challenge tax rate of the contract to a new value.\n @dev    The new challenge tax rate must be at most 25% based on MULTIPLIER_DENOMINATOR.\n         Only the current administrator can call this function. Emits ChallengeTaxRateUpdate.\n @param _newChallengeTaxRate The new challenge tax rate to be set."},"functionSelector":"26804bef","id":2011,"implemented":true,"kind":"function","modifiers":[{"id":1993,"kind":"modifierInvocation","modifierName":{"id":1992,"name":"onlyAdmin","nameLocations":["16418:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":731,"src":"16418:9:5"},"nodeType":"ModifierInvocation","src":"16418:9:5"}],"name":"updateChallengeTaxRate","nameLocation":"16356:22:5","nodeType":"FunctionDefinition","parameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1990,"mutability":"mutable","name":"_newChallengeTaxRate","nameLocation":"16387:20:5","nodeType":"VariableDeclaration","scope":2011,"src":"16379:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"16379:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16378:30:5"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"16428:0:5"},"scope":2850,"src":"16347:300:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2033,"nodeType":"Block","src":"17098:153:5","statements":[{"assignments":[2016],"declarations":[{"constant":false,"id":2016,"mutability":"mutable","name":"amount","nameLocation":"17116:6:5","nodeType":"VariableDeclaration","scope":2033,"src":"17108:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"17108:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2018,"initialValue":{"id":2017,"name":"treasuryBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"17125:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17108:32:5"},{"expression":{"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2019,"name":"treasuryBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"17150:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17168:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17150:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2022,"nodeType":"ExpressionStatement","src":"17150:19:5"},{"expression":{"arguments":[{"id":2026,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"17193:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2023,"name":"TREASURY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"17179:8:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17188:4:5","memberName":"send","nodeType":"MemberAccess","src":"17179:13:5","typeDescriptions":{"typeIdentifier":"t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) returns (bool)"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17179:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2028,"nodeType":"ExpressionStatement","src":"17179:21:5"},{"eventCall":{"arguments":[{"id":2030,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"17237:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2029,"name":"TreasuryBalanceUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"17215:21:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17215:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2032,"nodeType":"EmitStatement","src":"17210:34:5"}]},"documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"16653:396:5","text":"@notice Transfers the balance of the contract to the treasury.\n @dev    Allows the contract to send its entire balance to the treasury address.\n         It is important to ensure that the treasury address is set correctly.\n         If the transfer fails, an exception will be raised, and the funds will remain in the contract.\n         Emits TreasuryBalanceUpdate."},"functionSelector":"b7bddc72","id":2034,"implemented":true,"kind":"function","modifiers":[],"name":"transferBalanceToTreasury","nameLocation":"17063:25:5","nodeType":"FunctionDefinition","parameters":{"id":2013,"nodeType":"ParameterList","parameters":[],"src":"17088:2:5"},"returnParameters":{"id":2014,"nodeType":"ParameterList","parameters":[],"src":"17098:0:5"},"scope":2850,"src":"17054:197:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[692],"body":{"id":2046,"nodeType":"Block","src":"17346:59:5","statements":[{"expression":{"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2041,"name":"isPublishingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"17356:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17378:20:5","subExpression":{"id":2042,"name":"isPublishingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"17379:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17356:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2045,"nodeType":"ExpressionStatement","src":"17356:42:5"}]},"documentation":{"id":2035,"nodeType":"StructuredDocumentation","src":"17257:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"ba0ec60b","id":2047,"implemented":true,"kind":"function","modifiers":[{"id":2039,"kind":"modifierInvocation","modifierName":{"id":2038,"name":"onlyAdmin","nameLocations":["17336:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":731,"src":"17336:9:5"},"nodeType":"ModifierInvocation","src":"17336:9:5"}],"name":"switchPublishingLock","nameLocation":"17297:20:5","nodeType":"FunctionDefinition","overrides":{"id":2037,"nodeType":"OverrideSpecifier","overrides":[],"src":"17327:8:5"},"parameters":{"id":2036,"nodeType":"ParameterList","parameters":[],"src":"17317:2:5"},"returnParameters":{"id":2040,"nodeType":"ParameterList","parameters":[],"src":"17346:0:5"},"scope":2850,"src":"17288:117:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2063,"nodeType":"Block","src":"17708:71:5","statements":[{"expression":{"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2055,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"17718:5:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2056,"name":"_newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"17726:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"17718:17:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2058,"nodeType":"ExpressionStatement","src":"17718:17:5"},{"eventCall":{"arguments":[{"id":2060,"name":"_newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"17762:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2059,"name":"AdminUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"17750:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17750:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2062,"nodeType":"EmitStatement","src":"17745:27:5"}]},"documentation":{"id":2048,"nodeType":"StructuredDocumentation","src":"17411:225:5","text":"@notice Changes the administrator of the contract to a new address.\n @dev    Only the current administrator can call this function. Emits AdminUpdate.\n @param  _newAdmin The address of the new administrator."},"functionSelector":"8f283970","id":2064,"implemented":true,"kind":"function","modifiers":[{"id":2053,"kind":"modifierInvocation","modifierName":{"id":2052,"name":"onlyAdmin","nameLocations":["17698:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":731,"src":"17698:9:5"},"nodeType":"ModifierInvocation","src":"17698:9:5"}],"name":"changeAdmin","nameLocation":"17650:11:5","nodeType":"FunctionDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"_newAdmin","nameLocation":"17678:9:5","nodeType":"VariableDeclaration","scope":2064,"src":"17662:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2049,"name":"address","nodeType":"ElementaryTypeName","src":"17662:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"17661:27:5"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[],"src":"17708:0:5"},"scope":2850,"src":"17641:138:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2080,"nodeType":"Block","src":"18092:83:5","statements":[{"expression":{"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2072,"name":"TREASURY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"18102:8:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2073,"name":"_newTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"18113:12:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"18102:23:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2075,"nodeType":"ExpressionStatement","src":"18102:23:5"},{"eventCall":{"arguments":[{"id":2077,"name":"_newTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"18155:12:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2076,"name":"TreasuryUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"18140:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18140:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2079,"nodeType":"EmitStatement","src":"18135:33:5"}]},"documentation":{"id":2065,"nodeType":"StructuredDocumentation","src":"17785:229:5","text":"@notice Changes the treasury address of the contract to a new address.\n @dev    Only the current administrator can call this function. Emits TreasuryUpdate.\n @param  _newTreasury The address of the new treasury."},"functionSelector":"b14f2a39","id":2081,"implemented":true,"kind":"function","modifiers":[{"id":2070,"kind":"modifierInvocation","modifierName":{"id":2069,"name":"onlyAdmin","nameLocations":["18082:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":731,"src":"18082:9:5"},"nodeType":"ModifierInvocation","src":"18082:9:5"}],"name":"changeTreasury","nameLocation":"18028:14:5","nodeType":"FunctionDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2067,"mutability":"mutable","name":"_newTreasury","nameLocation":"18059:12:5","nodeType":"VariableDeclaration","scope":2081,"src":"18043:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2066,"name":"address","nodeType":"ElementaryTypeName","src":"18043:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"18042:30:5"},"returnParameters":{"id":2071,"nodeType":"ParameterList","parameters":[],"src":"18092:0:5"},"scope":2850,"src":"18019:156:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[520],"body":{"id":2098,"nodeType":"Block","src":"18312:137:5","statements":[{"expression":{"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2090,"name":"WINNER_STAKE_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"18322:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2091,"name":"_newWinnerStakeMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"18348:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18322:51:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2093,"nodeType":"ExpressionStatement","src":"18322:51:5"},{"eventCall":{"arguments":[{"id":2095,"name":"_newWinnerStakeMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"18416:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2094,"name":"WinnerStakeMultiplierUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"18388:27:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18388:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2097,"nodeType":"EmitStatement","src":"18383:59:5"}]},"documentation":{"id":2082,"nodeType":"StructuredDocumentation","src":"18181:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"adc7faba","id":2099,"implemented":true,"kind":"function","modifiers":[{"id":2088,"kind":"modifierInvocation","modifierName":{"id":2087,"name":"onlyAdmin","nameLocations":["18302:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":731,"src":"18302:9:5"},"nodeType":"ModifierInvocation","src":"18302:9:5"}],"name":"changeWinnerStakeMultiplier","nameLocation":"18221:27:5","nodeType":"FunctionDefinition","overrides":{"id":2086,"nodeType":"OverrideSpecifier","overrides":[],"src":"18293:8:5"},"parameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"_newWinnerStakeMultiplier","nameLocation":"18257:25:5","nodeType":"VariableDeclaration","scope":2099,"src":"18249:33:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"18249:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18248:35:5"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[],"src":"18312:0:5"},"scope":2850,"src":"18212:237:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[526],"body":{"id":2116,"nodeType":"Block","src":"18584:133:5","statements":[{"expression":{"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2108,"name":"LOSER_STAKE_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"18594:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2109,"name":"_newLoserStakeMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"18619:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18594:49:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2111,"nodeType":"ExpressionStatement","src":"18594:49:5"},{"eventCall":{"arguments":[{"id":2113,"name":"_newLoserStakeMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"18685:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2112,"name":"LoserStakeMultiplierUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"18658:26:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18658:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2115,"nodeType":"EmitStatement","src":"18653:57:5"}]},"documentation":{"id":2100,"nodeType":"StructuredDocumentation","src":"18455:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"92239dff","id":2117,"implemented":true,"kind":"function","modifiers":[{"id":2106,"kind":"modifierInvocation","modifierName":{"id":2105,"name":"onlyAdmin","nameLocations":["18574:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":731,"src":"18574:9:5"},"nodeType":"ModifierInvocation","src":"18574:9:5"}],"name":"changeLoserStakeMultiplier","nameLocation":"18495:26:5","nodeType":"FunctionDefinition","overrides":{"id":2104,"nodeType":"OverrideSpecifier","overrides":[],"src":"18565:8:5"},"parameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2102,"mutability":"mutable","name":"_newLoserStakeMultiplier","nameLocation":"18530:24:5","nodeType":"VariableDeclaration","scope":2117,"src":"18522:32:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2101,"name":"uint256","nodeType":"ElementaryTypeName","src":"18522:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18521:34:5"},"returnParameters":{"id":2107,"nodeType":"ParameterList","parameters":[],"src":"18584:0:5"},"scope":2850,"src":"18486:231:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[532],"body":{"id":2134,"nodeType":"Block","src":"18866:162:5","statements":[{"expression":{"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2126,"name":"LOSER_APPEAL_PERIOD_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"18876:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2127,"name":"_newLoserAppealPeriodMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"18909:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18876:64:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2129,"nodeType":"ExpressionStatement","src":"18876:64:5"},{"eventCall":{"arguments":[{"id":2131,"name":"_newLoserAppealPeriodMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"18989:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2130,"name":"LoserAppealPeriodMultiplierUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"18955:33:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18955:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2133,"nodeType":"EmitStatement","src":"18950:71:5"}]},"documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"18723:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"c94828f0","id":2135,"implemented":true,"kind":"function","modifiers":[{"id":2124,"kind":"modifierInvocation","modifierName":{"id":2123,"name":"onlyAdmin","nameLocations":["18856:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":731,"src":"18856:9:5"},"nodeType":"ModifierInvocation","src":"18856:9:5"}],"name":"changeLoserAppealPeriodMultiplier","nameLocation":"18763:33:5","nodeType":"FunctionDefinition","overrides":{"id":2122,"nodeType":"OverrideSpecifier","overrides":[],"src":"18847:8:5"},"parameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"_newLoserAppealPeriodMultiplier","nameLocation":"18805:31:5","nodeType":"VariableDeclaration","scope":2135,"src":"18797:39:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2119,"name":"uint256","nodeType":"ElementaryTypeName","src":"18797:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18796:41:5"},"returnParameters":{"id":2125,"nodeType":"ParameterList","parameters":[],"src":"18866:0:5"},"scope":2850,"src":"18754:274:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[538],"body":{"id":2152,"nodeType":"Block","src":"19173:153:5","statements":[{"expression":{"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2144,"name":"ARTICLE_WITHDRAWAL_TIMELOCK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"19183:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2145,"name":"_newArticleWithdrawalTimelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"19213:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19183:59:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2147,"nodeType":"ExpressionStatement","src":"19183:59:5"},{"eventCall":{"arguments":[{"id":2149,"name":"_newArticleWithdrawalTimelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"19289:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2148,"name":"ArticleWithdrawalTimelockUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"19257:31:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19257:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2151,"nodeType":"EmitStatement","src":"19252:67:5"}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"19034:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"92e25925","id":2153,"implemented":true,"kind":"function","modifiers":[{"id":2142,"kind":"modifierInvocation","modifierName":{"id":2141,"name":"onlyAdmin","nameLocations":["19163:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":731,"src":"19163:9:5"},"nodeType":"ModifierInvocation","src":"19163:9:5"}],"name":"changeArticleWithdrawalTimelock","nameLocation":"19074:31:5","nodeType":"FunctionDefinition","overrides":{"id":2140,"nodeType":"OverrideSpecifier","overrides":[],"src":"19154:8:5"},"parameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"_newArticleWithdrawalTimelock","nameLocation":"19114:29:5","nodeType":"VariableDeclaration","scope":2153,"src":"19106:37:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2137,"name":"uint256","nodeType":"ElementaryTypeName","src":"19106:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19105:39:5"},"returnParameters":{"id":2143,"nodeType":"ParameterList","parameters":[],"src":"19173:0:5"},"scope":2850,"src":"19065:261:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2184,"nodeType":"Block","src":"19661:259:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2162,"name":"categoryCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"19679:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19697:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19679:19:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19702:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19679:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207370616365206c65667420666f722061206e65772063617465676f7279","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19705:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e23f3e71c05305a9182237d48ba9b404f0c1c59aaff27a9576fb3eb02eaabde6","typeString":"literal_string \"No space left for a new category\""},"value":"No space left for a new category"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e23f3e71c05305a9182237d48ba9b404f0c1c59aaff27a9576fb3eb02eaabde6","typeString":"literal_string \"No space left for a new category\""}],"id":2161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"19671:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19671:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2169,"nodeType":"ExpressionStatement","src":"19671:69:5"},{"eventCall":{"arguments":[{"id":2171,"name":"categoryCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"19768:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2172,"name":"_metaevidenceIpfsUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"19785:20:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2170,"name":"MetaEvidence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"19755:12:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19755:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2174,"nodeType":"EmitStatement","src":"19750:56:5"},{"expression":{"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2175,"name":"categoryToArbitratorExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"19816:29:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$64_storage","typeString":"bytes storage ref[64] storage ref"}},"id":2177,"indexExpression":{"id":2176,"name":"categoryCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"19846:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19816:46:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2178,"name":"_arbitratorExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"19865:20:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19816:69:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":2180,"nodeType":"ExpressionStatement","src":"19816:69:5"},{"expression":{"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19896:17:5","subExpression":{"id":2181,"name":"categoryCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"19896:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2183,"nodeType":"ExpressionStatement","src":"19896:17:5"}]},"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"19332:225:5","text":"@notice Initialize a category.\n @param _metaevidenceIpfsUri IPFS content identifier for metaevidence.\n @param _arbitratorExtraData Extra data of Kleros arbitrator, signaling subcourt and jury size selection."},"functionSelector":"4c55c000","id":2185,"implemented":true,"kind":"function","modifiers":[],"name":"newCategory","nameLocation":"19571:11:5","nodeType":"FunctionDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"_metaevidenceIpfsUri","nameLocation":"19597:20:5","nodeType":"VariableDeclaration","scope":2185,"src":"19583:34:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2155,"name":"string","nodeType":"ElementaryTypeName","src":"19583:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2158,"mutability":"mutable","name":"_arbitratorExtraData","nameLocation":"19632:20:5","nodeType":"VariableDeclaration","scope":2185,"src":"19619:33:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2157,"name":"bytes","nodeType":"ElementaryTypeName","src":"19619:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19582:71:5"},"returnParameters":{"id":2160,"nodeType":"ParameterList","parameters":[],"src":"19661:0:5"},"scope":2850,"src":"19562:358:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[514],"body":{"id":2220,"nodeType":"Block","src":"20060:244:5","statements":[{"assignments":[2196],"declarations":[{"constant":false,"id":2196,"mutability":"mutable","name":"article","nameLocation":"20086:7:5","nodeType":"VariableDeclaration","scope":2220,"src":"20070:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"},"typeName":{"id":2195,"nodeType":"UserDefinedTypeName","pathNode":{"id":2194,"name":"Article","nameLocations":["20070:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":779,"src":"20070:7:5"},"referencedDeclaration":779,"src":"20070:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"}},"visibility":"internal"}],"id":2200,"initialValue":{"baseExpression":{"id":2197,"name":"articleStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"20096:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint72_$_t_struct$_Article_$779_storage_$","typeString":"mapping(uint72 => struct TruthPost.Article storage ref)"}},"id":2199,"indexExpression":{"id":2198,"name":"_articleStorageAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"20111:22:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20096:38:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage","typeString":"struct TruthPost.Article storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20070:64:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2202,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20152:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20156:6:5","memberName":"sender","nodeType":"MemberAccess","src":"20152:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2204,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"20166:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":2205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20174:5:5","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":772,"src":"20166:13:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"20152:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920617574686f722063616e207472616e73666572206f776e6572736869702e","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20181:37:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_264afed15e2abe1afd48e9529ae4102fd34dc15becf22ac12086d34e9bca14d5","typeString":"literal_string \"Only author can transfer ownership.\""},"value":"Only author can transfer ownership."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_264afed15e2abe1afd48e9529ae4102fd34dc15becf22ac12086d34e9bca14d5","typeString":"literal_string \"Only author can transfer ownership.\""}],"id":2201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"20144:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20144:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2209,"nodeType":"ExpressionStatement","src":"20144:75:5"},{"expression":{"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2210,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"20229:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":2212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20237:5:5","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":772,"src":"20229:13:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2213,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"20245:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"20229:25:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2215,"nodeType":"ExpressionStatement","src":"20229:25:5"},{"eventCall":{"arguments":[{"id":2217,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"20287:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2216,"name":"OwnershipTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"20269:17:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20269:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2219,"nodeType":"EmitStatement","src":"20264:33:5"}]},"documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"19926:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"ec4adca9","id":2221,"implemented":true,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"19966:17:5","nodeType":"FunctionDefinition","overrides":{"id":2192,"nodeType":"OverrideSpecifier","overrides":[],"src":"20051:8:5"},"parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"_articleStorageAddress","nameLocation":"19991:22:5","nodeType":"VariableDeclaration","scope":2221,"src":"19984:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":2187,"name":"uint72","nodeType":"ElementaryTypeName","src":"19984:6:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"_newOwner","nameLocation":"20031:9:5","nodeType":"VariableDeclaration","scope":2221,"src":"20015:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2189,"name":"address","nodeType":"ElementaryTypeName","src":"20015:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"19983:58:5"},"returnParameters":{"id":2193,"nodeType":"ParameterList","parameters":[],"src":"20060:0:5"},"scope":2850,"src":"19957:347:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[554],"body":{"id":2267,"nodeType":"Block","src":"20433:406:5","statements":[{"assignments":[2232],"declarations":[{"constant":false,"id":2232,"mutability":"mutable","name":"article","nameLocation":"20459:7:5","nodeType":"VariableDeclaration","scope":2267,"src":"20443:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"},"typeName":{"id":2231,"nodeType":"UserDefinedTypeName","pathNode":{"id":2230,"name":"Article","nameLocations":["20443:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":779,"src":"20443:7:5"},"referencedDeclaration":779,"src":"20443:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"}},"visibility":"internal"}],"id":2236,"initialValue":{"baseExpression":{"id":2233,"name":"articleStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"20469:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint72_$_t_struct$_Article_$779_storage_$","typeString":"mapping(uint72 => struct TruthPost.Article storage ref)"}},"id":2235,"indexExpression":{"id":2234,"name":"_articleStorageAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"20484:22:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20469:38:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage","typeString":"struct TruthPost.Article storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20443:64:5"},{"assignments":[2238],"declarations":[{"constant":false,"id":2238,"mutability":"mutable","name":"arbitrationFee","nameLocation":"20526:14:5","nodeType":"VariableDeclaration","scope":2267,"src":"20518:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2237,"name":"uint256","nodeType":"ElementaryTypeName","src":"20518:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2246,"initialValue":{"arguments":[{"baseExpression":{"id":2241,"name":"categoryToArbitratorExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"20570:29:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$64_storage","typeString":"bytes storage ref[64] storage ref"}},"id":2244,"indexExpression":{"expression":{"id":2242,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"20600:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":2243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20608:8:5","memberName":"category","nodeType":"MemberAccess","referencedDeclaration":778,"src":"20600:16:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20570:47:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"expression":{"id":2239,"name":"ARBITRATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"20543:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20554:15:5","memberName":"arbitrationCost","nodeType":"MemberAccess","referencedDeclaration":203,"src":"20543:26:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) view external returns (uint256)"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20543:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20518:100:5"},{"assignments":[2248],"declarations":[{"constant":false,"id":2248,"mutability":"mutable","name":"challengeTax","nameLocation":"20636:12:5","nodeType":"VariableDeclaration","scope":2267,"src":"20628:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"20628:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2262,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2251,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"20660:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":2252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20668:12:5","memberName":"bountyAmount","nodeType":"MemberAccess","referencedDeclaration":776,"src":"20660:20:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint56","typeString":"uint56"}],"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20653:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":2249,"name":"uint96","nodeType":"ElementaryTypeName","src":"20653:6:5","typeDescriptions":{}}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20653:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2254,"name":"NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"20685:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20653:74:5","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"id":2256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20652:76:5","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2257,"name":"challengeTaxRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"20743:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20652:107:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20651:109:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2260,"name":"MULTIPLIER_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"20763:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20651:134:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20628:157:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2263,"name":"arbitrationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"20803:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2264,"name":"challengeTax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"20820:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20803:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2229,"id":2266,"nodeType":"Return","src":"20796:36:5"}]},"documentation":{"id":2222,"nodeType":"StructuredDocumentation","src":"20310:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"37641483","id":2268,"implemented":true,"kind":"function","modifiers":[],"name":"challengeFee","nameLocation":"20350:12:5","nodeType":"FunctionDefinition","overrides":{"id":2226,"nodeType":"OverrideSpecifier","overrides":[],"src":"20406:8:5"},"parameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"_articleStorageAddress","nameLocation":"20370:22:5","nodeType":"VariableDeclaration","scope":2268,"src":"20363:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":2223,"name":"uint72","nodeType":"ElementaryTypeName","src":"20363:6:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"20362:31:5"},"returnParameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2268,"src":"20424:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"20424:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20423:9:5"},"scope":2850,"src":"20341:498:5","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[562],"body":{"id":2295,"nodeType":"Block","src":"20971:183:5","statements":[{"assignments":[2279],"declarations":[{"constant":false,"id":2279,"mutability":"mutable","name":"dispute","nameLocation":"21001:7:5","nodeType":"VariableDeclaration","scope":2295,"src":"20981:27:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"},"typeName":{"id":2278,"nodeType":"UserDefinedTypeName","pathNode":{"id":2277,"name":"DisputeData","nameLocations":["20981:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":747,"src":"20981:11:5"},"referencedDeclaration":747,"src":"20981:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"}},"visibility":"internal"}],"id":2283,"initialValue":{"baseExpression":{"id":2280,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"21011:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$","typeString":"mapping(uint256 => struct TruthPost.DisputeData storage ref)"}},"id":2282,"indexExpression":{"id":2281,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"21020:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21011:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage","typeString":"struct TruthPost.DisputeData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20981:50:5"},{"expression":{"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2284,"name":"arbitrationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"21041:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2287,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"21080:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2288,"name":"categoryToArbitratorExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"21092:29:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$64_storage","typeString":"bytes storage ref[64] storage ref"}},"id":2291,"indexExpression":{"expression":{"id":2289,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"21122:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":2290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21130:15:5","memberName":"articleCategory","nodeType":"MemberAccess","referencedDeclaration":738,"src":"21122:23:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21092:54:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"expression":{"id":2285,"name":"ARBITRATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"21058:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21069:10:5","memberName":"appealCost","nodeType":"MemberAccess","referencedDeclaration":221,"src":"21058:21:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,bytes memory) view external returns (uint256)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21058:89:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21041:106:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2294,"nodeType":"ExpressionStatement","src":"21041:106:5"}]},"documentation":{"id":2269,"nodeType":"StructuredDocumentation","src":"20845:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"1e26de34","id":2296,"implemented":true,"kind":"function","modifiers":[],"name":"appealFee","nameLocation":"20885:9:5","nodeType":"FunctionDefinition","overrides":{"id":2273,"nodeType":"OverrideSpecifier","overrides":[],"src":"20929:8:5"},"parameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"_disputeID","nameLocation":"20903:10:5","nodeType":"VariableDeclaration","scope":2296,"src":"20895:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"20895:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20894:20:5"},"returnParameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"arbitrationFee","nameLocation":"20955:14:5","nodeType":"VariableDeclaration","scope":2296,"src":"20947:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"20947:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20946:24:5"},"scope":2850,"src":"20876:278:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[546],"body":{"id":2326,"nodeType":"Block","src":"21302:190:5","statements":[{"assignments":[2307],"declarations":[{"constant":false,"id":2307,"mutability":"mutable","name":"article","nameLocation":"21328:7:5","nodeType":"VariableDeclaration","scope":2326,"src":"21312:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"},"typeName":{"id":2306,"nodeType":"UserDefinedTypeName","pathNode":{"id":2305,"name":"Article","nameLocations":["21312:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":779,"src":"21312:7:5"},"referencedDeclaration":779,"src":"21312:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article"}},"visibility":"internal"}],"id":2308,"nodeType":"VariableDeclarationStatement","src":"21312:23:5"},{"body":{"id":2316,"nodeType":"Block","src":"21348:67:5","statements":[{"expression":{"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2309,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"21362:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2310,"name":"articleStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"21372:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint72_$_t_struct$_Article_$779_storage_$","typeString":"mapping(uint72 => struct TruthPost.Article storage ref)"}},"id":2313,"indexExpression":{"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21387:16:5","subExpression":{"id":2311,"name":"_searchPointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"21387:14:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21372:32:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage","typeString":"struct TruthPost.Article storage ref"}},"src":"21362:42:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":2315,"nodeType":"ExpressionStatement","src":"21362:42:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint56","typeString":"uint56"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2317,"name":"article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"21423:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$779_storage_ptr","typeString":"struct TruthPost.Article storage pointer"}},"id":2318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21431:12:5","memberName":"bountyAmount","nodeType":"MemberAccess","referencedDeclaration":776,"src":"21423:20:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21447:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21423:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2321,"nodeType":"DoWhileStatement","src":"21345:105:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint72","typeString":"uint72"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2322,"name":"_searchPointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"21467:14:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21484:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"21467:18:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":2304,"id":2325,"nodeType":"Return","src":"21460:25:5"}]},"documentation":{"id":2297,"nodeType":"StructuredDocumentation","src":"21160:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"e165720c","id":2327,"implemented":true,"kind":"function","modifiers":[],"name":"findVacantStorageSlot","nameLocation":"21200:21:5","nodeType":"FunctionDefinition","overrides":{"id":2301,"nodeType":"OverrideSpecifier","overrides":[],"src":"21259:8:5"},"parameters":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"_searchPointer","nameLocation":"21229:14:5","nodeType":"VariableDeclaration","scope":2327,"src":"21222:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":2298,"name":"uint72","nodeType":"ElementaryTypeName","src":"21222:6:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"21221:23:5"},"returnParameters":{"id":2304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"vacantSlotIndex","nameLocation":"21285:15:5","nodeType":"VariableDeclaration","scope":2327,"src":"21277:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2302,"name":"uint256","nodeType":"ElementaryTypeName","src":"21277:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21276:25:5"},"scope":2850,"src":"21191:301:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[622],"body":{"id":2460,"nodeType":"Block","src":"21724:1101:5","statements":[{"assignments":[2344],"declarations":[{"constant":false,"id":2344,"mutability":"mutable","name":"dispute","nameLocation":"21754:7:5","nodeType":"VariableDeclaration","scope":2460,"src":"21734:27:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"},"typeName":{"id":2343,"nodeType":"UserDefinedTypeName","pathNode":{"id":2342,"name":"DisputeData","nameLocations":["21734:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":747,"src":"21734:11:5"},"referencedDeclaration":747,"src":"21734:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"}},"visibility":"internal"}],"id":2348,"initialValue":{"baseExpression":{"id":2345,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"21764:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$","typeString":"mapping(uint256 => struct TruthPost.DisputeData storage ref)"}},"id":2347,"indexExpression":{"id":2346,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"21773:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21764:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage","typeString":"struct TruthPost.DisputeData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21734:50:5"},{"condition":{"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"21798:17:5","subExpression":{"expression":{"id":2349,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"21799:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":2350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21807:8:5","memberName":"resolved","nodeType":"MemberAccess","referencedDeclaration":740,"src":"21799:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2359,"nodeType":"IfStatement","src":"21794:51:5","trueBody":{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21833:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21825:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"21825:7:5","typeDescriptions":{}}},"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21825:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2356,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"21837:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}}],"id":2357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21824:21:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory[] memory)"}},"functionReturnParameters":2341,"id":2358,"nodeType":"Return","src":"21817:28:5"}},{"assignments":[2361],"declarations":[{"constant":false,"id":2361,"mutability":"mutable","name":"noOfRounds","nameLocation":"21863:10:5","nodeType":"VariableDeclaration","scope":2460,"src":"21855:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2360,"name":"uint256","nodeType":"ElementaryTypeName","src":"21855:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2365,"initialValue":{"expression":{"expression":{"id":2362,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"21876:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":2363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21884:6:5","memberName":"rounds","nodeType":"MemberAccess","referencedDeclaration":746,"src":"21876:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$770_storage_$dyn_storage","typeString":"struct TruthPost.Round storage ref[] storage ref"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21891:6:5","memberName":"length","nodeType":"MemberAccess","src":"21876:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21855:42:5"},{"assignments":[2368],"declarations":[{"constant":false,"id":2368,"mutability":"mutable","name":"finalRuling","nameLocation":"21921:11:5","nodeType":"VariableDeclaration","scope":2460,"src":"21907:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":2367,"nodeType":"UserDefinedTypeName","pathNode":{"id":2366,"name":"RulingOptions","nameLocations":["21907:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"21907:13:5"},"referencedDeclaration":295,"src":"21907:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"id":2371,"initialValue":{"expression":{"id":2369,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"21935:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":2370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21943:7:5","memberName":"outcome","nodeType":"MemberAccess","referencedDeclaration":736,"src":"21935:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"nodeType":"VariableDeclarationStatement","src":"21907:43:5"},{"expression":{"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2372,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"21961:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2377,"name":"noOfRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"21987:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"21971:15:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory[] memory)"},"typeName":{"baseType":{"baseType":{"id":2373,"name":"uint256","nodeType":"ElementaryTypeName","src":"21975:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2374,"nodeType":"ArrayTypeName","src":"21975:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":2375,"nodeType":"ArrayTypeName","src":"21975:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21971:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"src":"21961:37:5","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":2380,"nodeType":"ExpressionStatement","src":"21961:37:5"},{"body":{"id":2458,"nodeType":"Block","src":"22079:740:5","statements":[{"expression":{"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2391,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"22093:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":2393,"indexExpression":{"id":2392,"name":"roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"22101:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22093:20:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":2397,"name":"NUMBER_OF_RULING_OPTIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"22130:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22157:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22130:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"22116:13:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"22120:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2395,"nodeType":"ArrayTypeName","src":"22120:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22116:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"22093:66:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2402,"nodeType":"ExpressionStatement","src":"22093:66:5"},{"assignments":[2405],"declarations":[{"constant":false,"id":2405,"mutability":"mutable","name":"round","nameLocation":"22188:5:5","nodeType":"VariableDeclaration","scope":2458,"src":"22174:19:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round"},"typeName":{"id":2404,"nodeType":"UserDefinedTypeName","pathNode":{"id":2403,"name":"Round","nameLocations":["22174:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":770,"src":"22174:5:5"},"referencedDeclaration":770,"src":"22174:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round"}},"visibility":"internal"}],"id":2410,"initialValue":{"baseExpression":{"expression":{"id":2406,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"22196:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":2407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22204:6:5","memberName":"rounds","nodeType":"MemberAccess","referencedDeclaration":746,"src":"22196:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$770_storage_$dyn_storage","typeString":"struct TruthPost.Round storage ref[] storage ref"}},"id":2409,"indexExpression":{"id":2408,"name":"roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"22211:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22196:27:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage","typeString":"struct TruthPost.Round storage ref"}},"nodeType":"VariableDeclarationStatement","src":"22174:49:5"},{"body":{"id":2456,"nodeType":"Block","src":"22326:483:5","statements":[{"assignments":[2422],"declarations":[{"constant":false,"id":2422,"mutability":"mutable","name":"currentAmount","nameLocation":"22352:13:5","nodeType":"VariableDeclaration","scope":2456,"src":"22344:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"22344:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2431,"initialValue":{"arguments":[{"id":2424,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"22411:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},{"id":2425,"name":"_contributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"22438:12:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"id":2427,"name":"rulingOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"22486:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2426,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"22472:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22472:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},{"id":2429,"name":"finalRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"22521:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":2423,"name":"getWithdrawableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"22368:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Round_$770_storage_ptr_$_t_address_$_t_enum$_RulingOptions_$295_$_t_enum$_RulingOptions_$295_$returns$_t_uint256_$","typeString":"function (struct TruthPost.Round storage pointer,address,enum ITruthPost.RulingOptions,enum ITruthPost.RulingOptions) view returns (uint256)"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22368:182:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22344:206:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2432,"name":"currentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"22572:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22588:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22572:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2455,"nodeType":"IfStatement","src":"22568:227:5","trueBody":{"id":2454,"nodeType":"Block","src":"22591:204:5","statements":[{"expression":{"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2435,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"22613:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":2437,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"22642:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},{"id":2438,"name":"_contributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"22649:12:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"id":2440,"name":"rulingOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"22677:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2439,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"22663:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22663:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},{"id":2442,"name":"finalRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"22692:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":2436,"name":"getWithdrawableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"22620:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Round_$770_storage_ptr_$_t_address_$_t_enum$_RulingOptions_$295_$_t_enum$_RulingOptions_$295_$returns$_t_uint256_$","typeString":"function (struct TruthPost.Round storage pointer,address,enum ITruthPost.RulingOptions,enum ITruthPost.RulingOptions) view returns (uint256)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22620:84:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:91:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2445,"nodeType":"ExpressionStatement","src":"22613:91:5"},{"expression":{"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2446,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"22726:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":2449,"indexExpression":{"id":2447,"name":"roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"22734:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22726:20:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2450,"indexExpression":{"id":2448,"name":"rulingOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"22747:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22726:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2451,"name":"currentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"22763:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22726:50:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2453,"nodeType":"ExpressionStatement","src":"22726:50:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2415,"name":"rulingOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"22268:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2416,"name":"NUMBER_OF_RULING_OPTIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"22284:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22268:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2457,"initializationExpression":{"assignments":[2412],"declarations":[{"constant":false,"id":2412,"mutability":"mutable","name":"rulingOption","nameLocation":"22250:12:5","nodeType":"VariableDeclaration","scope":2457,"src":"22242:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2411,"name":"uint256","nodeType":"ElementaryTypeName","src":"22242:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2414,"initialValue":{"hexValue":"30","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22265:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22242:24:5"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22310:14:5","subExpression":{"id":2418,"name":"rulingOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"22310:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2420,"nodeType":"ExpressionStatement","src":"22310:14:5"},"nodeType":"ForStatement","src":"22237:572:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2385,"name":"roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"22038:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2386,"name":"noOfRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"22052:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22038:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2459,"initializationExpression":{"assignments":[2382],"declarations":[{"constant":false,"id":2382,"mutability":"mutable","name":"roundNumber","nameLocation":"22021:11:5","nodeType":"VariableDeclaration","scope":2459,"src":"22013:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"22013:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2384,"initialValue":{"hexValue":"30","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22035:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22013:23:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22064:13:5","subExpression":{"id":2388,"name":"roundNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"22064:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2390,"nodeType":"ExpressionStatement","src":"22064:13:5"},"nodeType":"ForStatement","src":"22008:811:5"}]},"documentation":{"id":2328,"nodeType":"StructuredDocumentation","src":"21498:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"af4a9144","id":2461,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalWithdrawableAmount","nameLocation":"21538:26:5","nodeType":"FunctionDefinition","overrides":{"id":2334,"nodeType":"OverrideSpecifier","overrides":[],"src":"21653:8:5"},"parameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"_disputeID","nameLocation":"21573:10:5","nodeType":"VariableDeclaration","scope":2461,"src":"21565:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"21565:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2332,"mutability":"mutable","name":"_contributor","nameLocation":"21601:12:5","nodeType":"VariableDeclaration","scope":2461,"src":"21585:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2331,"name":"address","nodeType":"ElementaryTypeName","src":"21585:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"21564:50:5"},"returnParameters":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"sum","nameLocation":"21687:3:5","nodeType":"VariableDeclaration","scope":2461,"src":"21679:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"21679:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2340,"mutability":"mutable","name":"amounts","nameLocation":"21711:7:5","nodeType":"VariableDeclaration","scope":2461,"src":"21692:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"21692:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2338,"nodeType":"ArrayTypeName","src":"21692:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":2339,"nodeType":"ArrayTypeName","src":"21692:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"}],"src":"21678:41:5"},"scope":2850,"src":"21529:1296:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2595,"nodeType":"Block","src":"23100:1310:5","statements":[{"assignments":[2480],"declarations":[{"constant":false,"id":2480,"mutability":"mutable","name":"givenRuling","nameLocation":"23124:11:5","nodeType":"VariableDeclaration","scope":2595,"src":"23110:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":2479,"nodeType":"UserDefinedTypeName","pathNode":{"id":2478,"name":"RulingOptions","nameLocations":["23110:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"23110:13:5"},"referencedDeclaration":295,"src":"23110:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"id":2484,"initialValue":{"arguments":[{"id":2482,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"23152:7:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":2481,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"23138:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23138:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"nodeType":"VariableDeclarationStatement","src":"23110:50:5"},{"condition":{"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23175:37:5","subExpression":{"baseExpression":{"expression":{"id":2485,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"23176:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":2486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23183:7:5","memberName":"hasPaid","nodeType":"MemberAccess","referencedDeclaration":761,"src":"23176:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_storage","typeString":"bool[3] storage ref"}},"id":2491,"indexExpression":{"arguments":[{"id":2489,"name":"givenRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"23199:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":2488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23191:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"23191:7:5","typeDescriptions":{}}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23191:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23176:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2593,"nodeType":"Block","src":"23396:1008:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2506,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"23476:7:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2507,"name":"_finalRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"23487:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"src":"23476:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23874:53:5","subExpression":{"baseExpression":{"expression":{"id":2545,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"23875:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":2546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23882:7:5","memberName":"hasPaid","nodeType":"MemberAccess","referencedDeclaration":761,"src":"23875:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_storage","typeString":"bool[3] storage ref"}},"id":2553,"indexExpression":{"arguments":[{"arguments":[{"id":2550,"name":"_finalRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"23912:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":2549,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"23898:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23898:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":2548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23890:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"23890:7:5","typeDescriptions":{}}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23890:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23875:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2591,"nodeType":"IfStatement","src":"23870:524:5","trueBody":{"id":2590,"nodeType":"Block","src":"23929:465:5","statements":[{"expression":{"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2555,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"24088:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"expression":{"id":2556,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"24118:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":2557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24125:13:5","memberName":"contributions","nodeType":"MemberAccess","referencedDeclaration":755,"src":"24118:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$3_storage_$","typeString":"mapping(address => uint256[3] storage ref)"}},"id":2559,"indexExpression":{"id":2558,"name":"_contributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"24139:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24118:34:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":2564,"indexExpression":{"arguments":[{"id":2562,"name":"givenRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"24161:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":2561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24153:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2560,"name":"uint256","nodeType":"ElementaryTypeName","src":"24153:7:5","typeDescriptions":{}}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24153:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24118:56:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2565,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"24177:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":2566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24184:27:5","memberName":"totalClaimableAfterExpenses","nodeType":"MemberAccess","referencedDeclaration":769,"src":"24177:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24118:93:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24117:95:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2569,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"24236:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":2570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24243:14:5","memberName":"totalPerRuling","nodeType":"MemberAccess","referencedDeclaration":767,"src":"24236:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":2576,"indexExpression":{"arguments":[{"expression":{"id":2573,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"24266:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24280:15:5","memberName":"ChallengeFailed","nodeType":"MemberAccess","referencedDeclaration":293,"src":"24266:29:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":2572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24258:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"24258:7:5","typeDescriptions":{}}},"id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24258:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24236:61:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"expression":{"id":2577,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"24324:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":2578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24331:14:5","memberName":"totalPerRuling","nodeType":"MemberAccess","referencedDeclaration":767,"src":"24324:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":2584,"indexExpression":{"arguments":[{"expression":{"id":2581,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"24354:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24368:8:5","memberName":"Debunked","nodeType":"MemberAccess","referencedDeclaration":294,"src":"24354:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":2580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24346:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"24346:7:5","typeDescriptions":{}}},"id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24346:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24324:54:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24236:142:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24235:144:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:262:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24088:291:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2589,"nodeType":"ExpressionStatement","src":"24088:291:5"}]}},"id":2592,"nodeType":"IfStatement","src":"23472:922:5","trueBody":{"id":2544,"nodeType":"Block","src":"23501:363:5","statements":[{"expression":{"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2509,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"23581:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2510,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"23590:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":2511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23597:14:5","memberName":"totalPerRuling","nodeType":"MemberAccess","referencedDeclaration":767,"src":"23590:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":2516,"indexExpression":{"arguments":[{"id":2514,"name":"givenRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"23620:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":2513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23612:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2512,"name":"uint256","nodeType":"ElementaryTypeName","src":"23612:7:5","typeDescriptions":{}}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23612:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23590:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23636:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23590:47:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23848:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23590:259:5","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"expression":{"id":2519,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"23661:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":2520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23668:13:5","memberName":"contributions","nodeType":"MemberAccess","referencedDeclaration":755,"src":"23661:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$3_storage_$","typeString":"mapping(address => uint256[3] storage ref)"}},"id":2522,"indexExpression":{"id":2521,"name":"_contributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"23682:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23661:34:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":2527,"indexExpression":{"arguments":[{"id":2525,"name":"givenRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"23704:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":2524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23696:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"23696:7:5","typeDescriptions":{}}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23696:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23661:56:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2528,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"23720:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":2529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23727:27:5","memberName":"totalClaimableAfterExpenses","nodeType":"MemberAccess","referencedDeclaration":769,"src":"23720:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23661:93:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2531,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23660:95:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"baseExpression":{"expression":{"id":2532,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"23782:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":2533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23789:14:5","memberName":"totalPerRuling","nodeType":"MemberAccess","referencedDeclaration":767,"src":"23782:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":2538,"indexExpression":{"arguments":[{"id":2536,"name":"givenRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"23812:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":2535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23804:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2534,"name":"uint256","nodeType":"ElementaryTypeName","src":"23804:7:5","typeDescriptions":{}}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23804:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23782:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23660:165:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23581:268:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2543,"nodeType":"ExpressionStatement","src":"23581:268:5"}]}}]},"id":2594,"nodeType":"IfStatement","src":"23171:1233:5","trueBody":{"id":2505,"nodeType":"Block","src":"23214:176:5","statements":[{"expression":{"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2493,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"23314:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":2494,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"23323:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":2495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23330:13:5","memberName":"contributions","nodeType":"MemberAccess","referencedDeclaration":755,"src":"23323:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$3_storage_$","typeString":"mapping(address => uint256[3] storage ref)"}},"id":2497,"indexExpression":{"id":2496,"name":"_contributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"23344:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23323:34:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":2502,"indexExpression":{"arguments":[{"id":2500,"name":"givenRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"23366:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":2499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23358:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2498,"name":"uint256","nodeType":"ElementaryTypeName","src":"23358:7:5","typeDescriptions":{}}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23358:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23323:56:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23314:65:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2504,"nodeType":"ExpressionStatement","src":"23314:65:5"}]}}]},"documentation":{"id":2462,"nodeType":"StructuredDocumentation","src":"22831:61:5","text":"@notice Returns withdrawable amount for given parameters."},"id":2596,"implemented":true,"kind":"function","modifiers":[],"name":"getWithdrawableAmount","nameLocation":"22906:21:5","nodeType":"FunctionDefinition","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"_round","nameLocation":"22951:6:5","nodeType":"VariableDeclaration","scope":2596,"src":"22937:20:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round"},"typeName":{"id":2464,"nodeType":"UserDefinedTypeName","pathNode":{"id":2463,"name":"Round","nameLocations":["22937:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":770,"src":"22937:5:5"},"referencedDeclaration":770,"src":"22937:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round"}},"visibility":"internal"},{"constant":false,"id":2467,"mutability":"mutable","name":"_contributor","nameLocation":"22975:12:5","nodeType":"VariableDeclaration","scope":2596,"src":"22967:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2466,"name":"address","nodeType":"ElementaryTypeName","src":"22967:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"_ruling","nameLocation":"23011:7:5","nodeType":"VariableDeclaration","scope":2596,"src":"22997:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":2469,"nodeType":"UserDefinedTypeName","pathNode":{"id":2468,"name":"RulingOptions","nameLocations":["22997:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"22997:13:5"},"referencedDeclaration":295,"src":"22997:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"_finalRuling","nameLocation":"23042:12:5","nodeType":"VariableDeclaration","scope":2596,"src":"23028:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":2472,"nodeType":"UserDefinedTypeName","pathNode":{"id":2471,"name":"RulingOptions","nameLocations":["23028:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"23028:13:5"},"referencedDeclaration":295,"src":"23028:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"src":"22927:133:5"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"amount","nameLocation":"23092:6:5","nodeType":"VariableDeclaration","scope":2596,"src":"23084:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"23084:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23083:16:5"},"scope":2850,"src":"22897:1513:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[644],"body":{"id":2637,"nodeType":"Block","src":"24768:163:5","statements":[{"assignments":[2621],"declarations":[{"constant":false,"id":2621,"mutability":"mutable","name":"round","nameLocation":"24792:5:5","nodeType":"VariableDeclaration","scope":2637,"src":"24778:19:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round"},"typeName":{"id":2620,"nodeType":"UserDefinedTypeName","pathNode":{"id":2619,"name":"Round","nameLocations":["24778:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":770,"src":"24778:5:5"},"referencedDeclaration":770,"src":"24778:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round"}},"visibility":"internal"}],"id":2628,"initialValue":{"baseExpression":{"expression":{"baseExpression":{"id":2622,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"24800:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$","typeString":"mapping(uint256 => struct TruthPost.DisputeData storage ref)"}},"id":2624,"indexExpression":{"id":2623,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"24809:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24800:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage","typeString":"struct TruthPost.DisputeData storage ref"}},"id":2625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24821:6:5","memberName":"rounds","nodeType":"MemberAccess","referencedDeclaration":746,"src":"24800:27:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$770_storage_$dyn_storage","typeString":"struct TruthPost.Round storage ref[] storage ref"}},"id":2627,"indexExpression":{"id":2626,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"24828:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24800:35:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage","typeString":"struct TruthPost.Round storage ref"}},"nodeType":"VariableDeclarationStatement","src":"24778:57:5"},{"expression":{"components":[{"expression":{"id":2629,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"24853:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":2630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24859:7:5","memberName":"hasPaid","nodeType":"MemberAccess","referencedDeclaration":761,"src":"24853:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_storage","typeString":"bool[3] storage ref"}},{"expression":{"id":2631,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"24868:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":2632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24874:14:5","memberName":"totalPerRuling","nodeType":"MemberAccess","referencedDeclaration":767,"src":"24868:20:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},{"expression":{"id":2633,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"24890:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":2634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24896:27:5","memberName":"totalClaimableAfterExpenses","nodeType":"MemberAccess","referencedDeclaration":769,"src":"24890:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24852:72:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$3_storage_$_t_array$_t_uint256_$3_storage_$_t_uint256_$","typeString":"tuple(bool[3] storage ref,uint256[3] storage ref,uint256)"}},"functionReturnParameters":2618,"id":2636,"nodeType":"Return","src":"24845:79:5"}]},"documentation":{"id":2597,"nodeType":"StructuredDocumentation","src":"24416:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"8a9bb02a","id":2638,"implemented":true,"kind":"function","modifiers":[],"name":"getRoundInfo","nameLocation":"24456:12:5","nodeType":"FunctionDefinition","overrides":{"id":2603,"nodeType":"OverrideSpecifier","overrides":[],"src":"24543:8:5"},"parameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2599,"mutability":"mutable","name":"_disputeID","nameLocation":"24477:10:5","nodeType":"VariableDeclaration","scope":2638,"src":"24469:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"24469:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2601,"mutability":"mutable","name":"_round","nameLocation":"24497:6:5","nodeType":"VariableDeclaration","scope":2638,"src":"24489:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2600,"name":"uint256","nodeType":"ElementaryTypeName","src":"24489:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24468:36:5"},"returnParameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2609,"mutability":"mutable","name":"hasPaid","nameLocation":"24624:7:5","nodeType":"VariableDeclaration","scope":2638,"src":"24582:49:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_memory_ptr","typeString":"bool[3]"},"typeName":{"baseType":{"id":2604,"name":"bool","nodeType":"ElementaryTypeName","src":"24582:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2608,"length":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":2605,"name":"NUMBER_OF_RULING_OPTIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"24587:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24614:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24587:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"ArrayTypeName","src":"24582:34:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_storage_ptr","typeString":"bool[3]"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"totalPerRuling","nameLocation":"24690:14:5","nodeType":"VariableDeclaration","scope":2638,"src":"24645:59:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"24645:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2614,"length":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":2611,"name":"NUMBER_OF_RULING_OPTIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"24653:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24680:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24653:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"ArrayTypeName","src":"24645:37:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"},{"constant":false,"id":2617,"mutability":"mutable","name":"totalClaimableAfterExpenses","nameLocation":"24726:27:5","nodeType":"VariableDeclaration","scope":2638,"src":"24718:35:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2616,"name":"uint256","nodeType":"ElementaryTypeName","src":"24718:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24568:195:5"},"scope":2850,"src":"24447:484:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[688],"body":{"id":2652,"nodeType":"Block","src":"25055:60:5","statements":[{"expression":{"arguments":[{"id":2649,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"25097:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2647,"name":"ARBITRATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"25072:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25083:13:5","memberName":"currentRuling","nodeType":"MemberAccess","referencedDeclaration":248,"src":"25072:24:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25072:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2646,"id":2651,"nodeType":"Return","src":"25065:43:5"}]},"documentation":{"id":2639,"nodeType":"StructuredDocumentation","src":"24937:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"7f67bd6c","id":2653,"implemented":true,"kind":"function","modifiers":[],"name":"getLastRoundWinner","nameLocation":"24977:18:5","nodeType":"FunctionDefinition","overrides":{"id":2643,"nodeType":"OverrideSpecifier","overrides":[],"src":"25028:8:5"},"parameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"_disputeID","nameLocation":"25004:10:5","nodeType":"VariableDeclaration","scope":2653,"src":"24996:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2640,"name":"uint256","nodeType":"ElementaryTypeName","src":"24996:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24995:20:5"},"returnParameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2653,"src":"25046:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"25046:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25045:9:5"},"scope":2850,"src":"24968:147:5","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[680],"body":{"id":2710,"nodeType":"Block","src":"25306:470:5","statements":[{"assignments":[2668,2670],"declarations":[{"constant":false,"id":2668,"mutability":"mutable","name":"appealWindowStart","nameLocation":"25325:17:5","nodeType":"VariableDeclaration","scope":2710,"src":"25317:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"25317:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2670,"mutability":"mutable","name":"appealWindowEnd","nameLocation":"25352:15:5","nodeType":"VariableDeclaration","scope":2710,"src":"25344:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"25344:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2675,"initialValue":{"arguments":[{"id":2673,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"25395:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2671,"name":"ARBITRATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"25371:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25382:12:5","memberName":"appealPeriod","nodeType":"MemberAccess","referencedDeclaration":231,"src":"25371:23:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view external returns (uint256,uint256)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25371:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"25316:90:5"},{"assignments":[2677],"declarations":[{"constant":false,"id":2677,"mutability":"mutable","name":"loserAppealWindowEnd","nameLocation":"25424:20:5","nodeType":"VariableDeclaration","scope":2710,"src":"25416:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2676,"name":"uint256","nodeType":"ElementaryTypeName","src":"25416:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2690,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2678,"name":"appealWindowStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"25447:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2679,"name":"appealWindowEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"25482:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2680,"name":"appealWindowStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"25500:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25482:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25481:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2683,"name":"LOSER_APPEAL_PERIOD_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"25521:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25481:70:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25480:72:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2686,"name":"MULTIPLIER_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"25555:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25480:97:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2688,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25479:99:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25447:131:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25416:162:5"},{"assignments":[2692],"declarations":[{"constant":false,"id":2692,"mutability":"mutable","name":"isWinner","nameLocation":"25594:8:5","nodeType":"VariableDeclaration","scope":2710,"src":"25589:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2691,"name":"bool","nodeType":"ElementaryTypeName","src":"25589:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2700,"initialValue":{"commonType":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2695,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"25638:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2694,"name":"getLastRoundWinner","nodeType":"Identifier","overloadedDeclarations":[2653],"referencedDeclaration":2653,"src":"25619:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25619:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2693,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"25605:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25605:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2698,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"25654:7:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"src":"25605:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"25589:72:5"},{"expression":{"condition":{"id":2701,"name":"isWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"25678:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":2705,"name":"appealWindowStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"25729:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2706,"name":"loserAppealWindowEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"25748:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25728:41:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"25678:91:5","trueExpression":{"components":[{"id":2702,"name":"appealWindowStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"25690:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2703,"name":"appealWindowEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"25709:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25689:36:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":2666,"id":2709,"nodeType":"Return","src":"25671:98:5"}]},"documentation":{"id":2654,"nodeType":"StructuredDocumentation","src":"25121:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"638af3da","id":2711,"implemented":true,"kind":"function","modifiers":[],"name":"getAppealPeriod","nameLocation":"25161:15:5","nodeType":"FunctionDefinition","overrides":{"id":2661,"nodeType":"OverrideSpecifier","overrides":[],"src":"25258:8:5"},"parameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2656,"mutability":"mutable","name":"_disputeID","nameLocation":"25185:10:5","nodeType":"VariableDeclaration","scope":2711,"src":"25177:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2655,"name":"uint256","nodeType":"ElementaryTypeName","src":"25177:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2659,"mutability":"mutable","name":"_ruling","nameLocation":"25211:7:5","nodeType":"VariableDeclaration","scope":2711,"src":"25197:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":2658,"nodeType":"UserDefinedTypeName","pathNode":{"id":2657,"name":"RulingOptions","nameLocations":["25197:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"25197:13:5"},"referencedDeclaration":295,"src":"25197:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"src":"25176:43:5"},"returnParameters":{"id":2666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2711,"src":"25284:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2662,"name":"uint256","nodeType":"ElementaryTypeName","src":"25284:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2711,"src":"25293:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2664,"name":"uint256","nodeType":"ElementaryTypeName","src":"25293:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25283:18:5"},"scope":2850,"src":"25152:624:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[667],"body":{"id":2757,"nodeType":"Block","src":"25981:360:5","statements":[{"assignments":[2725],"declarations":[{"constant":false,"id":2725,"mutability":"mutable","name":"isWinner","nameLocation":"25996:8:5","nodeType":"VariableDeclaration","scope":2757,"src":"25991:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2724,"name":"bool","nodeType":"ElementaryTypeName","src":"25991:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2729,"initialValue":{"commonType":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2726,"name":"_lastRoundWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"26007:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2727,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"26027:7:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"src":"26007:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"25991:43:5"},{"assignments":[2731],"declarations":[{"constant":false,"id":2731,"mutability":"mutable","name":"DECIMAL_PRECISION","nameLocation":"26052:17:5","nodeType":"VariableDeclaration","scope":2757,"src":"26044:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2730,"name":"uint256","nodeType":"ElementaryTypeName","src":"26044:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2733,"initialValue":{"hexValue":"31303030","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26072:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"VariableDeclarationStatement","src":"26044:32:5"},{"assignments":[2735],"declarations":[{"constant":false,"id":2735,"mutability":"mutable","name":"multiplier","nameLocation":"26094:10:5","nodeType":"VariableDeclaration","scope":2757,"src":"26086:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"26086:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2740,"initialValue":{"condition":{"id":2736,"name":"isWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"26107:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2738,"name":"LOSER_STAKE_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"26144:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"26107:59:5","trueExpression":{"id":2737,"name":"WINNER_STAKE_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"26118:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26086:80:5"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2741,"name":"WINNER_STAKE_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"26186:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2742,"name":"LOSER_STAKE_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"26212:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26186:48:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2744,"name":"MULTIPLIER_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"26237:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26186:73:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26185:75:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2747,"name":"DECIMAL_PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"26263:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26185:95:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26184:97:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"26297:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2751,"name":"MULTIPLIER_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"26310:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26297:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26296:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26184:149:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26183:151:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2723,"id":2756,"nodeType":"Return","src":"26176:158:5"}]},"documentation":{"id":2712,"nodeType":"StructuredDocumentation","src":"25782:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"b4c70581","id":2758,"implemented":true,"kind":"function","modifiers":[],"name":"getReturnOfInvestmentRatio","nameLocation":"25822:26:5","nodeType":"FunctionDefinition","overrides":{"id":2720,"nodeType":"OverrideSpecifier","overrides":[],"src":"25942:8:5"},"parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"_ruling","nameLocation":"25863:7:5","nodeType":"VariableDeclaration","scope":2758,"src":"25849:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":2714,"nodeType":"UserDefinedTypeName","pathNode":{"id":2713,"name":"RulingOptions","nameLocations":["25849:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"25849:13:5"},"referencedDeclaration":295,"src":"25849:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"},{"constant":false,"id":2718,"mutability":"mutable","name":"_lastRoundWinner","nameLocation":"25886:16:5","nodeType":"VariableDeclaration","scope":2758,"src":"25872:30:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":2717,"nodeType":"UserDefinedTypeName","pathNode":{"id":2716,"name":"RulingOptions","nameLocations":["25872:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"25872:13:5"},"referencedDeclaration":295,"src":"25872:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"src":"25848:55:5"},"returnParameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2758,"src":"25968:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"25968:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25967:9:5"},"scope":2850,"src":"25813:528:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[655],"body":{"id":2848,"nodeType":"Block","src":"26534:696:5","statements":[{"assignments":[2772],"declarations":[{"constant":false,"id":2772,"mutability":"mutable","name":"dispute","nameLocation":"26564:7:5","nodeType":"VariableDeclaration","scope":2848,"src":"26544:27:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"},"typeName":{"id":2771,"nodeType":"UserDefinedTypeName","pathNode":{"id":2770,"name":"DisputeData","nameLocations":["26544:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":747,"src":"26544:11:5"},"referencedDeclaration":747,"src":"26544:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData"}},"visibility":"internal"}],"id":2776,"initialValue":{"baseExpression":{"id":2773,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"26574:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$","typeString":"mapping(uint256 => struct TruthPost.DisputeData storage ref)"}},"id":2775,"indexExpression":{"id":2774,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"26583:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26574:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage","typeString":"struct TruthPost.DisputeData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"26544:50:5"},{"assignments":[2778],"declarations":[{"constant":false,"id":2778,"mutability":"mutable","name":"lastRoundIndex","nameLocation":"26612:14:5","nodeType":"VariableDeclaration","scope":2848,"src":"26604:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"26604:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2784,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2779,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"26629:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":2780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26637:6:5","memberName":"rounds","nodeType":"MemberAccess","referencedDeclaration":746,"src":"26629:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$770_storage_$dyn_storage","typeString":"struct TruthPost.Round storage ref[] storage ref"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26644:6:5","memberName":"length","nodeType":"MemberAccess","src":"26629:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26653:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26629:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26604:50:5"},{"assignments":[2787],"declarations":[{"constant":false,"id":2787,"mutability":"mutable","name":"lastRound","nameLocation":"26678:9:5","nodeType":"VariableDeclaration","scope":2848,"src":"26664:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round"},"typeName":{"id":2786,"nodeType":"UserDefinedTypeName","pathNode":{"id":2785,"name":"Round","nameLocations":["26664:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":770,"src":"26664:5:5"},"referencedDeclaration":770,"src":"26664:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round"}},"visibility":"internal"}],"id":2792,"initialValue":{"baseExpression":{"expression":{"id":2788,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"26690:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":2789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26698:6:5","memberName":"rounds","nodeType":"MemberAccess","referencedDeclaration":746,"src":"26690:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$770_storage_$dyn_storage","typeString":"struct TruthPost.Round storage ref[] storage ref"}},"id":2791,"indexExpression":{"id":2790,"name":"lastRoundIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"26705:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26690:30:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage","typeString":"struct TruthPost.Round storage ref"}},"nodeType":"VariableDeclarationStatement","src":"26664:56:5"},{"assignments":[2794],"declarations":[{"constant":false,"id":2794,"mutability":"mutable","name":"isWinner","nameLocation":"26736:8:5","nodeType":"VariableDeclaration","scope":2848,"src":"26731:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2793,"name":"bool","nodeType":"ElementaryTypeName","src":"26731:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2802,"initialValue":{"commonType":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2797,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"26780:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2796,"name":"getLastRoundWinner","nodeType":"Identifier","overloadedDeclarations":[2653],"referencedDeclaration":2653,"src":"26761:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26761:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2795,"name":"RulingOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"26747:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RulingOptions_$295_$","typeString":"type(enum ITruthPost.RulingOptions)"}},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26747:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2800,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"26796:7:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"src":"26747:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"26731:72:5"},{"assignments":[2804],"declarations":[{"constant":false,"id":2804,"mutability":"mutable","name":"multiplier","nameLocation":"26821:10:5","nodeType":"VariableDeclaration","scope":2848,"src":"26813:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2803,"name":"uint256","nodeType":"ElementaryTypeName","src":"26813:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2809,"initialValue":{"condition":{"id":2805,"name":"isWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"26834:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2807,"name":"LOSER_STAKE_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"26871:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"26834:59:5","trueExpression":{"id":2806,"name":"WINNER_STAKE_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"26845:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26813:80:5"},{"assignments":[2811],"declarations":[{"constant":false,"id":2811,"mutability":"mutable","name":"raisedSoFar","nameLocation":"26912:11:5","nodeType":"VariableDeclaration","scope":2848,"src":"26904:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2810,"name":"uint256","nodeType":"ElementaryTypeName","src":"26904:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2819,"initialValue":{"baseExpression":{"expression":{"id":2812,"name":"lastRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"26926:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$770_storage_ptr","typeString":"struct TruthPost.Round storage pointer"}},"id":2813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26936:14:5","memberName":"totalPerRuling","nodeType":"MemberAccess","referencedDeclaration":767,"src":"26926:24:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":2818,"indexExpression":{"arguments":[{"id":2816,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"26959:7:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}],"id":2815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26951:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"26951:7:5","typeDescriptions":{}}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26951:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26926:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26904:64:5"},{"assignments":[2821],"declarations":[{"constant":false,"id":2821,"mutability":"mutable","name":"basicCost","nameLocation":"26986:9:5","nodeType":"VariableDeclaration","scope":2848,"src":"26978:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"26978:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2830,"initialValue":{"arguments":[{"id":2824,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"27020:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2825,"name":"categoryToArbitratorExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"27032:29:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$64_storage","typeString":"bytes storage ref[64] storage ref"}},"id":2828,"indexExpression":{"expression":{"id":2826,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"27062:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_DisputeData_$747_storage_ptr","typeString":"struct TruthPost.DisputeData storage pointer"}},"id":2827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27070:15:5","memberName":"articleCategory","nodeType":"MemberAccess","referencedDeclaration":738,"src":"27062:23:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27032:54:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"expression":{"id":2822,"name":"ARBITRATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"26998:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrator_$249","typeString":"contract IArbitrator"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27009:10:5","memberName":"appealCost","nodeType":"MemberAccess","referencedDeclaration":221,"src":"26998:21:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,bytes memory) view external returns (uint256)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26998:89:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26978:109:5"},{"assignments":[2832],"declarations":[{"constant":false,"id":2832,"mutability":"mutable","name":"totalCost","nameLocation":"27105:9:5","nodeType":"VariableDeclaration","scope":2848,"src":"27097:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"27097:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2843,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2833,"name":"basicCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"27117:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2834,"name":"basicCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"27131:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"id":2835,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"27144:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27143:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27131:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27130:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2839,"name":"MULTIPLIER_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"27159:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27130:51:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27129:53:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27117:65:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27097:85:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2844,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"27200:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2845,"name":"raisedSoFar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"27212:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27200:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2769,"id":2847,"nodeType":"Return","src":"27193:30:5"}]},"documentation":{"id":2759,"nodeType":"StructuredDocumentation","src":"26347:26:5","text":"@inheritdoc ITruthPost"},"functionSelector":"a509efeb","id":2849,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountRemainsToBeRaised","nameLocation":"26387:26:5","nodeType":"FunctionDefinition","overrides":{"id":2766,"nodeType":"OverrideSpecifier","overrides":[],"src":"26495:8:5"},"parameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"_disputeID","nameLocation":"26422:10:5","nodeType":"VariableDeclaration","scope":2849,"src":"26414:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"26414:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"_ruling","nameLocation":"26448:7:5","nodeType":"VariableDeclaration","scope":2849,"src":"26434:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"},"typeName":{"id":2763,"nodeType":"UserDefinedTypeName","pathNode":{"id":2762,"name":"RulingOptions","nameLocations":["26434:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"26434:13:5"},"referencedDeclaration":295,"src":"26434:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RulingOptions_$295","typeString":"enum ITruthPost.RulingOptions"}},"visibility":"internal"}],"src":"26413:43:5"},"returnParameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2849,"src":"26521:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2767,"name":"uint256","nodeType":"ElementaryTypeName","src":"26521:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26520:9:5"},"scope":2850,"src":"26378:852:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2851,"src":"1105:26127:5","usedErrors":[],"usedEvents":[144,260,272,284,356,360,364,370,374,382,395,408,417,421,425,429,433,437,441,445,449,453]}],"src":"34:27199:5"},"id":5},"contracts/for-testing-purposes/Arbitrator.sol":{"ast":{"absolutePath":"contracts/for-testing-purposes/Arbitrator.sol","exportedSymbols":{"Arbitrator":[3247],"IArbitrable":[153],"IArbitrator":[249]},"id":3248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2852,"literals":["solidity",">=","0.8",".10"],"nodeType":"PragmaDirective","src":"33:25:6"},{"absolutePath":"@kleros/erc-792/contracts/IArbitrable.sol","file":"@kleros/erc-792/contracts/IArbitrable.sol","id":2853,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3248,"sourceUnit":154,"src":"60:51:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@kleros/erc-792/contracts/IArbitrator.sol","file":"@kleros/erc-792/contracts/IArbitrator.sol","id":2854,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3248,"sourceUnit":250,"src":"112:51:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2856,"name":"IArbitrator","nameLocations":["288:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":249,"src":"288:11:6"},"id":2857,"nodeType":"InheritanceSpecifier","src":"288:11:6"}],"canonicalName":"Arbitrator","contractDependencies":[],"contractKind":"contract","documentation":{"id":2855,"nodeType":"StructuredDocumentation","src":"165:99:6","text":"@title An IArbitrator implemetation for testing purposes.\n  @dev DON'T USE ON PRODUCTION."},"fullyImplemented":true,"id":3247,"linearizedBaseContracts":[3247,249],"name":"Arbitrator","nameLocation":"274:10:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"0c340a24","id":2861,"mutability":"mutable","name":"governor","nameLocation":"319:8:6","nodeType":"VariableDeclaration","scope":3247,"src":"304:36:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2858,"name":"address","nodeType":"ElementaryTypeName","src":"304:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"expression":{"id":2859,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"330:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"334:6:6","memberName":"sender","nodeType":"MemberAccess","src":"330:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2864,"mutability":"mutable","name":"arbitrationPrice","nameLocation":"361:16:6","nodeType":"VariableDeclaration","scope":3247,"src":"344:61:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2862,"name":"uint256","nodeType":"ElementaryTypeName","src":"344:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"315f3030305f3030305f3030305f3030305f3030305f303030","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"380:25:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1_000_000_000_000_000_000"},"visibility":"internal"},{"canonicalName":"Arbitrator.Dispute","id":2877,"members":[{"constant":false,"id":2867,"mutability":"mutable","name":"arbitrated","nameLocation":"443:10:6","nodeType":"VariableDeclaration","scope":2877,"src":"431:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"},"typeName":{"id":2866,"nodeType":"UserDefinedTypeName","pathNode":{"id":2865,"name":"IArbitrable","nameLocations":["431:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"431:11:6"},"referencedDeclaration":153,"src":"431:11:6","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"}},"visibility":"internal"},{"constant":false,"id":2869,"mutability":"mutable","name":"appealDeadline","nameLocation":"467:14:6","nodeType":"VariableDeclaration","scope":2877,"src":"459:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2868,"name":"uint256","nodeType":"ElementaryTypeName","src":"459:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2871,"mutability":"mutable","name":"numberOfRulingOptions","nameLocation":"495:21:6","nodeType":"VariableDeclaration","scope":2877,"src":"487:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"487:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2873,"mutability":"mutable","name":"ruling","nameLocation":"530:6:6","nodeType":"VariableDeclaration","scope":2877,"src":"522:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"522:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2876,"mutability":"mutable","name":"status","nameLocation":"556:6:6","nodeType":"VariableDeclaration","scope":2877,"src":"542:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"},"typeName":{"id":2875,"nodeType":"UserDefinedTypeName","pathNode":{"id":2874,"name":"DisputeStatus","nameLocations":["542:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":161,"src":"542:13:6"},"referencedDeclaration":161,"src":"542:13:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"visibility":"internal"}],"name":"Dispute","nameLocation":"417:7:6","nodeType":"StructDefinition","scope":3247,"src":"410:157:6","visibility":"public"},{"body":{"id":2888,"nodeType":"Block","src":"595:88:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2880,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"609:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"613:6:6","memberName":"sender","nodeType":"MemberAccess","src":"609:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2882,"name":"governor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"623:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"609:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e206f6e6c792062652063616c6c65642062792074686520676f7665726e6f722e","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"633:37:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a67387a01b638629562ce413604ca06df839cc408aaf6c072640f1a5c4f2346","typeString":"literal_string \"Can only be called by the governor.\""},"value":"Can only be called by the governor."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0a67387a01b638629562ce413604ca06df839cc408aaf6c072640f1a5c4f2346","typeString":"literal_string \"Can only be called by the governor.\""}],"id":2879,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"601:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"601:70:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2886,"nodeType":"ExpressionStatement","src":"601:70:6"},{"id":2887,"nodeType":"PlaceholderStatement","src":"677:1:6"}]},"id":2889,"name":"onlyGovernor","nameLocation":"580:12:6","nodeType":"ModifierDefinition","parameters":{"id":2878,"nodeType":"ParameterList","parameters":[],"src":"592:2:6"},"src":"571:112:6","virtual":false,"visibility":"internal"},{"constant":false,"functionSelector":"564a565d","id":2893,"mutability":"mutable","name":"disputes","nameLocation":"704:8:6","nodeType":"VariableDeclaration","scope":3247,"src":"687:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage","typeString":"struct Arbitrator.Dispute[]"},"typeName":{"baseType":{"id":2891,"nodeType":"UserDefinedTypeName","pathNode":{"id":2890,"name":"Dispute","nameLocations":["687:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2877,"src":"687:7:6"},"referencedDeclaration":2877,"src":"687:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute"}},"id":2892,"nodeType":"ArrayTypeName","src":"687:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage_ptr","typeString":"struct Arbitrator.Dispute[]"}},"visibility":"public"},{"body":{"id":2904,"nodeType":"Block","src":"795:47:6","statements":[{"expression":{"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2900,"name":"arbitrationPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"801:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2901,"name":"_arbitrationPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"820:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"801:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2903,"nodeType":"ExpressionStatement","src":"801:36:6"}]},"functionSelector":"ffb43c48","id":2905,"implemented":true,"kind":"function","modifiers":[{"id":2898,"kind":"modifierInvocation","modifierName":{"id":2897,"name":"onlyGovernor","nameLocations":["782:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":2889,"src":"782:12:6"},"nodeType":"ModifierInvocation","src":"782:12:6"}],"name":"setArbitrationPrice","nameLocation":"726:19:6","nodeType":"FunctionDefinition","parameters":{"id":2896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"_arbitrationPrice","nameLocation":"754:17:6","nodeType":"VariableDeclaration","scope":2905,"src":"746:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"746:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"745:27:6"},"returnParameters":{"id":2899,"nodeType":"ParameterList","parameters":[],"src":"795:0:6"},"scope":3247,"src":"717:125:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[203],"body":{"id":2915,"nodeType":"Block","src":"928:34:6","statements":[{"expression":{"id":2913,"name":"arbitrationPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"941:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2912,"id":2914,"nodeType":"Return","src":"934:23:6"}]},"functionSelector":"f7434ea9","id":2916,"implemented":true,"kind":"function","modifiers":[],"name":"arbitrationCost","nameLocation":"855:15:6","nodeType":"FunctionDefinition","overrides":{"id":2909,"nodeType":"OverrideSpecifier","overrides":[],"src":"897:8:6"},"parameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2916,"src":"871:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2906,"name":"bytes","nodeType":"ElementaryTypeName","src":"871:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"870:14:6"},"returnParameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"fee","nameLocation":"923:3:6","nodeType":"VariableDeclaration","scope":2916,"src":"915:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"915:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"914:13:6"},"scope":3247,"src":"846:116:6","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[221],"body":{"id":2930,"nodeType":"Block","src":"1052:43:6","statements":[{"expression":{"arguments":[{"hexValue":"554e55534544","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1081:8:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_89e49fe053175ec61609573ccb6bb8748bcf5938b8ef47bb6eafa7f5251ad43f","typeString":"literal_string \"UNUSED\""},"value":"UNUSED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_89e49fe053175ec61609573ccb6bb8748bcf5938b8ef47bb6eafa7f5251ad43f","typeString":"literal_string \"UNUSED\""}],"id":2926,"name":"arbitrationCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"1065:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) view returns (uint256)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2925,"id":2929,"nodeType":"Return","src":"1058:32:6"}]},"functionSelector":"f23f16e6","id":2931,"implemented":true,"kind":"function","modifiers":[],"name":"appealCost","nameLocation":"975:10:6","nodeType":"FunctionDefinition","overrides":{"id":2922,"nodeType":"OverrideSpecifier","overrides":[],"src":"1021:8:6"},"parameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2931,"src":"986:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"986:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2931,"src":"995:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2919,"name":"bytes","nodeType":"ElementaryTypeName","src":"995:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"985:23:6"},"returnParameters":{"id":2925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"fee","nameLocation":"1047:3:6","nodeType":"VariableDeclaration","scope":2931,"src":"1039:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2923,"name":"uint256","nodeType":"ElementaryTypeName","src":"1039:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:13:6"},"scope":3247,"src":"966:129:6","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[195],"body":{"id":2986,"nodeType":"Block","src":"1217:473:6","statements":[{"assignments":[2942],"declarations":[{"constant":false,"id":2942,"mutability":"mutable","name":"arbitrationFee","nameLocation":"1231:14:6","nodeType":"VariableDeclaration","scope":2986,"src":"1223:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2946,"initialValue":{"arguments":[{"id":2944,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"1264:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2943,"name":"arbitrationCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"1248:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) view returns (uint256)"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1248:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1223:52:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2948,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1289:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1293:5:6","memberName":"value","nodeType":"MemberAccess","src":"1289:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2950,"name":"arbitrationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"1302:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1289:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56616c7565206973206c657373207468616e207265717569726564206172626974726174696f6e206665652e","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1318:46:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed65b2f49f93967b3a006e2788127dd02ebf255edcbc59f8b4e80c9299e6eca3","typeString":"literal_string \"Value is less than required arbitration fee.\""},"value":"Value is less than required arbitration fee."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed65b2f49f93967b3a006e2788127dd02ebf255edcbc59f8b4e80c9299e6eca3","typeString":"literal_string \"Value is less than required arbitration fee.\""}],"id":2947,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1281:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1281:84:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2954,"nodeType":"ExpressionStatement","src":"1281:84:6"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2960,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1434:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1438:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1434:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2959,"name":"IArbitrable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"1422:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IArbitrable_$153_$","typeString":"type(contract IArbitrable)"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"}},{"id":2963,"name":"_choices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"1478:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1504:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":2965,"name":"DisputeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"1523:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DisputeStatus_$161_$","typeString":"type(enum IArbitrator.DisputeStatus)"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1537:7:6","memberName":"Waiting","nodeType":"MemberAccess","referencedDeclaration":158,"src":"1523:21:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},{"hexValue":"30","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1570:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2958,"name":"Dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"1392:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Dispute_$2877_storage_ptr_$","typeString":"type(struct Arbitrator.Dispute storage pointer)"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1410:10:6","1455:21:6","1496:6:6","1515:6:6","1554:14:6"],"names":["arbitrated","numberOfRulingOptions","ruling","status","appealDeadline"],"nodeType":"FunctionCall","src":"1392:188:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_memory_ptr","typeString":"struct Arbitrator.Dispute memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Dispute_$2877_memory_ptr","typeString":"struct Arbitrator.Dispute memory"}],"expression":{"id":2955,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"1371:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage","typeString":"struct Arbitrator.Dispute storage ref[] storage ref"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1380:4:6","memberName":"push","nodeType":"MemberAccess","src":"1371:13:6","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage_ptr_$_t_struct$_Dispute_$2877_storage_$returns$__$attached_to$_t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage_ptr_$","typeString":"function (struct Arbitrator.Dispute storage ref[] storage pointer,struct Arbitrator.Dispute storage ref)"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1371:215:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2970,"nodeType":"ExpressionStatement","src":"1371:215:6"},{"expression":{"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2971,"name":"disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"1592:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2972,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"1604:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage","typeString":"struct Arbitrator.Dispute storage ref[] storage ref"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1613:6:6","memberName":"length","nodeType":"MemberAccess","src":"1604:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1622:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1604:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1592:31:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2977,"nodeType":"ExpressionStatement","src":"1592:31:6"},{"eventCall":{"arguments":[{"id":2979,"name":"disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"1650:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":2981,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1673:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1677:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1673:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2980,"name":"IArbitrable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"1661:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IArbitrable_$153_$","typeString":"type(contract IArbitrable)"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1661:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"}],"id":2978,"name":"DisputeCreation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1634:15:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_contract$_IArbitrable_$153_$returns$__$","typeString":"function (uint256,contract IArbitrable)"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1634:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2985,"nodeType":"EmitStatement","src":"1629:56:6"}]},"functionSelector":"c13517e1","id":2987,"implemented":true,"kind":"function","modifiers":[],"name":"createDispute","nameLocation":"1108:13:6","nodeType":"FunctionDefinition","overrides":{"id":2937,"nodeType":"OverrideSpecifier","overrides":[],"src":"1180:8:6"},"parameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"_choices","nameLocation":"1130:8:6","nodeType":"VariableDeclaration","scope":2987,"src":"1122:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1122:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"_extraData","nameLocation":"1153:10:6","nodeType":"VariableDeclaration","scope":2987,"src":"1140:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2934,"name":"bytes","nodeType":"ElementaryTypeName","src":"1140:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1121:43:6"},"returnParameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"disputeID","nameLocation":"1206:9:6","nodeType":"VariableDeclaration","scope":2987,"src":"1198:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2938,"name":"uint256","nodeType":"ElementaryTypeName","src":"1198:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1197:19:6"},"scope":3247,"src":"1099:591:6","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3050,"nodeType":"Block","src":"1812:431:6","statements":[{"assignments":[3000],"declarations":[{"constant":false,"id":3000,"mutability":"mutable","name":"dispute","nameLocation":"1834:7:6","nodeType":"VariableDeclaration","scope":3050,"src":"1818:23:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute"},"typeName":{"id":2999,"nodeType":"UserDefinedTypeName","pathNode":{"id":2998,"name":"Dispute","nameLocations":["1818:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2877,"src":"1818:7:6"},"referencedDeclaration":2877,"src":"1818:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute"}},"visibility":"internal"}],"id":3004,"initialValue":{"baseExpression":{"id":3001,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"1844:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage","typeString":"struct Arbitrator.Dispute storage ref[] storage ref"}},"id":3003,"indexExpression":{"id":3002,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"1853:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1844:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage","typeString":"struct Arbitrator.Dispute storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1818:46:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3006,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"1878:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3007,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"1889:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1897:21:6","memberName":"numberOfRulingOptions","nodeType":"MemberAccess","referencedDeclaration":2871,"src":"1889:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1878:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642072756c696e672e","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1920:17:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6","typeString":"literal_string \"Invalid ruling.\""},"value":"Invalid ruling."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6","typeString":"literal_string \"Invalid ruling.\""}],"id":3005,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1870:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1870:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3012,"nodeType":"ExpressionStatement","src":"1870:68:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3014,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"1952:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1960:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2876,"src":"1952:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3016,"name":"DisputeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"1970:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DisputeStatus_$161_$","typeString":"type(enum IArbitrator.DisputeStatus)"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1984:7:6","memberName":"Waiting","nodeType":"MemberAccess","referencedDeclaration":158,"src":"1970:21:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"src":"1952:39:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652064697370757465206d7573742062652077616974696e6720666f72206172626974726174696f6e2e","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1993:46:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634","typeString":"literal_string \"The dispute must be waiting for arbitration.\""},"value":"The dispute must be waiting for arbitration."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634","typeString":"literal_string \"The dispute must be waiting for arbitration.\""}],"id":3013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1944:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1944:96:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3021,"nodeType":"ExpressionStatement","src":"1944:96:6"},{"expression":{"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3022,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"2047:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2055:6:6","memberName":"ruling","nodeType":"MemberAccess","referencedDeclaration":2873,"src":"2047:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3025,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"2064:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2047:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3027,"nodeType":"ExpressionStatement","src":"2047:24:6"},{"expression":{"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3028,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"2077:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2085:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2876,"src":"2077:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3031,"name":"DisputeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2094:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DisputeStatus_$161_$","typeString":"type(enum IArbitrator.DisputeStatus)"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2108:10:6","memberName":"Appealable","nodeType":"MemberAccess","referencedDeclaration":159,"src":"2094:24:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"src":"2077:41:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"id":3034,"nodeType":"ExpressionStatement","src":"2077:41:6"},{"expression":{"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3035,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"2124:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2132:14:6","memberName":"appealDeadline","nodeType":"MemberAccess","referencedDeclaration":2869,"src":"2124:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3038,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2149:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2155:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"2149:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3040,"name":"_appealWindow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"2167:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2149:31:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2124:56:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3043,"nodeType":"ExpressionStatement","src":"2124:56:6"},{"eventCall":{"arguments":[{"id":3045,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"2207:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3046,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"2219:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2227:10:6","memberName":"arbitrated","nodeType":"MemberAccess","referencedDeclaration":2867,"src":"2219:18:6","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"}],"id":3044,"name":"AppealPossible","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"2192:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_contract$_IArbitrable_$153_$returns$__$","typeString":"function (uint256,contract IArbitrable)"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3049,"nodeType":"EmitStatement","src":"2187:51:6"}]},"functionSelector":"bc97d0f3","id":3051,"implemented":true,"kind":"function","modifiers":[{"id":2996,"kind":"modifierInvocation","modifierName":{"id":2995,"name":"onlyGovernor","nameLocations":["1799:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":2889,"src":"1799:12:6"},"nodeType":"ModifierInvocation","src":"1799:12:6"}],"name":"giveRuling","nameLocation":"1703:10:6","nodeType":"FunctionDefinition","parameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2989,"mutability":"mutable","name":"_disputeID","nameLocation":"1727:10:6","nodeType":"VariableDeclaration","scope":3051,"src":"1719:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2988,"name":"uint256","nodeType":"ElementaryTypeName","src":"1719:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2991,"mutability":"mutable","name":"_ruling","nameLocation":"1751:7:6","nodeType":"VariableDeclaration","scope":3051,"src":"1743:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2990,"name":"uint256","nodeType":"ElementaryTypeName","src":"1743:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"_appealWindow","nameLocation":"1772:13:6","nodeType":"VariableDeclaration","scope":3051,"src":"1764:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1713:76:6"},"returnParameters":{"id":2997,"nodeType":"ParameterList","parameters":[],"src":"1812:0:6"},"scope":3247,"src":"1694:549:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[211],"body":{"id":3120,"nodeType":"Block","src":"2332:544:6","statements":[{"assignments":[3061],"declarations":[{"constant":false,"id":3061,"mutability":"mutable","name":"dispute","nameLocation":"2354:7:6","nodeType":"VariableDeclaration","scope":3120,"src":"2338:23:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute"},"typeName":{"id":3060,"nodeType":"UserDefinedTypeName","pathNode":{"id":3059,"name":"Dispute","nameLocations":["2338:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2877,"src":"2338:7:6"},"referencedDeclaration":2877,"src":"2338:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute"}},"visibility":"internal"}],"id":3065,"initialValue":{"baseExpression":{"id":3062,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2364:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage","typeString":"struct Arbitrator.Dispute storage ref[] storage ref"}},"id":3064,"indexExpression":{"id":3063,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"2373:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2364:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage","typeString":"struct Arbitrator.Dispute storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2338:46:6"},{"assignments":[3067],"declarations":[{"constant":false,"id":3067,"mutability":"mutable","name":"appealFee","nameLocation":"2398:9:6","nodeType":"VariableDeclaration","scope":3120,"src":"2390:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3066,"name":"uint256","nodeType":"ElementaryTypeName","src":"2390:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3072,"initialValue":{"arguments":[{"id":3069,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"2421:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3070,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"2433:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3068,"name":"appealCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"2410:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,bytes memory) view returns (uint256)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2410:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2390:54:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3074,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"2458:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2466:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2876,"src":"2458:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3076,"name":"DisputeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2476:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DisputeStatus_$161_$","typeString":"type(enum IArbitrator.DisputeStatus)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2490:10:6","memberName":"Appealable","nodeType":"MemberAccess","referencedDeclaration":159,"src":"2476:24:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"src":"2458:42:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652064697370757465206d7573742062652061707065616c61626c652e","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2502:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1","typeString":"literal_string \"The dispute must be appealable.\""},"value":"The dispute must be appealable."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1","typeString":"literal_string \"The dispute must be appealable.\""}],"id":3073,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2450:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2450:86:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3081,"nodeType":"ExpressionStatement","src":"2450:86:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3083,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2550:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"2550:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3085,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"2568:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2576:14:6","memberName":"appealDeadline","nodeType":"MemberAccess","referencedDeclaration":2869,"src":"2568:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2550:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652061707065616c206d757374206f63637572206265666f72652074686520656e64206f66207468652061707065616c20706572696f642e","id":3088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2592:60:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_785e30534d9aba417fa2efee2cef6269679d346420799f1ee0b4c1d9e65f4259","typeString":"literal_string \"The appeal must occur before the end of the appeal period.\""},"value":"The appeal must occur before the end of the appeal period."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_785e30534d9aba417fa2efee2cef6269679d346420799f1ee0b4c1d9e65f4259","typeString":"literal_string \"The appeal must occur before the end of the appeal period.\""}],"id":3082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2542:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:111:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3090,"nodeType":"ExpressionStatement","src":"2542:111:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3092,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2667:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2671:5:6","memberName":"value","nodeType":"MemberAccess","src":"2667:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3094,"name":"appealFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"2680:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2667:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56616c7565206973206c657373207468616e2072657175697265642061707065616c20666565","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2691:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_4694def74d735a2c889563bbe682a7dedbe5ed436ba455a7b4f1b1153e6eb3c0","typeString":"literal_string \"Value is less than required appeal fee\""},"value":"Value is less than required appeal fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4694def74d735a2c889563bbe682a7dedbe5ed436ba455a7b4f1b1153e6eb3c0","typeString":"literal_string \"Value is less than required appeal fee\""}],"id":3091,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2659:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2659:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3098,"nodeType":"ExpressionStatement","src":"2659:73:6"},{"expression":{"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3099,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"2739:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2747:14:6","memberName":"appealDeadline","nodeType":"MemberAccess","referencedDeclaration":2869,"src":"2739:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2764:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2739:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3104,"nodeType":"ExpressionStatement","src":"2739:26:6"},{"expression":{"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3105,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"2771:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2779:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2876,"src":"2771:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3108,"name":"DisputeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2788:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DisputeStatus_$161_$","typeString":"type(enum IArbitrator.DisputeStatus)"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2802:7:6","memberName":"Waiting","nodeType":"MemberAccess","referencedDeclaration":158,"src":"2788:21:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"src":"2771:38:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"id":3111,"nodeType":"ExpressionStatement","src":"2771:38:6"},{"eventCall":{"arguments":[{"id":3113,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"2835:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":3115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2859:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2863:6:6","memberName":"sender","nodeType":"MemberAccess","src":"2859:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3114,"name":"IArbitrable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"2847:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IArbitrable_$153_$","typeString":"type(contract IArbitrable)"}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2847:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"}],"id":3112,"name":"AppealDecision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"2820:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_contract$_IArbitrable_$153_$returns$__$","typeString":"function (uint256,contract IArbitrable)"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2820:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3119,"nodeType":"EmitStatement","src":"2815:56:6"}]},"functionSelector":"49912f88","id":3121,"implemented":true,"kind":"function","modifiers":[],"name":"appeal","nameLocation":"2256:6:6","nodeType":"FunctionDefinition","overrides":{"id":3057,"nodeType":"OverrideSpecifier","overrides":[],"src":"2323:8:6"},"parameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3053,"mutability":"mutable","name":"_disputeID","nameLocation":"2271:10:6","nodeType":"VariableDeclaration","scope":3121,"src":"2263:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3055,"mutability":"mutable","name":"_extraData","nameLocation":"2296:10:6","nodeType":"VariableDeclaration","scope":3121,"src":"2283:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3054,"name":"bytes","nodeType":"ElementaryTypeName","src":"2283:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2262:45:6"},"returnParameters":{"id":3058,"nodeType":"ParameterList","parameters":[],"src":"2332:0:6"},"scope":3247,"src":"2247:629:6","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3168,"nodeType":"Block","src":"2932:373:6","statements":[{"assignments":[3128],"declarations":[{"constant":false,"id":3128,"mutability":"mutable","name":"dispute","nameLocation":"2954:7:6","nodeType":"VariableDeclaration","scope":3168,"src":"2938:23:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute"},"typeName":{"id":3127,"nodeType":"UserDefinedTypeName","pathNode":{"id":3126,"name":"Dispute","nameLocations":["2938:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2877,"src":"2938:7:6"},"referencedDeclaration":2877,"src":"2938:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute"}},"visibility":"internal"}],"id":3132,"initialValue":{"baseExpression":{"id":3129,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2964:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage","typeString":"struct Arbitrator.Dispute storage ref[] storage ref"}},"id":3131,"indexExpression":{"id":3130,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"2973:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2964:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage","typeString":"struct Arbitrator.Dispute storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2938:46:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3134,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"2998:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3006:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2876,"src":"2998:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3136,"name":"DisputeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"3016:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DisputeStatus_$161_$","typeString":"type(enum IArbitrator.DisputeStatus)"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3030:10:6","memberName":"Appealable","nodeType":"MemberAccess","referencedDeclaration":159,"src":"3016:24:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"src":"2998:42:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652064697370757465206d7573742062652061707065616c61626c652e","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3042:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1","typeString":"literal_string \"The dispute must be appealable.\""},"value":"The dispute must be appealable."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1","typeString":"literal_string \"The dispute must be appealable.\""}],"id":3133,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2990:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2990:86:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3141,"nodeType":"ExpressionStatement","src":"2990:86:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3143,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3090:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3096:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"3090:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3145,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"3109:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3117:14:6","memberName":"appealDeadline","nodeType":"MemberAccess","referencedDeclaration":2869,"src":"3109:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3090:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652064697370757465206d757374206265206578656375746564206166746572206974732061707065616c20706572696f642068617320656e6465642e","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3133:65:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ffb16c8c515bb19f47e2c39c4abe69591900df2f6712a42bdbaeaacd81aaa88","typeString":"literal_string \"The dispute must be executed after its appeal period has ended.\""},"value":"The dispute must be executed after its appeal period has ended."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4ffb16c8c515bb19f47e2c39c4abe69591900df2f6712a42bdbaeaacd81aaa88","typeString":"literal_string \"The dispute must be executed after its appeal period has ended.\""}],"id":3142,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3082:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3082:117:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3150,"nodeType":"ExpressionStatement","src":"3082:117:6"},{"expression":{"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3151,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"3206:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3214:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2876,"src":"3206:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3154,"name":"DisputeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"3223:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DisputeStatus_$161_$","typeString":"type(enum IArbitrator.DisputeStatus)"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3237:6:6","memberName":"Solved","nodeType":"MemberAccess","referencedDeclaration":160,"src":"3223:20:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"src":"3206:37:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"id":3157,"nodeType":"ExpressionStatement","src":"3206:37:6"},{"expression":{"arguments":[{"id":3163,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"3273:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3164,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"3285:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3293:6:6","memberName":"ruling","nodeType":"MemberAccess","referencedDeclaration":2873,"src":"3285:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":3158,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"3249:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3257:10:6","memberName":"arbitrated","nodeType":"MemberAccess","referencedDeclaration":2867,"src":"3249:18:6","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$153","typeString":"contract IArbitrable"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3268:4:6","memberName":"rule","nodeType":"MemberAccess","referencedDeclaration":152,"src":"3249:23:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3167,"nodeType":"ExpressionStatement","src":"3249:51:6"}]},"functionSelector":"8bb04875","id":3169,"implemented":true,"kind":"function","modifiers":[],"name":"executeRuling","nameLocation":"2889:13:6","nodeType":"FunctionDefinition","parameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"_disputeID","nameLocation":"2911:10:6","nodeType":"VariableDeclaration","scope":3169,"src":"2903:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3122,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:20:6"},"returnParameters":{"id":3125,"nodeType":"ParameterList","parameters":[],"src":"2932:0:6"},"scope":3247,"src":"2880:425:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[240],"body":{"id":3207,"nodeType":"Block","src":"3404:343:6","statements":[{"assignments":[3180],"declarations":[{"constant":false,"id":3180,"mutability":"mutable","name":"dispute","nameLocation":"3426:7:6","nodeType":"VariableDeclaration","scope":3207,"src":"3410:23:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute"},"typeName":{"id":3179,"nodeType":"UserDefinedTypeName","pathNode":{"id":3178,"name":"Dispute","nameLocations":["3410:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2877,"src":"3410:7:6"},"referencedDeclaration":2877,"src":"3410:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute"}},"visibility":"internal"}],"id":3184,"initialValue":{"baseExpression":{"id":3181,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"3436:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage","typeString":"struct Arbitrator.Dispute storage ref[] storage ref"}},"id":3183,"indexExpression":{"id":3182,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"3445:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3436:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage","typeString":"struct Arbitrator.Dispute storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3410:46:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3185,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"3466:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage","typeString":"struct Arbitrator.Dispute storage ref[] storage ref"}},"id":3187,"indexExpression":{"id":3186,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"3475:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3466:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage","typeString":"struct Arbitrator.Dispute storage ref"}},"id":3188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3487:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2876,"src":"3466:27:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3189,"name":"DisputeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"3497:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DisputeStatus_$161_$","typeString":"type(enum IArbitrator.DisputeStatus)"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3511:10:6","memberName":"Appealable","nodeType":"MemberAccess","referencedDeclaration":159,"src":"3497:24:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"src":"3466:55:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3192,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3525:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3531:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"3525:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3194,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"3544:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3552:14:6","memberName":"appealDeadline","nodeType":"MemberAccess","referencedDeclaration":2869,"src":"3544:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3525:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3466:100:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"baseExpression":{"id":3201,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"3715:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage","typeString":"struct Arbitrator.Dispute storage ref[] storage ref"}},"id":3203,"indexExpression":{"id":3202,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"3724:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3715:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage","typeString":"struct Arbitrator.Dispute storage ref"}},"id":3204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3736:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2876,"src":"3715:27:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"functionReturnParameters":3177,"id":3205,"nodeType":"Return","src":"3708:34:6"},"id":3206,"nodeType":"IfStatement","src":"3462:280:6","trueBody":{"expression":{"expression":{"id":3198,"name":"DisputeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"3677:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DisputeStatus_$161_$","typeString":"type(enum IArbitrator.DisputeStatus)"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3691:6:6","memberName":"Solved","nodeType":"MemberAccess","referencedDeclaration":160,"src":"3677:20:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"functionReturnParameters":3177,"id":3200,"nodeType":"Return","src":"3670:27:6"}}]},"functionSelector":"10f169e8","id":3208,"implemented":true,"kind":"function","modifiers":[],"name":"disputeStatus","nameLocation":"3318:13:6","nodeType":"FunctionDefinition","overrides":{"id":3173,"nodeType":"OverrideSpecifier","overrides":[],"src":"3364:8:6"},"parameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"_disputeID","nameLocation":"3340:10:6","nodeType":"VariableDeclaration","scope":3208,"src":"3332:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"3332:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3331:20:6"},"returnParameters":{"id":3177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3176,"mutability":"mutable","name":"status","nameLocation":"3396:6:6","nodeType":"VariableDeclaration","scope":3208,"src":"3382:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"},"typeName":{"id":3175,"nodeType":"UserDefinedTypeName","pathNode":{"id":3174,"name":"DisputeStatus","nameLocations":["3382:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":161,"src":"3382:13:6"},"referencedDeclaration":161,"src":"3382:13:6","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$161","typeString":"enum IArbitrator.DisputeStatus"}},"visibility":"internal"}],"src":"3381:22:6"},"scope":3247,"src":"3309:438:6","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[248],"body":{"id":3221,"nodeType":"Block","src":"3840:45:6","statements":[{"expression":{"expression":{"baseExpression":{"id":3216,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"3853:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage","typeString":"struct Arbitrator.Dispute storage ref[] storage ref"}},"id":3218,"indexExpression":{"id":3217,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"3862:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3853:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage","typeString":"struct Arbitrator.Dispute storage ref"}},"id":3219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3874:6:6","memberName":"ruling","nodeType":"MemberAccess","referencedDeclaration":2873,"src":"3853:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3215,"id":3220,"nodeType":"Return","src":"3846:34:6"}]},"functionSelector":"1c3db16d","id":3222,"implemented":true,"kind":"function","modifiers":[],"name":"currentRuling","nameLocation":"3760:13:6","nodeType":"FunctionDefinition","overrides":{"id":3212,"nodeType":"OverrideSpecifier","overrides":[],"src":"3806:8:6"},"parameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"_disputeID","nameLocation":"3782:10:6","nodeType":"VariableDeclaration","scope":3222,"src":"3774:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3209,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3773:20:6"},"returnParameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"ruling","nameLocation":"3832:6:6","nodeType":"VariableDeclaration","scope":3222,"src":"3824:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint256","nodeType":"ElementaryTypeName","src":"3824:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3823:16:6"},"scope":3247,"src":"3751:134:6","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[231],"body":{"id":3245,"nodeType":"Block","src":"3989:111:6","statements":[{"assignments":[3234],"declarations":[{"constant":false,"id":3234,"mutability":"mutable","name":"dispute","nameLocation":"4011:7:6","nodeType":"VariableDeclaration","scope":3245,"src":"3995:23:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute"},"typeName":{"id":3233,"nodeType":"UserDefinedTypeName","pathNode":{"id":3232,"name":"Dispute","nameLocations":["3995:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2877,"src":"3995:7:6"},"referencedDeclaration":2877,"src":"3995:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute"}},"visibility":"internal"}],"id":3238,"initialValue":{"baseExpression":{"id":3235,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"4021:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage","typeString":"struct Arbitrator.Dispute storage ref[] storage ref"}},"id":3237,"indexExpression":{"id":3236,"name":"_disputeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"4030:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4021:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage","typeString":"struct Arbitrator.Dispute storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3995:46:6"},{"expression":{"components":[{"expression":{"id":3239,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4055:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4061:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"4055:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3241,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"4072:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$2877_storage_ptr","typeString":"struct Arbitrator.Dispute storage pointer"}},"id":3242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:14:6","memberName":"appealDeadline","nodeType":"MemberAccess","referencedDeclaration":2869,"src":"4072:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4054:41:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3231,"id":3244,"nodeType":"Return","src":"4047:48:6"}]},"functionSelector":"afe15cfb","id":3246,"implemented":true,"kind":"function","modifiers":[],"name":"appealPeriod","nameLocation":"3898:12:6","nodeType":"FunctionDefinition","overrides":{"id":3226,"nodeType":"OverrideSpecifier","overrides":[],"src":"3943:8:6"},"parameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"_disputeID","nameLocation":"3919:10:6","nodeType":"VariableDeclaration","scope":3246,"src":"3911:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3911:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3910:20:6"},"returnParameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"start","nameLocation":"3969:5:6","nodeType":"VariableDeclaration","scope":3246,"src":"3961:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3227,"name":"uint256","nodeType":"ElementaryTypeName","src":"3961:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3230,"mutability":"mutable","name":"end","nameLocation":"3984:3:6","nodeType":"VariableDeclaration","scope":3246,"src":"3976:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3976:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3960:28:6"},"scope":3247,"src":"3889:211:6","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3248,"src":"265:3837:6","usedErrors":[],"usedEvents":[169,177,185]}],"src":"33:4070:6"},"id":6}},"contracts":{"@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol":{"IDisputeResolver":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_localDisputeID","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"_round","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"ruling","type":"uint256"},{"indexed":true,"internalType":"address","name":"_contributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"Contribution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IArbitrator","name":"_arbitrator","type":"address"},{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_metaEvidenceID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_evidenceGroupID","type":"uint256"}],"name":"Dispute","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IArbitrator","name":"_arbitrator","type":"address"},{"indexed":true,"internalType":"uint256","name":"_evidenceGroupID","type":"uint256"},{"indexed":true,"internalType":"address","name":"_party","type":"address"},{"indexed":false,"internalType":"string","name":"_evidence","type":"string"}],"name":"Evidence","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_metaEvidenceID","type":"uint256"},{"indexed":false,"internalType":"string","name":"_evidence","type":"string"}],"name":"MetaEvidence","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IArbitrator","name":"_arbitrator","type":"address"},{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_ruling","type":"uint256"}],"name":"Ruling","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_localDisputeID","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"_round","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"_ruling","type":"uint256"}],"name":"RulingFunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_localDisputeID","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"_round","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_ruling","type":"uint256"},{"indexed":true,"internalType":"address","name":"_contributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"_reward","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_externalDisputeID","type":"uint256"}],"name":"externalIDtoLocalID","outputs":[{"internalType":"uint256","name":"localDisputeID","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_localDisputeID","type":"uint256"},{"internalType":"uint256","name":"_ruling","type":"uint256"}],"name":"fundAppeal","outputs":[{"internalType":"bool","name":"fullyFunded","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getMultipliers","outputs":[{"internalType":"uint256","name":"winnerStakeMultiplier","type":"uint256"},{"internalType":"uint256","name":"loserStakeMultiplier","type":"uint256"},{"internalType":"uint256","name":"loserAppealPeriodMultiplier","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_localDisputeID","type":"uint256"},{"internalType":"address payable","name":"_contributor","type":"address"},{"internalType":"uint256","name":"_ruling","type":"uint256"}],"name":"getTotalWithdrawableAmount","outputs":[{"internalType":"uint256","name":"sum","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_localDisputeID","type":"uint256"}],"name":"numberOfRulingOptions","outputs":[{"internalType":"uint256","name":"count","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"uint256","name":"_ruling","type":"uint256"}],"name":"rule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_localDisputeID","type":"uint256"},{"internalType":"string","name":"_evidenceURI","type":"string"}],"name":"submitEvidence","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_localDisputeID","type":"uint256"},{"internalType":"address payable","name":"_contributor","type":"address"},{"internalType":"uint256","name":"_round","type":"uint256"},{"internalType":"uint256","name":"_ruling","type":"uint256"}],"name":"withdrawFeesAndRewards","outputs":[{"internalType":"uint256","name":"sum","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_localDisputeID","type":"uint256"},{"internalType":"address payable","name":"_contributor","type":"address"},{"internalType":"uint256","name":"_ruling","type":"uint256"}],"name":"withdrawFeesAndRewardsForAllRounds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Contribution(uint256,uint256,uint256,address,uint256)":{"details":"Raised when a contribution is made, inside fundAppeal function.","params":{"_amount":"Contribution amount.","_contributor":"Caller of fundAppeal function.","_localDisputeID":"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.","_round":"The round number the contribution was made to.","ruling":"Indicates the ruling option which got the contribution."}},"Dispute(address,uint256,uint256,uint256)":{"details":"To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.","params":{"_arbitrator":"The arbitrator of the contract.","_disputeID":"ID of the dispute in the Arbitrator contract.","_evidenceGroupID":"Unique identifier of the evidence group that is linked to this dispute.","_metaEvidenceID":"Unique identifier of meta-evidence."}},"Evidence(address,uint256,address,string)":{"details":"To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).","params":{"_arbitrator":"The arbitrator of the contract.","_evidence":"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'","_evidenceGroupID":"Unique identifier of the evidence group the evidence belongs to.","_party":"The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party."}},"MetaEvidence(uint256,string)":{"details":"To be emitted when meta-evidence is submitted.","params":{"_evidence":"IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'","_metaEvidenceID":"Unique identifier of meta-evidence."}},"Ruling(address,uint256,uint256)":{"details":"To be raised when a ruling is given.","params":{"_arbitrator":"The arbitrator giving the ruling.","_disputeID":"ID of the dispute in the Arbitrator contract.","_ruling":"The ruling which was given."}},"RulingFunded(uint256,uint256,uint256)":{"details":"To be raised when a ruling option is fully funded for appeal.","params":{"_localDisputeID":"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.","_round":"Number of the round this ruling option was fully funded in.","_ruling":"The ruling option which just got fully funded."}},"Withdrawal(uint256,uint256,uint256,address,uint256)":{"details":"Raised when a contributor withdraws non-zero value.","params":{"_contributor":"The beneficiary of withdrawal.","_localDisputeID":"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.","_reward":"Total amount of withdrawal, consists of reimbursed deposits plus rewards.","_round":"The round number the withdrawal was made from.","_ruling":"Indicates the ruling option which contributor gets rewards from."}}},"kind":"dev","methods":{"externalIDtoLocalID(uint256)":{"details":"Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.","params":{"_externalDisputeID":"Dispute id as in arbitrator contract."},"returns":{"localDisputeID":"Dispute id as in arbitrable contract."}},"fundAppeal(uint256,uint256)":{"details":"Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.","params":{"_localDisputeID":"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.","_ruling":"The ruling option to which the caller wants to contribute."},"returns":{"fullyFunded":"True if the ruling option got fully funded as a result of this contribution."}},"getMultipliers()":{"details":"Returns appeal multipliers.","returns":{"denominator":"Multiplier denominator in basis points.","loserAppealPeriodMultiplier":"Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.","loserStakeMultiplier":"Losers stake multiplier.","winnerStakeMultiplier":"Winners stake multiplier."}},"getTotalWithdrawableAmount(uint256,address,uint256)":{"details":"Returns the sum of withdrawable amount.","params":{"_contributor":"Beneficiary of withdraw operation.","_localDisputeID":"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.","_ruling":"Ruling option that caller wants to get withdrawable amount from."},"returns":{"sum":"The total amount available to withdraw."}},"numberOfRulingOptions(uint256)":{"details":"Returns number of possible ruling options. Valid rulings are [0, return value].","params":{"_localDisputeID":"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID."},"returns":{"count":"The number of ruling options."}},"rule(uint256,uint256)":{"details":"Give a ruling for a dispute. Must be called by the arbitrator. The purpose of this function is to ensure that the address calling it has the right to rule on the contract.","params":{"_disputeID":"ID of the dispute in the Arbitrator contract.","_ruling":"Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\"."}},"submitEvidence(uint256,string)":{"details":"Allows to submit evidence for a given dispute.","params":{"_evidenceURI":"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'","_localDisputeID":"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID."}},"withdrawFeesAndRewards(uint256,address,uint256,uint256)":{"details":"Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.","params":{"_contributor":"Beneficiary of withdraw operation.","_localDisputeID":"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.","_round":"Number of the round that caller wants to execute withdraw on.","_ruling":"A ruling option that caller wants to execute withdraw on."},"returns":{"sum":"The amount that is going to be transferred to contributor as a result of this function call."}},"withdrawFeesAndRewardsForAllRounds(uint256,address,uint256)":{"details":"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.","params":{"_contributor":"Beneficiary of withdraw operation.","_localDisputeID":"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.","_ruling":"Ruling option that caller wants to execute withdraw on."}}},"title":"This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet. This interface is used in Dispute Resolver (resolve.kleros.io).","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"VERSION()":"ffa1ad74","externalIDtoLocalID(uint256)":"c21ae061","fundAppeal(uint256,uint256)":"4b2f0ea0","getMultipliers()":"79873f8a","getTotalWithdrawableAmount(uint256,address,uint256)":"ec85635b","numberOfRulingOptions(uint256)":"8d8b2d7e","rule(uint256,uint256)":"311a6c56","submitEvidence(uint256,string)":"a6a7f0eb","withdrawFeesAndRewards(uint256,address,uint256,uint256)":"362c3479","withdrawFeesAndRewardsForAllRounds(uint256,address,uint256)":"fe2dddeb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"}],\"name\":\"Dispute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_party\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"Evidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"MetaEvidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"Ruling\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"RulingFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_externalDisputeID\",\"type\":\"uint256\"}],\"name\":\"externalIDtoLocalID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"localDisputeID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"fundAppeal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fullyFunded\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMultipliers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winnerStakeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loserStakeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loserAppealPeriodMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"getTotalWithdrawableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"}],\"name\":\"numberOfRulingOptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"rule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_evidenceURI\",\"type\":\"string\"}],\"name\":\"submitEvidence\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"withdrawFeesAndRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"withdrawFeesAndRewardsForAllRounds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Contribution(uint256,uint256,uint256,address,uint256)\":{\"details\":\"Raised when a contribution is made, inside fundAppeal function.\",\"params\":{\"_amount\":\"Contribution amount.\",\"_contributor\":\"Caller of fundAppeal function.\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_round\":\"The round number the contribution was made to.\",\"ruling\":\"Indicates the ruling option which got the contribution.\"}},\"Dispute(address,uint256,uint256,uint256)\":{\"details\":\"To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.\",\"params\":{\"_arbitrator\":\"The arbitrator of the contract.\",\"_disputeID\":\"ID of the dispute in the Arbitrator contract.\",\"_evidenceGroupID\":\"Unique identifier of the evidence group that is linked to this dispute.\",\"_metaEvidenceID\":\"Unique identifier of meta-evidence.\"}},\"Evidence(address,uint256,address,string)\":{\"details\":\"To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).\",\"params\":{\"_arbitrator\":\"The arbitrator of the contract.\",\"_evidence\":\"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\",\"_evidenceGroupID\":\"Unique identifier of the evidence group the evidence belongs to.\",\"_party\":\"The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\"}},\"MetaEvidence(uint256,string)\":{\"details\":\"To be emitted when meta-evidence is submitted.\",\"params\":{\"_evidence\":\"IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'\",\"_metaEvidenceID\":\"Unique identifier of meta-evidence.\"}},\"Ruling(address,uint256,uint256)\":{\"details\":\"To be raised when a ruling is given.\",\"params\":{\"_arbitrator\":\"The arbitrator giving the ruling.\",\"_disputeID\":\"ID of the dispute in the Arbitrator contract.\",\"_ruling\":\"The ruling which was given.\"}},\"RulingFunded(uint256,uint256,uint256)\":{\"details\":\"To be raised when a ruling option is fully funded for appeal.\",\"params\":{\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_round\":\"Number of the round this ruling option was fully funded in.\",\"_ruling\":\"The ruling option which just got fully funded.\"}},\"Withdrawal(uint256,uint256,uint256,address,uint256)\":{\"details\":\"Raised when a contributor withdraws non-zero value.\",\"params\":{\"_contributor\":\"The beneficiary of withdrawal.\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_reward\":\"Total amount of withdrawal, consists of reimbursed deposits plus rewards.\",\"_round\":\"The round number the withdrawal was made from.\",\"_ruling\":\"Indicates the ruling option which contributor gets rewards from.\"}}},\"kind\":\"dev\",\"methods\":{\"externalIDtoLocalID(uint256)\":{\"details\":\"Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\",\"params\":{\"_externalDisputeID\":\"Dispute id as in arbitrator contract.\"},\"returns\":{\"localDisputeID\":\"Dispute id as in arbitrable contract.\"}},\"fundAppeal(uint256,uint256)\":{\"details\":\"Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\",\"params\":{\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_ruling\":\"The ruling option to which the caller wants to contribute.\"},\"returns\":{\"fullyFunded\":\"True if the ruling option got fully funded as a result of this contribution.\"}},\"getMultipliers()\":{\"details\":\"Returns appeal multipliers.\",\"returns\":{\"denominator\":\"Multiplier denominator in basis points.\",\"loserAppealPeriodMultiplier\":\"Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\",\"loserStakeMultiplier\":\"Losers stake multiplier.\",\"winnerStakeMultiplier\":\"Winners stake multiplier.\"}},\"getTotalWithdrawableAmount(uint256,address,uint256)\":{\"details\":\"Returns the sum of withdrawable amount.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_ruling\":\"Ruling option that caller wants to get withdrawable amount from.\"},\"returns\":{\"sum\":\"The total amount available to withdraw.\"}},\"numberOfRulingOptions(uint256)\":{\"details\":\"Returns number of possible ruling options. Valid rulings are [0, return value].\",\"params\":{\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\"},\"returns\":{\"count\":\"The number of ruling options.\"}},\"rule(uint256,uint256)\":{\"details\":\"Give a ruling for a dispute. Must be called by the arbitrator. The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\",\"params\":{\"_disputeID\":\"ID of the dispute in the Arbitrator contract.\",\"_ruling\":\"Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\"}},\"submitEvidence(uint256,string)\":{\"details\":\"Allows to submit evidence for a given dispute.\",\"params\":{\"_evidenceURI\":\"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\"}},\"withdrawFeesAndRewards(uint256,address,uint256,uint256)\":{\"details\":\"Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_round\":\"Number of the round that caller wants to execute withdraw on.\",\"_ruling\":\"A ruling option that caller wants to execute withdraw on.\"},\"returns\":{\"sum\":\"The amount that is going to be transferred to contributor as a result of this function call.\"}},\"withdrawFeesAndRewardsForAllRounds(uint256,address,uint256)\":{\"details\":\"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_ruling\":\"Ruling option that caller wants to execute withdraw on.\"}}},\"title\":\"This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet. This interface is used in Dispute Resolver (resolve.kleros.io).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol\":\"IDisputeResolver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/**\\n *  @authors: [@ferittuncer]\\n *  @reviewers: [@mtsalenc*, @hbarcelos*, @unknownunknown1, @MerlinEgalite, @fnanni-0*, @shalzz]\\n *  @auditors: []\\n *  @bounties: []\\n *  @deployments: []\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@kleros/erc-792/contracts/IArbitrable.sol\\\";\\nimport \\\"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\\\";\\nimport \\\"@kleros/erc-792/contracts/IArbitrator.sol\\\";\\n\\n/**\\n *  @title This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet.\\n    This interface is used in Dispute Resolver (resolve.kleros.io).\\n */\\nabstract contract IDisputeResolver is IArbitrable, IEvidence {\\n    string public constant VERSION = \\\"2.0.0\\\"; // Can be used to distinguish between multiple deployed versions, if necessary.\\n\\n    /** @dev Raised when a contribution is made, inside fundAppeal function.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _round The round number the contribution was made to.\\n     *  @param ruling Indicates the ruling option which got the contribution.\\n     *  @param _contributor Caller of fundAppeal function.\\n     *  @param _amount Contribution amount.\\n     */\\n    event Contribution(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 ruling, address indexed _contributor, uint256 _amount);\\n\\n    /** @dev Raised when a contributor withdraws non-zero value.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _round The round number the withdrawal was made from.\\n     *  @param _ruling Indicates the ruling option which contributor gets rewards from.\\n     *  @param _contributor The beneficiary of withdrawal.\\n     *  @param _reward Total amount of withdrawal, consists of reimbursed deposits plus rewards.\\n     */\\n    event Withdrawal(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 _ruling, address indexed _contributor, uint256 _reward);\\n\\n    /** @dev To be raised when a ruling option is fully funded for appeal.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _round Number of the round this ruling option was fully funded in.\\n     *  @param _ruling The ruling option which just got fully funded.\\n     */\\n    event RulingFunded(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 indexed _ruling);\\n\\n    /** @dev Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\\n     *  @param _externalDisputeID Dispute id as in arbitrator contract.\\n     *  @return localDisputeID Dispute id as in arbitrable contract.\\n     */\\n    function externalIDtoLocalID(uint256 _externalDisputeID) external virtual returns (uint256 localDisputeID);\\n\\n    /** @dev Returns number of possible ruling options. Valid rulings are [0, return value].\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @return count The number of ruling options.\\n     */\\n    function numberOfRulingOptions(uint256 _localDisputeID) external view virtual returns (uint256 count);\\n\\n    /** @dev Allows to submit evidence for a given dispute.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\\n     */\\n    function submitEvidence(uint256 _localDisputeID, string calldata _evidenceURI) external virtual;\\n\\n    /** @dev Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _ruling The ruling option to which the caller wants to contribute.\\n     *  @return fullyFunded True if the ruling option got fully funded as a result of this contribution.\\n     */\\n    function fundAppeal(uint256 _localDisputeID, uint256 _ruling) external payable virtual returns (bool fullyFunded);\\n\\n    /** @dev Returns appeal multipliers.\\n     *  @return winnerStakeMultiplier Winners stake multiplier.\\n     *  @return loserStakeMultiplier Losers stake multiplier.\\n     *  @return loserAppealPeriodMultiplier Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\\n     *  @return denominator Multiplier denominator in basis points.\\n     */\\n    function getMultipliers()\\n        external\\n        view\\n        virtual\\n        returns (\\n            uint256 winnerStakeMultiplier,\\n            uint256 loserStakeMultiplier,\\n            uint256 loserAppealPeriodMultiplier,\\n            uint256 denominator\\n        );\\n\\n    /** @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _contributor Beneficiary of withdraw operation.\\n     *  @param _round Number of the round that caller wants to execute withdraw on.\\n     *  @param _ruling A ruling option that caller wants to execute withdraw on.\\n     *  @return sum The amount that is going to be transferred to contributor as a result of this function call.\\n     */\\n    function withdrawFeesAndRewards(\\n        uint256 _localDisputeID,\\n        address payable _contributor,\\n        uint256 _round,\\n        uint256 _ruling\\n    ) external virtual returns (uint256 sum);\\n\\n    /** @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _contributor Beneficiary of withdraw operation.\\n     *  @param _ruling Ruling option that caller wants to execute withdraw on.\\n     */\\n    function withdrawFeesAndRewardsForAllRounds(\\n        uint256 _localDisputeID,\\n        address payable _contributor,\\n        uint256 _ruling\\n    ) external virtual;\\n\\n    /** @dev Returns the sum of withdrawable amount.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _contributor Beneficiary of withdraw operation.\\n     *  @param _ruling Ruling option that caller wants to get withdrawable amount from.\\n     *  @return sum The total amount available to withdraw.\\n     */\\n    function getTotalWithdrawableAmount(\\n        uint256 _localDisputeID,\\n        address payable _contributor,\\n        uint256 _ruling\\n    ) external view virtual returns (uint256 sum);\\n}\\n\",\"keccak256\":\"0x9174a37ba69e682381a3ae6e14582a17d69f29be879ff27433fce2b971f871ae\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/IArbitrable.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrator.sol\\\";\\n\\n/**\\n * @title IArbitrable\\n * Arbitrable interface.\\n * When developing arbitrable contracts, we need to:\\n * - Define the action taken when a ruling is received by the contract.\\n * - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);\\n */\\ninterface IArbitrable {\\n    /**\\n     * @dev To be raised when a ruling is given.\\n     * @param _arbitrator The arbitrator giving the ruling.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling The ruling which was given.\\n     */\\n    event Ruling(IArbitrator indexed _arbitrator, uint256 indexed _disputeID, uint256 _ruling);\\n\\n    /**\\n     * @dev Give a ruling for a dispute. Must be called by the arbitrator.\\n     * The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\\n     */\\n    function rule(uint256 _disputeID, uint256 _ruling) external;\\n}\\n\",\"keccak256\":\"0xf1a2c2d7ec1237ef8d3c5f580ac73f56ed58fe4d023817a188363885b3eeb9f2\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/IArbitrator.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrable.sol\\\";\\n\\n/**\\n * @title Arbitrator\\n * Arbitrator abstract contract.\\n * When developing arbitrator contracts we need to:\\n * - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\\n * - Define the functions for cost display (arbitrationCost and appealCost).\\n * - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\\n */\\ninterface IArbitrator {\\n    enum DisputeStatus {\\n        Waiting,\\n        Appealable,\\n        Solved\\n    }\\n\\n    /**\\n     * @dev To be emitted when a dispute is created.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event DisputeCreation(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when a dispute can be appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealPossible(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when the current ruling is appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealDecision(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev Create a dispute. Must be called by the arbitrable contract.\\n     * Must be paid at least arbitrationCost(_extraData).\\n     * @param _choices Amount of choices the arbitrator can make in this dispute.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return disputeID ID of the dispute created.\\n     */\\n    function createDispute(uint256 _choices, bytes calldata _extraData) external payable returns (uint256 disputeID);\\n\\n    /**\\n     * @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function arbitrationCost(bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give extra info on the appeal.\\n     */\\n    function appeal(uint256 _disputeID, bytes calldata _extraData) external payable;\\n\\n    /**\\n     * @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function appealCost(uint256 _disputeID, bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\\n     * @param _disputeID ID of the dispute.\\n     * @return start The start of the period.\\n     * @return end The end of the period.\\n     */\\n    function appealPeriod(uint256 _disputeID) external view returns (uint256 start, uint256 end);\\n\\n    /**\\n     * @dev Return the status of a dispute.\\n     * @param _disputeID ID of the dispute to rule.\\n     * @return status The status of the dispute.\\n     */\\n    function disputeStatus(uint256 _disputeID) external view returns (DisputeStatus status);\\n\\n    /**\\n     * @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\\n     * @param _disputeID ID of the dispute.\\n     * @return ruling The ruling which has been given or the one which will be given if there is no appeal.\\n     */\\n    function currentRuling(uint256 _disputeID) external view returns (uint256 ruling);\\n}\\n\",\"keccak256\":\"0xfd19582446ef635cfb02a035a18efae3bc242ccf1472bb9949cad3d291306333\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: []\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IArbitrator.sol\\\";\\n\\n/** @title IEvidence\\n *  ERC-1497: Evidence Standard\\n */\\ninterface IEvidence {\\n    /**\\n     * @dev To be emitted when meta-evidence is submitted.\\n     * @param _metaEvidenceID Unique identifier of meta-evidence.\\n     * @param _evidence IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'\\n     */\\n    event MetaEvidence(uint256 indexed _metaEvidenceID, string _evidence);\\n\\n    /**\\n     * @dev To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).\\n     * @param _arbitrator The arbitrator of the contract.\\n     * @param _evidenceGroupID Unique identifier of the evidence group the evidence belongs to.\\n     * @param _party The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\\n     * @param _evidence IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\\n     */\\n    event Evidence(\\n        IArbitrator indexed _arbitrator,\\n        uint256 indexed _evidenceGroupID,\\n        address indexed _party,\\n        string _evidence\\n    );\\n\\n    /**\\n     * @dev To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.\\n     * @param _arbitrator The arbitrator of the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _metaEvidenceID Unique identifier of meta-evidence.\\n     * @param _evidenceGroupID Unique identifier of the evidence group that is linked to this dispute.\\n     */\\n    event Dispute(\\n        IArbitrator indexed _arbitrator,\\n        uint256 indexed _disputeID,\\n        uint256 _metaEvidenceID,\\n        uint256 _evidenceGroupID\\n    );\\n}\\n\",\"keccak256\":\"0xf9f105a2cbf5e34cdc5ce71d877cded1b502437f1cd6d28173898f88542418af\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@kleros/erc-792/contracts/IArbitrable.sol":{"IArbitrable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IArbitrator","name":"_arbitrator","type":"address"},{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_ruling","type":"uint256"}],"name":"Ruling","type":"event"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"uint256","name":"_ruling","type":"uint256"}],"name":"rule","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Ruling(address,uint256,uint256)":{"details":"To be raised when a ruling is given.","params":{"_arbitrator":"The arbitrator giving the ruling.","_disputeID":"ID of the dispute in the Arbitrator contract.","_ruling":"The ruling which was given."}}},"kind":"dev","methods":{"rule(uint256,uint256)":{"details":"Give a ruling for a dispute. Must be called by the arbitrator. The purpose of this function is to ensure that the address calling it has the right to rule on the contract.","params":{"_disputeID":"ID of the dispute in the Arbitrator contract.","_ruling":"Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\"."}}},"title":"IArbitrable Arbitrable interface. When developing arbitrable contracts, we need to: - Define the action taken when a ruling is received by the contract. - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rule(uint256,uint256)":"311a6c56"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"Ruling\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"rule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Ruling(address,uint256,uint256)\":{\"details\":\"To be raised when a ruling is given.\",\"params\":{\"_arbitrator\":\"The arbitrator giving the ruling.\",\"_disputeID\":\"ID of the dispute in the Arbitrator contract.\",\"_ruling\":\"The ruling which was given.\"}}},\"kind\":\"dev\",\"methods\":{\"rule(uint256,uint256)\":{\"details\":\"Give a ruling for a dispute. Must be called by the arbitrator. The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\",\"params\":{\"_disputeID\":\"ID of the dispute in the Arbitrator contract.\",\"_ruling\":\"Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\"}}},\"title\":\"IArbitrable Arbitrable interface. When developing arbitrable contracts, we need to: - Define the action taken when a ruling is received by the contract. - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@kleros/erc-792/contracts/IArbitrable.sol\":\"IArbitrable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@kleros/erc-792/contracts/IArbitrable.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrator.sol\\\";\\n\\n/**\\n * @title IArbitrable\\n * Arbitrable interface.\\n * When developing arbitrable contracts, we need to:\\n * - Define the action taken when a ruling is received by the contract.\\n * - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);\\n */\\ninterface IArbitrable {\\n    /**\\n     * @dev To be raised when a ruling is given.\\n     * @param _arbitrator The arbitrator giving the ruling.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling The ruling which was given.\\n     */\\n    event Ruling(IArbitrator indexed _arbitrator, uint256 indexed _disputeID, uint256 _ruling);\\n\\n    /**\\n     * @dev Give a ruling for a dispute. Must be called by the arbitrator.\\n     * The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\\n     */\\n    function rule(uint256 _disputeID, uint256 _ruling) external;\\n}\\n\",\"keccak256\":\"0xf1a2c2d7ec1237ef8d3c5f580ac73f56ed58fe4d023817a188363885b3eeb9f2\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/IArbitrator.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrable.sol\\\";\\n\\n/**\\n * @title Arbitrator\\n * Arbitrator abstract contract.\\n * When developing arbitrator contracts we need to:\\n * - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\\n * - Define the functions for cost display (arbitrationCost and appealCost).\\n * - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\\n */\\ninterface IArbitrator {\\n    enum DisputeStatus {\\n        Waiting,\\n        Appealable,\\n        Solved\\n    }\\n\\n    /**\\n     * @dev To be emitted when a dispute is created.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event DisputeCreation(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when a dispute can be appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealPossible(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when the current ruling is appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealDecision(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev Create a dispute. Must be called by the arbitrable contract.\\n     * Must be paid at least arbitrationCost(_extraData).\\n     * @param _choices Amount of choices the arbitrator can make in this dispute.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return disputeID ID of the dispute created.\\n     */\\n    function createDispute(uint256 _choices, bytes calldata _extraData) external payable returns (uint256 disputeID);\\n\\n    /**\\n     * @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function arbitrationCost(bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give extra info on the appeal.\\n     */\\n    function appeal(uint256 _disputeID, bytes calldata _extraData) external payable;\\n\\n    /**\\n     * @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function appealCost(uint256 _disputeID, bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\\n     * @param _disputeID ID of the dispute.\\n     * @return start The start of the period.\\n     * @return end The end of the period.\\n     */\\n    function appealPeriod(uint256 _disputeID) external view returns (uint256 start, uint256 end);\\n\\n    /**\\n     * @dev Return the status of a dispute.\\n     * @param _disputeID ID of the dispute to rule.\\n     * @return status The status of the dispute.\\n     */\\n    function disputeStatus(uint256 _disputeID) external view returns (DisputeStatus status);\\n\\n    /**\\n     * @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\\n     * @param _disputeID ID of the dispute.\\n     * @return ruling The ruling which has been given or the one which will be given if there is no appeal.\\n     */\\n    function currentRuling(uint256 _disputeID) external view returns (uint256 ruling);\\n}\\n\",\"keccak256\":\"0xfd19582446ef635cfb02a035a18efae3bc242ccf1472bb9949cad3d291306333\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@kleros/erc-792/contracts/IArbitrator.sol":{"IArbitrator":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"},{"indexed":true,"internalType":"contract IArbitrable","name":"_arbitrable","type":"address"}],"name":"AppealDecision","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"},{"indexed":true,"internalType":"contract IArbitrable","name":"_arbitrable","type":"address"}],"name":"AppealPossible","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"},{"indexed":true,"internalType":"contract IArbitrable","name":"_arbitrable","type":"address"}],"name":"DisputeCreation","type":"event"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"appeal","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"appealCost","outputs":[{"internalType":"uint256","name":"cost","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"}],"name":"appealPeriod","outputs":[{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"arbitrationCost","outputs":[{"internalType":"uint256","name":"cost","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_choices","type":"uint256"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"createDispute","outputs":[{"internalType":"uint256","name":"disputeID","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"}],"name":"currentRuling","outputs":[{"internalType":"uint256","name":"ruling","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"}],"name":"disputeStatus","outputs":[{"internalType":"enum IArbitrator.DisputeStatus","name":"status","type":"uint8"}],"stateMutability":"view","type":"function"}],"devdoc":{"events":{"AppealDecision(uint256,address)":{"details":"To be emitted when the current ruling is appealed.","params":{"_arbitrable":"The contract which created the dispute.","_disputeID":"ID of the dispute."}},"AppealPossible(uint256,address)":{"details":"To be emitted when a dispute can be appealed.","params":{"_arbitrable":"The contract which created the dispute.","_disputeID":"ID of the dispute."}},"DisputeCreation(uint256,address)":{"details":"To be emitted when a dispute is created.","params":{"_arbitrable":"The contract which created the dispute.","_disputeID":"ID of the dispute."}}},"kind":"dev","methods":{"appeal(uint256,bytes)":{"details":"Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.","params":{"_disputeID":"ID of the dispute to be appealed.","_extraData":"Can be used to give extra info on the appeal."}},"appealCost(uint256,bytes)":{"details":"Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.","params":{"_disputeID":"ID of the dispute to be appealed.","_extraData":"Can be used to give additional info on the dispute to be created."},"returns":{"cost":"Amount to be paid."}},"appealPeriod(uint256)":{"details":"Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).","params":{"_disputeID":"ID of the dispute."},"returns":{"end":"The end of the period.","start":"The start of the period."}},"arbitrationCost(bytes)":{"details":"Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.","params":{"_extraData":"Can be used to give additional info on the dispute to be created."},"returns":{"cost":"Amount to be paid."}},"createDispute(uint256,bytes)":{"details":"Create a dispute. Must be called by the arbitrable contract. Must be paid at least arbitrationCost(_extraData).","params":{"_choices":"Amount of choices the arbitrator can make in this dispute.","_extraData":"Can be used to give additional info on the dispute to be created."},"returns":{"disputeID":"ID of the dispute created."}},"currentRuling(uint256)":{"details":"Return the current ruling of a dispute. This is useful for parties to know if they should appeal.","params":{"_disputeID":"ID of the dispute."},"returns":{"ruling":"The ruling which has been given or the one which will be given if there is no appeal."}},"disputeStatus(uint256)":{"details":"Return the status of a dispute.","params":{"_disputeID":"ID of the dispute to rule."},"returns":{"status":"The status of the dispute."}}},"title":"Arbitrator Arbitrator abstract contract. When developing arbitrator contracts we need to: - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes). - Define the functions for cost display (arbitrationCost and appealCost). - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"appeal(uint256,bytes)":"49912f88","appealCost(uint256,bytes)":"f23f16e6","appealPeriod(uint256)":"afe15cfb","arbitrationCost(bytes)":"f7434ea9","createDispute(uint256,bytes)":"c13517e1","currentRuling(uint256)":"1c3db16d","disputeStatus(uint256)":"10f169e8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealDecision\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealPossible\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"DisputeCreation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"appeal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"appealCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"appealPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"arbitrationCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_choices\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"createDispute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeID\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"currentRuling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"disputeStatus\",\"outputs\":[{\"internalType\":\"enum IArbitrator.DisputeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AppealDecision(uint256,address)\":{\"details\":\"To be emitted when the current ruling is appealed.\",\"params\":{\"_arbitrable\":\"The contract which created the dispute.\",\"_disputeID\":\"ID of the dispute.\"}},\"AppealPossible(uint256,address)\":{\"details\":\"To be emitted when a dispute can be appealed.\",\"params\":{\"_arbitrable\":\"The contract which created the dispute.\",\"_disputeID\":\"ID of the dispute.\"}},\"DisputeCreation(uint256,address)\":{\"details\":\"To be emitted when a dispute is created.\",\"params\":{\"_arbitrable\":\"The contract which created the dispute.\",\"_disputeID\":\"ID of the dispute.\"}}},\"kind\":\"dev\",\"methods\":{\"appeal(uint256,bytes)\":{\"details\":\"Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\",\"params\":{\"_disputeID\":\"ID of the dispute to be appealed.\",\"_extraData\":\"Can be used to give extra info on the appeal.\"}},\"appealCost(uint256,bytes)\":{\"details\":\"Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\",\"params\":{\"_disputeID\":\"ID of the dispute to be appealed.\",\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"cost\":\"Amount to be paid.\"}},\"appealPeriod(uint256)\":{\"details\":\"Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\",\"params\":{\"_disputeID\":\"ID of the dispute.\"},\"returns\":{\"end\":\"The end of the period.\",\"start\":\"The start of the period.\"}},\"arbitrationCost(bytes)\":{\"details\":\"Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\",\"params\":{\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"cost\":\"Amount to be paid.\"}},\"createDispute(uint256,bytes)\":{\"details\":\"Create a dispute. Must be called by the arbitrable contract. Must be paid at least arbitrationCost(_extraData).\",\"params\":{\"_choices\":\"Amount of choices the arbitrator can make in this dispute.\",\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"disputeID\":\"ID of the dispute created.\"}},\"currentRuling(uint256)\":{\"details\":\"Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\",\"params\":{\"_disputeID\":\"ID of the dispute.\"},\"returns\":{\"ruling\":\"The ruling which has been given or the one which will be given if there is no appeal.\"}},\"disputeStatus(uint256)\":{\"details\":\"Return the status of a dispute.\",\"params\":{\"_disputeID\":\"ID of the dispute to rule.\"},\"returns\":{\"status\":\"The status of the dispute.\"}}},\"title\":\"Arbitrator Arbitrator abstract contract. When developing arbitrator contracts we need to: - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes). - Define the functions for cost display (arbitrationCost and appealCost). - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@kleros/erc-792/contracts/IArbitrator.sol\":\"IArbitrator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@kleros/erc-792/contracts/IArbitrable.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrator.sol\\\";\\n\\n/**\\n * @title IArbitrable\\n * Arbitrable interface.\\n * When developing arbitrable contracts, we need to:\\n * - Define the action taken when a ruling is received by the contract.\\n * - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);\\n */\\ninterface IArbitrable {\\n    /**\\n     * @dev To be raised when a ruling is given.\\n     * @param _arbitrator The arbitrator giving the ruling.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling The ruling which was given.\\n     */\\n    event Ruling(IArbitrator indexed _arbitrator, uint256 indexed _disputeID, uint256 _ruling);\\n\\n    /**\\n     * @dev Give a ruling for a dispute. Must be called by the arbitrator.\\n     * The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\\n     */\\n    function rule(uint256 _disputeID, uint256 _ruling) external;\\n}\\n\",\"keccak256\":\"0xf1a2c2d7ec1237ef8d3c5f580ac73f56ed58fe4d023817a188363885b3eeb9f2\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/IArbitrator.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrable.sol\\\";\\n\\n/**\\n * @title Arbitrator\\n * Arbitrator abstract contract.\\n * When developing arbitrator contracts we need to:\\n * - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\\n * - Define the functions for cost display (arbitrationCost and appealCost).\\n * - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\\n */\\ninterface IArbitrator {\\n    enum DisputeStatus {\\n        Waiting,\\n        Appealable,\\n        Solved\\n    }\\n\\n    /**\\n     * @dev To be emitted when a dispute is created.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event DisputeCreation(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when a dispute can be appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealPossible(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when the current ruling is appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealDecision(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev Create a dispute. Must be called by the arbitrable contract.\\n     * Must be paid at least arbitrationCost(_extraData).\\n     * @param _choices Amount of choices the arbitrator can make in this dispute.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return disputeID ID of the dispute created.\\n     */\\n    function createDispute(uint256 _choices, bytes calldata _extraData) external payable returns (uint256 disputeID);\\n\\n    /**\\n     * @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function arbitrationCost(bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give extra info on the appeal.\\n     */\\n    function appeal(uint256 _disputeID, bytes calldata _extraData) external payable;\\n\\n    /**\\n     * @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function appealCost(uint256 _disputeID, bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\\n     * @param _disputeID ID of the dispute.\\n     * @return start The start of the period.\\n     * @return end The end of the period.\\n     */\\n    function appealPeriod(uint256 _disputeID) external view returns (uint256 start, uint256 end);\\n\\n    /**\\n     * @dev Return the status of a dispute.\\n     * @param _disputeID ID of the dispute to rule.\\n     * @return status The status of the dispute.\\n     */\\n    function disputeStatus(uint256 _disputeID) external view returns (DisputeStatus status);\\n\\n    /**\\n     * @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\\n     * @param _disputeID ID of the dispute.\\n     * @return ruling The ruling which has been given or the one which will be given if there is no appeal.\\n     */\\n    function currentRuling(uint256 _disputeID) external view returns (uint256 ruling);\\n}\\n\",\"keccak256\":\"0xfd19582446ef635cfb02a035a18efae3bc242ccf1472bb9949cad3d291306333\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@kleros/erc-792/contracts/erc-1497/IEvidence.sol":{"IEvidence":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IArbitrator","name":"_arbitrator","type":"address"},{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_metaEvidenceID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_evidenceGroupID","type":"uint256"}],"name":"Dispute","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IArbitrator","name":"_arbitrator","type":"address"},{"indexed":true,"internalType":"uint256","name":"_evidenceGroupID","type":"uint256"},{"indexed":true,"internalType":"address","name":"_party","type":"address"},{"indexed":false,"internalType":"string","name":"_evidence","type":"string"}],"name":"Evidence","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_metaEvidenceID","type":"uint256"},{"indexed":false,"internalType":"string","name":"_evidence","type":"string"}],"name":"MetaEvidence","type":"event"}],"devdoc":{"events":{"Dispute(address,uint256,uint256,uint256)":{"details":"To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.","params":{"_arbitrator":"The arbitrator of the contract.","_disputeID":"ID of the dispute in the Arbitrator contract.","_evidenceGroupID":"Unique identifier of the evidence group that is linked to this dispute.","_metaEvidenceID":"Unique identifier of meta-evidence."}},"Evidence(address,uint256,address,string)":{"details":"To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).","params":{"_arbitrator":"The arbitrator of the contract.","_evidence":"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'","_evidenceGroupID":"Unique identifier of the evidence group the evidence belongs to.","_party":"The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party."}},"MetaEvidence(uint256,string)":{"details":"To be emitted when meta-evidence is submitted.","params":{"_evidence":"IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'","_metaEvidenceID":"Unique identifier of meta-evidence."}}},"kind":"dev","methods":{},"title":"IEvidence  ERC-1497: Evidence Standard","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"}],\"name\":\"Dispute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_party\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"Evidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"MetaEvidence\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Dispute(address,uint256,uint256,uint256)\":{\"details\":\"To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.\",\"params\":{\"_arbitrator\":\"The arbitrator of the contract.\",\"_disputeID\":\"ID of the dispute in the Arbitrator contract.\",\"_evidenceGroupID\":\"Unique identifier of the evidence group that is linked to this dispute.\",\"_metaEvidenceID\":\"Unique identifier of meta-evidence.\"}},\"Evidence(address,uint256,address,string)\":{\"details\":\"To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).\",\"params\":{\"_arbitrator\":\"The arbitrator of the contract.\",\"_evidence\":\"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\",\"_evidenceGroupID\":\"Unique identifier of the evidence group the evidence belongs to.\",\"_party\":\"The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\"}},\"MetaEvidence(uint256,string)\":{\"details\":\"To be emitted when meta-evidence is submitted.\",\"params\":{\"_evidence\":\"IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'\",\"_metaEvidenceID\":\"Unique identifier of meta-evidence.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"IEvidence  ERC-1497: Evidence Standard\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\":\"IEvidence\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@kleros/erc-792/contracts/IArbitrable.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrator.sol\\\";\\n\\n/**\\n * @title IArbitrable\\n * Arbitrable interface.\\n * When developing arbitrable contracts, we need to:\\n * - Define the action taken when a ruling is received by the contract.\\n * - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);\\n */\\ninterface IArbitrable {\\n    /**\\n     * @dev To be raised when a ruling is given.\\n     * @param _arbitrator The arbitrator giving the ruling.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling The ruling which was given.\\n     */\\n    event Ruling(IArbitrator indexed _arbitrator, uint256 indexed _disputeID, uint256 _ruling);\\n\\n    /**\\n     * @dev Give a ruling for a dispute. Must be called by the arbitrator.\\n     * The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\\n     */\\n    function rule(uint256 _disputeID, uint256 _ruling) external;\\n}\\n\",\"keccak256\":\"0xf1a2c2d7ec1237ef8d3c5f580ac73f56ed58fe4d023817a188363885b3eeb9f2\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/IArbitrator.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrable.sol\\\";\\n\\n/**\\n * @title Arbitrator\\n * Arbitrator abstract contract.\\n * When developing arbitrator contracts we need to:\\n * - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\\n * - Define the functions for cost display (arbitrationCost and appealCost).\\n * - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\\n */\\ninterface IArbitrator {\\n    enum DisputeStatus {\\n        Waiting,\\n        Appealable,\\n        Solved\\n    }\\n\\n    /**\\n     * @dev To be emitted when a dispute is created.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event DisputeCreation(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when a dispute can be appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealPossible(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when the current ruling is appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealDecision(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev Create a dispute. Must be called by the arbitrable contract.\\n     * Must be paid at least arbitrationCost(_extraData).\\n     * @param _choices Amount of choices the arbitrator can make in this dispute.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return disputeID ID of the dispute created.\\n     */\\n    function createDispute(uint256 _choices, bytes calldata _extraData) external payable returns (uint256 disputeID);\\n\\n    /**\\n     * @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function arbitrationCost(bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give extra info on the appeal.\\n     */\\n    function appeal(uint256 _disputeID, bytes calldata _extraData) external payable;\\n\\n    /**\\n     * @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function appealCost(uint256 _disputeID, bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\\n     * @param _disputeID ID of the dispute.\\n     * @return start The start of the period.\\n     * @return end The end of the period.\\n     */\\n    function appealPeriod(uint256 _disputeID) external view returns (uint256 start, uint256 end);\\n\\n    /**\\n     * @dev Return the status of a dispute.\\n     * @param _disputeID ID of the dispute to rule.\\n     * @return status The status of the dispute.\\n     */\\n    function disputeStatus(uint256 _disputeID) external view returns (DisputeStatus status);\\n\\n    /**\\n     * @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\\n     * @param _disputeID ID of the dispute.\\n     * @return ruling The ruling which has been given or the one which will be given if there is no appeal.\\n     */\\n    function currentRuling(uint256 _disputeID) external view returns (uint256 ruling);\\n}\\n\",\"keccak256\":\"0xfd19582446ef635cfb02a035a18efae3bc242ccf1472bb9949cad3d291306333\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: []\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IArbitrator.sol\\\";\\n\\n/** @title IEvidence\\n *  ERC-1497: Evidence Standard\\n */\\ninterface IEvidence {\\n    /**\\n     * @dev To be emitted when meta-evidence is submitted.\\n     * @param _metaEvidenceID Unique identifier of meta-evidence.\\n     * @param _evidence IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'\\n     */\\n    event MetaEvidence(uint256 indexed _metaEvidenceID, string _evidence);\\n\\n    /**\\n     * @dev To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).\\n     * @param _arbitrator The arbitrator of the contract.\\n     * @param _evidenceGroupID Unique identifier of the evidence group the evidence belongs to.\\n     * @param _party The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\\n     * @param _evidence IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\\n     */\\n    event Evidence(\\n        IArbitrator indexed _arbitrator,\\n        uint256 indexed _evidenceGroupID,\\n        address indexed _party,\\n        string _evidence\\n    );\\n\\n    /**\\n     * @dev To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.\\n     * @param _arbitrator The arbitrator of the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _metaEvidenceID Unique identifier of meta-evidence.\\n     * @param _evidenceGroupID Unique identifier of the evidence group that is linked to this dispute.\\n     */\\n    event Dispute(\\n        IArbitrator indexed _arbitrator,\\n        uint256 indexed _disputeID,\\n        uint256 _metaEvidenceID,\\n        uint256 _evidenceGroupID\\n    );\\n}\\n\",\"keccak256\":\"0xf9f105a2cbf5e34cdc5ce71d877cded1b502437f1cd6d28173898f88542418af\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ITruthPost.sol":{"ITruthPost":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_newAdmin","type":"address"}],"name":"AdminUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_newWithdrawalTimelock","type":"uint256"}],"name":"ArticleWithdrawalTimelockUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"articleAddress","type":"uint256"}],"name":"ArticleWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"articleAddress","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newTotal","type":"uint256"}],"name":"BalanceUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"articleAddress","type":"uint256"},{"indexed":false,"internalType":"address","name":"challanger","type":"address"},{"indexed":false,"internalType":"uint256","name":"disputeID","type":"uint256"}],"name":"Challenge","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_newTaxRate","type":"uint256"}],"name":"ChallengeTaxRateUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"disputeId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"round","type":"uint256"},{"indexed":false,"internalType":"enum ITruthPost.RulingOptions","name":"ruling","type":"uint8"},{"indexed":true,"internalType":"address","name":"contributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Contribution","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"articleAddress","type":"uint256"}],"name":"Debunked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_newLoserAppealPeriodMultiplier","type":"uint256"}],"name":"LoserAppealPeriodMultiplierUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_newLoserStakeMultiplier","type":"uint256"}],"name":"LoserStakeMultiplierUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"articleID","type":"string"},{"indexed":false,"internalType":"uint8","name":"category","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"articleAddress","type":"uint256"}],"name":"NewArticle","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_newOwner","type":"address"}],"name":"OwnershipTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"disputeId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"round","type":"uint256"},{"indexed":true,"internalType":"enum ITruthPost.RulingOptions","name":"ruling","type":"uint8"}],"name":"RulingFunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"articleAddress","type":"uint256"}],"name":"TimelockStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_byAmount","type":"uint256"}],"name":"TreasuryBalanceUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_newTreasury","type":"address"}],"name":"TreasuryUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_newWinnerStakeMultiplier","type":"uint256"}],"name":"WinnerStakeMultiplierUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"disputeId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"round","type":"uint256"},{"indexed":false,"internalType":"enum ITruthPost.RulingOptions","name":"ruling","type":"uint8"},{"indexed":true,"internalType":"address","name":"contributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"ARTICLE_WITHDRAWAL_TIMELOCK","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LOSER_APPEAL_PERIOD_MULTIPLIER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LOSER_STAKE_MULTIPLIER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MULTIPLIER_DENOMINATOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NUMBER_OF_RULING_OPTIONS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TREASURY","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WINNER_STAKE_MULTIPLIER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"}],"name":"appealFee","outputs":[{"internalType":"uint256","name":"arbitrationFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint72","name":"_articleStorageAddress","type":"uint72"}],"name":"challenge","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint72","name":"_articleStorageAddress","type":"uint72"}],"name":"challengeFee","outputs":[{"internalType":"uint256","name":"challengeFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"challengeTaxRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newArticleWithdrawalTimelock","type":"uint256"}],"name":"changeArticleWithdrawalTimelock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newLoserAppealPeriodMultiplier","type":"uint256"}],"name":"changeLoserAppealPeriodMultiplier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newLoserStakeMultiplier","type":"uint256"}],"name":"changeLoserStakeMultiplier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newWinnerStakeMultiplier","type":"uint256"}],"name":"changeWinnerStakeMultiplier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint72","name":"_searchPointer","type":"uint72"}],"name":"findVacantStorageSlot","outputs":[{"internalType":"uint256","name":"vacantSlotIndex","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"enum ITruthPost.RulingOptions","name":"_ruling","type":"uint8"}],"name":"fundAppeal","outputs":[{"internalType":"bool","name":"fullyFunded","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"enum ITruthPost.RulingOptions","name":"_ruling","type":"uint8"}],"name":"getAmountRemainsToBeRaised","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"enum ITruthPost.RulingOptions","name":"_ruling","type":"uint8"}],"name":"getAppealPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"}],"name":"getLastRoundWinner","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum ITruthPost.RulingOptions","name":"_ruling","type":"uint8"},{"internalType":"enum ITruthPost.RulingOptions","name":"_lastRoundWinner","type":"uint8"}],"name":"getReturnOfInvestmentRatio","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"uint256","name":"_round","type":"uint256"}],"name":"getRoundInfo","outputs":[{"internalType":"bool[3]","name":"hasPaid","type":"bool[3]"},{"internalType":"uint256[3]","name":"totalPerRuling","type":"uint256[3]"},{"internalType":"uint256","name":"totalClaimableAfterExpenses","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"address payable","name":"_contributor","type":"address"}],"name":"getTotalWithdrawableAmount","outputs":[{"internalType":"uint256","name":"sum","type":"uint256"},{"internalType":"uint256[][]","name":"positions","type":"uint256[][]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint72","name":"_articleStorageAddress","type":"uint72"}],"name":"increaseBounty","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"string","name":"_articleID","type":"string"},{"internalType":"uint8","name":"_category","type":"uint8"},{"internalType":"uint72","name":"_searchPointer","type":"uint72"}],"name":"initializeArticle","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint72","name":"_articleStorageAddress","type":"uint72"}],"name":"initiateWithdrawal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"string","name":"_evidenceURI","type":"string"}],"name":"submitEvidence","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"switchPublishingLock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint72","name":"_articleStorageAddress","type":"uint72"},{"internalType":"address payable","name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasuryBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint72","name":"_articleStorageAddress","type":"uint72"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"address payable","name":"_contributor","type":"address"},{"internalType":"uint256","name":"_round","type":"uint256"},{"internalType":"enum ITruthPost.RulingOptions","name":"_ruling","type":"uint8"}],"name":"withdrawFeesAndRewards","outputs":[{"internalType":"uint256","name":"sum","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"address payable","name":"_contributor","type":"address"},{"internalType":"enum ITruthPost.RulingOptions","name":"_ruling","type":"uint8"}],"name":"withdrawFeesAndRewardsForAllRounds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"address payable","name":"_contributor","type":"address"}],"name":"withdrawFeesAndRewardsForAllRoundsAndAllRulings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"address payable","name":"_contributor","type":"address"},{"internalType":"uint256[][]","name":"positions","type":"uint256[][]"}],"name":"withdrawFeesAndRewardsForGivenPositions","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"https://github.com/proveuswrong<0xferit, gratestas>","custom:approvals":"0xferit, gratestas","details":"This contract serves as a standard interface among multiple deployments of the Truth Post contracts.         You should target this interface contract for interactions, not the concrete contract; otherwise you risk incompatibility across versions.","kind":"dev","methods":{"appealFee(uint256)":{"details":"Returns the total amount needs to be paid to appeal a dispute, including fees and stake deposit.","params":{"_disputeID":"ID of the dispute as in arbitrator."}},"challenge(uint72)":{"details":"Challenges the article at the given storage address. Emits Challenge.","params":{"_articleStorageAddress":"The address of the article in the storage."}},"challengeFee(uint72)":{"details":"Returns the total amount needs to be paid to challenge an article, including taxes if any.","params":{"_articleStorageAddress":"The address of article in the storage."}},"changeArticleWithdrawalTimelock(uint256)":{"details":"Sets the timelock before an author can initiate the withdrawal of an article to a new value.      Emits ArticleWithdrawalTimelockUpdate.","params":{"_newArticleWithdrawalTimelock":"The new value of ARTICLE_WITHDRAWAL_TIMELOCK."}},"changeLoserAppealPeriodMultiplier(uint256)":{"details":"Sets the multiplier of the appeal window for the loser to a new value. Emits LoserAppealPeriodMultiplierUpdate.","params":{"_newLoserAppealPeriodMultiplier":"The new value of LOSER_APPEAL_PERIOD_MULTIPLIER."}},"changeLoserStakeMultiplier(uint256)":{"details":"Sets the multiplier of the arbitration cost that the loser has to pay as fee stake to a new value.      Emits LoserStakeMultiplierUpdate.","params":{"_newLoserStakeMultiplier":"The new value of LOSER_STAKE_MULTIPLIER."}},"changeWinnerStakeMultiplier(uint256)":{"details":"Sets the multiplier of the arbitration cost that the winner has to pay as fee stake to a new value.      Emits WinnerStakeMultiplierUpdate.","params":{"_newWinnerStakeMultiplier":"The new value of WINNER_STAKE_MULTIPLIER."}},"findVacantStorageSlot(uint72)":{"details":"Helper function to find a vacant slot for article. Use this function before calling initialize to minimize your gas cost.","params":{"_searchPointer":"Starting point of the search. If you do not have a guess, just pass 0."}},"fundAppeal(uint256,uint8)":{"details":"Lets user to contribute funding of an appeal round. Emits Contribution. If fully funded, emits RulingFunded.","params":{"_disputeID":"The dispute ID as in arbitrator.","_ruling":"The ruling option to which the caller wants to contribute."},"returns":{"fullyFunded":"True if the ruling option got fully funded as a result of this contribution."}},"getAmountRemainsToBeRaised(uint256,uint8)":{"params":{"_disputeID":"The dispute ID as in arbitrator.","_ruling":"The ruling option to query."},"returns":{"_0":"Amount needs to be raised"}},"getAppealPeriod(uint256,uint8)":{"params":{"_disputeID":"The dispute ID as in arbitrator.","_ruling":"The ruling option to query."},"returns":{"_0":"Start","_1":"End"}},"getLastRoundWinner(uint256)":{"params":{"_disputeID":"The dispute ID as in arbitrator."},"returns":{"_0":"Winning ruling option."}},"getReturnOfInvestmentRatio(uint8,uint8)":{"details":"Purely depends on whether given ruling option is winner and stake multipliers.","params":{"_lastRoundWinner":"Winner of the last round.","_ruling":"The ruling option to query."},"returns":{"_0":"Return of investment ratio, denominated by MULTIPLIER_DENOMINATOR."}},"getRoundInfo(uint256,uint256)":{"params":{"_disputeID":"The dispute ID as in arbitrator.","_round":"Round ID."},"returns":{"hasPaid":"Whether given ruling option was fully funded.","totalClaimableAfterExpenses":"Total amount will be distributed back to winners, after deducting expenses.","totalPerRuling":"The total raised per ruling option."}},"getTotalWithdrawableAmount(uint256,address)":{"details":"Returns the sum of withdrawable amount and 2D array of positions[round][ruling].","params":{"_contributor":"Beneficiary of withdraw operation.","_disputeID":"The dispute ID as in arbitrator."},"returns":{"sum":"The total amount available to withdraw."}},"increaseBounty(uint72)":{"details":"Lets author to increase a bounty of a live article. Emits BalanceUpdate.","params":{"_articleStorageAddress":"The address of the article in the storage."}},"initializeArticle(string,uint8,uint72)":{"details":"Do not confuse articleID with articleAddress. Emits NewArticle.","params":{"_articleID":"Unique identifier of an article in IPFS content identifier format.","_category":"The category code of this new article.","_searchPointer":"Starting point of the search. Find a vacant storage slot before calling this function to minimize gas cost."}},"initiateWithdrawal(uint72)":{"details":"Lets an author to start unpublishing process. Emits TimelockStarted.","params":{"_articleStorageAddress":"The address of the article in the storage."}},"submitEvidence(uint256,string)":{"params":{"_disputeID":"The dispute ID as in arbitrator.","_evidenceURI":"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'"}},"switchPublishingLock()":{"details":"Useful when it's no longer safe or secure to use this contract.         Prevents new articles to be published. Only intended for privileges users."},"transferOwnership(uint72,address)":{"details":"Lets you to transfer ownership of an article.      This is useful when you want to change owner account without withdrawing and resubmitting.      Emits OwnershipTransfer.","params":{"_articleStorageAddress":"The address of article in the storage.","_newOwner":"The new owner of the article which resides in the storage address, provided by the previous parameter."}},"withdraw(uint72)":{"details":"Executes unpublishing of an article. Emits Withdrew.","params":{"_articleStorageAddress":"The address of the article in the storage."}},"withdrawFeesAndRewards(uint256,address,uint256,uint8)":{"details":"Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.","params":{"_contributor":"Beneficiary of withdraw operation.","_disputeID":"The dispute ID as in arbitrator.","_round":"Number of the round that caller wants to execute withdraw on.","_ruling":"A ruling option that caller wants to execute withdraw on."},"returns":{"sum":"The amount that is going to be transferred to contributor as a result of this function call."}},"withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)":{"details":"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.","params":{"_contributor":"Beneficiary of withdraw operation.","_disputeID":"The dispute ID as in arbitrator.","_ruling":"Ruling option that caller wants to execute withdraw on."}},"withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)":{"details":"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds and all rulings at once.","params":{"_contributor":"Beneficiary of withdraw operation.","_disputeID":"The dispute ID as in arbitrator."}},"withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])":{"details":"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for given positions at once.","params":{"_contributor":"Beneficiary of withdraw operation.","_disputeID":"The dispute ID as in arbitrator.","positions":"[rounds][rulings]."}}},"title":"The Truth Post: Accurate and Relevant News","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"ARTICLE_WITHDRAWAL_TIMELOCK()":"d3b476b1","LOSER_APPEAL_PERIOD_MULTIPLIER()":"be467604","LOSER_STAKE_MULTIPLIER()":"b34bfaa8","MULTIPLIER_DENOMINATOR()":"fe6ca782","NUMBER_OF_RULING_OPTIONS()":"7597b3cb","TREASURY()":"2d2c5565","VERSION()":"ffa1ad74","WINNER_STAKE_MULTIPLIER()":"e349ad30","appealFee(uint256)":"1e26de34","challenge(uint72)":"12a145e1","challengeFee(uint72)":"37641483","challengeTaxRate()":"fc0ac672","changeArticleWithdrawalTimelock(uint256)":"92e25925","changeLoserAppealPeriodMultiplier(uint256)":"c94828f0","changeLoserStakeMultiplier(uint256)":"92239dff","changeWinnerStakeMultiplier(uint256)":"adc7faba","findVacantStorageSlot(uint72)":"e165720c","fundAppeal(uint256,uint8)":"12b3a2c0","getAmountRemainsToBeRaised(uint256,uint8)":"a509efeb","getAppealPeriod(uint256,uint8)":"638af3da","getLastRoundWinner(uint256)":"7f67bd6c","getReturnOfInvestmentRatio(uint8,uint8)":"b4c70581","getRoundInfo(uint256,uint256)":"8a9bb02a","getTotalWithdrawableAmount(uint256,address)":"af4a9144","increaseBounty(uint72)":"44b9ad06","initializeArticle(string,uint8,uint72)":"faa0ba9d","initiateWithdrawal(uint72)":"ba4c8f8f","submitEvidence(uint256,string)":"a6a7f0eb","switchPublishingLock()":"ba0ec60b","transferOwnership(uint72,address)":"ec4adca9","treasuryBalance()":"313dab20","withdraw(uint72)":"a92c4707","withdrawFeesAndRewards(uint256,address,uint256,uint8)":"dc227fc2","withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)":"6760aeb0","withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)":"c9330c0f","withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])":"67284f21"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"AdminUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newWithdrawalTimelock\",\"type\":\"uint256\"}],\"name\":\"ArticleWithdrawalTimelockUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"}],\"name\":\"ArticleWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotal\",\"type\":\"uint256\"}],\"name\":\"BalanceUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"challanger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"disputeID\",\"type\":\"uint256\"}],\"name\":\"Challenge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newTaxRate\",\"type\":\"uint256\"}],\"name\":\"ChallengeTaxRateUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"ruling\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"}],\"name\":\"Debunked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newLoserAppealPeriodMultiplier\",\"type\":\"uint256\"}],\"name\":\"LoserAppealPeriodMultiplierUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newLoserStakeMultiplier\",\"type\":\"uint256\"}],\"name\":\"LoserStakeMultiplierUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"articleID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"}],\"name\":\"NewArticle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"ruling\",\"type\":\"uint8\"}],\"name\":\"RulingFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"}],\"name\":\"TimelockStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_byAmount\",\"type\":\"uint256\"}],\"name\":\"TreasuryBalanceUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newWinnerStakeMultiplier\",\"type\":\"uint256\"}],\"name\":\"WinnerStakeMultiplierUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"ruling\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ARTICLE_WITHDRAWAL_TIMELOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOSER_APPEAL_PERIOD_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOSER_STAKE_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MULTIPLIER_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NUMBER_OF_RULING_OPTIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WINNER_STAKE_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"appealFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"arbitrationFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"_articleStorageAddress\",\"type\":\"uint72\"}],\"name\":\"challenge\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"_articleStorageAddress\",\"type\":\"uint72\"}],\"name\":\"challengeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"challengeFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"challengeTaxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newArticleWithdrawalTimelock\",\"type\":\"uint256\"}],\"name\":\"changeArticleWithdrawalTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newLoserAppealPeriodMultiplier\",\"type\":\"uint256\"}],\"name\":\"changeLoserAppealPeriodMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newLoserStakeMultiplier\",\"type\":\"uint256\"}],\"name\":\"changeLoserStakeMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newWinnerStakeMultiplier\",\"type\":\"uint256\"}],\"name\":\"changeWinnerStakeMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"_searchPointer\",\"type\":\"uint72\"}],\"name\":\"findVacantStorageSlot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vacantSlotIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"fundAppeal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fullyFunded\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"getAmountRemainsToBeRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"getAppealPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"getLastRoundWinner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_lastRoundWinner\",\"type\":\"uint8\"}],\"name\":\"getReturnOfInvestmentRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"getRoundInfo\",\"outputs\":[{\"internalType\":\"bool[3]\",\"name\":\"hasPaid\",\"type\":\"bool[3]\"},{\"internalType\":\"uint256[3]\",\"name\":\"totalPerRuling\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimableAfterExpenses\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"getTotalWithdrawableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"},{\"internalType\":\"uint256[][]\",\"name\":\"positions\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"_articleStorageAddress\",\"type\":\"uint72\"}],\"name\":\"increaseBounty\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_articleID\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_category\",\"type\":\"uint8\"},{\"internalType\":\"uint72\",\"name\":\"_searchPointer\",\"type\":\"uint72\"}],\"name\":\"initializeArticle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"_articleStorageAddress\",\"type\":\"uint72\"}],\"name\":\"initiateWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_evidenceURI\",\"type\":\"string\"}],\"name\":\"submitEvidence\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"switchPublishingLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"_articleStorageAddress\",\"type\":\"uint72\"},{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"_articleStorageAddress\",\"type\":\"uint72\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"withdrawFeesAndRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"withdrawFeesAndRewardsForAllRounds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"withdrawFeesAndRewardsForAllRoundsAndAllRulings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256[][]\",\"name\":\"positions\",\"type\":\"uint256[][]\"}],\"name\":\"withdrawFeesAndRewardsForGivenPositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"https://github.com/proveuswrong<0xferit, gratestas>\",\"custom:approvals\":\"0xferit, gratestas\",\"details\":\"This contract serves as a standard interface among multiple deployments of the Truth Post contracts.         You should target this interface contract for interactions, not the concrete contract; otherwise you risk incompatibility across versions.\",\"kind\":\"dev\",\"methods\":{\"appealFee(uint256)\":{\"details\":\"Returns the total amount needs to be paid to appeal a dispute, including fees and stake deposit.\",\"params\":{\"_disputeID\":\"ID of the dispute as in arbitrator.\"}},\"challenge(uint72)\":{\"details\":\"Challenges the article at the given storage address. Emits Challenge.\",\"params\":{\"_articleStorageAddress\":\"The address of the article in the storage.\"}},\"challengeFee(uint72)\":{\"details\":\"Returns the total amount needs to be paid to challenge an article, including taxes if any.\",\"params\":{\"_articleStorageAddress\":\"The address of article in the storage.\"}},\"changeArticleWithdrawalTimelock(uint256)\":{\"details\":\"Sets the timelock before an author can initiate the withdrawal of an article to a new value.      Emits ArticleWithdrawalTimelockUpdate.\",\"params\":{\"_newArticleWithdrawalTimelock\":\"The new value of ARTICLE_WITHDRAWAL_TIMELOCK.\"}},\"changeLoserAppealPeriodMultiplier(uint256)\":{\"details\":\"Sets the multiplier of the appeal window for the loser to a new value. Emits LoserAppealPeriodMultiplierUpdate.\",\"params\":{\"_newLoserAppealPeriodMultiplier\":\"The new value of LOSER_APPEAL_PERIOD_MULTIPLIER.\"}},\"changeLoserStakeMultiplier(uint256)\":{\"details\":\"Sets the multiplier of the arbitration cost that the loser has to pay as fee stake to a new value.      Emits LoserStakeMultiplierUpdate.\",\"params\":{\"_newLoserStakeMultiplier\":\"The new value of LOSER_STAKE_MULTIPLIER.\"}},\"changeWinnerStakeMultiplier(uint256)\":{\"details\":\"Sets the multiplier of the arbitration cost that the winner has to pay as fee stake to a new value.      Emits WinnerStakeMultiplierUpdate.\",\"params\":{\"_newWinnerStakeMultiplier\":\"The new value of WINNER_STAKE_MULTIPLIER.\"}},\"findVacantStorageSlot(uint72)\":{\"details\":\"Helper function to find a vacant slot for article. Use this function before calling initialize to minimize your gas cost.\",\"params\":{\"_searchPointer\":\"Starting point of the search. If you do not have a guess, just pass 0.\"}},\"fundAppeal(uint256,uint8)\":{\"details\":\"Lets user to contribute funding of an appeal round. Emits Contribution. If fully funded, emits RulingFunded.\",\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"The ruling option to which the caller wants to contribute.\"},\"returns\":{\"fullyFunded\":\"True if the ruling option got fully funded as a result of this contribution.\"}},\"getAmountRemainsToBeRaised(uint256,uint8)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"The ruling option to query.\"},\"returns\":{\"_0\":\"Amount needs to be raised\"}},\"getAppealPeriod(uint256,uint8)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"The ruling option to query.\"},\"returns\":{\"_0\":\"Start\",\"_1\":\"End\"}},\"getLastRoundWinner(uint256)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\"},\"returns\":{\"_0\":\"Winning ruling option.\"}},\"getReturnOfInvestmentRatio(uint8,uint8)\":{\"details\":\"Purely depends on whether given ruling option is winner and stake multipliers.\",\"params\":{\"_lastRoundWinner\":\"Winner of the last round.\",\"_ruling\":\"The ruling option to query.\"},\"returns\":{\"_0\":\"Return of investment ratio, denominated by MULTIPLIER_DENOMINATOR.\"}},\"getRoundInfo(uint256,uint256)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_round\":\"Round ID.\"},\"returns\":{\"hasPaid\":\"Whether given ruling option was fully funded.\",\"totalClaimableAfterExpenses\":\"Total amount will be distributed back to winners, after deducting expenses.\",\"totalPerRuling\":\"The total raised per ruling option.\"}},\"getTotalWithdrawableAmount(uint256,address)\":{\"details\":\"Returns the sum of withdrawable amount and 2D array of positions[round][ruling].\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\"},\"returns\":{\"sum\":\"The total amount available to withdraw.\"}},\"increaseBounty(uint72)\":{\"details\":\"Lets author to increase a bounty of a live article. Emits BalanceUpdate.\",\"params\":{\"_articleStorageAddress\":\"The address of the article in the storage.\"}},\"initializeArticle(string,uint8,uint72)\":{\"details\":\"Do not confuse articleID with articleAddress. Emits NewArticle.\",\"params\":{\"_articleID\":\"Unique identifier of an article in IPFS content identifier format.\",\"_category\":\"The category code of this new article.\",\"_searchPointer\":\"Starting point of the search. Find a vacant storage slot before calling this function to minimize gas cost.\"}},\"initiateWithdrawal(uint72)\":{\"details\":\"Lets an author to start unpublishing process. Emits TimelockStarted.\",\"params\":{\"_articleStorageAddress\":\"The address of the article in the storage.\"}},\"submitEvidence(uint256,string)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_evidenceURI\":\"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\"}},\"switchPublishingLock()\":{\"details\":\"Useful when it's no longer safe or secure to use this contract.         Prevents new articles to be published. Only intended for privileges users.\"},\"transferOwnership(uint72,address)\":{\"details\":\"Lets you to transfer ownership of an article.      This is useful when you want to change owner account without withdrawing and resubmitting.      Emits OwnershipTransfer.\",\"params\":{\"_articleStorageAddress\":\"The address of article in the storage.\",\"_newOwner\":\"The new owner of the article which resides in the storage address, provided by the previous parameter.\"}},\"withdraw(uint72)\":{\"details\":\"Executes unpublishing of an article. Emits Withdrew.\",\"params\":{\"_articleStorageAddress\":\"The address of the article in the storage.\"}},\"withdrawFeesAndRewards(uint256,address,uint256,uint8)\":{\"details\":\"Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_round\":\"Number of the round that caller wants to execute withdraw on.\",\"_ruling\":\"A ruling option that caller wants to execute withdraw on.\"},\"returns\":{\"sum\":\"The amount that is going to be transferred to contributor as a result of this function call.\"}},\"withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)\":{\"details\":\"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"Ruling option that caller wants to execute withdraw on.\"}},\"withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)\":{\"details\":\"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds and all rulings at once.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\"}},\"withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])\":{\"details\":\"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for given positions at once.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\",\"positions\":\"[rounds][rulings].\"}}},\"title\":\"The Truth Post: Accurate and Relevant News\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"appealFee(uint256)\":{\"notice\":\"Get required appeal fee and deposit.\"},\"challenge(uint72)\":{\"notice\":\"Challenge article.\"},\"challengeFee(uint72)\":{\"notice\":\"Get required challenge fee.\"},\"changeArticleWithdrawalTimelock(uint256)\":{\"notice\":\"Update the timelock for the article withdtrawal.\"},\"changeLoserAppealPeriodMultiplier(uint256)\":{\"notice\":\"Update the appeal window for the loser.\"},\"changeLoserStakeMultiplier(uint256)\":{\"notice\":\"Update the arbitration cost for the loser.\"},\"changeWinnerStakeMultiplier(uint256)\":{\"notice\":\"Update the arbitration cost for the winner.\"},\"findVacantStorageSlot(uint72)\":{\"notice\":\"Find a vacant storage slot for an article.\"},\"fundAppeal(uint256,uint8)\":{\"notice\":\"Fund a crowdfunding appeal.\"},\"getAmountRemainsToBeRaised(uint256,uint8)\":{\"notice\":\"Learn about how much more needs to be raised for given ruling option.\"},\"getAppealPeriod(uint256,uint8)\":{\"notice\":\"Get appeal time window.\"},\"getLastRoundWinner(uint256)\":{\"notice\":\"Get last round's winner.\"},\"getReturnOfInvestmentRatio(uint8,uint8)\":{\"notice\":\"Get return of investment ratio.\"},\"getRoundInfo(uint256,uint256)\":{\"notice\":\"Learn about given dispute round.\"},\"getTotalWithdrawableAmount(uint256,address)\":{\"notice\":\"Learn the total amount of appeal crowdfunding balance available.\"},\"increaseBounty(uint72)\":{\"notice\":\"Increase bounty.\"},\"initializeArticle(string,uint8,uint72)\":{\"notice\":\"Publish an article.\"},\"initiateWithdrawal(uint72)\":{\"notice\":\"Initiate unpublishing process.\"},\"submitEvidence(uint256,string)\":{\"notice\":\"Submit an evidence.\"},\"switchPublishingLock()\":{\"notice\":\"Switches publishing lock.\"},\"transferOwnership(uint72,address)\":{\"notice\":\"Transfer ownership of an article.\"},\"withdraw(uint72)\":{\"notice\":\"Execute unpublishing.\"},\"withdrawFeesAndRewards(uint256,address,uint256,uint8)\":{\"notice\":\"Withdraw appeal crowdfunding balance.\"},\"withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)\":{\"notice\":\"Withdraw appeal crowdfunding balance for given ruling option for all rounds.\"},\"withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)\":{\"notice\":\"Withdraw appeal crowdfunding balance for all ruling options and all rounds.\"},\"withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])\":{\"notice\":\"Withdraw appeal crowdfunding balance for given ruling option and for given rounds.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ITruthPost.sol\":\"ITruthPost\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/ITruthPost.sol\":{\"content\":\"/// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.10;\\n\\n/// @title  The Truth Post: Accurate and Relevant News\\n/// @author https://github.com/proveuswrong<0xferit, gratestas>\\n/// @dev    This contract serves as a standard interface among multiple deployments of the Truth Post contracts.\\n///         You should target this interface contract for interactions, not the concrete contract; otherwise you risk incompatibility across versions.\\n/// @custom:approvals 0xferit, gratestas\\nabstract contract ITruthPost {\\n    string public constant VERSION = \\\"1.2.0\\\";\\n\\n    enum RulingOptions {\\n        Tied,\\n        ChallengeFailed,\\n        Debunked\\n    }\\n\\n    bool isPublishingEnabled = true;\\n    address payable public TREASURY;\\n    uint256 public treasuryBalance;\\n    uint256 public constant NUMBER_OF_RULING_OPTIONS = 2;\\n    uint256 public constant MULTIPLIER_DENOMINATOR = 1024; // Denominator for multipliers.\\n    uint256 public LOSER_APPEAL_PERIOD_MULTIPLIER = 512; // Multiplier of the appeal period for losers (any other ruling options) in basis points. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\\n    uint256 public ARTICLE_WITHDRAWAL_TIMELOCK; // To prevent authors to act fast and escape punishment.\\n    uint256 public WINNER_STAKE_MULTIPLIER; // Multiplier of the arbitration cost that the winner has to pay as fee stake for a round in basis points.\\n    uint256 public LOSER_STAKE_MULTIPLIER; // Multiplier of the arbitration cost that the loser has to pay as fee stake for a round in basis points.\\n    uint256 public challengeTaxRate = 16;\\n\\n    constructor(\\n        uint256 _articleWithdrawalTimelock,\\n        uint256 _winnerStakeMultiplier,\\n        uint256 _loserStakeMultiplier,\\n        address payable _treasury\\n    ) {\\n        ARTICLE_WITHDRAWAL_TIMELOCK = _articleWithdrawalTimelock;\\n        WINNER_STAKE_MULTIPLIER = _winnerStakeMultiplier;\\n        LOSER_STAKE_MULTIPLIER = _loserStakeMultiplier;\\n        TREASURY = _treasury;\\n    }\\n\\n    event NewArticle(string articleID, uint8 category, uint256 articleAddress);\\n    event Debunked(uint256 articleAddress);\\n    event ArticleWithdrawn(uint256 articleAddress);\\n    event BalanceUpdate(uint256 articleAddress, uint256 newTotal);\\n    event TimelockStarted(uint256 articleAddress);\\n    event Challenge(uint256 indexed articleAddress, address challanger, uint256 disputeID);\\n    event Contribution(\\n        uint256 indexed disputeId,\\n        uint256 indexed round,\\n        RulingOptions ruling,\\n        address indexed contributor,\\n        uint256 amount\\n    );\\n    event Withdrawal(\\n        uint256 indexed disputeId,\\n        uint256 indexed round,\\n        RulingOptions ruling,\\n        address indexed contributor,\\n        uint256 reward\\n    );\\n    event RulingFunded(uint256 indexed disputeId, uint256 indexed round, RulingOptions indexed ruling);\\n    event OwnershipTransfer(address indexed _newOwner);\\n    event AdminUpdate(address indexed _newAdmin);\\n    event WinnerStakeMultiplierUpdate(uint256 indexed _newWinnerStakeMultiplier);\\n    event LoserStakeMultiplierUpdate(uint256 indexed _newLoserStakeMultiplier);\\n    event LoserAppealPeriodMultiplierUpdate(uint256 indexed _newLoserAppealPeriodMultiplier);\\n    event ArticleWithdrawalTimelockUpdate(uint256 indexed _newWithdrawalTimelock);\\n    event ChallengeTaxRateUpdate(uint256 indexed _newTaxRate);\\n    event TreasuryUpdate(address indexed _newTreasury);\\n    event TreasuryBalanceUpdate(uint256 indexed _byAmount);\\n\\n    /// @notice Submit an evidence.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\\n    function submitEvidence(uint256 _disputeID, string calldata _evidenceURI) external virtual;\\n\\n    /// @notice Fund a crowdfunding appeal.\\n    /// @dev Lets user to contribute funding of an appeal round. Emits Contribution. If fully funded, emits RulingFunded.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _ruling The ruling option to which the caller wants to contribute.\\n    /// @return fullyFunded True if the ruling option got fully funded as a result of this contribution.\\n    function fundAppeal(uint256 _disputeID, RulingOptions _ruling) external payable virtual returns (bool fullyFunded);\\n\\n    /// @notice Publish an article.\\n    /// @dev    Do not confuse articleID with articleAddress. Emits NewArticle.\\n    /// @param _articleID Unique identifier of an article in IPFS content identifier format.\\n    /// @param _category The category code of this new article.\\n    /// @param _searchPointer Starting point of the search. Find a vacant storage slot before calling this function to minimize gas cost.\\n    function initializeArticle(\\n        string calldata _articleID,\\n        uint8 _category,\\n        uint72 _searchPointer\\n    ) external payable virtual;\\n\\n    /// @notice Increase bounty.\\n    /// @dev Lets author to increase a bounty of a live article. Emits BalanceUpdate.\\n    /// @param _articleStorageAddress The address of the article in the storage.\\n    function increaseBounty(uint72 _articleStorageAddress) external payable virtual;\\n\\n    /// @notice Initiate unpublishing process.\\n    /// @dev Lets an author to start unpublishing process. Emits TimelockStarted.\\n    /// @param _articleStorageAddress The address of the article in the storage.\\n    function initiateWithdrawal(uint72 _articleStorageAddress) external virtual;\\n\\n    /// @notice Execute unpublishing.\\n    /// @dev Executes unpublishing of an article. Emits Withdrew.\\n    /// @param _articleStorageAddress The address of the article in the storage.\\n    function withdraw(uint72 _articleStorageAddress) external virtual;\\n\\n    /// @notice Challenge article.\\n    /// @dev Challenges the article at the given storage address. Emits Challenge.\\n    /// @param _articleStorageAddress The address of the article in the storage.\\n    function challenge(uint72 _articleStorageAddress) external payable virtual;\\n\\n    /// @notice Transfer ownership of an article.\\n    /// @dev Lets you to transfer ownership of an article.\\n    ///      This is useful when you want to change owner account without withdrawing and resubmitting.\\n    ///      Emits OwnershipTransfer.\\n    /// @param _articleStorageAddress The address of article in the storage.\\n    /// @param _newOwner The new owner of the article which resides in the storage address, provided by the previous parameter.\\n    function transferOwnership(uint72 _articleStorageAddress, address payable _newOwner) external virtual;\\n\\n    /// @notice Update the arbitration cost for the winner.\\n    /// @dev Sets the multiplier of the arbitration cost that the winner has to pay as fee stake to a new value.\\n    ///      Emits WinnerStakeMultiplierUpdate.\\n    /// @param _newWinnerStakeMultiplier The new value of WINNER_STAKE_MULTIPLIER.\\n    function changeWinnerStakeMultiplier(uint256 _newWinnerStakeMultiplier) external virtual;\\n\\n    /// @notice Update the arbitration cost for the loser.\\n    /// @dev Sets the multiplier of the arbitration cost that the loser has to pay as fee stake to a new value.\\n    ///      Emits LoserStakeMultiplierUpdate.\\n    /// @param _newLoserStakeMultiplier The new value of LOSER_STAKE_MULTIPLIER.\\n\\n    function changeLoserStakeMultiplier(uint256 _newLoserStakeMultiplier) external virtual;\\n\\n    /// @notice Update the appeal window for the loser.\\n    /// @dev Sets the multiplier of the appeal window for the loser to a new value. Emits LoserAppealPeriodMultiplierUpdate.\\n    /// @param _newLoserAppealPeriodMultiplier The new value of LOSER_APPEAL_PERIOD_MULTIPLIER.\\n    function changeLoserAppealPeriodMultiplier(uint256 _newLoserAppealPeriodMultiplier) external virtual;\\n\\n    /// @notice Update the timelock for the article withdtrawal.\\n    /// @dev Sets the timelock before an author can initiate the withdrawal of an article to a new value.\\n    ///      Emits ArticleWithdrawalTimelockUpdate.\\n    /// @param _newArticleWithdrawalTimelock The new value of ARTICLE_WITHDRAWAL_TIMELOCK.\\n    function changeArticleWithdrawalTimelock(uint256 _newArticleWithdrawalTimelock) external virtual;\\n\\n    /// @notice Find a vacant storage slot for an article.\\n    /// @dev Helper function to find a vacant slot for article. Use this function before calling initialize to minimize your gas cost.\\n    /// @param _searchPointer Starting point of the search. If you do not have a guess, just pass 0.\\n    function findVacantStorageSlot(uint72 _searchPointer) external view virtual returns (uint256 vacantSlotIndex);\\n\\n    /// @notice Get required challenge fee.\\n    /// @dev Returns the total amount needs to be paid to challenge an article, including taxes if any.\\n    /// @param _articleStorageAddress The address of article in the storage.\\n    function challengeFee(uint72 _articleStorageAddress) public view virtual returns (uint256 challengeFee);\\n\\n    /// @notice Get required appeal fee and deposit.\\n    /// @dev Returns the total amount needs to be paid to appeal a dispute, including fees and stake deposit.\\n    /// @param _disputeID ID of the dispute as in arbitrator.\\n    function appealFee(uint256 _disputeID) external view virtual returns (uint256 arbitrationFee);\\n\\n    /// @notice Withdraw appeal crowdfunding balance.\\n    /// @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    /// @param _round Number of the round that caller wants to execute withdraw on.\\n    /// @param _ruling A ruling option that caller wants to execute withdraw on.\\n    /// @return sum The amount that is going to be transferred to contributor as a result of this function call.\\n    function withdrawFeesAndRewards(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        uint256 _round,\\n        RulingOptions _ruling\\n    ) external virtual returns (uint256 sum);\\n\\n    /// @notice Withdraw appeal crowdfunding balance for given ruling option for all rounds.\\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    /// @param _ruling Ruling option that caller wants to execute withdraw on.\\n    function withdrawFeesAndRewardsForAllRounds(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        RulingOptions _ruling\\n    ) external virtual;\\n\\n    /// @notice Withdraw appeal crowdfunding balance for given ruling option and for given rounds.\\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for given positions at once.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    /// @param positions [rounds][rulings].\\n    function withdrawFeesAndRewardsForGivenPositions(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        uint256[][] calldata positions\\n    ) external virtual;\\n\\n    /// @notice Withdraw appeal crowdfunding balance for all ruling options and all rounds.\\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds and all rulings at once.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    function withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256 _disputeID, address payable _contributor)\\n        external\\n        virtual;\\n\\n    /// @notice Learn the total amount of appeal crowdfunding balance available.\\n    /// @dev Returns the sum of withdrawable amount and 2D array of positions[round][ruling].\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    /// @return sum The total amount available to withdraw.\\n    function getTotalWithdrawableAmount(uint256 _disputeID, address payable _contributor)\\n        external\\n        view\\n        virtual\\n        returns (uint256 sum, uint256[][] memory positions);\\n\\n    /// @notice Learn about given dispute round.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _round Round ID.\\n    /// @return hasPaid Whether given ruling option was fully funded.\\n    /// @return totalPerRuling The total raised per ruling option.\\n    /// @return totalClaimableAfterExpenses Total amount will be distributed back to winners, after deducting expenses.\\n    function getRoundInfo(uint256 _disputeID, uint256 _round)\\n        external\\n        view\\n        virtual\\n        returns (\\n            bool[NUMBER_OF_RULING_OPTIONS + 1] memory hasPaid,\\n            uint256[NUMBER_OF_RULING_OPTIONS + 1] memory totalPerRuling,\\n            uint256 totalClaimableAfterExpenses\\n        );\\n\\n    /// @notice Learn about how much more needs to be raised for given ruling option.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _ruling The ruling option to query.\\n    /// @return Amount needs to be raised\\n    function getAmountRemainsToBeRaised(uint256 _disputeID, RulingOptions _ruling)\\n        external\\n        view\\n        virtual\\n        returns (uint256);\\n\\n    /// @notice Get return of investment ratio.\\n    /// @dev Purely depends on whether given ruling option is winner and stake multipliers.\\n    /// @param _ruling The ruling option to query.\\n    /// @param _lastRoundWinner Winner of the last round.\\n    /// @return Return of investment ratio, denominated by MULTIPLIER_DENOMINATOR.\\n    function getReturnOfInvestmentRatio(RulingOptions _ruling, RulingOptions _lastRoundWinner)\\n        external\\n        view\\n        virtual\\n        returns (uint256);\\n\\n    /// @notice Get appeal time window.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _ruling The ruling option to query.\\n    /// @return Start\\n    /// @return End\\n    function getAppealPeriod(uint256 _disputeID, RulingOptions _ruling)\\n        external\\n        view\\n        virtual\\n        returns (uint256, uint256);\\n\\n    /// @notice Get last round's winner.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @return Winning ruling option.\\n    function getLastRoundWinner(uint256 _disputeID) public view virtual returns (uint256);\\n\\n    /// @notice Switches publishing lock.\\n    /// @dev    Useful when it's no longer safe or secure to use this contract.\\n    ///         Prevents new articles to be published. Only intended for privileges users.\\n    function switchPublishingLock() public virtual;\\n}\\n\",\"keccak256\":\"0x32907cf609115c99cd9bf0af76bd2295af8e3f84560e9b74b9775ab06b914900\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":298,"contract":"contracts/ITruthPost.sol:ITruthPost","label":"isPublishingEnabled","offset":0,"slot":"0","type":"t_bool"},{"astId":300,"contract":"contracts/ITruthPost.sol:ITruthPost","label":"TREASURY","offset":1,"slot":"0","type":"t_address_payable"},{"astId":302,"contract":"contracts/ITruthPost.sol:ITruthPost","label":"treasuryBalance","offset":0,"slot":"1","type":"t_uint256"},{"astId":311,"contract":"contracts/ITruthPost.sol:ITruthPost","label":"LOSER_APPEAL_PERIOD_MULTIPLIER","offset":0,"slot":"2","type":"t_uint256"},{"astId":313,"contract":"contracts/ITruthPost.sol:ITruthPost","label":"ARTICLE_WITHDRAWAL_TIMELOCK","offset":0,"slot":"3","type":"t_uint256"},{"astId":315,"contract":"contracts/ITruthPost.sol:ITruthPost","label":"WINNER_STAKE_MULTIPLIER","offset":0,"slot":"4","type":"t_uint256"},{"astId":317,"contract":"contracts/ITruthPost.sol:ITruthPost","label":"LOSER_STAKE_MULTIPLIER","offset":0,"slot":"5","type":"t_uint256"},{"astId":320,"contract":"contracts/ITruthPost.sol:ITruthPost","label":"challengeTaxRate","offset":0,"slot":"6","type":"t_uint256"}],"types":{"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"appealFee(uint256)":{"notice":"Get required appeal fee and deposit."},"challenge(uint72)":{"notice":"Challenge article."},"challengeFee(uint72)":{"notice":"Get required challenge fee."},"changeArticleWithdrawalTimelock(uint256)":{"notice":"Update the timelock for the article withdtrawal."},"changeLoserAppealPeriodMultiplier(uint256)":{"notice":"Update the appeal window for the loser."},"changeLoserStakeMultiplier(uint256)":{"notice":"Update the arbitration cost for the loser."},"changeWinnerStakeMultiplier(uint256)":{"notice":"Update the arbitration cost for the winner."},"findVacantStorageSlot(uint72)":{"notice":"Find a vacant storage slot for an article."},"fundAppeal(uint256,uint8)":{"notice":"Fund a crowdfunding appeal."},"getAmountRemainsToBeRaised(uint256,uint8)":{"notice":"Learn about how much more needs to be raised for given ruling option."},"getAppealPeriod(uint256,uint8)":{"notice":"Get appeal time window."},"getLastRoundWinner(uint256)":{"notice":"Get last round's winner."},"getReturnOfInvestmentRatio(uint8,uint8)":{"notice":"Get return of investment ratio."},"getRoundInfo(uint256,uint256)":{"notice":"Learn about given dispute round."},"getTotalWithdrawableAmount(uint256,address)":{"notice":"Learn the total amount of appeal crowdfunding balance available."},"increaseBounty(uint72)":{"notice":"Increase bounty."},"initializeArticle(string,uint8,uint72)":{"notice":"Publish an article."},"initiateWithdrawal(uint72)":{"notice":"Initiate unpublishing process."},"submitEvidence(uint256,string)":{"notice":"Submit an evidence."},"switchPublishingLock()":{"notice":"Switches publishing lock."},"transferOwnership(uint72,address)":{"notice":"Transfer ownership of an article."},"withdraw(uint72)":{"notice":"Execute unpublishing."},"withdrawFeesAndRewards(uint256,address,uint256,uint8)":{"notice":"Withdraw appeal crowdfunding balance."},"withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)":{"notice":"Withdraw appeal crowdfunding balance for given ruling option for all rounds."},"withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)":{"notice":"Withdraw appeal crowdfunding balance for all ruling options and all rounds."},"withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])":{"notice":"Withdraw appeal crowdfunding balance for given ruling option and for given rounds."}},"version":1}}},"contracts/TruthPost.sol":{"TruthPost":{"abi":[{"inputs":[{"internalType":"contract IArbitrator","name":"_arbitrator","type":"address"},{"internalType":"bytes","name":"_arbitratorExtraData","type":"bytes"},{"internalType":"string","name":"_metaevidenceIpfsUri","type":"string"},{"internalType":"uint256","name":"_articleWithdrawalTimelock","type":"uint256"},{"internalType":"uint256","name":"_winnerStakeMultiplier","type":"uint256"},{"internalType":"uint256","name":"_loserStakeMultiplier","type":"uint256"},{"internalType":"address payable","name":"_treasury","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_newAdmin","type":"address"}],"name":"AdminUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_newWithdrawalTimelock","type":"uint256"}],"name":"ArticleWithdrawalTimelockUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"articleAddress","type":"uint256"}],"name":"ArticleWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"articleAddress","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newTotal","type":"uint256"}],"name":"BalanceUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"articleAddress","type":"uint256"},{"indexed":false,"internalType":"address","name":"challanger","type":"address"},{"indexed":false,"internalType":"uint256","name":"disputeID","type":"uint256"}],"name":"Challenge","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_newTaxRate","type":"uint256"}],"name":"ChallengeTaxRateUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"disputeId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"round","type":"uint256"},{"indexed":false,"internalType":"enum ITruthPost.RulingOptions","name":"ruling","type":"uint8"},{"indexed":true,"internalType":"address","name":"contributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Contribution","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"articleAddress","type":"uint256"}],"name":"Debunked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IArbitrator","name":"_arbitrator","type":"address"},{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_metaEvidenceID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_evidenceGroupID","type":"uint256"}],"name":"Dispute","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IArbitrator","name":"_arbitrator","type":"address"},{"indexed":true,"internalType":"uint256","name":"_evidenceGroupID","type":"uint256"},{"indexed":true,"internalType":"address","name":"_party","type":"address"},{"indexed":false,"internalType":"string","name":"_evidence","type":"string"}],"name":"Evidence","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_newLoserAppealPeriodMultiplier","type":"uint256"}],"name":"LoserAppealPeriodMultiplierUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_newLoserStakeMultiplier","type":"uint256"}],"name":"LoserStakeMultiplierUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_metaEvidenceID","type":"uint256"},{"indexed":false,"internalType":"string","name":"_evidence","type":"string"}],"name":"MetaEvidence","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"articleID","type":"string"},{"indexed":false,"internalType":"uint8","name":"category","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"articleAddress","type":"uint256"}],"name":"NewArticle","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_newOwner","type":"address"}],"name":"OwnershipTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IArbitrator","name":"_arbitrator","type":"address"},{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_ruling","type":"uint256"}],"name":"Ruling","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"disputeId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"round","type":"uint256"},{"indexed":true,"internalType":"enum ITruthPost.RulingOptions","name":"ruling","type":"uint8"}],"name":"RulingFunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"articleAddress","type":"uint256"}],"name":"TimelockStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_byAmount","type":"uint256"}],"name":"TreasuryBalanceUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_newTreasury","type":"address"}],"name":"TreasuryUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_newWinnerStakeMultiplier","type":"uint256"}],"name":"WinnerStakeMultiplierUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"disputeId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"round","type":"uint256"},{"indexed":false,"internalType":"enum ITruthPost.RulingOptions","name":"ruling","type":"uint8"},{"indexed":true,"internalType":"address","name":"contributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"ARBITRATOR","outputs":[{"internalType":"contract IArbitrator","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ARTICLE_WITHDRAWAL_TIMELOCK","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LOSER_APPEAL_PERIOD_MULTIPLIER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LOSER_STAKE_MULTIPLIER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MULTIPLIER_DENOMINATOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NUMBER_OF_RULING_OPTIONS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TREASURY","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WINNER_STAKE_MULTIPLIER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"}],"name":"appealFee","outputs":[{"internalType":"uint256","name":"arbitrationFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint72","name":"","type":"uint72"}],"name":"articleStorage","outputs":[{"internalType":"address payable","name":"owner","type":"address"},{"internalType":"uint32","name":"withdrawalPermittedAt","type":"uint32"},{"internalType":"uint56","name":"bountyAmount","type":"uint56"},{"internalType":"uint8","name":"category","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"categoryCounter","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"categoryToArbitratorExtraData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint72","name":"_articleStorageAddress","type":"uint72"}],"name":"challenge","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint72","name":"_articleStorageAddress","type":"uint72"}],"name":"challengeFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"challengeTaxRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"_newAdmin","type":"address"}],"name":"changeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newArticleWithdrawalTimelock","type":"uint256"}],"name":"changeArticleWithdrawalTimelock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newLoserAppealPeriodMultiplier","type":"uint256"}],"name":"changeLoserAppealPeriodMultiplier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newLoserStakeMultiplier","type":"uint256"}],"name":"changeLoserStakeMultiplier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"_newTreasury","type":"address"}],"name":"changeTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newWinnerStakeMultiplier","type":"uint256"}],"name":"changeWinnerStakeMultiplier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"disputes","outputs":[{"internalType":"address payable","name":"challenger","type":"address"},{"internalType":"enum ITruthPost.RulingOptions","name":"outcome","type":"uint8"},{"internalType":"uint8","name":"articleCategory","type":"uint8"},{"internalType":"bool","name":"resolved","type":"bool"},{"internalType":"uint72","name":"articleStorageAddress","type":"uint72"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint72","name":"_searchPointer","type":"uint72"}],"name":"findVacantStorageSlot","outputs":[{"internalType":"uint256","name":"vacantSlotIndex","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"enum ITruthPost.RulingOptions","name":"_supportedRuling","type":"uint8"}],"name":"fundAppeal","outputs":[{"internalType":"bool","name":"fullyFunded","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"enum ITruthPost.RulingOptions","name":"_ruling","type":"uint8"}],"name":"getAmountRemainsToBeRaised","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"enum ITruthPost.RulingOptions","name":"_ruling","type":"uint8"}],"name":"getAppealPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"}],"name":"getLastRoundWinner","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum ITruthPost.RulingOptions","name":"_ruling","type":"uint8"},{"internalType":"enum ITruthPost.RulingOptions","name":"_lastRoundWinner","type":"uint8"}],"name":"getReturnOfInvestmentRatio","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"uint256","name":"_round","type":"uint256"}],"name":"getRoundInfo","outputs":[{"internalType":"bool[3]","name":"hasPaid","type":"bool[3]"},{"internalType":"uint256[3]","name":"totalPerRuling","type":"uint256[3]"},{"internalType":"uint256","name":"totalClaimableAfterExpenses","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"address payable","name":"_contributor","type":"address"}],"name":"getTotalWithdrawableAmount","outputs":[{"internalType":"uint256","name":"sum","type":"uint256"},{"internalType":"uint256[][]","name":"amounts","type":"uint256[][]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint72","name":"_articleStorageAddress","type":"uint72"}],"name":"increaseBounty","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"string","name":"_articleID","type":"string"},{"internalType":"uint8","name":"_category","type":"uint8"},{"internalType":"uint72","name":"_searchPointer","type":"uint72"}],"name":"initializeArticle","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint72","name":"_articleStorageAddress","type":"uint72"}],"name":"initiateWithdrawal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_metaevidenceIpfsUri","type":"string"},{"internalType":"bytes","name":"_arbitratorExtraData","type":"bytes"}],"name":"newCategory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"uint256","name":"_ruling","type":"uint256"}],"name":"rule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"string","name":"_evidenceURI","type":"string"}],"name":"submitEvidence","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"switchPublishingLock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"transferBalanceToTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint72","name":"_articleStorageAddress","type":"uint72"},{"internalType":"address payable","name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasuryBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newChallengeTaxRate","type":"uint256"}],"name":"updateChallengeTaxRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint72","name":"_articleStorageAddress","type":"uint72"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"address payable","name":"_contributor","type":"address"},{"internalType":"uint256","name":"_roundNumber","type":"uint256"},{"internalType":"enum ITruthPost.RulingOptions","name":"_ruling","type":"uint8"}],"name":"withdrawFeesAndRewards","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"address payable","name":"_contributor","type":"address"},{"internalType":"enum ITruthPost.RulingOptions","name":"_ruling","type":"uint8"}],"name":"withdrawFeesAndRewardsForAllRounds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"address payable","name":"_contributor","type":"address"}],"name":"withdrawFeesAndRewardsForAllRoundsAndAllRulings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"address payable","name":"_contributor","type":"address"},{"internalType":"uint256[][]","name":"positions","type":"uint256[][]"}],"name":"withdrawFeesAndRewardsForGivenPositions","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"https://github.com/proveuswrong<0xferit, gratestas>","custom:approvals":"0xferit, gratestas","details":"You should target ITruthPost interface contract for building on top. Otherwise you risk incompatibility across versions.         Articles are not addressed with their identifiers. That enables us to reuse same storage address for another article later.///         Arbitrator is fixed, but subcourts, jury size and metaevidence are not.         We prevent articles to get withdrawn immediately. This is to prevent submitter to escape punishment in case someone discovers an argument to debunk the article.         Bounty amounts are compressed with a lossy compression method to save on storage cost.","events":{"Dispute(address,uint256,uint256,uint256)":{"details":"To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.","params":{"_arbitrator":"The arbitrator of the contract.","_disputeID":"ID of the dispute in the Arbitrator contract.","_evidenceGroupID":"Unique identifier of the evidence group that is linked to this dispute.","_metaEvidenceID":"Unique identifier of meta-evidence."}},"Evidence(address,uint256,address,string)":{"details":"To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).","params":{"_arbitrator":"The arbitrator of the contract.","_evidence":"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'","_evidenceGroupID":"Unique identifier of the evidence group the evidence belongs to.","_party":"The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party."}},"MetaEvidence(uint256,string)":{"details":"To be emitted when meta-evidence is submitted.","params":{"_evidence":"IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'","_metaEvidenceID":"Unique identifier of meta-evidence."}},"Ruling(address,uint256,uint256)":{"details":"To be raised when a ruling is given.","params":{"_arbitrator":"The arbitrator giving the ruling.","_disputeID":"ID of the dispute in the Arbitrator contract.","_ruling":"The ruling which was given."}}},"kind":"dev","methods":{"appealFee(uint256)":{"details":"Returns the total amount needs to be paid to appeal a dispute, including fees and stake deposit.","params":{"_disputeID":"ID of the dispute as in arbitrator."}},"challenge(uint72)":{"details":"Challenges the article at the given storage address. Emits Challenge.","params":{"_articleStorageAddress":"The address of the article in the storage."}},"challengeFee(uint72)":{"details":"Returns the total amount needs to be paid to challenge an article, including taxes if any.","params":{"_articleStorageAddress":"The address of article in the storage."}},"changeAdmin(address)":{"details":"Only the current administrator can call this function. Emits AdminUpdate.","params":{"_newAdmin":"The address of the new administrator."}},"changeArticleWithdrawalTimelock(uint256)":{"details":"Sets the timelock before an author can initiate the withdrawal of an article to a new value.      Emits ArticleWithdrawalTimelockUpdate.","params":{"_newArticleWithdrawalTimelock":"The new value of ARTICLE_WITHDRAWAL_TIMELOCK."}},"changeLoserAppealPeriodMultiplier(uint256)":{"details":"Sets the multiplier of the appeal window for the loser to a new value. Emits LoserAppealPeriodMultiplierUpdate.","params":{"_newLoserAppealPeriodMultiplier":"The new value of LOSER_APPEAL_PERIOD_MULTIPLIER."}},"changeLoserStakeMultiplier(uint256)":{"details":"Sets the multiplier of the arbitration cost that the loser has to pay as fee stake to a new value.      Emits LoserStakeMultiplierUpdate.","params":{"_newLoserStakeMultiplier":"The new value of LOSER_STAKE_MULTIPLIER."}},"changeTreasury(address)":{"details":"Only the current administrator can call this function. Emits TreasuryUpdate.","params":{"_newTreasury":"The address of the new treasury."}},"changeWinnerStakeMultiplier(uint256)":{"details":"Sets the multiplier of the arbitration cost that the winner has to pay as fee stake to a new value.      Emits WinnerStakeMultiplierUpdate.","params":{"_newWinnerStakeMultiplier":"The new value of WINNER_STAKE_MULTIPLIER."}},"findVacantStorageSlot(uint72)":{"details":"Helper function to find a vacant slot for article. Use this function before calling initialize to minimize your gas cost.","params":{"_searchPointer":"Starting point of the search. If you do not have a guess, just pass 0."}},"fundAppeal(uint256,uint8)":{"details":"Lets user to contribute funding of an appeal round. Emits Contribution. If fully funded, emits RulingFunded.","params":{"_disputeID":"The dispute ID as in arbitrator.","_ruling":"The ruling option to which the caller wants to contribute."},"returns":{"fullyFunded":"True if the ruling option got fully funded as a result of this contribution."}},"getAmountRemainsToBeRaised(uint256,uint8)":{"params":{"_disputeID":"The dispute ID as in arbitrator.","_ruling":"The ruling option to query."},"returns":{"_0":"Amount needs to be raised"}},"getAppealPeriod(uint256,uint8)":{"params":{"_disputeID":"The dispute ID as in arbitrator.","_ruling":"The ruling option to query."},"returns":{"_0":"Start","_1":"End"}},"getLastRoundWinner(uint256)":{"params":{"_disputeID":"The dispute ID as in arbitrator."},"returns":{"_0":"Winning ruling option."}},"getReturnOfInvestmentRatio(uint8,uint8)":{"details":"Purely depends on whether given ruling option is winner and stake multipliers.","params":{"_lastRoundWinner":"Winner of the last round.","_ruling":"The ruling option to query."},"returns":{"_0":"Return of investment ratio, denominated by MULTIPLIER_DENOMINATOR."}},"getRoundInfo(uint256,uint256)":{"params":{"_disputeID":"The dispute ID as in arbitrator.","_round":"Round ID."},"returns":{"hasPaid":"Whether given ruling option was fully funded.","totalClaimableAfterExpenses":"Total amount will be distributed back to winners, after deducting expenses.","totalPerRuling":"The total raised per ruling option."}},"getTotalWithdrawableAmount(uint256,address)":{"details":"Returns the sum of withdrawable amount and 2D array of positions[round][ruling].","params":{"_contributor":"Beneficiary of withdraw operation.","_disputeID":"The dispute ID as in arbitrator."},"returns":{"sum":"The total amount available to withdraw."}},"increaseBounty(uint72)":{"details":"Lets author to increase a bounty of a live article. Emits BalanceUpdate.","params":{"_articleStorageAddress":"The address of the article in the storage."}},"initializeArticle(string,uint8,uint72)":{"details":"Do not confuse articleID with articleAddress. Emits NewArticle.","params":{"_articleID":"Unique identifier of an article in IPFS content identifier format.","_category":"The category code of this new article.","_searchPointer":"Starting point of the search. Find a vacant storage slot before calling this function to minimize gas cost."}},"initiateWithdrawal(uint72)":{"details":"Lets an author to start unpublishing process. Emits TimelockStarted.","params":{"_articleStorageAddress":"The address of the article in the storage."}},"newCategory(string,bytes)":{"params":{"_arbitratorExtraData":"Extra data of Kleros arbitrator, signaling subcourt and jury size selection.","_metaevidenceIpfsUri":"IPFS content identifier for metaevidence."}},"rule(uint256,uint256)":{"details":"This is only for arbitrator to use.","params":{"_disputeID":"The dispute ID as in arbitrator.","_ruling":"Winning ruling option."}},"submitEvidence(uint256,string)":{"params":{"_disputeID":"The dispute ID as in arbitrator.","_evidenceURI":"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'"}},"switchPublishingLock()":{"details":"Useful when it's no longer safe or secure to use this contract.         Prevents new articles to be published. Only intended for privileges users."},"transferBalanceToTreasury()":{"details":"Allows the contract to send its entire balance to the treasury address.         It is important to ensure that the treasury address is set correctly.         If the transfer fails, an exception will be raised, and the funds will remain in the contract.         Emits TreasuryBalanceUpdate."},"transferOwnership(uint72,address)":{"details":"Lets you to transfer ownership of an article.      This is useful when you want to change owner account without withdrawing and resubmitting.      Emits OwnershipTransfer.","params":{"_articleStorageAddress":"The address of article in the storage.","_newOwner":"The new owner of the article which resides in the storage address, provided by the previous parameter."}},"updateChallengeTaxRate(uint256)":{"details":"The new challenge tax rate must be at most 25% based on MULTIPLIER_DENOMINATOR.         Only the current administrator can call this function. Emits ChallengeTaxRateUpdate.","params":{"_newChallengeTaxRate":"The new challenge tax rate to be set."}},"withdraw(uint72)":{"details":"Executes unpublishing of an article. Emits Withdrew.","params":{"_articleStorageAddress":"The address of the article in the storage."}},"withdrawFeesAndRewards(uint256,address,uint256,uint8)":{"details":"Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.","params":{"_contributor":"Beneficiary of withdraw operation.","_disputeID":"The dispute ID as in arbitrator.","_round":"Number of the round that caller wants to execute withdraw on.","_ruling":"A ruling option that caller wants to execute withdraw on."},"returns":{"amount":"The amount that is going to be transferred to contributor as a result of this function call."}},"withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)":{"details":"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.","params":{"_contributor":"Beneficiary of withdraw operation.","_disputeID":"The dispute ID as in arbitrator.","_ruling":"Ruling option that caller wants to execute withdraw on."}},"withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)":{"details":"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds and all rulings at once.","params":{"_contributor":"Beneficiary of withdraw operation.","_disputeID":"The dispute ID as in arbitrator."}},"withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])":{"details":"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for given positions at once.","params":{"_contributor":"Beneficiary of withdraw operation.","_disputeID":"The dispute ID as in arbitrator.","positions":"[rounds][rulings]."}}},"title":"The Trust Post","version":1},"evm":{"bytecode":{"functionDebugData":{"@_348":{"entryPoint":null,"id":348,"parameterSlots":4,"returnSlots":0},"@_827":{"entryPoint":null,"id":827,"parameterSlots":7,"returnSlots":0},"@newCategory_2185":{"entryPoint":176,"id":2185,"parameterSlots":2,"returnSlots":0},"abi_decode_address_payable_fromMemory":{"entryPoint":671,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_bytes_fromMemory":{"entryPoint":514,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":632,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IArbitrator_$249t_bytes_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_address_payable_fromMemory":{"entryPoint":687,"id":null,"parameterSlots":2,"returnSlots":7},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":933,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e23f3e71c05305a9182237d48ba9b404f0c1c59aaff27a9576fb3eb02eaabde6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint8":{"entryPoint":902,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":1064,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":1143,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":478,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1006,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint8":{"entryPoint":1333,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":880,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":984,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":456,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_contract_IArbitrator":{"entryPoint":432,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:6803:7","nodeType":"YulBlock","src":"0:6803:7","statements":[{"nativeSrc":"6:3:7","nodeType":"YulBlock","src":"6:3:7","statements":[]},{"body":{"nativeSrc":"72:86:7","nodeType":"YulBlock","src":"72:86:7","statements":[{"body":{"nativeSrc":"136:16:7","nodeType":"YulBlock","src":"136:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"145:1:7","nodeType":"YulLiteral","src":"145:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"148:1:7","nodeType":"YulLiteral","src":"148:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"138:6:7","nodeType":"YulIdentifier","src":"138:6:7"},"nativeSrc":"138:12:7","nodeType":"YulFunctionCall","src":"138:12:7"},"nativeSrc":"138:12:7","nodeType":"YulExpressionStatement","src":"138:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"95:5:7","nodeType":"YulIdentifier","src":"95:5:7"},{"arguments":[{"name":"value","nativeSrc":"106:5:7","nodeType":"YulIdentifier","src":"106:5:7"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"121:3:7","nodeType":"YulLiteral","src":"121:3:7","type":"","value":"160"},{"kind":"number","nativeSrc":"126:1:7","nodeType":"YulLiteral","src":"126:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"117:3:7","nodeType":"YulIdentifier","src":"117:3:7"},"nativeSrc":"117:11:7","nodeType":"YulFunctionCall","src":"117:11:7"},{"kind":"number","nativeSrc":"130:1:7","nodeType":"YulLiteral","src":"130:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"113:3:7","nodeType":"YulIdentifier","src":"113:3:7"},"nativeSrc":"113:19:7","nodeType":"YulFunctionCall","src":"113:19:7"}],"functionName":{"name":"and","nativeSrc":"102:3:7","nodeType":"YulIdentifier","src":"102:3:7"},"nativeSrc":"102:31:7","nodeType":"YulFunctionCall","src":"102:31:7"}],"functionName":{"name":"eq","nativeSrc":"92:2:7","nodeType":"YulIdentifier","src":"92:2:7"},"nativeSrc":"92:42:7","nodeType":"YulFunctionCall","src":"92:42:7"}],"functionName":{"name":"iszero","nativeSrc":"85:6:7","nodeType":"YulIdentifier","src":"85:6:7"},"nativeSrc":"85:50:7","nodeType":"YulFunctionCall","src":"85:50:7"},"nativeSrc":"82:70:7","nodeType":"YulIf","src":"82:70:7"}]},"name":"validator_revert_contract_IArbitrator","nativeSrc":"14:144:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"61:5:7","nodeType":"YulTypedName","src":"61:5:7","type":""}],"src":"14:144:7"},{"body":{"nativeSrc":"195:95:7","nodeType":"YulBlock","src":"195:95:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"212:1:7","nodeType":"YulLiteral","src":"212:1:7","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"219:3:7","nodeType":"YulLiteral","src":"219:3:7","type":"","value":"224"},{"kind":"number","nativeSrc":"224:10:7","nodeType":"YulLiteral","src":"224:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"215:3:7","nodeType":"YulIdentifier","src":"215:3:7"},"nativeSrc":"215:20:7","nodeType":"YulFunctionCall","src":"215:20:7"}],"functionName":{"name":"mstore","nativeSrc":"205:6:7","nodeType":"YulIdentifier","src":"205:6:7"},"nativeSrc":"205:31:7","nodeType":"YulFunctionCall","src":"205:31:7"},"nativeSrc":"205:31:7","nodeType":"YulExpressionStatement","src":"205:31:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"252:1:7","nodeType":"YulLiteral","src":"252:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"255:4:7","nodeType":"YulLiteral","src":"255:4:7","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"245:6:7","nodeType":"YulIdentifier","src":"245:6:7"},"nativeSrc":"245:15:7","nodeType":"YulFunctionCall","src":"245:15:7"},"nativeSrc":"245:15:7","nodeType":"YulExpressionStatement","src":"245:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"276:1:7","nodeType":"YulLiteral","src":"276:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"279:4:7","nodeType":"YulLiteral","src":"279:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"269:6:7","nodeType":"YulIdentifier","src":"269:6:7"},"nativeSrc":"269:15:7","nodeType":"YulFunctionCall","src":"269:15:7"},"nativeSrc":"269:15:7","nodeType":"YulExpressionStatement","src":"269:15:7"}]},"name":"panic_error_0x41","nativeSrc":"163:127:7","nodeType":"YulFunctionDefinition","src":"163:127:7"},{"body":{"nativeSrc":"361:184:7","nodeType":"YulBlock","src":"361:184:7","statements":[{"nativeSrc":"371:10:7","nodeType":"YulVariableDeclaration","src":"371:10:7","value":{"kind":"number","nativeSrc":"380:1:7","nodeType":"YulLiteral","src":"380:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"375:1:7","nodeType":"YulTypedName","src":"375:1:7","type":""}]},{"body":{"nativeSrc":"440:63:7","nodeType":"YulBlock","src":"440:63:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"465:3:7","nodeType":"YulIdentifier","src":"465:3:7"},{"name":"i","nativeSrc":"470:1:7","nodeType":"YulIdentifier","src":"470:1:7"}],"functionName":{"name":"add","nativeSrc":"461:3:7","nodeType":"YulIdentifier","src":"461:3:7"},"nativeSrc":"461:11:7","nodeType":"YulFunctionCall","src":"461:11:7"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"484:3:7","nodeType":"YulIdentifier","src":"484:3:7"},{"name":"i","nativeSrc":"489:1:7","nodeType":"YulIdentifier","src":"489:1:7"}],"functionName":{"name":"add","nativeSrc":"480:3:7","nodeType":"YulIdentifier","src":"480:3:7"},"nativeSrc":"480:11:7","nodeType":"YulFunctionCall","src":"480:11:7"}],"functionName":{"name":"mload","nativeSrc":"474:5:7","nodeType":"YulIdentifier","src":"474:5:7"},"nativeSrc":"474:18:7","nodeType":"YulFunctionCall","src":"474:18:7"}],"functionName":{"name":"mstore","nativeSrc":"454:6:7","nodeType":"YulIdentifier","src":"454:6:7"},"nativeSrc":"454:39:7","nodeType":"YulFunctionCall","src":"454:39:7"},"nativeSrc":"454:39:7","nodeType":"YulExpressionStatement","src":"454:39:7"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"401:1:7","nodeType":"YulIdentifier","src":"401:1:7"},{"name":"length","nativeSrc":"404:6:7","nodeType":"YulIdentifier","src":"404:6:7"}],"functionName":{"name":"lt","nativeSrc":"398:2:7","nodeType":"YulIdentifier","src":"398:2:7"},"nativeSrc":"398:13:7","nodeType":"YulFunctionCall","src":"398:13:7"},"nativeSrc":"390:113:7","nodeType":"YulForLoop","post":{"nativeSrc":"412:19:7","nodeType":"YulBlock","src":"412:19:7","statements":[{"nativeSrc":"414:15:7","nodeType":"YulAssignment","src":"414:15:7","value":{"arguments":[{"name":"i","nativeSrc":"423:1:7","nodeType":"YulIdentifier","src":"423:1:7"},{"kind":"number","nativeSrc":"426:2:7","nodeType":"YulLiteral","src":"426:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"419:3:7","nodeType":"YulIdentifier","src":"419:3:7"},"nativeSrc":"419:10:7","nodeType":"YulFunctionCall","src":"419:10:7"},"variableNames":[{"name":"i","nativeSrc":"414:1:7","nodeType":"YulIdentifier","src":"414:1:7"}]}]},"pre":{"nativeSrc":"394:3:7","nodeType":"YulBlock","src":"394:3:7","statements":[]},"src":"390:113:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"523:3:7","nodeType":"YulIdentifier","src":"523:3:7"},{"name":"length","nativeSrc":"528:6:7","nodeType":"YulIdentifier","src":"528:6:7"}],"functionName":{"name":"add","nativeSrc":"519:3:7","nodeType":"YulIdentifier","src":"519:3:7"},"nativeSrc":"519:16:7","nodeType":"YulFunctionCall","src":"519:16:7"},{"kind":"number","nativeSrc":"537:1:7","nodeType":"YulLiteral","src":"537:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"512:6:7","nodeType":"YulIdentifier","src":"512:6:7"},"nativeSrc":"512:27:7","nodeType":"YulFunctionCall","src":"512:27:7"},"nativeSrc":"512:27:7","nodeType":"YulExpressionStatement","src":"512:27:7"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"295:250:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"339:3:7","nodeType":"YulTypedName","src":"339:3:7","type":""},{"name":"dst","nativeSrc":"344:3:7","nodeType":"YulTypedName","src":"344:3:7","type":""},{"name":"length","nativeSrc":"349:6:7","nodeType":"YulTypedName","src":"349:6:7","type":""}],"src":"295:250:7"},{"body":{"nativeSrc":"635:613:7","nodeType":"YulBlock","src":"635:613:7","statements":[{"nativeSrc":"645:13:7","nodeType":"YulVariableDeclaration","src":"645:13:7","value":{"kind":"number","nativeSrc":"657:1:7","nodeType":"YulLiteral","src":"657:1:7","type":"","value":"0"},"variables":[{"name":"size","nativeSrc":"649:4:7","nodeType":"YulTypedName","src":"649:4:7","type":""}]},{"body":{"nativeSrc":"701:22:7","nodeType":"YulBlock","src":"701:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"703:16:7","nodeType":"YulIdentifier","src":"703:16:7"},"nativeSrc":"703:18:7","nodeType":"YulFunctionCall","src":"703:18:7"},"nativeSrc":"703:18:7","nodeType":"YulExpressionStatement","src":"703:18:7"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"673:6:7","nodeType":"YulIdentifier","src":"673:6:7"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"689:2:7","nodeType":"YulLiteral","src":"689:2:7","type":"","value":"64"},{"kind":"number","nativeSrc":"693:1:7","nodeType":"YulLiteral","src":"693:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"685:3:7","nodeType":"YulIdentifier","src":"685:3:7"},"nativeSrc":"685:10:7","nodeType":"YulFunctionCall","src":"685:10:7"},{"kind":"number","nativeSrc":"697:1:7","nodeType":"YulLiteral","src":"697:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"681:3:7","nodeType":"YulIdentifier","src":"681:3:7"},"nativeSrc":"681:18:7","nodeType":"YulFunctionCall","src":"681:18:7"}],"functionName":{"name":"gt","nativeSrc":"670:2:7","nodeType":"YulIdentifier","src":"670:2:7"},"nativeSrc":"670:30:7","nodeType":"YulFunctionCall","src":"670:30:7"},"nativeSrc":"667:56:7","nodeType":"YulIf","src":"667:56:7"},{"nativeSrc":"732:43:7","nodeType":"YulVariableDeclaration","src":"732:43:7","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"754:6:7","nodeType":"YulIdentifier","src":"754:6:7"},{"kind":"number","nativeSrc":"762:2:7","nodeType":"YulLiteral","src":"762:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"750:3:7","nodeType":"YulIdentifier","src":"750:3:7"},"nativeSrc":"750:15:7","nodeType":"YulFunctionCall","src":"750:15:7"},{"arguments":[{"kind":"number","nativeSrc":"771:2:7","nodeType":"YulLiteral","src":"771:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"767:3:7","nodeType":"YulIdentifier","src":"767:3:7"},"nativeSrc":"767:7:7","nodeType":"YulFunctionCall","src":"767:7:7"}],"functionName":{"name":"and","nativeSrc":"746:3:7","nodeType":"YulIdentifier","src":"746:3:7"},"nativeSrc":"746:29:7","nodeType":"YulFunctionCall","src":"746:29:7"},"variables":[{"name":"result","nativeSrc":"736:6:7","nodeType":"YulTypedName","src":"736:6:7","type":""}]},{"nativeSrc":"784:25:7","nodeType":"YulAssignment","src":"784:25:7","value":{"arguments":[{"name":"result","nativeSrc":"796:6:7","nodeType":"YulIdentifier","src":"796:6:7"},{"kind":"number","nativeSrc":"804:4:7","nodeType":"YulLiteral","src":"804:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"792:3:7","nodeType":"YulIdentifier","src":"792:3:7"},"nativeSrc":"792:17:7","nodeType":"YulFunctionCall","src":"792:17:7"},"variableNames":[{"name":"size","nativeSrc":"784:4:7","nodeType":"YulIdentifier","src":"784:4:7"}]},{"nativeSrc":"818:15:7","nodeType":"YulVariableDeclaration","src":"818:15:7","value":{"kind":"number","nativeSrc":"832:1:7","nodeType":"YulLiteral","src":"832:1:7","type":"","value":"0"},"variables":[{"name":"memPtr","nativeSrc":"822:6:7","nodeType":"YulTypedName","src":"822:6:7","type":""}]},{"nativeSrc":"842:19:7","nodeType":"YulAssignment","src":"842:19:7","value":{"arguments":[{"kind":"number","nativeSrc":"858:2:7","nodeType":"YulLiteral","src":"858:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"852:5:7","nodeType":"YulIdentifier","src":"852:5:7"},"nativeSrc":"852:9:7","nodeType":"YulFunctionCall","src":"852:9:7"},"variableNames":[{"name":"memPtr","nativeSrc":"842:6:7","nodeType":"YulIdentifier","src":"842:6:7"}]},{"nativeSrc":"870:60:7","nodeType":"YulVariableDeclaration","src":"870:60:7","value":{"arguments":[{"name":"memPtr","nativeSrc":"892:6:7","nodeType":"YulIdentifier","src":"892:6:7"},{"arguments":[{"arguments":[{"name":"result","nativeSrc":"908:6:7","nodeType":"YulIdentifier","src":"908:6:7"},{"kind":"number","nativeSrc":"916:2:7","nodeType":"YulLiteral","src":"916:2:7","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"904:3:7","nodeType":"YulIdentifier","src":"904:3:7"},"nativeSrc":"904:15:7","nodeType":"YulFunctionCall","src":"904:15:7"},{"arguments":[{"kind":"number","nativeSrc":"925:2:7","nodeType":"YulLiteral","src":"925:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"921:3:7","nodeType":"YulIdentifier","src":"921:3:7"},"nativeSrc":"921:7:7","nodeType":"YulFunctionCall","src":"921:7:7"}],"functionName":{"name":"and","nativeSrc":"900:3:7","nodeType":"YulIdentifier","src":"900:3:7"},"nativeSrc":"900:29:7","nodeType":"YulFunctionCall","src":"900:29:7"}],"functionName":{"name":"add","nativeSrc":"888:3:7","nodeType":"YulIdentifier","src":"888:3:7"},"nativeSrc":"888:42:7","nodeType":"YulFunctionCall","src":"888:42:7"},"variables":[{"name":"newFreePtr","nativeSrc":"874:10:7","nodeType":"YulTypedName","src":"874:10:7","type":""}]},{"body":{"nativeSrc":"1005:22:7","nodeType":"YulBlock","src":"1005:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1007:16:7","nodeType":"YulIdentifier","src":"1007:16:7"},"nativeSrc":"1007:18:7","nodeType":"YulFunctionCall","src":"1007:18:7"},"nativeSrc":"1007:18:7","nodeType":"YulExpressionStatement","src":"1007:18:7"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"948:10:7","nodeType":"YulIdentifier","src":"948:10:7"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"968:2:7","nodeType":"YulLiteral","src":"968:2:7","type":"","value":"64"},{"kind":"number","nativeSrc":"972:1:7","nodeType":"YulLiteral","src":"972:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"964:3:7","nodeType":"YulIdentifier","src":"964:3:7"},"nativeSrc":"964:10:7","nodeType":"YulFunctionCall","src":"964:10:7"},{"kind":"number","nativeSrc":"976:1:7","nodeType":"YulLiteral","src":"976:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"960:3:7","nodeType":"YulIdentifier","src":"960:3:7"},"nativeSrc":"960:18:7","nodeType":"YulFunctionCall","src":"960:18:7"}],"functionName":{"name":"gt","nativeSrc":"945:2:7","nodeType":"YulIdentifier","src":"945:2:7"},"nativeSrc":"945:34:7","nodeType":"YulFunctionCall","src":"945:34:7"},{"arguments":[{"name":"newFreePtr","nativeSrc":"984:10:7","nodeType":"YulIdentifier","src":"984:10:7"},{"name":"memPtr","nativeSrc":"996:6:7","nodeType":"YulIdentifier","src":"996:6:7"}],"functionName":{"name":"lt","nativeSrc":"981:2:7","nodeType":"YulIdentifier","src":"981:2:7"},"nativeSrc":"981:22:7","nodeType":"YulFunctionCall","src":"981:22:7"}],"functionName":{"name":"or","nativeSrc":"942:2:7","nodeType":"YulIdentifier","src":"942:2:7"},"nativeSrc":"942:62:7","nodeType":"YulFunctionCall","src":"942:62:7"},"nativeSrc":"939:88:7","nodeType":"YulIf","src":"939:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1043:2:7","nodeType":"YulLiteral","src":"1043:2:7","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1047:10:7","nodeType":"YulIdentifier","src":"1047:10:7"}],"functionName":{"name":"mstore","nativeSrc":"1036:6:7","nodeType":"YulIdentifier","src":"1036:6:7"},"nativeSrc":"1036:22:7","nodeType":"YulFunctionCall","src":"1036:22:7"},"nativeSrc":"1036:22:7","nodeType":"YulExpressionStatement","src":"1036:22:7"},{"nativeSrc":"1067:15:7","nodeType":"YulAssignment","src":"1067:15:7","value":{"name":"memPtr","nativeSrc":"1076:6:7","nodeType":"YulIdentifier","src":"1076:6:7"},"variableNames":[{"name":"array","nativeSrc":"1067:5:7","nodeType":"YulIdentifier","src":"1067:5:7"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1098:6:7","nodeType":"YulIdentifier","src":"1098:6:7"},{"name":"length","nativeSrc":"1106:6:7","nodeType":"YulIdentifier","src":"1106:6:7"}],"functionName":{"name":"mstore","nativeSrc":"1091:6:7","nodeType":"YulIdentifier","src":"1091:6:7"},"nativeSrc":"1091:22:7","nodeType":"YulFunctionCall","src":"1091:22:7"},"nativeSrc":"1091:22:7","nodeType":"YulExpressionStatement","src":"1091:22:7"},{"body":{"nativeSrc":"1151:16:7","nodeType":"YulBlock","src":"1151:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1160:1:7","nodeType":"YulLiteral","src":"1160:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1163:1:7","nodeType":"YulLiteral","src":"1163:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1153:6:7","nodeType":"YulIdentifier","src":"1153:6:7"},"nativeSrc":"1153:12:7","nodeType":"YulFunctionCall","src":"1153:12:7"},"nativeSrc":"1153:12:7","nodeType":"YulExpressionStatement","src":"1153:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1132:3:7","nodeType":"YulIdentifier","src":"1132:3:7"},{"name":"length","nativeSrc":"1137:6:7","nodeType":"YulIdentifier","src":"1137:6:7"}],"functionName":{"name":"add","nativeSrc":"1128:3:7","nodeType":"YulIdentifier","src":"1128:3:7"},"nativeSrc":"1128:16:7","nodeType":"YulFunctionCall","src":"1128:16:7"},{"name":"end","nativeSrc":"1146:3:7","nodeType":"YulIdentifier","src":"1146:3:7"}],"functionName":{"name":"gt","nativeSrc":"1125:2:7","nodeType":"YulIdentifier","src":"1125:2:7"},"nativeSrc":"1125:25:7","nodeType":"YulFunctionCall","src":"1125:25:7"},"nativeSrc":"1122:45:7","nodeType":"YulIf","src":"1122:45:7"},{"expression":{"arguments":[{"name":"src","nativeSrc":"1211:3:7","nodeType":"YulIdentifier","src":"1211:3:7"},{"arguments":[{"name":"memPtr","nativeSrc":"1220:6:7","nodeType":"YulIdentifier","src":"1220:6:7"},{"kind":"number","nativeSrc":"1228:4:7","nodeType":"YulLiteral","src":"1228:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1216:3:7","nodeType":"YulIdentifier","src":"1216:3:7"},"nativeSrc":"1216:17:7","nodeType":"YulFunctionCall","src":"1216:17:7"},{"name":"length","nativeSrc":"1235:6:7","nodeType":"YulIdentifier","src":"1235:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1176:34:7","nodeType":"YulIdentifier","src":"1176:34:7"},"nativeSrc":"1176:66:7","nodeType":"YulFunctionCall","src":"1176:66:7"},"nativeSrc":"1176:66:7","nodeType":"YulExpressionStatement","src":"1176:66:7"}]},"name":"abi_decode_available_length_bytes_fromMemory","nativeSrc":"550:698:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"604:3:7","nodeType":"YulTypedName","src":"604:3:7","type":""},{"name":"length","nativeSrc":"609:6:7","nodeType":"YulTypedName","src":"609:6:7","type":""},{"name":"end","nativeSrc":"617:3:7","nodeType":"YulTypedName","src":"617:3:7","type":""}],"returnVariables":[{"name":"array","nativeSrc":"625:5:7","nodeType":"YulTypedName","src":"625:5:7","type":""}],"src":"550:698:7"},{"body":{"nativeSrc":"1317:172:7","nodeType":"YulBlock","src":"1317:172:7","statements":[{"body":{"nativeSrc":"1366:16:7","nodeType":"YulBlock","src":"1366:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1375:1:7","nodeType":"YulLiteral","src":"1375:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1378:1:7","nodeType":"YulLiteral","src":"1378:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1368:6:7","nodeType":"YulIdentifier","src":"1368:6:7"},"nativeSrc":"1368:12:7","nodeType":"YulFunctionCall","src":"1368:12:7"},"nativeSrc":"1368:12:7","nodeType":"YulExpressionStatement","src":"1368:12:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1345:6:7","nodeType":"YulIdentifier","src":"1345:6:7"},{"kind":"number","nativeSrc":"1353:4:7","nodeType":"YulLiteral","src":"1353:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1341:3:7","nodeType":"YulIdentifier","src":"1341:3:7"},"nativeSrc":"1341:17:7","nodeType":"YulFunctionCall","src":"1341:17:7"},{"name":"end","nativeSrc":"1360:3:7","nodeType":"YulIdentifier","src":"1360:3:7"}],"functionName":{"name":"slt","nativeSrc":"1337:3:7","nodeType":"YulIdentifier","src":"1337:3:7"},"nativeSrc":"1337:27:7","nodeType":"YulFunctionCall","src":"1337:27:7"}],"functionName":{"name":"iszero","nativeSrc":"1330:6:7","nodeType":"YulIdentifier","src":"1330:6:7"},"nativeSrc":"1330:35:7","nodeType":"YulFunctionCall","src":"1330:35:7"},"nativeSrc":"1327:55:7","nodeType":"YulIf","src":"1327:55:7"},{"nativeSrc":"1391:92:7","nodeType":"YulAssignment","src":"1391:92:7","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1449:6:7","nodeType":"YulIdentifier","src":"1449:6:7"},{"kind":"number","nativeSrc":"1457:4:7","nodeType":"YulLiteral","src":"1457:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1445:3:7","nodeType":"YulIdentifier","src":"1445:3:7"},"nativeSrc":"1445:17:7","nodeType":"YulFunctionCall","src":"1445:17:7"},{"arguments":[{"name":"offset","nativeSrc":"1470:6:7","nodeType":"YulIdentifier","src":"1470:6:7"}],"functionName":{"name":"mload","nativeSrc":"1464:5:7","nodeType":"YulIdentifier","src":"1464:5:7"},"nativeSrc":"1464:13:7","nodeType":"YulFunctionCall","src":"1464:13:7"},{"name":"end","nativeSrc":"1479:3:7","nodeType":"YulIdentifier","src":"1479:3:7"}],"functionName":{"name":"abi_decode_available_length_bytes_fromMemory","nativeSrc":"1400:44:7","nodeType":"YulIdentifier","src":"1400:44:7"},"nativeSrc":"1400:83:7","nodeType":"YulFunctionCall","src":"1400:83:7"},"variableNames":[{"name":"array","nativeSrc":"1391:5:7","nodeType":"YulIdentifier","src":"1391:5:7"}]}]},"name":"abi_decode_string_fromMemory","nativeSrc":"1253:236:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1291:6:7","nodeType":"YulTypedName","src":"1291:6:7","type":""},{"name":"end","nativeSrc":"1299:3:7","nodeType":"YulTypedName","src":"1299:3:7","type":""}],"returnVariables":[{"name":"array","nativeSrc":"1307:5:7","nodeType":"YulTypedName","src":"1307:5:7","type":""}],"src":"1253:236:7"},{"body":{"nativeSrc":"1562:91:7","nodeType":"YulBlock","src":"1562:91:7","statements":[{"nativeSrc":"1572:22:7","nodeType":"YulAssignment","src":"1572:22:7","value":{"arguments":[{"name":"offset","nativeSrc":"1587:6:7","nodeType":"YulIdentifier","src":"1587:6:7"}],"functionName":{"name":"mload","nativeSrc":"1581:5:7","nodeType":"YulIdentifier","src":"1581:5:7"},"nativeSrc":"1581:13:7","nodeType":"YulFunctionCall","src":"1581:13:7"},"variableNames":[{"name":"value","nativeSrc":"1572:5:7","nodeType":"YulIdentifier","src":"1572:5:7"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1641:5:7","nodeType":"YulIdentifier","src":"1641:5:7"}],"functionName":{"name":"validator_revert_contract_IArbitrator","nativeSrc":"1603:37:7","nodeType":"YulIdentifier","src":"1603:37:7"},"nativeSrc":"1603:44:7","nodeType":"YulFunctionCall","src":"1603:44:7"},"nativeSrc":"1603:44:7","nodeType":"YulExpressionStatement","src":"1603:44:7"}]},"name":"abi_decode_address_payable_fromMemory","nativeSrc":"1494:159:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1541:6:7","nodeType":"YulTypedName","src":"1541:6:7","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1552:5:7","nodeType":"YulTypedName","src":"1552:5:7","type":""}],"src":"1494:159:7"},{"body":{"nativeSrc":"1887:1052:7","nodeType":"YulBlock","src":"1887:1052:7","statements":[{"body":{"nativeSrc":"1934:16:7","nodeType":"YulBlock","src":"1934:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:1:7","nodeType":"YulLiteral","src":"1943:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1946:1:7","nodeType":"YulLiteral","src":"1946:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1936:6:7","nodeType":"YulIdentifier","src":"1936:6:7"},"nativeSrc":"1936:12:7","nodeType":"YulFunctionCall","src":"1936:12:7"},"nativeSrc":"1936:12:7","nodeType":"YulExpressionStatement","src":"1936:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1908:7:7","nodeType":"YulIdentifier","src":"1908:7:7"},{"name":"headStart","nativeSrc":"1917:9:7","nodeType":"YulIdentifier","src":"1917:9:7"}],"functionName":{"name":"sub","nativeSrc":"1904:3:7","nodeType":"YulIdentifier","src":"1904:3:7"},"nativeSrc":"1904:23:7","nodeType":"YulFunctionCall","src":"1904:23:7"},{"kind":"number","nativeSrc":"1929:3:7","nodeType":"YulLiteral","src":"1929:3:7","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"1900:3:7","nodeType":"YulIdentifier","src":"1900:3:7"},"nativeSrc":"1900:33:7","nodeType":"YulFunctionCall","src":"1900:33:7"},"nativeSrc":"1897:53:7","nodeType":"YulIf","src":"1897:53:7"},{"nativeSrc":"1959:29:7","nodeType":"YulVariableDeclaration","src":"1959:29:7","value":{"arguments":[{"name":"headStart","nativeSrc":"1978:9:7","nodeType":"YulIdentifier","src":"1978:9:7"}],"functionName":{"name":"mload","nativeSrc":"1972:5:7","nodeType":"YulIdentifier","src":"1972:5:7"},"nativeSrc":"1972:16:7","nodeType":"YulFunctionCall","src":"1972:16:7"},"variables":[{"name":"value","nativeSrc":"1963:5:7","nodeType":"YulTypedName","src":"1963:5:7","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2035:5:7","nodeType":"YulIdentifier","src":"2035:5:7"}],"functionName":{"name":"validator_revert_contract_IArbitrator","nativeSrc":"1997:37:7","nodeType":"YulIdentifier","src":"1997:37:7"},"nativeSrc":"1997:44:7","nodeType":"YulFunctionCall","src":"1997:44:7"},"nativeSrc":"1997:44:7","nodeType":"YulExpressionStatement","src":"1997:44:7"},{"nativeSrc":"2050:15:7","nodeType":"YulAssignment","src":"2050:15:7","value":{"name":"value","nativeSrc":"2060:5:7","nodeType":"YulIdentifier","src":"2060:5:7"},"variableNames":[{"name":"value0","nativeSrc":"2050:6:7","nodeType":"YulIdentifier","src":"2050:6:7"}]},{"nativeSrc":"2074:39:7","nodeType":"YulVariableDeclaration","src":"2074:39:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2098:9:7","nodeType":"YulIdentifier","src":"2098:9:7"},{"kind":"number","nativeSrc":"2109:2:7","nodeType":"YulLiteral","src":"2109:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2094:3:7","nodeType":"YulIdentifier","src":"2094:3:7"},"nativeSrc":"2094:18:7","nodeType":"YulFunctionCall","src":"2094:18:7"}],"functionName":{"name":"mload","nativeSrc":"2088:5:7","nodeType":"YulIdentifier","src":"2088:5:7"},"nativeSrc":"2088:25:7","nodeType":"YulFunctionCall","src":"2088:25:7"},"variables":[{"name":"offset","nativeSrc":"2078:6:7","nodeType":"YulTypedName","src":"2078:6:7","type":""}]},{"body":{"nativeSrc":"2156:16:7","nodeType":"YulBlock","src":"2156:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2165:1:7","nodeType":"YulLiteral","src":"2165:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2168:1:7","nodeType":"YulLiteral","src":"2168:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2158:6:7","nodeType":"YulIdentifier","src":"2158:6:7"},"nativeSrc":"2158:12:7","nodeType":"YulFunctionCall","src":"2158:12:7"},"nativeSrc":"2158:12:7","nodeType":"YulExpressionStatement","src":"2158:12:7"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2128:6:7","nodeType":"YulIdentifier","src":"2128:6:7"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2144:2:7","nodeType":"YulLiteral","src":"2144:2:7","type":"","value":"64"},{"kind":"number","nativeSrc":"2148:1:7","nodeType":"YulLiteral","src":"2148:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2140:3:7","nodeType":"YulIdentifier","src":"2140:3:7"},"nativeSrc":"2140:10:7","nodeType":"YulFunctionCall","src":"2140:10:7"},{"kind":"number","nativeSrc":"2152:1:7","nodeType":"YulLiteral","src":"2152:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2136:3:7","nodeType":"YulIdentifier","src":"2136:3:7"},"nativeSrc":"2136:18:7","nodeType":"YulFunctionCall","src":"2136:18:7"}],"functionName":{"name":"gt","nativeSrc":"2125:2:7","nodeType":"YulIdentifier","src":"2125:2:7"},"nativeSrc":"2125:30:7","nodeType":"YulFunctionCall","src":"2125:30:7"},"nativeSrc":"2122:50:7","nodeType":"YulIf","src":"2122:50:7"},{"nativeSrc":"2181:32:7","nodeType":"YulVariableDeclaration","src":"2181:32:7","value":{"arguments":[{"name":"headStart","nativeSrc":"2195:9:7","nodeType":"YulIdentifier","src":"2195:9:7"},{"name":"offset","nativeSrc":"2206:6:7","nodeType":"YulIdentifier","src":"2206:6:7"}],"functionName":{"name":"add","nativeSrc":"2191:3:7","nodeType":"YulIdentifier","src":"2191:3:7"},"nativeSrc":"2191:22:7","nodeType":"YulFunctionCall","src":"2191:22:7"},"variables":[{"name":"_1","nativeSrc":"2185:2:7","nodeType":"YulTypedName","src":"2185:2:7","type":""}]},{"body":{"nativeSrc":"2261:16:7","nodeType":"YulBlock","src":"2261:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2270:1:7","nodeType":"YulLiteral","src":"2270:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2273:1:7","nodeType":"YulLiteral","src":"2273:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2263:6:7","nodeType":"YulIdentifier","src":"2263:6:7"},"nativeSrc":"2263:12:7","nodeType":"YulFunctionCall","src":"2263:12:7"},"nativeSrc":"2263:12:7","nodeType":"YulExpressionStatement","src":"2263:12:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"2240:2:7","nodeType":"YulIdentifier","src":"2240:2:7"},{"kind":"number","nativeSrc":"2244:4:7","nodeType":"YulLiteral","src":"2244:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2236:3:7","nodeType":"YulIdentifier","src":"2236:3:7"},"nativeSrc":"2236:13:7","nodeType":"YulFunctionCall","src":"2236:13:7"},{"name":"dataEnd","nativeSrc":"2251:7:7","nodeType":"YulIdentifier","src":"2251:7:7"}],"functionName":{"name":"slt","nativeSrc":"2232:3:7","nodeType":"YulIdentifier","src":"2232:3:7"},"nativeSrc":"2232:27:7","nodeType":"YulFunctionCall","src":"2232:27:7"}],"functionName":{"name":"iszero","nativeSrc":"2225:6:7","nodeType":"YulIdentifier","src":"2225:6:7"},"nativeSrc":"2225:35:7","nodeType":"YulFunctionCall","src":"2225:35:7"},"nativeSrc":"2222:55:7","nodeType":"YulIf","src":"2222:55:7"},{"nativeSrc":"2286:87:7","nodeType":"YulAssignment","src":"2286:87:7","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"2345:2:7","nodeType":"YulIdentifier","src":"2345:2:7"},{"kind":"number","nativeSrc":"2349:2:7","nodeType":"YulLiteral","src":"2349:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2341:3:7","nodeType":"YulIdentifier","src":"2341:3:7"},"nativeSrc":"2341:11:7","nodeType":"YulFunctionCall","src":"2341:11:7"},{"arguments":[{"name":"_1","nativeSrc":"2360:2:7","nodeType":"YulIdentifier","src":"2360:2:7"}],"functionName":{"name":"mload","nativeSrc":"2354:5:7","nodeType":"YulIdentifier","src":"2354:5:7"},"nativeSrc":"2354:9:7","nodeType":"YulFunctionCall","src":"2354:9:7"},{"name":"dataEnd","nativeSrc":"2365:7:7","nodeType":"YulIdentifier","src":"2365:7:7"}],"functionName":{"name":"abi_decode_available_length_bytes_fromMemory","nativeSrc":"2296:44:7","nodeType":"YulIdentifier","src":"2296:44:7"},"nativeSrc":"2296:77:7","nodeType":"YulFunctionCall","src":"2296:77:7"},"variableNames":[{"name":"value1","nativeSrc":"2286:6:7","nodeType":"YulIdentifier","src":"2286:6:7"}]},{"nativeSrc":"2382:41:7","nodeType":"YulVariableDeclaration","src":"2382:41:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2408:9:7","nodeType":"YulIdentifier","src":"2408:9:7"},{"kind":"number","nativeSrc":"2419:2:7","nodeType":"YulLiteral","src":"2419:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2404:3:7","nodeType":"YulIdentifier","src":"2404:3:7"},"nativeSrc":"2404:18:7","nodeType":"YulFunctionCall","src":"2404:18:7"}],"functionName":{"name":"mload","nativeSrc":"2398:5:7","nodeType":"YulIdentifier","src":"2398:5:7"},"nativeSrc":"2398:25:7","nodeType":"YulFunctionCall","src":"2398:25:7"},"variables":[{"name":"offset_1","nativeSrc":"2386:8:7","nodeType":"YulTypedName","src":"2386:8:7","type":""}]},{"body":{"nativeSrc":"2468:16:7","nodeType":"YulBlock","src":"2468:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2477:1:7","nodeType":"YulLiteral","src":"2477:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2480:1:7","nodeType":"YulLiteral","src":"2480:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2470:6:7","nodeType":"YulIdentifier","src":"2470:6:7"},"nativeSrc":"2470:12:7","nodeType":"YulFunctionCall","src":"2470:12:7"},"nativeSrc":"2470:12:7","nodeType":"YulExpressionStatement","src":"2470:12:7"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"2438:8:7","nodeType":"YulIdentifier","src":"2438:8:7"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2456:2:7","nodeType":"YulLiteral","src":"2456:2:7","type":"","value":"64"},{"kind":"number","nativeSrc":"2460:1:7","nodeType":"YulLiteral","src":"2460:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2452:3:7","nodeType":"YulIdentifier","src":"2452:3:7"},"nativeSrc":"2452:10:7","nodeType":"YulFunctionCall","src":"2452:10:7"},{"kind":"number","nativeSrc":"2464:1:7","nodeType":"YulLiteral","src":"2464:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2448:3:7","nodeType":"YulIdentifier","src":"2448:3:7"},"nativeSrc":"2448:18:7","nodeType":"YulFunctionCall","src":"2448:18:7"}],"functionName":{"name":"gt","nativeSrc":"2435:2:7","nodeType":"YulIdentifier","src":"2435:2:7"},"nativeSrc":"2435:32:7","nodeType":"YulFunctionCall","src":"2435:32:7"},"nativeSrc":"2432:52:7","nodeType":"YulIf","src":"2432:52:7"},{"nativeSrc":"2493:73:7","nodeType":"YulAssignment","src":"2493:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2536:9:7","nodeType":"YulIdentifier","src":"2536:9:7"},{"name":"offset_1","nativeSrc":"2547:8:7","nodeType":"YulIdentifier","src":"2547:8:7"}],"functionName":{"name":"add","nativeSrc":"2532:3:7","nodeType":"YulIdentifier","src":"2532:3:7"},"nativeSrc":"2532:24:7","nodeType":"YulFunctionCall","src":"2532:24:7"},{"name":"dataEnd","nativeSrc":"2558:7:7","nodeType":"YulIdentifier","src":"2558:7:7"}],"functionName":{"name":"abi_decode_string_fromMemory","nativeSrc":"2503:28:7","nodeType":"YulIdentifier","src":"2503:28:7"},"nativeSrc":"2503:63:7","nodeType":"YulFunctionCall","src":"2503:63:7"},"variableNames":[{"name":"value2","nativeSrc":"2493:6:7","nodeType":"YulIdentifier","src":"2493:6:7"}]},{"nativeSrc":"2575:16:7","nodeType":"YulVariableDeclaration","src":"2575:16:7","value":{"kind":"number","nativeSrc":"2590:1:7","nodeType":"YulLiteral","src":"2590:1:7","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"2579:7:7","nodeType":"YulTypedName","src":"2579:7:7","type":""}]},{"nativeSrc":"2600:36:7","nodeType":"YulAssignment","src":"2600:36:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2621:9:7","nodeType":"YulIdentifier","src":"2621:9:7"},{"kind":"number","nativeSrc":"2632:2:7","nodeType":"YulLiteral","src":"2632:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2617:3:7","nodeType":"YulIdentifier","src":"2617:3:7"},"nativeSrc":"2617:18:7","nodeType":"YulFunctionCall","src":"2617:18:7"}],"functionName":{"name":"mload","nativeSrc":"2611:5:7","nodeType":"YulIdentifier","src":"2611:5:7"},"nativeSrc":"2611:25:7","nodeType":"YulFunctionCall","src":"2611:25:7"},"variableNames":[{"name":"value_1","nativeSrc":"2600:7:7","nodeType":"YulIdentifier","src":"2600:7:7"}]},{"nativeSrc":"2645:17:7","nodeType":"YulAssignment","src":"2645:17:7","value":{"name":"value_1","nativeSrc":"2655:7:7","nodeType":"YulIdentifier","src":"2655:7:7"},"variableNames":[{"name":"value3","nativeSrc":"2645:6:7","nodeType":"YulIdentifier","src":"2645:6:7"}]},{"nativeSrc":"2671:16:7","nodeType":"YulVariableDeclaration","src":"2671:16:7","value":{"kind":"number","nativeSrc":"2686:1:7","nodeType":"YulLiteral","src":"2686:1:7","type":"","value":"0"},"variables":[{"name":"value_2","nativeSrc":"2675:7:7","nodeType":"YulTypedName","src":"2675:7:7","type":""}]},{"nativeSrc":"2696:37:7","nodeType":"YulAssignment","src":"2696:37:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2717:9:7","nodeType":"YulIdentifier","src":"2717:9:7"},{"kind":"number","nativeSrc":"2728:3:7","nodeType":"YulLiteral","src":"2728:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2713:3:7","nodeType":"YulIdentifier","src":"2713:3:7"},"nativeSrc":"2713:19:7","nodeType":"YulFunctionCall","src":"2713:19:7"}],"functionName":{"name":"mload","nativeSrc":"2707:5:7","nodeType":"YulIdentifier","src":"2707:5:7"},"nativeSrc":"2707:26:7","nodeType":"YulFunctionCall","src":"2707:26:7"},"variableNames":[{"name":"value_2","nativeSrc":"2696:7:7","nodeType":"YulIdentifier","src":"2696:7:7"}]},{"nativeSrc":"2742:17:7","nodeType":"YulAssignment","src":"2742:17:7","value":{"name":"value_2","nativeSrc":"2752:7:7","nodeType":"YulIdentifier","src":"2752:7:7"},"variableNames":[{"name":"value4","nativeSrc":"2742:6:7","nodeType":"YulIdentifier","src":"2742:6:7"}]},{"nativeSrc":"2768:16:7","nodeType":"YulVariableDeclaration","src":"2768:16:7","value":{"kind":"number","nativeSrc":"2783:1:7","nodeType":"YulLiteral","src":"2783:1:7","type":"","value":"0"},"variables":[{"name":"value_3","nativeSrc":"2772:7:7","nodeType":"YulTypedName","src":"2772:7:7","type":""}]},{"nativeSrc":"2793:37:7","nodeType":"YulAssignment","src":"2793:37:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2814:9:7","nodeType":"YulIdentifier","src":"2814:9:7"},{"kind":"number","nativeSrc":"2825:3:7","nodeType":"YulLiteral","src":"2825:3:7","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"2810:3:7","nodeType":"YulIdentifier","src":"2810:3:7"},"nativeSrc":"2810:19:7","nodeType":"YulFunctionCall","src":"2810:19:7"}],"functionName":{"name":"mload","nativeSrc":"2804:5:7","nodeType":"YulIdentifier","src":"2804:5:7"},"nativeSrc":"2804:26:7","nodeType":"YulFunctionCall","src":"2804:26:7"},"variableNames":[{"name":"value_3","nativeSrc":"2793:7:7","nodeType":"YulIdentifier","src":"2793:7:7"}]},{"nativeSrc":"2839:17:7","nodeType":"YulAssignment","src":"2839:17:7","value":{"name":"value_3","nativeSrc":"2849:7:7","nodeType":"YulIdentifier","src":"2849:7:7"},"variableNames":[{"name":"value5","nativeSrc":"2839:6:7","nodeType":"YulIdentifier","src":"2839:6:7"}]},{"nativeSrc":"2865:68:7","nodeType":"YulAssignment","src":"2865:68:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2917:9:7","nodeType":"YulIdentifier","src":"2917:9:7"},{"kind":"number","nativeSrc":"2928:3:7","nodeType":"YulLiteral","src":"2928:3:7","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"2913:3:7","nodeType":"YulIdentifier","src":"2913:3:7"},"nativeSrc":"2913:19:7","nodeType":"YulFunctionCall","src":"2913:19:7"}],"functionName":{"name":"abi_decode_address_payable_fromMemory","nativeSrc":"2875:37:7","nodeType":"YulIdentifier","src":"2875:37:7"},"nativeSrc":"2875:58:7","nodeType":"YulFunctionCall","src":"2875:58:7"},"variableNames":[{"name":"value6","nativeSrc":"2865:6:7","nodeType":"YulIdentifier","src":"2865:6:7"}]}]},"name":"abi_decode_tuple_t_contract$_IArbitrator_$249t_bytes_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_address_payable_fromMemory","nativeSrc":"1658:1281:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1805:9:7","nodeType":"YulTypedName","src":"1805:9:7","type":""},{"name":"dataEnd","nativeSrc":"1816:7:7","nodeType":"YulTypedName","src":"1816:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1828:6:7","nodeType":"YulTypedName","src":"1828:6:7","type":""},{"name":"value1","nativeSrc":"1836:6:7","nodeType":"YulTypedName","src":"1836:6:7","type":""},{"name":"value2","nativeSrc":"1844:6:7","nodeType":"YulTypedName","src":"1844:6:7","type":""},{"name":"value3","nativeSrc":"1852:6:7","nodeType":"YulTypedName","src":"1852:6:7","type":""},{"name":"value4","nativeSrc":"1860:6:7","nodeType":"YulTypedName","src":"1860:6:7","type":""},{"name":"value5","nativeSrc":"1868:6:7","nodeType":"YulTypedName","src":"1868:6:7","type":""},{"name":"value6","nativeSrc":"1876:6:7","nodeType":"YulTypedName","src":"1876:6:7","type":""}],"src":"1658:1281:7"},{"body":{"nativeSrc":"2976:95:7","nodeType":"YulBlock","src":"2976:95:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2993:1:7","nodeType":"YulLiteral","src":"2993:1:7","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3000:3:7","nodeType":"YulLiteral","src":"3000:3:7","type":"","value":"224"},{"kind":"number","nativeSrc":"3005:10:7","nodeType":"YulLiteral","src":"3005:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2996:3:7","nodeType":"YulIdentifier","src":"2996:3:7"},"nativeSrc":"2996:20:7","nodeType":"YulFunctionCall","src":"2996:20:7"}],"functionName":{"name":"mstore","nativeSrc":"2986:6:7","nodeType":"YulIdentifier","src":"2986:6:7"},"nativeSrc":"2986:31:7","nodeType":"YulFunctionCall","src":"2986:31:7"},"nativeSrc":"2986:31:7","nodeType":"YulExpressionStatement","src":"2986:31:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3033:1:7","nodeType":"YulLiteral","src":"3033:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"3036:4:7","nodeType":"YulLiteral","src":"3036:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3026:6:7","nodeType":"YulIdentifier","src":"3026:6:7"},"nativeSrc":"3026:15:7","nodeType":"YulFunctionCall","src":"3026:15:7"},"nativeSrc":"3026:15:7","nodeType":"YulExpressionStatement","src":"3026:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3057:1:7","nodeType":"YulLiteral","src":"3057:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"3060:4:7","nodeType":"YulLiteral","src":"3060:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3050:6:7","nodeType":"YulIdentifier","src":"3050:6:7"},"nativeSrc":"3050:15:7","nodeType":"YulFunctionCall","src":"3050:15:7"},"nativeSrc":"3050:15:7","nodeType":"YulExpressionStatement","src":"3050:15:7"}]},"name":"panic_error_0x11","nativeSrc":"2944:127:7","nodeType":"YulFunctionDefinition","src":"2944:127:7"},{"body":{"nativeSrc":"3122:102:7","nodeType":"YulBlock","src":"3122:102:7","statements":[{"nativeSrc":"3132:38:7","nodeType":"YulAssignment","src":"3132:38:7","value":{"arguments":[{"arguments":[{"name":"x","nativeSrc":"3147:1:7","nodeType":"YulIdentifier","src":"3147:1:7"},{"kind":"number","nativeSrc":"3150:4:7","nodeType":"YulLiteral","src":"3150:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"3143:3:7","nodeType":"YulIdentifier","src":"3143:3:7"},"nativeSrc":"3143:12:7","nodeType":"YulFunctionCall","src":"3143:12:7"},{"arguments":[{"name":"y","nativeSrc":"3161:1:7","nodeType":"YulIdentifier","src":"3161:1:7"},{"kind":"number","nativeSrc":"3164:4:7","nodeType":"YulLiteral","src":"3164:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"3157:3:7","nodeType":"YulIdentifier","src":"3157:3:7"},"nativeSrc":"3157:12:7","nodeType":"YulFunctionCall","src":"3157:12:7"}],"functionName":{"name":"add","nativeSrc":"3139:3:7","nodeType":"YulIdentifier","src":"3139:3:7"},"nativeSrc":"3139:31:7","nodeType":"YulFunctionCall","src":"3139:31:7"},"variableNames":[{"name":"sum","nativeSrc":"3132:3:7","nodeType":"YulIdentifier","src":"3132:3:7"}]},{"body":{"nativeSrc":"3196:22:7","nodeType":"YulBlock","src":"3196:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3198:16:7","nodeType":"YulIdentifier","src":"3198:16:7"},"nativeSrc":"3198:18:7","nodeType":"YulFunctionCall","src":"3198:18:7"},"nativeSrc":"3198:18:7","nodeType":"YulExpressionStatement","src":"3198:18:7"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"3185:3:7","nodeType":"YulIdentifier","src":"3185:3:7"},{"kind":"number","nativeSrc":"3190:4:7","nodeType":"YulLiteral","src":"3190:4:7","type":"","value":"0xff"}],"functionName":{"name":"gt","nativeSrc":"3182:2:7","nodeType":"YulIdentifier","src":"3182:2:7"},"nativeSrc":"3182:13:7","nodeType":"YulFunctionCall","src":"3182:13:7"},"nativeSrc":"3179:39:7","nodeType":"YulIf","src":"3179:39:7"}]},"name":"checked_add_t_uint8","nativeSrc":"3076:148:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3105:1:7","nodeType":"YulTypedName","src":"3105:1:7","type":""},{"name":"y","nativeSrc":"3108:1:7","nodeType":"YulTypedName","src":"3108:1:7","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"3114:3:7","nodeType":"YulTypedName","src":"3114:3:7","type":""}],"src":"3076:148:7"},{"body":{"nativeSrc":"3403:182:7","nodeType":"YulBlock","src":"3403:182:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3420:9:7","nodeType":"YulIdentifier","src":"3420:9:7"},{"kind":"number","nativeSrc":"3431:2:7","nodeType":"YulLiteral","src":"3431:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3413:6:7","nodeType":"YulIdentifier","src":"3413:6:7"},"nativeSrc":"3413:21:7","nodeType":"YulFunctionCall","src":"3413:21:7"},"nativeSrc":"3413:21:7","nodeType":"YulExpressionStatement","src":"3413:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3454:9:7","nodeType":"YulIdentifier","src":"3454:9:7"},{"kind":"number","nativeSrc":"3465:2:7","nodeType":"YulLiteral","src":"3465:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3450:3:7","nodeType":"YulIdentifier","src":"3450:3:7"},"nativeSrc":"3450:18:7","nodeType":"YulFunctionCall","src":"3450:18:7"},{"kind":"number","nativeSrc":"3470:2:7","nodeType":"YulLiteral","src":"3470:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3443:6:7","nodeType":"YulIdentifier","src":"3443:6:7"},"nativeSrc":"3443:30:7","nodeType":"YulFunctionCall","src":"3443:30:7"},"nativeSrc":"3443:30:7","nodeType":"YulExpressionStatement","src":"3443:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3493:9:7","nodeType":"YulIdentifier","src":"3493:9:7"},{"kind":"number","nativeSrc":"3504:2:7","nodeType":"YulLiteral","src":"3504:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3489:3:7","nodeType":"YulIdentifier","src":"3489:3:7"},"nativeSrc":"3489:18:7","nodeType":"YulFunctionCall","src":"3489:18:7"},{"hexValue":"4e6f207370616365206c65667420666f722061206e65772063617465676f7279","kind":"string","nativeSrc":"3509:34:7","nodeType":"YulLiteral","src":"3509:34:7","type":"","value":"No space left for a new category"}],"functionName":{"name":"mstore","nativeSrc":"3482:6:7","nodeType":"YulIdentifier","src":"3482:6:7"},"nativeSrc":"3482:62:7","nodeType":"YulFunctionCall","src":"3482:62:7"},"nativeSrc":"3482:62:7","nodeType":"YulExpressionStatement","src":"3482:62:7"},{"nativeSrc":"3553:26:7","nodeType":"YulAssignment","src":"3553:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"3565:9:7","nodeType":"YulIdentifier","src":"3565:9:7"},{"kind":"number","nativeSrc":"3576:2:7","nodeType":"YulLiteral","src":"3576:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3561:3:7","nodeType":"YulIdentifier","src":"3561:3:7"},"nativeSrc":"3561:18:7","nodeType":"YulFunctionCall","src":"3561:18:7"},"variableNames":[{"name":"tail","nativeSrc":"3553:4:7","nodeType":"YulIdentifier","src":"3553:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_e23f3e71c05305a9182237d48ba9b404f0c1c59aaff27a9576fb3eb02eaabde6__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3229:356:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3380:9:7","nodeType":"YulTypedName","src":"3380:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3394:4:7","nodeType":"YulTypedName","src":"3394:4:7","type":""}],"src":"3229:356:7"},{"body":{"nativeSrc":"3711:275:7","nodeType":"YulBlock","src":"3711:275:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3728:9:7","nodeType":"YulIdentifier","src":"3728:9:7"},{"kind":"number","nativeSrc":"3739:2:7","nodeType":"YulLiteral","src":"3739:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3721:6:7","nodeType":"YulIdentifier","src":"3721:6:7"},"nativeSrc":"3721:21:7","nodeType":"YulFunctionCall","src":"3721:21:7"},"nativeSrc":"3721:21:7","nodeType":"YulExpressionStatement","src":"3721:21:7"},{"nativeSrc":"3751:27:7","nodeType":"YulVariableDeclaration","src":"3751:27:7","value":{"arguments":[{"name":"value0","nativeSrc":"3771:6:7","nodeType":"YulIdentifier","src":"3771:6:7"}],"functionName":{"name":"mload","nativeSrc":"3765:5:7","nodeType":"YulIdentifier","src":"3765:5:7"},"nativeSrc":"3765:13:7","nodeType":"YulFunctionCall","src":"3765:13:7"},"variables":[{"name":"length","nativeSrc":"3755:6:7","nodeType":"YulTypedName","src":"3755:6:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3798:9:7","nodeType":"YulIdentifier","src":"3798:9:7"},{"kind":"number","nativeSrc":"3809:2:7","nodeType":"YulLiteral","src":"3809:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3794:3:7","nodeType":"YulIdentifier","src":"3794:3:7"},"nativeSrc":"3794:18:7","nodeType":"YulFunctionCall","src":"3794:18:7"},{"name":"length","nativeSrc":"3814:6:7","nodeType":"YulIdentifier","src":"3814:6:7"}],"functionName":{"name":"mstore","nativeSrc":"3787:6:7","nodeType":"YulIdentifier","src":"3787:6:7"},"nativeSrc":"3787:34:7","nodeType":"YulFunctionCall","src":"3787:34:7"},"nativeSrc":"3787:34:7","nodeType":"YulExpressionStatement","src":"3787:34:7"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"3869:6:7","nodeType":"YulIdentifier","src":"3869:6:7"},{"kind":"number","nativeSrc":"3877:2:7","nodeType":"YulLiteral","src":"3877:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3865:3:7","nodeType":"YulIdentifier","src":"3865:3:7"},"nativeSrc":"3865:15:7","nodeType":"YulFunctionCall","src":"3865:15:7"},{"arguments":[{"name":"headStart","nativeSrc":"3886:9:7","nodeType":"YulIdentifier","src":"3886:9:7"},{"kind":"number","nativeSrc":"3897:2:7","nodeType":"YulLiteral","src":"3897:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3882:3:7","nodeType":"YulIdentifier","src":"3882:3:7"},"nativeSrc":"3882:18:7","nodeType":"YulFunctionCall","src":"3882:18:7"},{"name":"length","nativeSrc":"3902:6:7","nodeType":"YulIdentifier","src":"3902:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3830:34:7","nodeType":"YulIdentifier","src":"3830:34:7"},"nativeSrc":"3830:79:7","nodeType":"YulFunctionCall","src":"3830:79:7"},"nativeSrc":"3830:79:7","nodeType":"YulExpressionStatement","src":"3830:79:7"},{"nativeSrc":"3918:62:7","nodeType":"YulAssignment","src":"3918:62:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3934:9:7","nodeType":"YulIdentifier","src":"3934:9:7"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3953:6:7","nodeType":"YulIdentifier","src":"3953:6:7"},{"kind":"number","nativeSrc":"3961:2:7","nodeType":"YulLiteral","src":"3961:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3949:3:7","nodeType":"YulIdentifier","src":"3949:3:7"},"nativeSrc":"3949:15:7","nodeType":"YulFunctionCall","src":"3949:15:7"},{"arguments":[{"kind":"number","nativeSrc":"3970:2:7","nodeType":"YulLiteral","src":"3970:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3966:3:7","nodeType":"YulIdentifier","src":"3966:3:7"},"nativeSrc":"3966:7:7","nodeType":"YulFunctionCall","src":"3966:7:7"}],"functionName":{"name":"and","nativeSrc":"3945:3:7","nodeType":"YulIdentifier","src":"3945:3:7"},"nativeSrc":"3945:29:7","nodeType":"YulFunctionCall","src":"3945:29:7"}],"functionName":{"name":"add","nativeSrc":"3930:3:7","nodeType":"YulIdentifier","src":"3930:3:7"},"nativeSrc":"3930:45:7","nodeType":"YulFunctionCall","src":"3930:45:7"},{"kind":"number","nativeSrc":"3977:2:7","nodeType":"YulLiteral","src":"3977:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3926:3:7","nodeType":"YulIdentifier","src":"3926:3:7"},"nativeSrc":"3926:54:7","nodeType":"YulFunctionCall","src":"3926:54:7"},"variableNames":[{"name":"tail","nativeSrc":"3918:4:7","nodeType":"YulIdentifier","src":"3918:4:7"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3590:396:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3680:9:7","nodeType":"YulTypedName","src":"3680:9:7","type":""},{"name":"value0","nativeSrc":"3691:6:7","nodeType":"YulTypedName","src":"3691:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3702:4:7","nodeType":"YulTypedName","src":"3702:4:7","type":""}],"src":"3590:396:7"},{"body":{"nativeSrc":"4023:95:7","nodeType":"YulBlock","src":"4023:95:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4040:1:7","nodeType":"YulLiteral","src":"4040:1:7","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"4047:3:7","nodeType":"YulLiteral","src":"4047:3:7","type":"","value":"224"},{"kind":"number","nativeSrc":"4052:10:7","nodeType":"YulLiteral","src":"4052:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"4043:3:7","nodeType":"YulIdentifier","src":"4043:3:7"},"nativeSrc":"4043:20:7","nodeType":"YulFunctionCall","src":"4043:20:7"}],"functionName":{"name":"mstore","nativeSrc":"4033:6:7","nodeType":"YulIdentifier","src":"4033:6:7"},"nativeSrc":"4033:31:7","nodeType":"YulFunctionCall","src":"4033:31:7"},"nativeSrc":"4033:31:7","nodeType":"YulExpressionStatement","src":"4033:31:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4080:1:7","nodeType":"YulLiteral","src":"4080:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"4083:4:7","nodeType":"YulLiteral","src":"4083:4:7","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"4073:6:7","nodeType":"YulIdentifier","src":"4073:6:7"},"nativeSrc":"4073:15:7","nodeType":"YulFunctionCall","src":"4073:15:7"},"nativeSrc":"4073:15:7","nodeType":"YulExpressionStatement","src":"4073:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4104:1:7","nodeType":"YulLiteral","src":"4104:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"4107:4:7","nodeType":"YulLiteral","src":"4107:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4097:6:7","nodeType":"YulIdentifier","src":"4097:6:7"},"nativeSrc":"4097:15:7","nodeType":"YulFunctionCall","src":"4097:15:7"},"nativeSrc":"4097:15:7","nodeType":"YulExpressionStatement","src":"4097:15:7"}]},"name":"panic_error_0x32","nativeSrc":"3991:127:7","nodeType":"YulFunctionDefinition","src":"3991:127:7"},{"body":{"nativeSrc":"4178:325:7","nodeType":"YulBlock","src":"4178:325:7","statements":[{"nativeSrc":"4188:22:7","nodeType":"YulAssignment","src":"4188:22:7","value":{"arguments":[{"kind":"number","nativeSrc":"4202:1:7","nodeType":"YulLiteral","src":"4202:1:7","type":"","value":"1"},{"name":"data","nativeSrc":"4205:4:7","nodeType":"YulIdentifier","src":"4205:4:7"}],"functionName":{"name":"shr","nativeSrc":"4198:3:7","nodeType":"YulIdentifier","src":"4198:3:7"},"nativeSrc":"4198:12:7","nodeType":"YulFunctionCall","src":"4198:12:7"},"variableNames":[{"name":"length","nativeSrc":"4188:6:7","nodeType":"YulIdentifier","src":"4188:6:7"}]},{"nativeSrc":"4219:38:7","nodeType":"YulVariableDeclaration","src":"4219:38:7","value":{"arguments":[{"name":"data","nativeSrc":"4249:4:7","nodeType":"YulIdentifier","src":"4249:4:7"},{"kind":"number","nativeSrc":"4255:1:7","nodeType":"YulLiteral","src":"4255:1:7","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"4245:3:7","nodeType":"YulIdentifier","src":"4245:3:7"},"nativeSrc":"4245:12:7","nodeType":"YulFunctionCall","src":"4245:12:7"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"4223:18:7","nodeType":"YulTypedName","src":"4223:18:7","type":""}]},{"body":{"nativeSrc":"4296:31:7","nodeType":"YulBlock","src":"4296:31:7","statements":[{"nativeSrc":"4298:27:7","nodeType":"YulAssignment","src":"4298:27:7","value":{"arguments":[{"name":"length","nativeSrc":"4312:6:7","nodeType":"YulIdentifier","src":"4312:6:7"},{"kind":"number","nativeSrc":"4320:4:7","nodeType":"YulLiteral","src":"4320:4:7","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"4308:3:7","nodeType":"YulIdentifier","src":"4308:3:7"},"nativeSrc":"4308:17:7","nodeType":"YulFunctionCall","src":"4308:17:7"},"variableNames":[{"name":"length","nativeSrc":"4298:6:7","nodeType":"YulIdentifier","src":"4298:6:7"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4276:18:7","nodeType":"YulIdentifier","src":"4276:18:7"}],"functionName":{"name":"iszero","nativeSrc":"4269:6:7","nodeType":"YulIdentifier","src":"4269:6:7"},"nativeSrc":"4269:26:7","nodeType":"YulFunctionCall","src":"4269:26:7"},"nativeSrc":"4266:61:7","nodeType":"YulIf","src":"4266:61:7"},{"body":{"nativeSrc":"4386:111:7","nodeType":"YulBlock","src":"4386:111:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4407:1:7","nodeType":"YulLiteral","src":"4407:1:7","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"4414:3:7","nodeType":"YulLiteral","src":"4414:3:7","type":"","value":"224"},{"kind":"number","nativeSrc":"4419:10:7","nodeType":"YulLiteral","src":"4419:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"4410:3:7","nodeType":"YulIdentifier","src":"4410:3:7"},"nativeSrc":"4410:20:7","nodeType":"YulFunctionCall","src":"4410:20:7"}],"functionName":{"name":"mstore","nativeSrc":"4400:6:7","nodeType":"YulIdentifier","src":"4400:6:7"},"nativeSrc":"4400:31:7","nodeType":"YulFunctionCall","src":"4400:31:7"},"nativeSrc":"4400:31:7","nodeType":"YulExpressionStatement","src":"4400:31:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4451:1:7","nodeType":"YulLiteral","src":"4451:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"4454:4:7","nodeType":"YulLiteral","src":"4454:4:7","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"4444:6:7","nodeType":"YulIdentifier","src":"4444:6:7"},"nativeSrc":"4444:15:7","nodeType":"YulFunctionCall","src":"4444:15:7"},"nativeSrc":"4444:15:7","nodeType":"YulExpressionStatement","src":"4444:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4479:1:7","nodeType":"YulLiteral","src":"4479:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"4482:4:7","nodeType":"YulLiteral","src":"4482:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4472:6:7","nodeType":"YulIdentifier","src":"4472:6:7"},"nativeSrc":"4472:15:7","nodeType":"YulFunctionCall","src":"4472:15:7"},"nativeSrc":"4472:15:7","nodeType":"YulExpressionStatement","src":"4472:15:7"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4342:18:7","nodeType":"YulIdentifier","src":"4342:18:7"},{"arguments":[{"name":"length","nativeSrc":"4365:6:7","nodeType":"YulIdentifier","src":"4365:6:7"},{"kind":"number","nativeSrc":"4373:2:7","nodeType":"YulLiteral","src":"4373:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4362:2:7","nodeType":"YulIdentifier","src":"4362:2:7"},"nativeSrc":"4362:14:7","nodeType":"YulFunctionCall","src":"4362:14:7"}],"functionName":{"name":"eq","nativeSrc":"4339:2:7","nodeType":"YulIdentifier","src":"4339:2:7"},"nativeSrc":"4339:38:7","nodeType":"YulFunctionCall","src":"4339:38:7"},"nativeSrc":"4336:161:7","nodeType":"YulIf","src":"4336:161:7"}]},"name":"extract_byte_array_length","nativeSrc":"4123:380:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4158:4:7","nodeType":"YulTypedName","src":"4158:4:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4167:6:7","nodeType":"YulTypedName","src":"4167:6:7","type":""}],"src":"4123:380:7"},{"body":{"nativeSrc":"4563:65:7","nodeType":"YulBlock","src":"4563:65:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4580:1:7","nodeType":"YulLiteral","src":"4580:1:7","type":"","value":"0"},{"name":"ptr","nativeSrc":"4583:3:7","nodeType":"YulIdentifier","src":"4583:3:7"}],"functionName":{"name":"mstore","nativeSrc":"4573:6:7","nodeType":"YulIdentifier","src":"4573:6:7"},"nativeSrc":"4573:14:7","nodeType":"YulFunctionCall","src":"4573:14:7"},"nativeSrc":"4573:14:7","nodeType":"YulExpressionStatement","src":"4573:14:7"},{"nativeSrc":"4596:26:7","nodeType":"YulAssignment","src":"4596:26:7","value":{"arguments":[{"kind":"number","nativeSrc":"4614:1:7","nodeType":"YulLiteral","src":"4614:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"4617:4:7","nodeType":"YulLiteral","src":"4617:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"4604:9:7","nodeType":"YulIdentifier","src":"4604:9:7"},"nativeSrc":"4604:18:7","nodeType":"YulFunctionCall","src":"4604:18:7"},"variableNames":[{"name":"data","nativeSrc":"4596:4:7","nodeType":"YulIdentifier","src":"4596:4:7"}]}]},"name":"array_dataslot_bytes_storage","nativeSrc":"4508:120:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"4546:3:7","nodeType":"YulTypedName","src":"4546:3:7","type":""}],"returnVariables":[{"name":"data","nativeSrc":"4554:4:7","nodeType":"YulTypedName","src":"4554:4:7","type":""}],"src":"4508:120:7"},{"body":{"nativeSrc":"4713:437:7","nodeType":"YulBlock","src":"4713:437:7","statements":[{"body":{"nativeSrc":"4746:398:7","nodeType":"YulBlock","src":"4746:398:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4767:1:7","nodeType":"YulLiteral","src":"4767:1:7","type":"","value":"0"},{"name":"array","nativeSrc":"4770:5:7","nodeType":"YulIdentifier","src":"4770:5:7"}],"functionName":{"name":"mstore","nativeSrc":"4760:6:7","nodeType":"YulIdentifier","src":"4760:6:7"},"nativeSrc":"4760:16:7","nodeType":"YulFunctionCall","src":"4760:16:7"},"nativeSrc":"4760:16:7","nodeType":"YulExpressionStatement","src":"4760:16:7"},{"nativeSrc":"4789:30:7","nodeType":"YulVariableDeclaration","src":"4789:30:7","value":{"arguments":[{"kind":"number","nativeSrc":"4811:1:7","nodeType":"YulLiteral","src":"4811:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"4814:4:7","nodeType":"YulLiteral","src":"4814:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"4801:9:7","nodeType":"YulIdentifier","src":"4801:9:7"},"nativeSrc":"4801:18:7","nodeType":"YulFunctionCall","src":"4801:18:7"},"variables":[{"name":"data","nativeSrc":"4793:4:7","nodeType":"YulTypedName","src":"4793:4:7","type":""}]},{"nativeSrc":"4832:57:7","nodeType":"YulVariableDeclaration","src":"4832:57:7","value":{"arguments":[{"name":"data","nativeSrc":"4855:4:7","nodeType":"YulIdentifier","src":"4855:4:7"},{"arguments":[{"kind":"number","nativeSrc":"4865:1:7","nodeType":"YulLiteral","src":"4865:1:7","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"4872:10:7","nodeType":"YulIdentifier","src":"4872:10:7"},{"kind":"number","nativeSrc":"4884:2:7","nodeType":"YulLiteral","src":"4884:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4868:3:7","nodeType":"YulIdentifier","src":"4868:3:7"},"nativeSrc":"4868:19:7","nodeType":"YulFunctionCall","src":"4868:19:7"}],"functionName":{"name":"shr","nativeSrc":"4861:3:7","nodeType":"YulIdentifier","src":"4861:3:7"},"nativeSrc":"4861:27:7","nodeType":"YulFunctionCall","src":"4861:27:7"}],"functionName":{"name":"add","nativeSrc":"4851:3:7","nodeType":"YulIdentifier","src":"4851:3:7"},"nativeSrc":"4851:38:7","nodeType":"YulFunctionCall","src":"4851:38:7"},"variables":[{"name":"deleteStart","nativeSrc":"4836:11:7","nodeType":"YulTypedName","src":"4836:11:7","type":""}]},{"body":{"nativeSrc":"4926:23:7","nodeType":"YulBlock","src":"4926:23:7","statements":[{"nativeSrc":"4928:19:7","nodeType":"YulAssignment","src":"4928:19:7","value":{"name":"data","nativeSrc":"4943:4:7","nodeType":"YulIdentifier","src":"4943:4:7"},"variableNames":[{"name":"deleteStart","nativeSrc":"4928:11:7","nodeType":"YulIdentifier","src":"4928:11:7"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4908:10:7","nodeType":"YulIdentifier","src":"4908:10:7"},{"kind":"number","nativeSrc":"4920:4:7","nodeType":"YulLiteral","src":"4920:4:7","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"4905:2:7","nodeType":"YulIdentifier","src":"4905:2:7"},"nativeSrc":"4905:20:7","nodeType":"YulFunctionCall","src":"4905:20:7"},"nativeSrc":"4902:47:7","nodeType":"YulIf","src":"4902:47:7"},{"nativeSrc":"4962:41:7","nodeType":"YulVariableDeclaration","src":"4962:41:7","value":{"arguments":[{"name":"data","nativeSrc":"4976:4:7","nodeType":"YulIdentifier","src":"4976:4:7"},{"arguments":[{"kind":"number","nativeSrc":"4986:1:7","nodeType":"YulLiteral","src":"4986:1:7","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"4993:3:7","nodeType":"YulIdentifier","src":"4993:3:7"},{"kind":"number","nativeSrc":"4998:2:7","nodeType":"YulLiteral","src":"4998:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4989:3:7","nodeType":"YulIdentifier","src":"4989:3:7"},"nativeSrc":"4989:12:7","nodeType":"YulFunctionCall","src":"4989:12:7"}],"functionName":{"name":"shr","nativeSrc":"4982:3:7","nodeType":"YulIdentifier","src":"4982:3:7"},"nativeSrc":"4982:20:7","nodeType":"YulFunctionCall","src":"4982:20:7"}],"functionName":{"name":"add","nativeSrc":"4972:3:7","nodeType":"YulIdentifier","src":"4972:3:7"},"nativeSrc":"4972:31:7","nodeType":"YulFunctionCall","src":"4972:31:7"},"variables":[{"name":"_1","nativeSrc":"4966:2:7","nodeType":"YulTypedName","src":"4966:2:7","type":""}]},{"nativeSrc":"5016:24:7","nodeType":"YulVariableDeclaration","src":"5016:24:7","value":{"name":"deleteStart","nativeSrc":"5029:11:7","nodeType":"YulIdentifier","src":"5029:11:7"},"variables":[{"name":"start","nativeSrc":"5020:5:7","nodeType":"YulTypedName","src":"5020:5:7","type":""}]},{"body":{"nativeSrc":"5114:20:7","nodeType":"YulBlock","src":"5114:20:7","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"5123:5:7","nodeType":"YulIdentifier","src":"5123:5:7"},{"kind":"number","nativeSrc":"5130:1:7","nodeType":"YulLiteral","src":"5130:1:7","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"5116:6:7","nodeType":"YulIdentifier","src":"5116:6:7"},"nativeSrc":"5116:16:7","nodeType":"YulFunctionCall","src":"5116:16:7"},"nativeSrc":"5116:16:7","nodeType":"YulExpressionStatement","src":"5116:16:7"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"5064:5:7","nodeType":"YulIdentifier","src":"5064:5:7"},{"name":"_1","nativeSrc":"5071:2:7","nodeType":"YulIdentifier","src":"5071:2:7"}],"functionName":{"name":"lt","nativeSrc":"5061:2:7","nodeType":"YulIdentifier","src":"5061:2:7"},"nativeSrc":"5061:13:7","nodeType":"YulFunctionCall","src":"5061:13:7"},"nativeSrc":"5053:81:7","nodeType":"YulForLoop","post":{"nativeSrc":"5075:26:7","nodeType":"YulBlock","src":"5075:26:7","statements":[{"nativeSrc":"5077:22:7","nodeType":"YulAssignment","src":"5077:22:7","value":{"arguments":[{"name":"start","nativeSrc":"5090:5:7","nodeType":"YulIdentifier","src":"5090:5:7"},{"kind":"number","nativeSrc":"5097:1:7","nodeType":"YulLiteral","src":"5097:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5086:3:7","nodeType":"YulIdentifier","src":"5086:3:7"},"nativeSrc":"5086:13:7","nodeType":"YulFunctionCall","src":"5086:13:7"},"variableNames":[{"name":"start","nativeSrc":"5077:5:7","nodeType":"YulIdentifier","src":"5077:5:7"}]}]},"pre":{"nativeSrc":"5057:3:7","nodeType":"YulBlock","src":"5057:3:7","statements":[]},"src":"5053:81:7"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"4729:3:7","nodeType":"YulIdentifier","src":"4729:3:7"},{"kind":"number","nativeSrc":"4734:2:7","nodeType":"YulLiteral","src":"4734:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4726:2:7","nodeType":"YulIdentifier","src":"4726:2:7"},"nativeSrc":"4726:11:7","nodeType":"YulFunctionCall","src":"4726:11:7"},"nativeSrc":"4723:421:7","nodeType":"YulIf","src":"4723:421:7"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nativeSrc":"4633:517:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4685:5:7","nodeType":"YulTypedName","src":"4685:5:7","type":""},{"name":"len","nativeSrc":"4692:3:7","nodeType":"YulTypedName","src":"4692:3:7","type":""},{"name":"startIndex","nativeSrc":"4697:10:7","nodeType":"YulTypedName","src":"4697:10:7","type":""}],"src":"4633:517:7"},{"body":{"nativeSrc":"5240:81:7","nodeType":"YulBlock","src":"5240:81:7","statements":[{"nativeSrc":"5250:65:7","nodeType":"YulAssignment","src":"5250:65:7","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"5265:4:7","nodeType":"YulIdentifier","src":"5265:4:7"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5283:1:7","nodeType":"YulLiteral","src":"5283:1:7","type":"","value":"3"},{"name":"len","nativeSrc":"5286:3:7","nodeType":"YulIdentifier","src":"5286:3:7"}],"functionName":{"name":"shl","nativeSrc":"5279:3:7","nodeType":"YulIdentifier","src":"5279:3:7"},"nativeSrc":"5279:11:7","nodeType":"YulFunctionCall","src":"5279:11:7"},{"arguments":[{"kind":"number","nativeSrc":"5296:1:7","nodeType":"YulLiteral","src":"5296:1:7","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5292:3:7","nodeType":"YulIdentifier","src":"5292:3:7"},"nativeSrc":"5292:6:7","nodeType":"YulFunctionCall","src":"5292:6:7"}],"functionName":{"name":"shr","nativeSrc":"5275:3:7","nodeType":"YulIdentifier","src":"5275:3:7"},"nativeSrc":"5275:24:7","nodeType":"YulFunctionCall","src":"5275:24:7"}],"functionName":{"name":"not","nativeSrc":"5271:3:7","nodeType":"YulIdentifier","src":"5271:3:7"},"nativeSrc":"5271:29:7","nodeType":"YulFunctionCall","src":"5271:29:7"}],"functionName":{"name":"and","nativeSrc":"5261:3:7","nodeType":"YulIdentifier","src":"5261:3:7"},"nativeSrc":"5261:40:7","nodeType":"YulFunctionCall","src":"5261:40:7"},{"arguments":[{"kind":"number","nativeSrc":"5307:1:7","nodeType":"YulLiteral","src":"5307:1:7","type":"","value":"1"},{"name":"len","nativeSrc":"5310:3:7","nodeType":"YulIdentifier","src":"5310:3:7"}],"functionName":{"name":"shl","nativeSrc":"5303:3:7","nodeType":"YulIdentifier","src":"5303:3:7"},"nativeSrc":"5303:11:7","nodeType":"YulFunctionCall","src":"5303:11:7"}],"functionName":{"name":"or","nativeSrc":"5258:2:7","nodeType":"YulIdentifier","src":"5258:2:7"},"nativeSrc":"5258:57:7","nodeType":"YulFunctionCall","src":"5258:57:7"},"variableNames":[{"name":"used","nativeSrc":"5250:4:7","nodeType":"YulIdentifier","src":"5250:4:7"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5155:166:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5217:4:7","nodeType":"YulTypedName","src":"5217:4:7","type":""},{"name":"len","nativeSrc":"5223:3:7","nodeType":"YulTypedName","src":"5223:3:7","type":""}],"returnVariables":[{"name":"used","nativeSrc":"5231:4:7","nodeType":"YulTypedName","src":"5231:4:7","type":""}],"src":"5155:166:7"},{"body":{"nativeSrc":"5420:1201:7","nodeType":"YulBlock","src":"5420:1201:7","statements":[{"nativeSrc":"5430:24:7","nodeType":"YulVariableDeclaration","src":"5430:24:7","value":{"arguments":[{"name":"src","nativeSrc":"5450:3:7","nodeType":"YulIdentifier","src":"5450:3:7"}],"functionName":{"name":"mload","nativeSrc":"5444:5:7","nodeType":"YulIdentifier","src":"5444:5:7"},"nativeSrc":"5444:10:7","nodeType":"YulFunctionCall","src":"5444:10:7"},"variables":[{"name":"newLen","nativeSrc":"5434:6:7","nodeType":"YulTypedName","src":"5434:6:7","type":""}]},{"body":{"nativeSrc":"5497:22:7","nodeType":"YulBlock","src":"5497:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5499:16:7","nodeType":"YulIdentifier","src":"5499:16:7"},"nativeSrc":"5499:18:7","nodeType":"YulFunctionCall","src":"5499:18:7"},"nativeSrc":"5499:18:7","nodeType":"YulExpressionStatement","src":"5499:18:7"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5469:6:7","nodeType":"YulIdentifier","src":"5469:6:7"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5485:2:7","nodeType":"YulLiteral","src":"5485:2:7","type":"","value":"64"},{"kind":"number","nativeSrc":"5489:1:7","nodeType":"YulLiteral","src":"5489:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5481:3:7","nodeType":"YulIdentifier","src":"5481:3:7"},"nativeSrc":"5481:10:7","nodeType":"YulFunctionCall","src":"5481:10:7"},{"kind":"number","nativeSrc":"5493:1:7","nodeType":"YulLiteral","src":"5493:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5477:3:7","nodeType":"YulIdentifier","src":"5477:3:7"},"nativeSrc":"5477:18:7","nodeType":"YulFunctionCall","src":"5477:18:7"}],"functionName":{"name":"gt","nativeSrc":"5466:2:7","nodeType":"YulIdentifier","src":"5466:2:7"},"nativeSrc":"5466:30:7","nodeType":"YulFunctionCall","src":"5466:30:7"},"nativeSrc":"5463:56:7","nodeType":"YulIf","src":"5463:56:7"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5571:4:7","nodeType":"YulIdentifier","src":"5571:4:7"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5609:4:7","nodeType":"YulIdentifier","src":"5609:4:7"}],"functionName":{"name":"sload","nativeSrc":"5603:5:7","nodeType":"YulIdentifier","src":"5603:5:7"},"nativeSrc":"5603:11:7","nodeType":"YulFunctionCall","src":"5603:11:7"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5577:25:7","nodeType":"YulIdentifier","src":"5577:25:7"},"nativeSrc":"5577:38:7","nodeType":"YulFunctionCall","src":"5577:38:7"},{"name":"newLen","nativeSrc":"5617:6:7","nodeType":"YulIdentifier","src":"5617:6:7"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nativeSrc":"5528:42:7","nodeType":"YulIdentifier","src":"5528:42:7"},"nativeSrc":"5528:96:7","nodeType":"YulFunctionCall","src":"5528:96:7"},"nativeSrc":"5528:96:7","nodeType":"YulExpressionStatement","src":"5528:96:7"},{"nativeSrc":"5633:18:7","nodeType":"YulVariableDeclaration","src":"5633:18:7","value":{"kind":"number","nativeSrc":"5650:1:7","nodeType":"YulLiteral","src":"5650:1:7","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5637:9:7","nodeType":"YulTypedName","src":"5637:9:7","type":""}]},{"nativeSrc":"5660:17:7","nodeType":"YulAssignment","src":"5660:17:7","value":{"kind":"number","nativeSrc":"5673:4:7","nodeType":"YulLiteral","src":"5673:4:7","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5660:9:7","nodeType":"YulIdentifier","src":"5660:9:7"}]},{"cases":[{"body":{"nativeSrc":"5723:641:7","nodeType":"YulBlock","src":"5723:641:7","statements":[{"nativeSrc":"5737:35:7","nodeType":"YulVariableDeclaration","src":"5737:35:7","value":{"arguments":[{"name":"newLen","nativeSrc":"5756:6:7","nodeType":"YulIdentifier","src":"5756:6:7"},{"arguments":[{"kind":"number","nativeSrc":"5768:2:7","nodeType":"YulLiteral","src":"5768:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"5764:3:7","nodeType":"YulIdentifier","src":"5764:3:7"},"nativeSrc":"5764:7:7","nodeType":"YulFunctionCall","src":"5764:7:7"}],"functionName":{"name":"and","nativeSrc":"5752:3:7","nodeType":"YulIdentifier","src":"5752:3:7"},"nativeSrc":"5752:20:7","nodeType":"YulFunctionCall","src":"5752:20:7"},"variables":[{"name":"loopEnd","nativeSrc":"5741:7:7","nodeType":"YulTypedName","src":"5741:7:7","type":""}]},{"nativeSrc":"5785:48:7","nodeType":"YulVariableDeclaration","src":"5785:48:7","value":{"arguments":[{"name":"slot","nativeSrc":"5828:4:7","nodeType":"YulIdentifier","src":"5828:4:7"}],"functionName":{"name":"array_dataslot_bytes_storage","nativeSrc":"5799:28:7","nodeType":"YulIdentifier","src":"5799:28:7"},"nativeSrc":"5799:34:7","nodeType":"YulFunctionCall","src":"5799:34:7"},"variables":[{"name":"dstPtr","nativeSrc":"5789:6:7","nodeType":"YulTypedName","src":"5789:6:7","type":""}]},{"nativeSrc":"5846:10:7","nodeType":"YulVariableDeclaration","src":"5846:10:7","value":{"kind":"number","nativeSrc":"5855:1:7","nodeType":"YulLiteral","src":"5855:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5850:1:7","nodeType":"YulTypedName","src":"5850:1:7","type":""}]},{"body":{"nativeSrc":"5926:165:7","nodeType":"YulBlock","src":"5926:165:7","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5951:6:7","nodeType":"YulIdentifier","src":"5951:6:7"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5969:3:7","nodeType":"YulIdentifier","src":"5969:3:7"},{"name":"srcOffset","nativeSrc":"5974:9:7","nodeType":"YulIdentifier","src":"5974:9:7"}],"functionName":{"name":"add","nativeSrc":"5965:3:7","nodeType":"YulIdentifier","src":"5965:3:7"},"nativeSrc":"5965:19:7","nodeType":"YulFunctionCall","src":"5965:19:7"}],"functionName":{"name":"mload","nativeSrc":"5959:5:7","nodeType":"YulIdentifier","src":"5959:5:7"},"nativeSrc":"5959:26:7","nodeType":"YulFunctionCall","src":"5959:26:7"}],"functionName":{"name":"sstore","nativeSrc":"5944:6:7","nodeType":"YulIdentifier","src":"5944:6:7"},"nativeSrc":"5944:42:7","nodeType":"YulFunctionCall","src":"5944:42:7"},"nativeSrc":"5944:42:7","nodeType":"YulExpressionStatement","src":"5944:42:7"},{"nativeSrc":"6003:24:7","nodeType":"YulAssignment","src":"6003:24:7","value":{"arguments":[{"name":"dstPtr","nativeSrc":"6017:6:7","nodeType":"YulIdentifier","src":"6017:6:7"},{"kind":"number","nativeSrc":"6025:1:7","nodeType":"YulLiteral","src":"6025:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6013:3:7","nodeType":"YulIdentifier","src":"6013:3:7"},"nativeSrc":"6013:14:7","nodeType":"YulFunctionCall","src":"6013:14:7"},"variableNames":[{"name":"dstPtr","nativeSrc":"6003:6:7","nodeType":"YulIdentifier","src":"6003:6:7"}]},{"nativeSrc":"6044:33:7","nodeType":"YulAssignment","src":"6044:33:7","value":{"arguments":[{"name":"srcOffset","nativeSrc":"6061:9:7","nodeType":"YulIdentifier","src":"6061:9:7"},{"kind":"number","nativeSrc":"6072:4:7","nodeType":"YulLiteral","src":"6072:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6057:3:7","nodeType":"YulIdentifier","src":"6057:3:7"},"nativeSrc":"6057:20:7","nodeType":"YulFunctionCall","src":"6057:20:7"},"variableNames":[{"name":"srcOffset","nativeSrc":"6044:9:7","nodeType":"YulIdentifier","src":"6044:9:7"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5880:1:7","nodeType":"YulIdentifier","src":"5880:1:7"},{"name":"loopEnd","nativeSrc":"5883:7:7","nodeType":"YulIdentifier","src":"5883:7:7"}],"functionName":{"name":"lt","nativeSrc":"5877:2:7","nodeType":"YulIdentifier","src":"5877:2:7"},"nativeSrc":"5877:14:7","nodeType":"YulFunctionCall","src":"5877:14:7"},"nativeSrc":"5869:222:7","nodeType":"YulForLoop","post":{"nativeSrc":"5892:21:7","nodeType":"YulBlock","src":"5892:21:7","statements":[{"nativeSrc":"5894:17:7","nodeType":"YulAssignment","src":"5894:17:7","value":{"arguments":[{"name":"i","nativeSrc":"5903:1:7","nodeType":"YulIdentifier","src":"5903:1:7"},{"kind":"number","nativeSrc":"5906:4:7","nodeType":"YulLiteral","src":"5906:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5899:3:7","nodeType":"YulIdentifier","src":"5899:3:7"},"nativeSrc":"5899:12:7","nodeType":"YulFunctionCall","src":"5899:12:7"},"variableNames":[{"name":"i","nativeSrc":"5894:1:7","nodeType":"YulIdentifier","src":"5894:1:7"}]}]},"pre":{"nativeSrc":"5873:3:7","nodeType":"YulBlock","src":"5873:3:7","statements":[]},"src":"5869:222:7"},{"body":{"nativeSrc":"6139:166:7","nodeType":"YulBlock","src":"6139:166:7","statements":[{"nativeSrc":"6157:43:7","nodeType":"YulVariableDeclaration","src":"6157:43:7","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6184:3:7","nodeType":"YulIdentifier","src":"6184:3:7"},{"name":"srcOffset","nativeSrc":"6189:9:7","nodeType":"YulIdentifier","src":"6189:9:7"}],"functionName":{"name":"add","nativeSrc":"6180:3:7","nodeType":"YulIdentifier","src":"6180:3:7"},"nativeSrc":"6180:19:7","nodeType":"YulFunctionCall","src":"6180:19:7"}],"functionName":{"name":"mload","nativeSrc":"6174:5:7","nodeType":"YulIdentifier","src":"6174:5:7"},"nativeSrc":"6174:26:7","nodeType":"YulFunctionCall","src":"6174:26:7"},"variables":[{"name":"lastValue","nativeSrc":"6161:9:7","nodeType":"YulTypedName","src":"6161:9:7","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6224:6:7","nodeType":"YulIdentifier","src":"6224:6:7"},{"arguments":[{"name":"lastValue","nativeSrc":"6236:9:7","nodeType":"YulIdentifier","src":"6236:9:7"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6263:1:7","nodeType":"YulLiteral","src":"6263:1:7","type":"","value":"3"},{"name":"newLen","nativeSrc":"6266:6:7","nodeType":"YulIdentifier","src":"6266:6:7"}],"functionName":{"name":"shl","nativeSrc":"6259:3:7","nodeType":"YulIdentifier","src":"6259:3:7"},"nativeSrc":"6259:14:7","nodeType":"YulFunctionCall","src":"6259:14:7"},{"kind":"number","nativeSrc":"6275:3:7","nodeType":"YulLiteral","src":"6275:3:7","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"6255:3:7","nodeType":"YulIdentifier","src":"6255:3:7"},"nativeSrc":"6255:24:7","nodeType":"YulFunctionCall","src":"6255:24:7"},{"arguments":[{"kind":"number","nativeSrc":"6285:1:7","nodeType":"YulLiteral","src":"6285:1:7","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"6281:3:7","nodeType":"YulIdentifier","src":"6281:3:7"},"nativeSrc":"6281:6:7","nodeType":"YulFunctionCall","src":"6281:6:7"}],"functionName":{"name":"shr","nativeSrc":"6251:3:7","nodeType":"YulIdentifier","src":"6251:3:7"},"nativeSrc":"6251:37:7","nodeType":"YulFunctionCall","src":"6251:37:7"}],"functionName":{"name":"not","nativeSrc":"6247:3:7","nodeType":"YulIdentifier","src":"6247:3:7"},"nativeSrc":"6247:42:7","nodeType":"YulFunctionCall","src":"6247:42:7"}],"functionName":{"name":"and","nativeSrc":"6232:3:7","nodeType":"YulIdentifier","src":"6232:3:7"},"nativeSrc":"6232:58:7","nodeType":"YulFunctionCall","src":"6232:58:7"}],"functionName":{"name":"sstore","nativeSrc":"6217:6:7","nodeType":"YulIdentifier","src":"6217:6:7"},"nativeSrc":"6217:74:7","nodeType":"YulFunctionCall","src":"6217:74:7"},"nativeSrc":"6217:74:7","nodeType":"YulExpressionStatement","src":"6217:74:7"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"6110:7:7","nodeType":"YulIdentifier","src":"6110:7:7"},{"name":"newLen","nativeSrc":"6119:6:7","nodeType":"YulIdentifier","src":"6119:6:7"}],"functionName":{"name":"lt","nativeSrc":"6107:2:7","nodeType":"YulIdentifier","src":"6107:2:7"},"nativeSrc":"6107:19:7","nodeType":"YulFunctionCall","src":"6107:19:7"},"nativeSrc":"6104:201:7","nodeType":"YulIf","src":"6104:201:7"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6325:4:7","nodeType":"YulIdentifier","src":"6325:4:7"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6339:1:7","nodeType":"YulLiteral","src":"6339:1:7","type":"","value":"1"},{"name":"newLen","nativeSrc":"6342:6:7","nodeType":"YulIdentifier","src":"6342:6:7"}],"functionName":{"name":"shl","nativeSrc":"6335:3:7","nodeType":"YulIdentifier","src":"6335:3:7"},"nativeSrc":"6335:14:7","nodeType":"YulFunctionCall","src":"6335:14:7"},{"kind":"number","nativeSrc":"6351:1:7","nodeType":"YulLiteral","src":"6351:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6331:3:7","nodeType":"YulIdentifier","src":"6331:3:7"},"nativeSrc":"6331:22:7","nodeType":"YulFunctionCall","src":"6331:22:7"}],"functionName":{"name":"sstore","nativeSrc":"6318:6:7","nodeType":"YulIdentifier","src":"6318:6:7"},"nativeSrc":"6318:36:7","nodeType":"YulFunctionCall","src":"6318:36:7"},"nativeSrc":"6318:36:7","nodeType":"YulExpressionStatement","src":"6318:36:7"}]},"nativeSrc":"5716:648:7","nodeType":"YulCase","src":"5716:648:7","value":{"kind":"number","nativeSrc":"5721:1:7","nodeType":"YulLiteral","src":"5721:1:7","type":"","value":"1"}},{"body":{"nativeSrc":"6381:234:7","nodeType":"YulBlock","src":"6381:234:7","statements":[{"nativeSrc":"6395:14:7","nodeType":"YulVariableDeclaration","src":"6395:14:7","value":{"kind":"number","nativeSrc":"6408:1:7","nodeType":"YulLiteral","src":"6408:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6399:5:7","nodeType":"YulTypedName","src":"6399:5:7","type":""}]},{"body":{"nativeSrc":"6444:67:7","nodeType":"YulBlock","src":"6444:67:7","statements":[{"nativeSrc":"6462:35:7","nodeType":"YulAssignment","src":"6462:35:7","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6481:3:7","nodeType":"YulIdentifier","src":"6481:3:7"},{"name":"srcOffset","nativeSrc":"6486:9:7","nodeType":"YulIdentifier","src":"6486:9:7"}],"functionName":{"name":"add","nativeSrc":"6477:3:7","nodeType":"YulIdentifier","src":"6477:3:7"},"nativeSrc":"6477:19:7","nodeType":"YulFunctionCall","src":"6477:19:7"}],"functionName":{"name":"mload","nativeSrc":"6471:5:7","nodeType":"YulIdentifier","src":"6471:5:7"},"nativeSrc":"6471:26:7","nodeType":"YulFunctionCall","src":"6471:26:7"},"variableNames":[{"name":"value","nativeSrc":"6462:5:7","nodeType":"YulIdentifier","src":"6462:5:7"}]}]},"condition":{"name":"newLen","nativeSrc":"6425:6:7","nodeType":"YulIdentifier","src":"6425:6:7"},"nativeSrc":"6422:89:7","nodeType":"YulIf","src":"6422:89:7"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6531:4:7","nodeType":"YulIdentifier","src":"6531:4:7"},{"arguments":[{"name":"value","nativeSrc":"6590:5:7","nodeType":"YulIdentifier","src":"6590:5:7"},{"name":"newLen","nativeSrc":"6597:6:7","nodeType":"YulIdentifier","src":"6597:6:7"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6537:52:7","nodeType":"YulIdentifier","src":"6537:52:7"},"nativeSrc":"6537:67:7","nodeType":"YulFunctionCall","src":"6537:67:7"}],"functionName":{"name":"sstore","nativeSrc":"6524:6:7","nodeType":"YulIdentifier","src":"6524:6:7"},"nativeSrc":"6524:81:7","nodeType":"YulFunctionCall","src":"6524:81:7"},"nativeSrc":"6524:81:7","nodeType":"YulExpressionStatement","src":"6524:81:7"}]},"nativeSrc":"6373:242:7","nodeType":"YulCase","src":"6373:242:7","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5696:6:7","nodeType":"YulIdentifier","src":"5696:6:7"},{"kind":"number","nativeSrc":"5704:2:7","nodeType":"YulLiteral","src":"5704:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5693:2:7","nodeType":"YulIdentifier","src":"5693:2:7"},"nativeSrc":"5693:14:7","nodeType":"YulFunctionCall","src":"5693:14:7"},"nativeSrc":"5686:929:7","nodeType":"YulSwitch","src":"5686:929:7"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nativeSrc":"5326:1295:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5405:4:7","nodeType":"YulTypedName","src":"5405:4:7","type":""},{"name":"src","nativeSrc":"5411:3:7","nodeType":"YulTypedName","src":"5411:3:7","type":""}],"src":"5326:1295:7"},{"body":{"nativeSrc":"6671:130:7","nodeType":"YulBlock","src":"6671:130:7","statements":[{"nativeSrc":"6681:31:7","nodeType":"YulVariableDeclaration","src":"6681:31:7","value":{"arguments":[{"name":"value","nativeSrc":"6700:5:7","nodeType":"YulIdentifier","src":"6700:5:7"},{"kind":"number","nativeSrc":"6707:4:7","nodeType":"YulLiteral","src":"6707:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"6696:3:7","nodeType":"YulIdentifier","src":"6696:3:7"},"nativeSrc":"6696:16:7","nodeType":"YulFunctionCall","src":"6696:16:7"},"variables":[{"name":"value_1","nativeSrc":"6685:7:7","nodeType":"YulTypedName","src":"6685:7:7","type":""}]},{"body":{"nativeSrc":"6742:22:7","nodeType":"YulBlock","src":"6742:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6744:16:7","nodeType":"YulIdentifier","src":"6744:16:7"},"nativeSrc":"6744:18:7","nodeType":"YulFunctionCall","src":"6744:18:7"},"nativeSrc":"6744:18:7","nodeType":"YulExpressionStatement","src":"6744:18:7"}]},"condition":{"arguments":[{"name":"value_1","nativeSrc":"6727:7:7","nodeType":"YulIdentifier","src":"6727:7:7"},{"kind":"number","nativeSrc":"6736:4:7","nodeType":"YulLiteral","src":"6736:4:7","type":"","value":"0xff"}],"functionName":{"name":"eq","nativeSrc":"6724:2:7","nodeType":"YulIdentifier","src":"6724:2:7"},"nativeSrc":"6724:17:7","nodeType":"YulFunctionCall","src":"6724:17:7"},"nativeSrc":"6721:43:7","nodeType":"YulIf","src":"6721:43:7"},{"nativeSrc":"6773:22:7","nodeType":"YulAssignment","src":"6773:22:7","value":{"arguments":[{"name":"value_1","nativeSrc":"6784:7:7","nodeType":"YulIdentifier","src":"6784:7:7"},{"kind":"number","nativeSrc":"6793:1:7","nodeType":"YulLiteral","src":"6793:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6780:3:7","nodeType":"YulIdentifier","src":"6780:3:7"},"nativeSrc":"6780:15:7","nodeType":"YulFunctionCall","src":"6780:15:7"},"variableNames":[{"name":"ret","nativeSrc":"6773:3:7","nodeType":"YulIdentifier","src":"6773:3:7"}]}]},"name":"increment_t_uint8","nativeSrc":"6626:175:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6653:5:7","nodeType":"YulTypedName","src":"6653:5:7","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"6663:3:7","nodeType":"YulTypedName","src":"6663:3:7","type":""}],"src":"6626:175:7"}]},"contents":"{\n    { }\n    function validator_revert_contract_IArbitrator(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_available_length_bytes_fromMemory(src, length, end) -> array\n    {\n        let size := 0\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let result := and(add(length, 31), not(31))\n        size := add(result, 0x20)\n        let memPtr := 0\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(result, 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(src, add(memPtr, 0x20), length)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes_fromMemory(add(offset, 0x20), mload(offset), end)\n    }\n    function abi_decode_address_payable_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_contract_IArbitrator(value)\n    }\n    function abi_decode_tuple_t_contract$_IArbitrator_$249t_bytes_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_address_payable_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IArbitrator(value)\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_bytes_fromMemory(add(_1, 32), mload(_1), dataEnd)\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value_1 := 0\n        value_1 := mload(add(headStart, 96))\n        value3 := value_1\n        let value_2 := 0\n        value_2 := mload(add(headStart, 128))\n        value4 := value_2\n        let value_3 := 0\n        value_3 := mload(add(headStart, 160))\n        value5 := value_3\n        value6 := abi_decode_address_payable_fromMemory(add(headStart, 192))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        sum := add(and(x, 0xff), and(y, 0xff))\n        if gt(sum, 0xff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_e23f3e71c05305a9182237d48ba9b404f0c1c59aaff27a9576fb3eb02eaabde6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"No space left for a new category\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n}","id":7,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040526000805460ff1916600117905561020060025560106006556007805433610100026001600160a81b031990911617905534801561004057600080fd5b5060405161454738038061454783398101604081905261005f916102af565b600384905560048390556005829055600080546001600160a01b0380841661010002610100600160a81b03199092169190911790915587166080526100a485876100b0565b50505050505050610554565b6007546100c19060ff166001610386565b60ff166000036101175760405162461bcd60e51b815260206004820181905260248201527f4e6f207370616365206c65667420666f722061206e65772063617465676f7279604482015260640160405180910390fd5b60075460405160ff909116907f61606860eb6c87306811e2695215385101daab53bd6ab4e9f9049aead9363c7d906101509085906103a5565b60405180910390a2600754819060089060ff1660408110610173576101736103d8565b019061017f9082610477565b506007805460ff1690600061019383610535565b91906101000a81548160ff021916908360ff160217905550505050565b6001600160a01b03811681146101c557600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b838110156101f95781810151838201526020016101e1565b50506000910152565b6000806001600160401b0384111561021c5761021c6101c8565b50604051601f19601f85018116603f011681018181106001600160401b038211171561024a5761024a6101c8565b60405283815290508082840185101561026257600080fd5b6102708460208301856101de565b509392505050565b600082601f83011261028957600080fd5b61029883835160208501610202565b9392505050565b80516102aa816101b0565b919050565b600080600080600080600060e0888a0312156102ca57600080fd5b87516102d5816101b0565b60208901519097506001600160401b038111156102f157600080fd5b8801601f81018a1361030257600080fd5b6103118a825160208401610202565b60408a015190975090506001600160401b0381111561032f57600080fd5b61033b8a828b01610278565b60608a015160808b015160a08c015192985090965094509250610362905060c0890161029f565b905092959891949750929550565b634e487b7160e01b600052601160045260246000fd5b60ff818116838216019081111561039f5761039f610370565b92915050565b60208152600082518060208401526103c48160408501602087016101de565b601f01601f19169190910160400192915050565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061040257607f821691505b60208210810361042257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561047257806000526020600020601f840160051c8101602085101561044f5750805b601f840160051c820191505b8181101561046f576000815560010161045b565b50505b505050565b81516001600160401b03811115610490576104906101c8565b6104a48161049e84546103ee565b84610428565b6020601f8211600181146104d857600083156104c05750848201515b600019600385901b1c1916600184901b17845561046f565b600084815260208120601f198516915b8281101561050857878501518255602094850194600190920191016104e8565b50848210156105265786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b600060ff821660ff810361054b5761054b610370565b60010192915050565b608051613f7d6105ca6000396000818161067001528181610c0501528181610d8301528181610e4101528181610ecf015281816110b4015281816114f10152818161162c015281816117b201528181611a6001528181611e420152818161206b015281816123ba01526124b40152613f7d6000f3fe60806040526004361061031e5760003560e01c8063a509efeb116101a5578063c9330c0f116100ec578063e349ad3011610095578063faa0ba9d1161006f578063faa0ba9d146109c0578063fc0ac672146109d3578063fe6ca782146109e9578063ffa1ad74146109ff57600080fd5b8063e349ad3014610965578063ec4adca91461097b578063f851a4401461099b57600080fd5b8063d970d18c116100c6578063d970d18c14610910578063dc227fc214610925578063e165720c1461094557600080fd5b8063c9330c0f146108ba578063c94828f0146108da578063d3b476b1146108fa57600080fd5b8063b34bfaa81161014e578063ba0ec60b11610128578063ba0ec60b1461086f578063ba4c8f8f14610884578063be467604146108a457600080fd5b8063b34bfaa814610824578063b4c705811461083a578063b7bddc721461085a57600080fd5b8063adc7faba1161017f578063adc7faba146107b6578063af4a9144146107d6578063b14f2a391461080457600080fd5b8063a509efeb14610756578063a6a7f0eb14610776578063a92c47071461079657600080fd5b80634de12db0116102695780637597b3cb116102125780638f283970116101ec5780638f283970146106f657806392239dff1461071657806392e259251461073657600080fd5b80637597b3cb146106925780637f67bd6c146106a75780638a9bb02a146106c757600080fd5b806367284f211161024357806367284f211461061e5780636760aeb01461063e57806368871c9c1461065e57600080fd5b80634de12db014610541578063564a565d1461056e578063638af3da146105e957600080fd5b8063311a6c56116102cb5780633e556162116102a55780633e5561621461046d57806344b9ad061461050e5780634c55c0001461052157600080fd5b8063311a6c5614610417578063313dab2014610437578063376414831461044d57600080fd5b80631e26de34116102fc5780631e26de341461038c57806326804bef146103ba5780632d2c5565146103da57600080fd5b806303624fc01461032357806312a145e11461035457806312b3a2c014610369575b600080fd5b34801561032f57600080fd5b5060075461033d9060ff1681565b60405160ff90911681526020015b60405180910390f35b6103676103623660046134d4565b610a48565b005b61037c6103773660046134fe565b610e1b565b604051901515815260200161034b565b34801561039857600080fd5b506103ac6103a736600461352a565b611617565b60405190815260200161034b565b3480156103c657600080fd5b506103676103d536600461352a565b6116e0565b3480156103e657600080fd5b506000546103ff9061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161034b565b34801561042357600080fd5b50610367610432366004613543565b6117a7565b34801561044357600080fd5b506103ac60015481565b34801561045957600080fd5b506103ac6104683660046134d4565b611a3d565b34801561047957600080fd5b506104ce6104883660046134d4565b6048602052600090815260409020546001600160a01b03811690600160a01b810463ffffffff1690600160c01b810466ffffffffffffff1690600160f81b900460ff1684565b604080516001600160a01b03909516855263ffffffff909316602085015266ffffffffffffff9091169183019190915260ff16606082015260800161034b565b61036761051c3660046134d4565b611b58565b34801561052d57600080fd5b5061036761053c3660046135f5565b611c9e565b34801561054d57600080fd5b5061056161055c36600461352a565b611d9a565b60405161034b91906136cc565b34801561057a57600080fd5b506105d861058936600461352a565b6049602052600090815260409020546001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204169068ffffffffffffffffff600160b81b9091041685565b60405161034b959493929190613717565b3480156105f557600080fd5b506106096106043660046134fe565b611e3a565b6040805192835260208301919091520161034b565b34801561062a57600080fd5b50610367610639366004613775565b611f67565b34801561064a57600080fd5b50610367610659366004613802565b612017565b34801561066a57600080fd5b506103ff7f000000000000000000000000000000000000000000000000000000000000000081565b34801561069e57600080fd5b506103ac600281565b3480156106b357600080fd5b506103ac6106c236600461352a565b612052565b3480156106d357600080fd5b506106e76106e2366004613543565b6120de565b60405161034b9392919061383e565b34801561070257600080fd5b506103676107113660046138a3565b6121ce565b34801561072257600080fd5b5061036761073136600461352a565b612249565b34801561074257600080fd5b5061036761075136600461352a565b612298565b34801561076257600080fd5b506103ac6107713660046134fe565b6122e7565b34801561078257600080fd5b50610367610791366004613900565b6124a7565b3480156107a257600080fd5b506103676107b13660046134d4565b61251a565b3480156107c257600080fd5b506103676107d136600461352a565b612753565b3480156107e257600080fd5b506107f66107f136600461394c565b6127a2565b60405161034b92919061396f565b34801561081057600080fd5b5061036761081f3660046138a3565b612981565b34801561083057600080fd5b506103ac60055481565b34801561084657600080fd5b506103ac610855366004613a05565b6129fa565b34801561086657600080fd5b50610367612a84565b34801561087b57600080fd5b50610367612ae9565b34801561089057600080fd5b5061036761089f3660046134d4565b612b19565b3480156108b057600080fd5b506103ac60025481565b3480156108c657600080fd5b506103676108d536600461394c565b612c82565b3480156108e657600080fd5b506103676108f536600461352a565b612cdf565b34801561090657600080fd5b506103ac60035481565b34801561091c57600080fd5b506103ac602081565b34801561093157600080fd5b506103ac610940366004613a2f565b612d2e565b34801561095157600080fd5b506103ac6109603660046134d4565b612e92565b34801561097157600080fd5b506103ac60045481565b34801561098757600080fd5b50610367610996366004613a75565b612f11565b3480156109a757600080fd5b506007546103ff9061010090046001600160a01b031681565b6103676109ce366004613a9f565b61300b565b3480156109df57600080fd5b506103ac60065481565b3480156109f557600080fd5b506103ac61040081565b348015610a0b57600080fd5b506105616040518060400160405280600581526020017f312e322e3000000000000000000000000000000000000000000000000000000081525081565b68ffffffffffffffffff811660009081526048602052604090208054600160c01b900466ffffffffffffff16610ac55760405162461bcd60e51b815260206004820152601560248201527f4e6f7468696e6720746f206368616c6c656e67652e000000000000000000000060448201526064015b60405180910390fd5b805463fffffffe19600160a01b90910463ffffffff1601610b285760405162461bcd60e51b815260206004820152601e60248201527f546865726520697320616e206f6e676f696e67206368616c6c656e67652e00006044820152606401610abc565b805463ffffffff60a01b191677ffffffff0000000000000000000000000000000000000000178155610b5982611a3d565b341015610ba85760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e742066756e647320746f206368616c6c656e67652e6044820152606401610abc565b600654815460009161040091610bd59190600160c01b900460201b6affffffffffffff0000000016613b16565b610bdf9190613b2d565b90508060016000828254610bf39190613b4f565b90915550600090506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663c13517e1610c348434613b62565b8554600290600890600160f81b900460ff1660408110610c5657610c56613b75565b016040518463ffffffff1660e01b8152600401610c74929190613c48565b60206040518083038185885af1158015610c92573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610cb79190613c69565b600081815260496020908152604091829020805460018083018054909101905576ffffff0000000000000000000000000000000000000000163376ffffffffffffffffffffffffffffffffffffffffffffff1617600160b81b68ffffffffffffffffff8a16021780825587547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff909116600160f81b9182900460ff908116600160a81b029190911790925587548451919004909116815290810183905291925082916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016917f74baab670a4015ab2f1b467c5252a96141a2573f2908e58a92081e80d3cfde3d910160405180910390a3604080513381526020810183905268ffffffffffffffffff8616917f1e5338a1fb672aa84963dc9f9e4afd009b4ed726debb09224bf4d02a6c68b4e4910160405180910390a250505050565b6000828152604960205260408082209051631c3db16d60e01b81526004810185905282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c3db16d90602401602060405180830381865afa158015610e90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb49190613c69565b6002811115610ec557610ec56136df565b90506000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663afe15cfb8a6040518263ffffffff1660e01b8152600401610f1b91815260200190565b6040805180830381865afa158015610f37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5b9190613c82565b915091506000856002811115610f7357610f736136df565b896002811115610f8557610f856136df565b0361100857814210610fff5760405162461bcd60e51b815260206004820152602e60248201527f46756e64696e67206d757374206265206d6164652077697468696e207468652060448201527f61707065616c20706572696f642e0000000000000000000000000000000000006064820152608401610abc565b506004546110b0565b600254610400906110198585613b62565b6110239190613b16565b61102d9190613b2d565b6110379084613b4f565b42106110ab5760405162461bcd60e51b815260206004820152603960248201527f46756e64696e67206d757374206265206d6164652077697468696e207468652060448201527f66697273742068616c662061707065616c20706572696f642e000000000000006064820152608401610abc565b506005545b86547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f23f16e6908c90600890600160a81b900460ff166040811061110257611102613b75565b016040518363ffffffff1660e01b8152600401611120929190613c48565b602060405180830381865afa15801561113d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111619190613c69565b94506104006111708287613b16565b61117a9190613b2d565b6111849086613b4f565b6001888101549195508a94506000935061119f925090613b62565b905060008660010182815481106111b8576111b8613b75565b90600052602060002090600602019050806001018360028111156111de576111de6136df565b600381106111ee576111ee613b75565b602081049091015460ff601f9092166101000a900416156112775760405162461bcd60e51b815260206004820152602160248201527f41707065616c206665652068617320616c7265616479206265656e207061696460448201527f2e000000000000000000000000000000000000000000000000000000000000006064820152608401610abc565b60008082600201856002811115611290576112906136df565b600381106112a0576112a0613b75565b015490508581106112b457600091506112d8565b346112bf8288613b62565b116112d3576112ce8187613b62565b6112d5565b345b91505b50336001600160a01b0316838c7f2b4ef80a862edc5616a4e61c11f4a368f33323faca91fa7635d48b85c183e66a8d85604051611316929190613ca6565b60405180910390a43360009081526020839052604090208190856002811115611341576113416136df565b6003811061135157611351613b75565b0160008282546113619190613b4f565b92505081905550808260020185600281111561137f5761137f6136df565b6003811061138f5761138f613b75565b01600082825461139f9190613b4f565b9250508190555084826002018560028111156113bd576113bd6136df565b600381106113cd576113cd613b75565b01541061149b57816002018460028111156113ea576113ea6136df565b600381106113fa576113fa613b75565b015482600501600082825461140f9190613b4f565b909155506001905082810185600281111561142c5761142c6136df565b6003811061143c5761143c613b75565b602091828204019190066101000a81548160ff02191690831515021790555089600281111561146d5761146d6136df565b60405184908d907fb5681f036910f38d8c2fa06f2cbedc227ecf03d7c4a358ee9096197b15ff8fd090600090a45b6001820154610100900460ff1680156114be5750600182015462010000900460ff165b156115925760018089018054909101815560009081526005830180548892906114e8908490613b62565b909155505087547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906349912f889088908e90600890600160a81b900460ff166040811061154157611541613b75565b016040518463ffffffff1660e01b815260040161155f929190613c48565b6000604051808303818588803b15801561157857600080fd5b505af115801561158c573d6000803e3d6000fd5b50505050505b600061159e8234613b62565b11156115ca57336108fc6115b28334613b62565b6040518115909202916000818181858888f150505050505b816001018460028111156115e0576115e06136df565b600381106115f0576115f0613b75565b602081049091015460ff601f9092166101000a900416985050505050505050505b92915050565b600081815260496020526040808220805490917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163f23f16e6918691600891600160a81b90910460ff1690811061167a5761167a613b75565b016040518363ffffffff1660e01b8152600401611698929190613c48565b602060405180830381865afa1580156116b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d99190613c69565b9392505050565b60075461010090046001600160a01b031633146116fc57600080fd5b6101008111156117745760405162461bcd60e51b815260206004820152603660248201527f5468652074617820726174652063616e206f6e6c7920626520696e637265617360448201527f65642062792061206d6178696d756d206f6620323525000000000000000000006064820152608401610abc565b600681905560405181907f5100ab374784a62034356f9af3b71ea723c1e89beb5627c6c1dacea1117250b890600090a250565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146117dc57600080fd5b60008281526049602052604081206001808201805492939290916117ff91613b62565b8154811061180f5761180f613b75565b60009182526020822060016006929092020190810154909250610100900460ff161561183d57506001611853565b6001820154610100900460ff1615611853575060025b600080826002811115611868576118686136df565b036118845784600281111561187f5761187f6136df565b611886565b815b8454909150819085907fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b8360028111156118c8576118c86136df565b02179055508354600160b81b900468ffffffffffffffffff1660008181526048602052604090206002836002811115611903576119036136df565b036119bb5780547fff00000000000000ffffffffffffffffffffffffffffffffffffffffffffffff8116825560405168ffffffffffffffffff84168152600160c01b909104602090811b6affffffffffffff0000000016917f8271992f9b3a3f30dc2a464982dc4a136e7357403462443a171a0fb0c6ccc265910160405180910390a16000898152604960205260408082205490516001600160a01b039091169183156108fc02918491818181858888f15050505050505b805463ffffffff60a01b1916815585547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b178655604051889033907f394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e7562227690611a2b908b815260200190565b60405180910390a35050505050505050565b68ffffffffffffffffff81166000908152604860205260408082208054909183917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163f7434ea991600891600160f81b90910460ff16908110611aac57611aac613b75565b016040518263ffffffff1660e01b8152600401611ac99190613cc1565b602060405180830381865afa158015611ae6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0a9190613c69565b600654835491925060009161040091611b3991600160c01b900460201b6affffffffffffff0000000016613b16565b611b439190613b2d565b9050611b4f8183613b4f565b95945050505050565b68ffffffffffffffffff8116600090815260486020526040902080546001600160a01b03163314611bf15760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c7920617574686f722063616e20696e63726561736520626f756e74792060448201527f6f6620616e2061727469636c652e0000000000000000000000000000000000006064820152608401610abc565b80543460201c908290601890611c18908490600160c01b900466ffffffffffffff16613cd4565b82546101009290920a66ffffffffffffff8181021990931691909216919091021790555080546040805168ffffffffffffffffff85168152600160c01b909204602090811b6affffffffffffff0000000016908301527fdf5fc410d3381cc7f0a7fe3af72f4e3cf53ef5787f20554af69035a950e1b2e391015b60405180910390a15050565b600754611caf9060ff166001613cf3565b60ff16600003611d015760405162461bcd60e51b815260206004820181905260248201527f4e6f207370616365206c65667420666f722061206e65772063617465676f72796044820152606401610abc565b60075460405160ff909116907f61606860eb6c87306811e2695215385101daab53bd6ab4e9f9049aead9363c7d90611d3a9085906136cc565b60405180910390a2600754819060089060ff1660408110611d5d57611d5d613b75565b0190611d699082613d58565b506007805460ff16906000611d7d83613e17565b91906101000a81548160ff021916908360ff160217905550505050565b60088160408110611daa57600080fd5b018054909150611db990613b8b565b80601f0160208091040260200160405190810160405280929190818152602001828054611de590613b8b565b8015611e325780601f10611e0757610100808354040283529160200191611e32565b820191906000526020600020905b815481529060010190602001808311611e1557829003601f168201915b505050505081565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663afe15cfb876040518263ffffffff1660e01b8152600401611e8e91815260200190565b6040805180830381865afa158015611eaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ece9190613c82565b9150915060006104006002548484611ee69190613b62565b611ef09190613b16565b611efa9190613b2d565b611f049084613b4f565b90506000866002811115611f1a57611f1a6136df565b611f2389612052565b6002811115611f3457611f346136df565b6002811115611f4557611f456136df565b14905080611f54578382611f57565b83835b95509550505050505b9250929050565b60005b818110156120105760005b838383818110611f8757611f87613b75565b9050602002810190611f999190613e36565b9050811015612007576000848484818110611fb657611fb6613b75565b9050602002810190611fc89190613e36565b83818110611fd857611fd8613b75565b905060200201351115611fff57611ffd868684846002811115610940576109406136df565b505b600101611f75565b50600101611f6a565b5050505050565b6000838152604960205260408120600181015490915b8181101561204a5761204186868387612d2e565b5060010161202d565b505050505050565b604051631c3db16d60e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c3db16d90602401602060405180830381865afa1580156120ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116119190613c69565b6120e6613498565b6120ee613498565b600084815260496020526040812060010180548291908690811061211457612114613b75565b906000526020600020906006020190508060010181600201826005015482600380602002604051908101604052809291908260038015612189576020028201916000905b825461010083900a900460ff1615158152602060019283018181049485019490930390920291018084116121585790505b505060408051606081019182905294975086935060039250905082845b8154815260200190600101908083116121a65750505050509150935093509350509250925092565b60075461010090046001600160a01b031633146121ea57600080fd5b6007805474ffffffffffffffffffffffffffffffffffffffff0019166101006001600160a01b038416908102919091179091556040517f0c2515f25186df02132ad46f01e062c3b8982c8de57fa2b1b0a280d8e810f39b90600090a250565b60075461010090046001600160a01b0316331461226557600080fd5b600581905560405181907f505f3bf1e426c82f14f7c9cfb2d31ef5b7bb76428e16bd90dabec113e3d4a2bc90600090a250565b60075461010090046001600160a01b031633146122b457600080fd5b600381905560405181907f207e19e347becb468ef02d25790188e4d5da0fe37176d3bbb7940168ec5d613690600090a250565b6000828152604960205260408120600180820154839161230691613b62565b9050600082600101828154811061231f5761231f613b75565b906000526020600020906006020190506000856002811115612343576123436136df565b61234c88612052565b600281111561235d5761235d6136df565b600281111561236e5761236e6136df565b14905060008161238057600554612384565b6004545b905060008360020188600281111561239e5761239e6136df565b600381106123ae576123ae613b75565b015486549091506000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f23f16e6908c90600890600160a81b900460ff166040811061240857612408613b75565b016040518363ffffffff1660e01b8152600401612426929190613c48565b602060405180830381865afa158015612443573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124679190613c69565b905060006104006124788584613b16565b6124829190613b2d565b61248c9083613b4f565b90506124988382613b62565b9b9a5050505050505050505050565b336001600160a01b0316837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c858560405161250d929190613ea9565b60405180910390a4505050565b68ffffffffffffffffff8116600090815260486020526040902080546001600160a01b031633146125995760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920617574686f722063616e20776974686472617720616e206172746960448201526331b6329760e11b6064820152608401610abc565b8054600160a01b900463ffffffff1660000361261d5760405162461bcd60e51b815260206004820152602660248201527f596f75206e65656420746f20696e697469617465207769746864726177616c2060448201527f66697273742e00000000000000000000000000000000000000000000000000006064820152608401610abc565b805442600160a01b90910463ffffffff1611156126a25760405162461bcd60e51b815260206004820152603f60248201527f596f75206e65656420746f207761697420666f722074696d656c6f636b206f7260448201527f207761697420756e74696c20746865206368616c6c656e676520656e64732e006064820152608401610abc565b80547fff0000000000000000000000ffffffffffffffffffffffffffffffffffffffff81168255604051600160c01b90910460201b6affffffffffffff00000000169033906108fc8315029083906000818181858888f1935050505015801561270f573d6000803e3d6000fd5b5060405168ffffffffffffffffff841681527f70b41d8cca762ceec66d93f536dbb31f5cabbf1901f862508b9438de54fce4eb9060200160405180910390a1505050565b60075461010090046001600160a01b0316331461276f57600080fd5b600481905560405181907f8df75282265171690a1298cf028f5e3c7d8d42313394a4f25d4aeea6c1ea62cf90600090a250565b6000828152604960205260408120805460609190600160b01b900460ff166127ce576000925050611f60565b60018101548154600160a01b900460ff168167ffffffffffffffff8111156127f8576127f8613565565b60405190808252806020026020018201604052801561282b57816020015b60608152602001906001900390816128165790505b50935060005b828110156129765761284560026001613b4f565b67ffffffffffffffff81111561285d5761285d613565565b604051908082528060200260200182016040528015612886578160200160208202803683370190505b5085828151811061289957612899613b75565b602002602001018190525060008460010182815481106128bb576128bb613b75565b9060005260206000209060060201905060005b6002811161296c5760006128f5838b8460028111156128ef576128ef6136df565b8861327a565b9050801561295957612914838b8460028111156128ef576128ef6136df565b61291e908a613b4f565b98508088858151811061293357612933613b75565b6020026020010151838151811061294c5761294c613b75565b6020026020010181815250505b508061296481613ebd565b9150506128ce565b5050600101612831565b505050509250929050565b60075461010090046001600160a01b0316331461299d57600080fd5b6000805474ffffffffffffffffffffffffffffffffffffffff0019166101006001600160a01b03841690810291909117825560405190917f8a3509a4057c89a5993a4a3140c2ebf7e829d325d8998eaa6c48adcff98b2cef91a250565b600080836002811115612a0f57612a0f6136df565b836002811115612a2157612a216136df565b1490506103e8600082612a3657600554612a3a565b6004545b9050612a4861040082613b4f565b82610400600554600454612a5c9190613b4f565b612a669190613b4f565b612a709190613b16565b612a7a9190613b2d565b9695505050505050565b60018054600091829055815460405191926101009091046001600160a01b0316916108fc84150291849190818181858888f150506040518493507fb315332b30dc40d1e51def214ce42d93a73bd0c17b08db04b34f10736bb2f06f925060009150a250565b60075461010090046001600160a01b03163314612b0557600080fd5b6000805460ff19811660ff90911615179055565b68ffffffffffffffffff8116600090815260486020526040902080546001600160a01b03163314612b985760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920617574686f722063616e20776974686472617720616e206172746960448201526331b6329760e11b6064820152608401610abc565b8054600160a01b900463ffffffff1615612c1a5760405162461bcd60e51b815260206004820152603560248201527f5769746864726177616c20616c726561647920696e69746961746564206f722060448201527f74686572652069732061206368616c6c656e67652e00000000000000000000006064820152608401610abc565b600354612c279042613b4f565b815463ffffffff91909116600160a01b0263ffffffff60a01b1990911617815560405168ffffffffffffffffff831681527f416c1ad2b96c356f3bbd35431f86cce449ddbb4f8c3755ea9d2776b04c2e9c8f90602001611c92565b6000828152604960205260408120600181015490915b818110156120105760005b60028111612cd657612cc3868684846002811115610940576109406136df565b5080612cce81613ebd565b915050612ca3565b50600101612c98565b60075461010090046001600160a01b03163314612cfb57600080fd5b600281905560405181907fbf39faa024d2f97599a0095e84098ee2171b6681738416c0030f442ba956d52b90600090a250565b60008481526049602052604081208054600160b01b900460ff16612d945760405162461bcd60e51b815260206004820152601760248201527f5468657265206973206e6f2072756c696e67207965742e0000000000000000006044820152606401610abc565b6000816001018581548110612dab57612dab613b75565b90600052602060002090600602019050612dd88187868560000160149054906101000a900460ff1661327a565b92508215612e88576001600160a01b0386166000908152602082905260408120856002811115612e0a57612e0a6136df565b60038110612e1a57612e1a613b75565b01556040516001600160a01b0387169084156108fc029085906000818181858888f1935050505050856001600160a01b031685887fff2b7c936d6023fea901b3455cefc23b124c1ca5997dc5b48c461fd20984289d8787604051612e7f929190613ca6565b60405180910390a45b5050949350505050565b6000805b6048600084612ea481613ed6565b955068ffffffffffffffffff1668ffffffffffffffffff16815260200190815260200160002090508060000160189054906101000a900466ffffffffffffff1666ffffffffffffff16600003612e9657612eff600184613efc565b68ffffffffffffffffff169392505050565b68ffffffffffffffffff8216600090815260486020526040902080546001600160a01b03163314612faa5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920617574686f722063616e207472616e73666572206f776e6572736860448201527f69702e00000000000000000000000000000000000000000000000000000000006064820152608401610abc565b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831690811782556040517fdfc39691aec87dc6aa51ff70c0e592f260c54d2ed6c64e8c4c2306da0eec872b90600090a2505050565b60075460ff908116908316106130635760405162461bcd60e51b815260206004820152601c60248201527f546869732063617465676f727920646f6573206e6f74206578697374000000006044820152606401610abc565b60005b604860008361307481613ed6565b945068ffffffffffffffffff1668ffffffffffffffffff16815260200190815260200160002090508060000160189054906101000a900466ffffffffffffff1666ffffffffffffff166000036130665780547fff00000000000000ffffffff000000000000000000000000000000000000000016337fff00000000000000ffffffffffffffffffffffffffffffffffffffffffffffff1617600160c01b3460201c66ffffffffffffff9081168202929092177effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160f81b60ff8716021780845504166131c95760405162461bcd60e51b815260206004820152603960248201527f596f752063616e277420696e697469616c697a6520616e2061727469636c652060448201527f776974686f75742070757474696e67206120626f756e74792e000000000000006064820152608401610abc565b60006131d6600184613efc565b68ffffffffffffffffff1690507f4f9a2b734331c583faf3f19d1feb5f08b742e016a56fb61379950beaf3e22341868686846040516132189493929190613f1d565b60405180910390a1815460408051838152600160c01b909204602090811b6affffffffffffff0000000016908301527fdf5fc410d3381cc7f0a7fe3af72f4e3cf53ef5787f20554af69035a950e1b2e3910160405180910390a1505050505050565b60008260018601816002811115613293576132936136df565b600381106132a3576132a3613b75565b602081049091015460ff601f9092166101000a900416613300576001600160a01b03851660009081526020879052604090208160028111156132e7576132e76136df565b600381106132f7576132f7613b75565b0154915061348f565b826002811115613312576133126136df565b846002811115613324576133246136df565b036133e357600086600201826002811115613341576133416136df565b6003811061335157613351613b75565b01541161335f5760006133dc565b85600201816002811115613375576133756136df565b6003811061338557613385613b75565b015460058701546001600160a01b03871660009081526020899052604090208360028111156133b6576133b66136df565b600381106133c6576133c6613b75565b01546133d29190613b16565b6133dc9190613b2d565b915061348f565b856001018360028111156133f9576133f96136df565b6003811061340957613409613b75565b602081049091015460ff601f9092166101000a90041661348f57600486015460038701546134379190613b4f565b60058701546001600160a01b0387166000908152602089905260409020836002811115613466576134666136df565b6003811061347657613476613b75565b01546134829190613b16565b61348c9190613b2d565b91505b50949350505050565b60405180606001604052806003906020820280368337509192915050565b803568ffffffffffffffffff811681146134cf57600080fd5b919050565b6000602082840312156134e657600080fd5b6116d9826134b6565b8035600381106134cf57600080fd5b6000806040838503121561351157600080fd5b82359150613521602084016134ef565b90509250929050565b60006020828403121561353c57600080fd5b5035919050565b6000806040838503121561355657600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff84111561359657613596613565565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff821117156135c5576135c5613565565b6040528381529050808284018510156135dd57600080fd5b83836020830137600060208583010152509392505050565b6000806040838503121561360857600080fd5b823567ffffffffffffffff81111561361f57600080fd5b8301601f8101851361363057600080fd5b61363f8582356020840161357b565b925050602083013567ffffffffffffffff81111561365c57600080fd5b8301601f8101851361366d57600080fd5b61367c8582356020840161357b565b9150509250929050565b6000815180845260005b818110156136ac57602081850181015186830182015201613690565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006116d96020830184613686565b634e487b7160e01b600052602160045260246000fd5b6003811061371357634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038616815260a0810161373460208301876136f5565b60ff949094166040820152911515606083015268ffffffffffffffffff1660809091015292915050565b80356001600160a01b03811681146134cf57600080fd5b6000806000806060858703121561378b57600080fd5b8435935061379b6020860161375e565b9250604085013567ffffffffffffffff8111156137b757600080fd5b8501601f810187136137c857600080fd5b803567ffffffffffffffff8111156137df57600080fd5b8760208260051b84010111156137f457600080fd5b949793965060200194505050565b60008060006060848603121561381757600080fd5b833592506138276020850161375e565b9150613835604085016134ef565b90509250925092565b60e08101818560005b60038110156138685781511515835260209283019290910190600101613847565b505050606082018460005b6003811015613892578151835260209283019290910190600101613873565b5050508260c0830152949350505050565b6000602082840312156138b557600080fd5b6116d98261375e565b60008083601f8401126138d057600080fd5b50813567ffffffffffffffff8111156138e857600080fd5b602083019150836020828501011115611f6057600080fd5b60008060006040848603121561391557600080fd5b83359250602084013567ffffffffffffffff81111561393357600080fd5b61393f868287016138be565b9497909650939450505050565b6000806040838503121561395f57600080fd5b823591506135216020840161375e565b6000604082018483526040602084015280845180835260608501915060608160051b86010192506020860160005b828110156139f857868503605f190184528151805180875260209182019187019060005b818110156139df5783518352602093840193909201916001016139c1565b509096505050602093840193919091019060010161399d565b5092979650505050505050565b60008060408385031215613a1857600080fd5b613a21836134ef565b9150613521602084016134ef565b60008060008060808587031215613a4557600080fd5b84359350613a556020860161375e565b925060408501359150613a6a606086016134ef565b905092959194509250565b60008060408385031215613a8857600080fd5b613a91836134b6565b91506135216020840161375e565b60008060008060608587031215613ab557600080fd5b843567ffffffffffffffff811115613acc57600080fd5b613ad8878288016138be565b909550935050602085013560ff81168114613af257600080fd5b9150613a6a604086016134b6565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761161157611611613b00565b600082613b4a57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561161157611611613b00565b8181038181111561161157611611613b00565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680613b9f57607f821691505b602082108103613bbf57634e487b7160e01b600052602260045260246000fd5b50919050565b60008154613bd281613b8b565b808552600182168015613bec5760018114613c0857613c3f565b60ff1983166020870152602082151560051b8701019350613c3f565b84600052602060002060005b83811015613c365781546020828a010152600182019150602081019050613c14565b87016020019450505b50505092915050565b828152604060208201526000613c616040830184613bc5565b949350505050565b600060208284031215613c7b57600080fd5b5051919050565b60008060408385031215613c9557600080fd5b505080516020909101519092909150565b60408101613cb482856136f5565b8260208301529392505050565b6020815260006116d96020830184613bc5565b66ffffffffffffff818116838216019081111561161157611611613b00565b60ff818116838216019081111561161157611611613b00565b601f821115613d5357806000526020600020601f840160051c81016020851015613d335750805b601f840160051c820191505b818110156120105760008155600101613d3f565b505050565b815167ffffffffffffffff811115613d7257613d72613565565b613d8681613d808454613b8b565b84613d0c565b6020601f821160018114613dba5760008315613da25750848201515b600019600385901b1c1916600184901b178455612010565b600084815260208120601f198516915b82811015613dea5787850151825560209485019460019092019101613dca565b5084821015613e085786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b600060ff821660ff8103613e2d57613e2d613b00565b60010192915050565b6000808335601e19843603018112613e4d57600080fd5b83018035915067ffffffffffffffff821115613e6857600080fd5b6020019150600581901b3603821315611f6057600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000613c61602083018486613e80565b600060018201613ecf57613ecf613b00565b5060010190565b600068ffffffffffffffffff821668ffffffffffffffffff8103613e2d57613e2d613b00565b68ffffffffffffffffff828116828216039081111561161157611611613b00565b606081526000613f31606083018688613e80565b60ff94909416602083015250604001529291505056fea264697066735822122033ebebbc41f48fc1789af0980443b9fc46e3f37029fbccd21e86aef900428e3664736f6c634300081a0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x200 PUSH1 0x2 SSTORE PUSH1 0x10 PUSH1 0x6 SSTORE PUSH1 0x7 DUP1 SLOAD CALLER PUSH2 0x100 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4547 CODESIZE SUB DUP1 PUSH2 0x4547 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x5F SWAP2 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x3 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP4 SWAP1 SSTORE PUSH1 0x5 DUP3 SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP8 AND PUSH1 0x80 MSTORE PUSH2 0xA4 DUP6 DUP8 PUSH2 0xB0 JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0x554 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xC1 SWAP1 PUSH1 0xFF AND PUSH1 0x1 PUSH2 0x386 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x0 SUB PUSH2 0x117 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207370616365206C65667420666F722061206E65772063617465676F7279 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x61606860EB6C87306811E2695215385101DAAB53BD6AB4E9F9049AEAD9363C7D SWAP1 PUSH2 0x150 SWAP1 DUP6 SWAP1 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x7 SLOAD DUP2 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x173 JUMPI PUSH2 0x173 PUSH2 0x3D8 JUMP JUMPDEST ADD SWAP1 PUSH2 0x17F SWAP1 DUP3 PUSH2 0x477 JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH2 0x193 DUP4 PUSH2 0x535 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT ISZERO PUSH2 0x21C JUMPI PUSH2 0x21C PUSH2 0x1C8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x24A JUMPI PUSH2 0x24A PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x270 DUP5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x298 DUP4 DUP4 MLOAD PUSH1 0x20 DUP6 ADD PUSH2 0x202 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2AA DUP2 PUSH2 0x1B0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH2 0x2D5 DUP2 PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD SWAP1 SWAP8 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 ADD PUSH1 0x1F DUP2 ADD DUP11 SGT PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x311 DUP11 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 DUP11 ADD MLOAD SWAP1 SWAP8 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x33B DUP11 DUP3 DUP12 ADD PUSH2 0x278 JUMP JUMPDEST PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0xA0 DUP13 ADD MLOAD SWAP3 SWAP9 POP SWAP1 SWAP7 POP SWAP5 POP SWAP3 POP PUSH2 0x362 SWAP1 POP PUSH1 0xC0 DUP10 ADD PUSH2 0x29F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x39F JUMPI PUSH2 0x39F PUSH2 0x370 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3C4 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x402 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x422 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x472 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x44F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x45B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x490 JUMPI PUSH2 0x490 PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0x4A4 DUP2 PUSH2 0x49E DUP5 SLOAD PUSH2 0x3EE JUMP JUMPDEST DUP5 PUSH2 0x428 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x4C0 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x46F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x508 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4E8 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x526 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x54B JUMPI PUSH2 0x54B PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3F7D PUSH2 0x5CA PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x670 ADD MSTORE DUP2 DUP2 PUSH2 0xC05 ADD MSTORE DUP2 DUP2 PUSH2 0xD83 ADD MSTORE DUP2 DUP2 PUSH2 0xE41 ADD MSTORE DUP2 DUP2 PUSH2 0xECF ADD MSTORE DUP2 DUP2 PUSH2 0x10B4 ADD MSTORE DUP2 DUP2 PUSH2 0x14F1 ADD MSTORE DUP2 DUP2 PUSH2 0x162C ADD MSTORE DUP2 DUP2 PUSH2 0x17B2 ADD MSTORE DUP2 DUP2 PUSH2 0x1A60 ADD MSTORE DUP2 DUP2 PUSH2 0x1E42 ADD MSTORE DUP2 DUP2 PUSH2 0x206B ADD MSTORE DUP2 DUP2 PUSH2 0x23BA ADD MSTORE PUSH2 0x24B4 ADD MSTORE PUSH2 0x3F7D PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x31E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA509EFEB GT PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xC9330C0F GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xE349AD30 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xFAA0BA9D GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xFAA0BA9D EQ PUSH2 0x9C0 JUMPI DUP1 PUSH4 0xFC0AC672 EQ PUSH2 0x9D3 JUMPI DUP1 PUSH4 0xFE6CA782 EQ PUSH2 0x9E9 JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x9FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE349AD30 EQ PUSH2 0x965 JUMPI DUP1 PUSH4 0xEC4ADCA9 EQ PUSH2 0x97B JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD970D18C GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xD970D18C EQ PUSH2 0x910 JUMPI DUP1 PUSH4 0xDC227FC2 EQ PUSH2 0x925 JUMPI DUP1 PUSH4 0xE165720C EQ PUSH2 0x945 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC9330C0F EQ PUSH2 0x8BA JUMPI DUP1 PUSH4 0xC94828F0 EQ PUSH2 0x8DA JUMPI DUP1 PUSH4 0xD3B476B1 EQ PUSH2 0x8FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB34BFAA8 GT PUSH2 0x14E JUMPI DUP1 PUSH4 0xBA0EC60B GT PUSH2 0x128 JUMPI DUP1 PUSH4 0xBA0EC60B EQ PUSH2 0x86F JUMPI DUP1 PUSH4 0xBA4C8F8F EQ PUSH2 0x884 JUMPI DUP1 PUSH4 0xBE467604 EQ PUSH2 0x8A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB34BFAA8 EQ PUSH2 0x824 JUMPI DUP1 PUSH4 0xB4C70581 EQ PUSH2 0x83A JUMPI DUP1 PUSH4 0xB7BDDC72 EQ PUSH2 0x85A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xADC7FABA GT PUSH2 0x17F JUMPI DUP1 PUSH4 0xADC7FABA EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xAF4A9144 EQ PUSH2 0x7D6 JUMPI DUP1 PUSH4 0xB14F2A39 EQ PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA509EFEB EQ PUSH2 0x756 JUMPI DUP1 PUSH4 0xA6A7F0EB EQ PUSH2 0x776 JUMPI DUP1 PUSH4 0xA92C4707 EQ PUSH2 0x796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DE12DB0 GT PUSH2 0x269 JUMPI DUP1 PUSH4 0x7597B3CB GT PUSH2 0x212 JUMPI DUP1 PUSH4 0x8F283970 GT PUSH2 0x1EC JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x6F6 JUMPI DUP1 PUSH4 0x92239DFF EQ PUSH2 0x716 JUMPI DUP1 PUSH4 0x92E25925 EQ PUSH2 0x736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7597B3CB EQ PUSH2 0x692 JUMPI DUP1 PUSH4 0x7F67BD6C EQ PUSH2 0x6A7 JUMPI DUP1 PUSH4 0x8A9BB02A EQ PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67284F21 GT PUSH2 0x243 JUMPI DUP1 PUSH4 0x67284F21 EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0x6760AEB0 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0x68871C9C EQ PUSH2 0x65E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DE12DB0 EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0x564A565D EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x638AF3DA EQ PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x311A6C56 GT PUSH2 0x2CB JUMPI DUP1 PUSH4 0x3E556162 GT PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x3E556162 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x44B9AD06 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0x4C55C000 EQ PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x311A6C56 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x313DAB20 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x37641483 EQ PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E26DE34 GT PUSH2 0x2FC JUMPI DUP1 PUSH4 0x1E26DE34 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x26804BEF EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x2D2C5565 EQ PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3624FC0 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x12A145E1 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x12B3A2C0 EQ PUSH2 0x369 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x33D SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x367 PUSH2 0x362 CALLDATASIZE PUSH1 0x4 PUSH2 0x34D4 JUMP JUMPDEST PUSH2 0xA48 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37C PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x34FE JUMP JUMPDEST PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH2 0x16E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x3FF SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x3543 JUMP JUMPDEST PUSH2 0x17A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x34D4 JUMP JUMPDEST PUSH2 0x1A3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CE PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x34D4 JUMP JUMPDEST PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL DUP2 DIV PUSH7 0xFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH7 0xFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x34B JUMP JUMPDEST PUSH2 0x367 PUSH2 0x51C CALLDATASIZE PUSH1 0x4 PUSH2 0x34D4 JUMP JUMPDEST PUSH2 0x1B58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x53C CALLDATASIZE PUSH1 0x4 PUSH2 0x35F5 JUMP JUMPDEST PUSH2 0x1C9E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x561 PUSH2 0x55C CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH2 0x1D9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x36CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D8 PUSH2 0x589 CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL DUP3 DIV AND SWAP1 PUSH9 0xFFFFFFFFFFFFFFFFFF PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3717 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x609 PUSH2 0x604 CALLDATASIZE PUSH1 0x4 PUSH2 0x34FE JUMP JUMPDEST PUSH2 0x1E3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x3775 JUMP JUMPDEST PUSH2 0x1F67 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x659 CALLDATASIZE PUSH1 0x4 PUSH2 0x3802 JUMP JUMPDEST PUSH2 0x2017 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x2 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x6C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH2 0x2052 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E7 PUSH2 0x6E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3543 JUMP JUMPDEST PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x383E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x711 CALLDATASIZE PUSH1 0x4 PUSH2 0x38A3 JUMP JUMPDEST PUSH2 0x21CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x731 CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH2 0x2249 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x751 CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH2 0x2298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x771 CALLDATASIZE PUSH1 0x4 PUSH2 0x34FE JUMP JUMPDEST PUSH2 0x22E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x791 CALLDATASIZE PUSH1 0x4 PUSH2 0x3900 JUMP JUMPDEST PUSH2 0x24A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x7B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x34D4 JUMP JUMPDEST PUSH2 0x251A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x7D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH2 0x2753 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F6 PUSH2 0x7F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x394C JUMP JUMPDEST PUSH2 0x27A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP3 SWAP2 SWAP1 PUSH2 0x396F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x81F CALLDATASIZE PUSH1 0x4 PUSH2 0x38A3 JUMP JUMPDEST PUSH2 0x2981 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x830 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x855 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH2 0x29FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x2A84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x2AE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x89F CALLDATASIZE PUSH1 0x4 PUSH2 0x34D4 JUMP JUMPDEST PUSH2 0x2B19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x8D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x394C JUMP JUMPDEST PUSH2 0x2C82 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x8F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH2 0x2CDF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x20 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x940 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x2D2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x960 CALLDATASIZE PUSH1 0x4 PUSH2 0x34D4 JUMP JUMPDEST PUSH2 0x2E92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x971 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x996 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A75 JUMP JUMPDEST PUSH2 0x2F11 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x3FF SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x367 PUSH2 0x9CE CALLDATASIZE PUSH1 0x4 PUSH2 0x3A9F JUMP JUMPDEST PUSH2 0x300B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x400 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x561 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E322E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F206368616C6C656E67652E0000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH4 0xFFFFFFFE NOT PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND ADD PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865726520697320616E206F6E676F696E67206368616C6C656E67652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH24 0xFFFFFFFF0000000000000000000000000000000000000000 OR DUP2 SSTORE PUSH2 0xB59 DUP3 PUSH2 0x1A3D JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742066756E647320746F206368616C6C656E67652E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x400 SWAP2 PUSH2 0xBD5 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x20 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0xBDF SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBF3 SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0xC13517E1 PUSH2 0xC34 DUP5 CALLVALUE PUSH2 0x3B62 JUMP JUMPDEST DUP6 SLOAD PUSH1 0x2 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0xC56 JUMPI PUSH2 0xC56 PUSH2 0x3B75 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC74 SWAP3 SWAP2 SWAP1 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB7 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH23 0xFFFFFF0000000000000000000000000000000000000000 AND CALLER PUSH23 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND OR PUSH1 0x1 PUSH1 0xB8 SHL PUSH9 0xFFFFFFFFFFFFFFFFFF DUP11 AND MUL OR DUP1 DUP3 SSTORE DUP8 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xF8 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE DUP8 SLOAD DUP5 MLOAD SWAP2 SWAP1 DIV SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH32 0x74BAAB670A4015AB2F1B467C5252A96141A2573F2908E58A92081E80D3CFDE3D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF DUP7 AND SWAP2 PUSH32 0x1E5338A1FB672AA84963DC9F9E4AFD009B4ED726DEBB09224BF4D02A6C68B4E4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH4 0x1C3DB16D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE DUP3 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x1C3DB16D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xEC5 JUMPI PUSH2 0xEC5 PUSH2 0x36DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAFE15CFB DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5B SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF73 JUMPI PUSH2 0xF73 PUSH2 0x36DF JUMP JUMPDEST DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF85 JUMPI PUSH2 0xF85 PUSH2 0x36DF JUMP JUMPDEST SUB PUSH2 0x1008 JUMPI DUP2 TIMESTAMP LT PUSH2 0xFFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E64696E67206D757374206265206D6164652077697468696E2074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61707065616C20706572696F642E000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x400 SWAP1 PUSH2 0x1019 DUP6 DUP6 PUSH2 0x3B62 JUMP JUMPDEST PUSH2 0x1023 SWAP2 SWAP1 PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0x102D SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST PUSH2 0x1037 SWAP1 DUP5 PUSH2 0x3B4F JUMP JUMPDEST TIMESTAMP LT PUSH2 0x10AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E64696E67206D757374206265206D6164652077697468696E2074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x66697273742068616C662061707065616C20706572696F642E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST POP PUSH1 0x5 SLOAD JUMPDEST DUP7 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF23F16E6 SWAP1 DUP13 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x1102 JUMPI PUSH2 0x1102 PUSH2 0x3B75 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1120 SWAP3 SWAP2 SWAP1 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x113D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1161 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST SWAP5 POP PUSH2 0x400 PUSH2 0x1170 DUP3 DUP8 PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0x117A SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST PUSH2 0x1184 SWAP1 DUP7 PUSH2 0x3B4F JUMP JUMPDEST PUSH1 0x1 DUP9 DUP2 ADD SLOAD SWAP2 SWAP6 POP DUP11 SWAP5 POP PUSH1 0x0 SWAP4 POP PUSH2 0x119F SWAP3 POP SWAP1 PUSH2 0x3B62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11B8 JUMPI PUSH2 0x11B8 PUSH2 0x3B75 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x11DE JUMPI PUSH2 0x11DE PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x11EE JUMPI PUSH2 0x11EE PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND ISZERO PUSH2 0x1277 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41707065616C206665652068617320616C7265616479206265656E2070616964 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1290 JUMPI PUSH2 0x1290 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x12A0 JUMPI PUSH2 0x12A0 PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD SWAP1 POP DUP6 DUP2 LT PUSH2 0x12B4 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x12D8 JUMP JUMPDEST CALLVALUE PUSH2 0x12BF DUP3 DUP9 PUSH2 0x3B62 JUMP JUMPDEST GT PUSH2 0x12D3 JUMPI PUSH2 0x12CE DUP2 DUP8 PUSH2 0x3B62 JUMP JUMPDEST PUSH2 0x12D5 JUMP JUMPDEST CALLVALUE JUMPDEST SWAP2 POP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP13 PUSH32 0x2B4EF80A862EDC5616A4E61C11F4A368F33323FACA91FA7635D48B85C183E66A DUP14 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1316 SWAP3 SWAP2 SWAP1 PUSH2 0x3CA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1341 JUMPI PUSH2 0x1341 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1351 JUMPI PUSH2 0x1351 PUSH2 0x3B75 JUMP JUMPDEST ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1361 SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x2 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x137F JUMPI PUSH2 0x137F PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x138F JUMPI PUSH2 0x138F PUSH2 0x3B75 JUMP JUMPDEST ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x139F SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP3 PUSH1 0x2 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13BD JUMPI PUSH2 0x13BD PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x13CD JUMPI PUSH2 0x13CD PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD LT PUSH2 0x149B JUMPI DUP2 PUSH1 0x2 ADD DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13EA JUMPI PUSH2 0x13EA PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x13FA JUMPI PUSH2 0x13FA PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD DUP3 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x140F SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP1 POP DUP3 DUP2 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x142C JUMPI PUSH2 0x142C PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x143C JUMPI PUSH2 0x143C PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x146D JUMPI PUSH2 0x146D PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 SWAP1 DUP14 SWAP1 PUSH32 0xB5681F036910F38D8C2FA06F2CBEDC227ECF03D7C4A358EE9096197B15FF8FD0 SWAP1 PUSH1 0x0 SWAP1 LOG4 JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x14BE JUMPI POP PUSH1 0x1 DUP3 ADD SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1592 JUMPI PUSH1 0x1 DUP1 DUP10 ADD DUP1 SLOAD SWAP1 SWAP2 ADD DUP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 DUP4 ADD DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x14E8 SWAP1 DUP5 SWAP1 PUSH2 0x3B62 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP8 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x49912F88 SWAP1 DUP9 SWAP1 DUP15 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x1541 JUMPI PUSH2 0x1541 PUSH2 0x3B75 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155F SWAP3 SWAP2 SWAP1 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x158C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x159E DUP3 CALLVALUE PUSH2 0x3B62 JUMP JUMPDEST GT ISZERO PUSH2 0x15CA JUMPI CALLER PUSH2 0x8FC PUSH2 0x15B2 DUP4 CALLVALUE PUSH2 0x3B62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL POP POP POP POP POP JUMPDEST DUP2 PUSH1 0x1 ADD DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15E0 JUMPI PUSH2 0x15E0 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x15F0 JUMPI PUSH2 0x15F0 PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND SWAP9 POP POP POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xF23F16E6 SWAP2 DUP7 SWAP2 PUSH1 0x8 SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 LT PUSH2 0x167A JUMPI PUSH2 0x167A PUSH2 0x3B75 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1698 SWAP3 SWAP2 SWAP1 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16D9 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100 DUP2 GT ISZERO PUSH2 0x1774 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652074617820726174652063616E206F6E6C7920626520696E6372656173 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642062792061206D6178696D756D206F662032352500000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x5100AB374784A62034356F9AF3B71EA723C1E89BEB5627C6C1DACEA1117250B8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x17DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP3 SWAP1 SWAP2 PUSH2 0x17FF SWAP2 PUSH2 0x3B62 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x180F JUMPI PUSH2 0x180F PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x6 SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SLOAD SWAP1 SWAP3 POP PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x183D JUMPI POP PUSH1 0x1 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1853 JUMPI POP PUSH1 0x2 JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1868 JUMPI PUSH2 0x1868 PUSH2 0x36DF JUMP JUMPDEST SUB PUSH2 0x1884 JUMPI DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x187F JUMPI PUSH2 0x187F PUSH2 0x36DF JUMP JUMPDEST PUSH2 0x1886 JUMP JUMPDEST DUP2 JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 DUP6 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18C8 JUMPI PUSH2 0x18C8 PUSH2 0x36DF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP DUP4 SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1903 JUMPI PUSH2 0x1903 PUSH2 0x36DF JUMP JUMPDEST SUB PUSH2 0x19BB JUMPI DUP1 SLOAD PUSH32 0xFF00000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 SSTORE PUSH1 0x40 MLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH1 0x20 SWAP1 DUP2 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND SWAP2 PUSH32 0x8271992F9B3A3F30DC2A464982DC4A136E7357403462443A171A0FB0C6CCC265 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL POP POP POP POP POP POP JUMPDEST DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE DUP6 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xB0 SHL OR DUP7 SSTORE PUSH1 0x40 MLOAD DUP9 SWAP1 CALLER SWAP1 PUSH32 0x394027A5FA6E098A1191094D1719D6929B9ABC535FCC0C8F448D6A4E75622276 SWAP1 PUSH2 0x1A2B SWAP1 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xF7434EA9 SWAP2 PUSH1 0x8 SWAP2 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 LT PUSH2 0x1AAC JUMPI PUSH2 0x1AAC PUSH2 0x3B75 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AC9 SWAP2 SWAP1 PUSH2 0x3CC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B0A SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0x400 SWAP2 PUSH2 0x1B39 SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x20 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0x1B43 SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST SWAP1 POP PUSH2 0x1B4F DUP2 DUP4 PUSH2 0x3B4F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F722063616E20696E63726561736520626F756E747920 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6620616E2061727469636C652E000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST DUP1 SLOAD CALLVALUE PUSH1 0x20 SHR SWAP1 DUP3 SWAP1 PUSH1 0x18 SWAP1 PUSH2 0x1C18 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0x3CD4 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH7 0xFFFFFFFFFFFFFF DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE POP DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF DUP6 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP3 DIV PUSH1 0x20 SWAP1 DUP2 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND SWAP1 DUP4 ADD MSTORE PUSH32 0xDF5FC410D3381CC7F0A7FE3AF72F4E3CF53EF5787F20554AF69035A950E1B2E3 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1CAF SWAP1 PUSH1 0xFF AND PUSH1 0x1 PUSH2 0x3CF3 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x0 SUB PUSH2 0x1D01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207370616365206C65667420666F722061206E65772063617465676F7279 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x61606860EB6C87306811E2695215385101DAAB53BD6AB4E9F9049AEAD9363C7D SWAP1 PUSH2 0x1D3A SWAP1 DUP6 SWAP1 PUSH2 0x36CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x7 SLOAD DUP2 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x1D5D JUMPI PUSH2 0x1D5D PUSH2 0x3B75 JUMP JUMPDEST ADD SWAP1 PUSH2 0x1D69 SWAP1 DUP3 PUSH2 0x3D58 JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH2 0x1D7D DUP4 PUSH2 0x3E17 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 PUSH1 0x40 DUP2 LT PUSH2 0x1DAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x1DB9 SWAP1 PUSH2 0x3B8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DE5 SWAP1 PUSH2 0x3B8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E32 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E07 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E32 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E15 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAFE15CFB DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ECE SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x400 PUSH1 0x2 SLOAD DUP5 DUP5 PUSH2 0x1EE6 SWAP2 SWAP1 PUSH2 0x3B62 JUMP JUMPDEST PUSH2 0x1EF0 SWAP2 SWAP1 PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0x1EFA SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST PUSH2 0x1F04 SWAP1 DUP5 PUSH2 0x3B4F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F1A JUMPI PUSH2 0x1F1A PUSH2 0x36DF JUMP JUMPDEST PUSH2 0x1F23 DUP10 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F34 JUMPI PUSH2 0x1F34 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F45 JUMPI PUSH2 0x1F45 PUSH2 0x36DF JUMP JUMPDEST EQ SWAP1 POP DUP1 PUSH2 0x1F54 JUMPI DUP4 DUP3 PUSH2 0x1F57 JUMP JUMPDEST DUP4 DUP4 JUMPDEST SWAP6 POP SWAP6 POP POP POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2010 JUMPI PUSH1 0x0 JUMPDEST DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1F87 JUMPI PUSH2 0x1F87 PUSH2 0x3B75 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1F99 SWAP2 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x2007 JUMPI PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x1FB6 JUMPI PUSH2 0x1FB6 PUSH2 0x3B75 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1FC8 SWAP2 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST DUP4 DUP2 DUP2 LT PUSH2 0x1FD8 JUMPI PUSH2 0x1FD8 PUSH2 0x3B75 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT ISZERO PUSH2 0x1FFF JUMPI PUSH2 0x1FFD DUP7 DUP7 DUP5 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x940 JUMPI PUSH2 0x940 PUSH2 0x36DF JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1F75 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1F6A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x204A JUMPI PUSH2 0x2041 DUP7 DUP7 DUP4 DUP8 PUSH2 0x2D2E JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x202D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C3DB16D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x1C3DB16D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1611 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST PUSH2 0x20E6 PUSH2 0x3498 JUMP JUMPDEST PUSH2 0x20EE PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x2114 JUMPI PUSH2 0x2114 PUSH2 0x3B75 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD DUP2 PUSH1 0x2 ADD DUP3 PUSH1 0x5 ADD SLOAD DUP3 PUSH1 0x3 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0x2189 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 SLOAD PUSH2 0x100 DUP4 SWAP1 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 PUSH1 0x1 SWAP3 DUP4 ADD DUP2 DUP2 DIV SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP4 SUB SWAP1 SWAP3 MUL SWAP2 ADD DUP1 DUP5 GT PUSH2 0x2158 JUMPI SWAP1 POP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP5 SWAP8 POP DUP7 SWAP4 POP PUSH1 0x3 SWAP3 POP SWAP1 POP DUP3 DUP5 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x21A6 JUMPI POP POP POP POP POP SWAP2 POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x21EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xC2515F25186DF02132AD46F01E062C3B8982C8DE57FA2B1B0A280D8E810F39B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x505F3BF1E426C82F14F7C9CFB2D31EF5B7BB76428E16BD90DABEC113E3D4A2BC SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x22B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x207E19E347BECB468EF02D25790188E4D5DA0FE37176D3BBB7940168EC5D6136 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP4 SWAP2 PUSH2 0x2306 SWAP2 PUSH2 0x3B62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x231F JUMPI PUSH2 0x231F PUSH2 0x3B75 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2343 JUMPI PUSH2 0x2343 PUSH2 0x36DF JUMP JUMPDEST PUSH2 0x234C DUP9 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x235D JUMPI PUSH2 0x235D PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x236E JUMPI PUSH2 0x236E PUSH2 0x36DF JUMP JUMPDEST EQ SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x2380 JUMPI PUSH1 0x5 SLOAD PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 ADD DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x239E JUMPI PUSH2 0x239E PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x23AE JUMPI PUSH2 0x23AE PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD DUP7 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF23F16E6 SWAP1 DUP13 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x2408 JUMPI PUSH2 0x2408 PUSH2 0x3B75 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2426 SWAP3 SWAP2 SWAP1 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2443 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2467 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x400 PUSH2 0x2478 DUP6 DUP5 PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0x2482 SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST PUSH2 0x248C SWAP1 DUP4 PUSH2 0x3B4F JUMP JUMPDEST SWAP1 POP PUSH2 0x2498 DUP4 DUP3 PUSH2 0x3B62 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDCCF2F8B2CC26EAFCD61905CBA744CFF4B81D14740725F6376390DC6298A6A3C DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x250D SWAP3 SWAP2 SWAP1 PUSH2 0x3EA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2599 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F722063616E20776974686472617720616E2061727469 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x31B63297 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 SUB PUSH2 0x261D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E65656420746F20696E697469617465207769746864726177616C20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x66697273742E0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST DUP1 SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x26A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E65656420746F207761697420666F722074696D656C6F636B206F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207761697420756E74696C20746865206368616C6C656E676520656E64732E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST DUP1 SLOAD PUSH32 0xFF0000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH1 0x20 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND SWAP1 CALLER SWAP1 PUSH2 0x8FC DUP4 ISZERO MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x270F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF DUP5 AND DUP2 MSTORE PUSH32 0x70B41D8CCA762CEEC66D93F536DBB31F5CABBF1901F862508B9438DE54FCE4EB SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x276F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x8DF75282265171690A1298CF028F5E3C7D8D42313394A4F25D4AEEA6C1EA62CF SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x27CE JUMPI PUSH1 0x0 SWAP3 POP POP PUSH2 0x1F60 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F8 JUMPI PUSH2 0x27F8 PUSH2 0x3565 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x282B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2816 JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2976 JUMPI PUSH2 0x2845 PUSH1 0x2 PUSH1 0x1 PUSH2 0x3B4F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x285D JUMPI PUSH2 0x285D PUSH2 0x3565 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2886 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2899 JUMPI PUSH2 0x2899 PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP5 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x28BB JUMPI PUSH2 0x28BB PUSH2 0x3B75 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 GT PUSH2 0x296C JUMPI PUSH1 0x0 PUSH2 0x28F5 DUP4 DUP12 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x28EF JUMPI PUSH2 0x28EF PUSH2 0x36DF JUMP JUMPDEST DUP9 PUSH2 0x327A JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2959 JUMPI PUSH2 0x2914 DUP4 DUP12 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x28EF JUMPI PUSH2 0x28EF PUSH2 0x36DF JUMP JUMPDEST PUSH2 0x291E SWAP1 DUP11 PUSH2 0x3B4F JUMP JUMPDEST SWAP9 POP DUP1 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2933 JUMPI PUSH2 0x2933 PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x294C JUMPI PUSH2 0x294C PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP DUP1 PUSH2 0x2964 DUP2 PUSH2 0x3EBD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x28CE JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x2831 JUMP JUMPDEST POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x299D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x8A3509A4057C89A5993A4A3140C2EBF7E829D325D8998EAA6C48ADCFF98B2CEF SWAP2 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2A0F JUMPI PUSH2 0x2A0F PUSH2 0x36DF JUMP JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2A21 JUMPI PUSH2 0x2A21 PUSH2 0x36DF JUMP JUMPDEST EQ SWAP1 POP PUSH2 0x3E8 PUSH1 0x0 DUP3 PUSH2 0x2A36 JUMPI PUSH1 0x5 SLOAD PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST SWAP1 POP PUSH2 0x2A48 PUSH2 0x400 DUP3 PUSH2 0x3B4F JUMP JUMPDEST DUP3 PUSH2 0x400 PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH2 0x2A5C SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST PUSH2 0x2A66 SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST PUSH2 0x2A70 SWAP2 SWAP1 PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0x2A7A SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP1 SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x8FC DUP5 ISZERO MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL POP POP PUSH1 0x40 MLOAD DUP5 SWAP4 POP PUSH32 0xB315332B30DC40D1E51DEF214CE42D93A73BD0C17B08DB04B34F10736BB2F06F SWAP3 POP PUSH1 0x0 SWAP2 POP LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2B05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP1 SWAP2 AND ISZERO OR SWAP1 SSTORE JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2B98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F722063616E20776974686472617720616E2061727469 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x31B63297 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x2C1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20616C726561647920696E69746961746564206F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74686572652069732061206368616C6C656E67652E0000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2C27 SWAP1 TIMESTAMP PUSH2 0x3B4F JUMP JUMPDEST DUP2 SLOAD PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH32 0x416C1AD2B96C356F3BBD35431F86CCE449DDBB4F8C3755EA9D2776B04C2E9C8F SWAP1 PUSH1 0x20 ADD PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2010 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 GT PUSH2 0x2CD6 JUMPI PUSH2 0x2CC3 DUP7 DUP7 DUP5 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x940 JUMPI PUSH2 0x940 PUSH2 0x36DF JUMP JUMPDEST POP DUP1 PUSH2 0x2CCE DUP2 PUSH2 0x3EBD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2CA3 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2C98 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2CFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xBF39FAA024D2F97599A0095E84098EE2171B6681738416C0030F442BA956D52B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206973206E6F2072756C696E67207965742E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x2DAB JUMPI PUSH2 0x2DAB PUSH2 0x3B75 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP PUSH2 0x2DD8 DUP2 DUP8 DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x327A JUMP JUMPDEST SWAP3 POP DUP3 ISZERO PUSH2 0x2E88 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2E0A JUMPI PUSH2 0x2E0A PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2E1A JUMPI PUSH2 0x2E1A PUSH2 0x3B75 JUMP JUMPDEST ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP9 PUSH32 0xFF2B7C936D6023FEA901B3455CEFC23B124C1CA5997DC5B48C461FD20984289D DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2E7F SWAP3 SWAP2 SWAP1 PUSH2 0x3CA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x48 PUSH1 0x0 DUP5 PUSH2 0x2EA4 DUP2 PUSH2 0x3ED6 JUMP JUMPDEST SWAP6 POP PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH9 0xFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF AND PUSH1 0x0 SUB PUSH2 0x2E96 JUMPI PUSH2 0x2EFF PUSH1 0x1 DUP5 PUSH2 0x3EFC JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F722063616E207472616E73666572206F776E65727368 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x69702E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD PUSH32 0xDFC39691AEC87DC6AA51FF70C0E592F260C54D2ED6C64E8C4C2306DA0EEC872B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF SWAP1 DUP2 AND SWAP1 DUP4 AND LT PUSH2 0x3063 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732063617465676F727920646F6573206E6F7420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x48 PUSH1 0x0 DUP4 PUSH2 0x3074 DUP2 PUSH2 0x3ED6 JUMP JUMPDEST SWAP5 POP PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH9 0xFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF AND PUSH1 0x0 SUB PUSH2 0x3066 JUMPI DUP1 SLOAD PUSH32 0xFF00000000000000FFFFFFFF0000000000000000000000000000000000000000 AND CALLER PUSH32 0xFF00000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND OR PUSH1 0x1 PUSH1 0xC0 SHL CALLVALUE PUSH1 0x20 SHR PUSH7 0xFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xF8 SHL PUSH1 0xFF DUP8 AND MUL OR DUP1 DUP5 SSTORE DIV AND PUSH2 0x31C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E277420696E697469616C697A6520616E2061727469636C6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x776974686F75742070757474696E67206120626F756E74792E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31D6 PUSH1 0x1 DUP5 PUSH2 0x3EFC JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH32 0x4F9A2B734331C583FAF3F19D1FEB5F08B742E016A56FB61379950BEAF3E22341 DUP7 DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3218 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP3 DIV PUSH1 0x20 SWAP1 DUP2 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND SWAP1 DUP4 ADD MSTORE PUSH32 0xDF5FC410D3381CC7F0A7FE3AF72F4E3CF53EF5787F20554AF69035A950E1B2E3 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 DUP7 ADD DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3293 JUMPI PUSH2 0x3293 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x32A3 JUMPI PUSH2 0x32A3 PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND PUSH2 0x3300 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x32E7 JUMPI PUSH2 0x32E7 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x32F7 JUMPI PUSH2 0x32F7 PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD SWAP2 POP PUSH2 0x348F JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3312 JUMPI PUSH2 0x3312 PUSH2 0x36DF JUMP JUMPDEST DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3324 JUMPI PUSH2 0x3324 PUSH2 0x36DF JUMP JUMPDEST SUB PUSH2 0x33E3 JUMPI PUSH1 0x0 DUP7 PUSH1 0x2 ADD DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3341 JUMPI PUSH2 0x3341 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3351 JUMPI PUSH2 0x3351 PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD GT PUSH2 0x335F JUMPI PUSH1 0x0 PUSH2 0x33DC JUMP JUMPDEST DUP6 PUSH1 0x2 ADD DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3375 JUMPI PUSH2 0x3375 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3385 JUMPI PUSH2 0x3385 PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP10 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33B6 JUMPI PUSH2 0x33B6 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x33C6 JUMPI PUSH2 0x33C6 PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD PUSH2 0x33D2 SWAP2 SWAP1 PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0x33DC SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST SWAP2 POP PUSH2 0x348F JUMP JUMPDEST DUP6 PUSH1 0x1 ADD DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33F9 JUMPI PUSH2 0x33F9 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3409 JUMPI PUSH2 0x3409 PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND PUSH2 0x348F JUMPI PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x3 DUP8 ADD SLOAD PUSH2 0x3437 SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP10 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3466 JUMPI PUSH2 0x3466 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3476 JUMPI PUSH2 0x3476 PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD PUSH2 0x3482 SWAP2 SWAP1 PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0x348C SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x34CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D9 DUP3 PUSH2 0x34B6 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x34CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x3521 PUSH1 0x20 DUP5 ADD PUSH2 0x34EF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x353C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x3596 JUMPI PUSH2 0x3596 PUSH2 0x3565 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x35C5 JUMPI PUSH2 0x35C5 PUSH2 0x3565 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x35DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x361F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x3630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x363F DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x357B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x365C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x366D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x367C DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x357B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x36AC JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x3690 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16D9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3686 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3713 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 DUP2 ADD PUSH2 0x3734 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0xFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x34CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x378B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x379B PUSH1 0x20 DUP7 ADD PUSH2 0x375E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x37C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x37F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x3827 PUSH1 0x20 DUP6 ADD PUSH2 0x375E JUMP JUMPDEST SWAP2 POP PUSH2 0x3835 PUSH1 0x40 DUP6 ADD PUSH2 0x34EF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD DUP2 DUP6 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3868 JUMPI DUP2 MLOAD ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3847 JUMP JUMPDEST POP POP POP PUSH1 0x60 DUP3 ADD DUP5 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3892 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3873 JUMP JUMPDEST POP POP POP DUP3 PUSH1 0xC0 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D9 DUP3 PUSH2 0x375E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x38D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1F60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3915 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x393F DUP7 DUP3 DUP8 ADD PUSH2 0x38BE JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x395F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x3521 PUSH1 0x20 DUP5 ADD PUSH2 0x375E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD DUP5 DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE DUP1 DUP5 MLOAD DUP1 DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP7 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39F8 JUMPI DUP7 DUP6 SUB PUSH1 0x5F NOT ADD DUP5 MSTORE DUP2 MLOAD DUP1 MLOAD DUP1 DUP8 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP8 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39DF JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x39C1 JUMP JUMPDEST POP SWAP1 SWAP7 POP POP POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x399D JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A21 DUP4 PUSH2 0x34EF JUMP JUMPDEST SWAP2 POP PUSH2 0x3521 PUSH1 0x20 DUP5 ADD PUSH2 0x34EF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x3A55 PUSH1 0x20 DUP7 ADD PUSH2 0x375E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3A6A PUSH1 0x60 DUP7 ADD PUSH2 0x34EF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A91 DUP4 PUSH2 0x34B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3521 PUSH1 0x20 DUP5 ADD PUSH2 0x375E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3AB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3ACC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AD8 DUP8 DUP3 DUP9 ADD PUSH2 0x38BE JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3AF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH2 0x3A6A PUSH1 0x40 DUP7 ADD PUSH2 0x34B6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1611 JUMPI PUSH2 0x1611 PUSH2 0x3B00 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3B4A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1611 JUMPI PUSH2 0x1611 PUSH2 0x3B00 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1611 JUMPI PUSH2 0x1611 PUSH2 0x3B00 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3B9F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3BBF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3BD2 DUP2 PUSH2 0x3B8B JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x1 DUP3 AND DUP1 ISZERO PUSH2 0x3BEC JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3C08 JUMPI PUSH2 0x3C3F JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x20 DUP3 ISZERO ISZERO PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP PUSH2 0x3C3F JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C36 JUMPI DUP2 SLOAD PUSH1 0x20 DUP3 DUP11 ADD ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3C14 JUMP JUMPDEST DUP8 ADD PUSH1 0x20 ADD SWAP5 POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3C61 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3BC5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x3CB4 DUP3 DUP6 PUSH2 0x36F5 JUMP JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16D9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3BC5 JUMP JUMPDEST PUSH7 0xFFFFFFFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x1611 JUMPI PUSH2 0x1611 PUSH2 0x3B00 JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x1611 JUMPI PUSH2 0x1611 PUSH2 0x3B00 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3D53 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3D33 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2010 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3D3F JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D72 JUMPI PUSH2 0x3D72 PUSH2 0x3565 JUMP JUMPDEST PUSH2 0x3D86 DUP2 PUSH2 0x3D80 DUP5 SLOAD PUSH2 0x3B8B JUMP JUMPDEST DUP5 PUSH2 0x3D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3DBA JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x3DA2 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3DEA JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3DCA JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x3E08 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x3E2D JUMPI PUSH2 0x3E2D PUSH2 0x3B00 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x3E4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3E68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP PUSH1 0x5 DUP2 SWAP1 SHL CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x1F60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3C61 PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x3E80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x3ECF JUMPI PUSH2 0x3ECF PUSH2 0x3B00 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH9 0xFFFFFFFFFFFFFFFFFF DUP3 AND PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 SUB PUSH2 0x3E2D JUMPI PUSH2 0x3E2D PUSH2 0x3B00 JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x1611 JUMPI PUSH2 0x1611 PUSH2 0x3B00 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3F31 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x3E80 JUMP JUMPDEST PUSH1 0xFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 ADD MSTORE SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0xEB 0xEB 0xBC COINBASE DELEGATECALL DUP16 0xC1 PUSH25 0x9AF0980443B9FC46E3F37029FBCCD21E86AEF900428E366473 PUSH16 0x6C634300081A00330000000000000000 ","sourceMap":"1105:26127:5:-:0;;;654:31:4;;;-1:-1:-1;;654:31:4;681:4;654:31;;;961:3;913:51;;1601:2;1567:36;;1364:32:5;;;1442:10;654:31:4;1403:50:5;-1:-1:-1;;;;;;1403:50:5;;;;;;2893:499;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1796:27:4;:56;;;1862:23;:48;;;1920:22;:46;;;-1:-1:-1;1976:20:4;;-1:-1:-1;;;;;1976:20:4;;;;;-1:-1:-1;;;;;;1976:20:4;;;;;;;;;;3296:24:5;::::1;;::::0;3330:55:::1;3342:20:::0;3364;3330:11:::1;:55::i;:::-;2893:499:::0;;;;;;;1105:26127;;19562:358;19679:15;;:19;;:15;;;:19;:::i;:::-;:24;;19702:1;19679:24;19671:69;;;;-1:-1:-1;;;19671:69:5;;3431:2:7;19671:69:5;;;3413:21:7;;;3450:18;;;3443:30;3509:34;3489:18;;;3482:62;3561:18;;19671:69:5;;;;;;;;19768:15;;19755:51;;19768:15;;;;;19755:51;;;;19785:20;;19755:51;:::i;:::-;;;;;;;;19846:15;;19865:20;;19816:29;;19846:15;;19816:46;;;;;;;:::i;:::-;;;:69;;:46;:69;:::i;:::-;-1:-1:-1;19896:15:5;:17;;;;;:15;:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;19562:358;;:::o;14:144:7:-;-1:-1:-1;;;;;102:31:7;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:127::-;224:10;219:3;215:20;212:1;205:31;255:4;252:1;245:15;279:4;276:1;269:15;295:250;380:1;390:113;404:6;401:1;398:13;390:113;;;480:11;;;474:18;461:11;;;454:39;426:2;419:10;390:113;;;-1:-1:-1;;537:1:7;519:16;;512:27;295:250::o;550:698::-;625:5;;-1:-1:-1;;;;;670:30:7;;667:56;;;703:18;;:::i;:::-;-1:-1:-1;858:2:7;852:9;-1:-1:-1;;771:2:7;750:15;;746:29;;916:2;904:15;900:29;888:42;;981:22;;;-1:-1:-1;;;;;945:34:7;;942:62;939:88;;;1007:18;;:::i;:::-;1043:2;1036:22;1091;;;1076:6;-1:-1:-1;1076:6:7;1128:16;;;1125:25;-1:-1:-1;1122:45:7;;;1163:1;1160;1153:12;1122:45;1176:66;1235:6;1228:4;1220:6;1216:17;1211:3;1176:66;:::i;:::-;;550:698;;;;;:::o;1253:236::-;1307:5;1360:3;1353:4;1345:6;1341:17;1337:27;1327:55;;1378:1;1375;1368:12;1327:55;1400:83;1479:3;1470:6;1464:13;1457:4;1449:6;1445:17;1400:83;:::i;:::-;1391:92;1253:236;-1:-1:-1;;;1253:236:7:o;1494:159::-;1581:13;;1603:44;1581:13;1603:44;:::i;:::-;1494:159;;;:::o;1658:1281::-;1828:6;1836;1844;1852;1860;1868;1876;1929:3;1917:9;1908:7;1904:23;1900:33;1897:53;;;1946:1;1943;1936:12;1897:53;1978:9;1972:16;1997:44;2035:5;1997:44;:::i;:::-;2109:2;2094:18;;2088:25;2060:5;;-1:-1:-1;;;;;;2125:30:7;;2122:50;;;2168:1;2165;2158:12;2122:50;2191:22;;2244:4;2236:13;;2232:27;-1:-1:-1;2222:55:7;;2273:1;2270;2263:12;2222:55;2296:77;2365:7;2360:2;2354:9;2349:2;2345;2341:11;2296:77;:::i;:::-;2419:2;2404:18;;2398:25;2286:87;;-1:-1:-1;2398:25:7;-1:-1:-1;;;;;;2435:32:7;;2432:52;;;2480:1;2477;2470:12;2432:52;2503:63;2558:7;2547:8;2536:9;2532:24;2503:63;:::i;:::-;2632:2;2617:18;;2611:25;2728:3;2713:19;;2707:26;2825:3;2810:19;;2804:26;2493:73;;-1:-1:-1;2611:25:7;;-1:-1:-1;2707:26:7;-1:-1:-1;2804:26:7;-1:-1:-1;2875:58:7;;-1:-1:-1;2928:3:7;2913:19;;2875:58;:::i;:::-;2865:68;;1658:1281;;;;;;;;;;:::o;2944:127::-;3005:10;3000:3;2996:20;2993:1;2986:31;3036:4;3033:1;3026:15;3060:4;3057:1;3050:15;3076:148;3164:4;3143:12;;;3157;;;3139:31;;3182:13;;3179:39;;;3198:18;;:::i;:::-;3076:148;;;;:::o;3590:396::-;3739:2;3728:9;3721:21;3702:4;3771:6;3765:13;3814:6;3809:2;3798:9;3794:18;3787:34;3830:79;3902:6;3897:2;3886:9;3882:18;3877:2;3869:6;3865:15;3830:79;:::i;:::-;3970:2;3949:15;-1:-1:-1;;3945:29:7;3930:45;;;;3977:2;3926:54;;3590:396;-1:-1:-1;;3590:396:7:o;3991:127::-;4052:10;4047:3;4043:20;4040:1;4033:31;4083:4;4080:1;4073:15;4107:4;4104:1;4097:15;4123:380;4202:1;4198:12;;;;4245;;;4266:61;;4320:4;4312:6;4308:17;4298:27;;4266:61;4373:2;4365:6;4362:14;4342:18;4339:38;4336:161;;4419:10;4414:3;4410:20;4407:1;4400:31;4454:4;4451:1;4444:15;4482:4;4479:1;4472:15;4336:161;;4123:380;;;:::o;4633:517::-;4734:2;4729:3;4726:11;4723:421;;;4770:5;4767:1;4760:16;4814:4;4811:1;4801:18;4884:2;4872:10;4868:19;4865:1;4861:27;4855:4;4851:38;4920:4;4908:10;4905:20;4902:47;;;-1:-1:-1;4943:4:7;4902:47;4998:2;4993:3;4989:12;4986:1;4982:20;4976:4;4972:31;4962:41;;5053:81;5071:2;5064:5;5061:13;5053:81;;;5130:1;5116:16;;5097:1;5086:13;5053:81;;;5057:3;;4723:421;4633:517;;;:::o;5326:1295::-;5444:10;;-1:-1:-1;;;;;5466:30:7;;5463:56;;;5499:18;;:::i;:::-;5528:96;5617:6;5577:38;5609:4;5603:11;5577:38;:::i;:::-;5571:4;5528:96;:::i;:::-;5673:4;5704:2;5693:14;;5721:1;5716:648;;;;6408:1;6425:6;6422:89;;;-1:-1:-1;6477:19:7;;;6471:26;6422:89;-1:-1:-1;;5283:1:7;5279:11;;;5275:24;5271:29;5261:40;5307:1;5303:11;;;5258:57;6524:81;;5686:929;;5716:648;4580:1;4573:14;;;4617:4;4604:18;;-1:-1:-1;;5752:20:7;;;5869:222;5883:7;5880:1;5877:14;5869:222;;;5965:19;;;5959:26;5944:42;;6072:4;6057:20;;;;6025:1;6013:14;;;;5899:12;5869:222;;;5873:3;6119:6;6110:7;6107:19;6104:201;;;6180:19;;;6174:26;-1:-1:-1;;6263:1:7;6259:14;;;6275:3;6255:24;6251:37;6247:42;6232:58;6217:74;;6104:201;-1:-1:-1;;;;6351:1:7;6335:14;;;6331:22;6318:36;;-1:-1:-1;5326:1295:7:o;6626:175::-;6663:3;6707:4;6700:5;6696:16;6736:4;6727:7;6724:17;6721:43;;6744:18;;:::i;:::-;6793:1;6780:15;;6626:175;-1:-1:-1;;6626:175:7:o;:::-;1105:26127:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ARBITRATOR_707":{"entryPoint":null,"id":707,"parameterSlots":0,"returnSlots":0},"@ARTICLE_WITHDRAWAL_TIMELOCK_313":{"entryPoint":null,"id":313,"parameterSlots":0,"returnSlots":0},"@LOSER_APPEAL_PERIOD_MULTIPLIER_311":{"entryPoint":null,"id":311,"parameterSlots":0,"returnSlots":0},"@LOSER_STAKE_MULTIPLIER_317":{"entryPoint":null,"id":317,"parameterSlots":0,"returnSlots":0},"@MULTIPLIER_DENOMINATOR_308":{"entryPoint":null,"id":308,"parameterSlots":0,"returnSlots":0},"@NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE_710":{"entryPoint":null,"id":710,"parameterSlots":0,"returnSlots":0},"@NUMBER_OF_RULING_OPTIONS_305":{"entryPoint":null,"id":305,"parameterSlots":0,"returnSlots":0},"@TREASURY_300":{"entryPoint":null,"id":300,"parameterSlots":0,"returnSlots":0},"@VERSION_291":{"entryPoint":null,"id":291,"parameterSlots":0,"returnSlots":0},"@WINNER_STAKE_MULTIPLIER_315":{"entryPoint":null,"id":315,"parameterSlots":0,"returnSlots":0},"@admin_720":{"entryPoint":null,"id":720,"parameterSlots":0,"returnSlots":0},"@appealFee_2296":{"entryPoint":5655,"id":2296,"parameterSlots":1,"returnSlots":1},"@articleStorage_788":{"entryPoint":null,"id":788,"parameterSlots":0,"returnSlots":0},"@categoryCounter_713":{"entryPoint":null,"id":713,"parameterSlots":0,"returnSlots":0},"@categoryToArbitratorExtraData_783":{"entryPoint":7578,"id":783,"parameterSlots":0,"returnSlots":0},"@challengeFee_2268":{"entryPoint":6717,"id":2268,"parameterSlots":1,"returnSlots":1},"@challengeTaxRate_320":{"entryPoint":null,"id":320,"parameterSlots":0,"returnSlots":0},"@challenge_1253":{"entryPoint":2632,"id":1253,"parameterSlots":1,"returnSlots":0},"@changeAdmin_2064":{"entryPoint":8654,"id":2064,"parameterSlots":1,"returnSlots":0},"@changeArticleWithdrawalTimelock_2153":{"entryPoint":8856,"id":2153,"parameterSlots":1,"returnSlots":0},"@changeLoserAppealPeriodMultiplier_2135":{"entryPoint":11487,"id":2135,"parameterSlots":1,"returnSlots":0},"@changeLoserStakeMultiplier_2117":{"entryPoint":8777,"id":2117,"parameterSlots":1,"returnSlots":0},"@changeTreasury_2081":{"entryPoint":10625,"id":2081,"parameterSlots":1,"returnSlots":0},"@changeWinnerStakeMultiplier_2099":{"entryPoint":10067,"id":2099,"parameterSlots":1,"returnSlots":0},"@disputes_793":{"entryPoint":null,"id":793,"parameterSlots":0,"returnSlots":0},"@findVacantStorageSlot_2327":{"entryPoint":11922,"id":2327,"parameterSlots":1,"returnSlots":1},"@fundAppeal_1587":{"entryPoint":3611,"id":1587,"parameterSlots":2,"returnSlots":1},"@getAmountRemainsToBeRaised_2849":{"entryPoint":8935,"id":2849,"parameterSlots":2,"returnSlots":1},"@getAppealPeriod_2711":{"entryPoint":7738,"id":2711,"parameterSlots":2,"returnSlots":2},"@getLastRoundWinner_2653":{"entryPoint":8274,"id":2653,"parameterSlots":1,"returnSlots":1},"@getReturnOfInvestmentRatio_2758":{"entryPoint":10746,"id":2758,"parameterSlots":2,"returnSlots":1},"@getRoundInfo_2638":{"entryPoint":8414,"id":2638,"parameterSlots":2,"returnSlots":3},"@getTotalWithdrawableAmount_2461":{"entryPoint":10146,"id":2461,"parameterSlots":2,"returnSlots":2},"@getWithdrawableAmount_2596":{"entryPoint":12922,"id":2596,"parameterSlots":4,"returnSlots":1},"@increaseBounty_987":{"entryPoint":7000,"id":987,"parameterSlots":1,"returnSlots":0},"@initializeArticle_922":{"entryPoint":12299,"id":922,"parameterSlots":4,"returnSlots":0},"@initiateWithdrawal_1035":{"entryPoint":11033,"id":1035,"parameterSlots":1,"returnSlots":0},"@newCategory_2185":{"entryPoint":7326,"id":2185,"parameterSlots":2,"returnSlots":0},"@rule_1745":{"entryPoint":6055,"id":1745,"parameterSlots":2,"returnSlots":0},"@submitEvidence_940":{"entryPoint":9383,"id":940,"parameterSlots":3,"returnSlots":0},"@switchPublishingLock_2047":{"entryPoint":10985,"id":2047,"parameterSlots":0,"returnSlots":0},"@transferBalanceToTreasury_2034":{"entryPoint":10884,"id":2034,"parameterSlots":0,"returnSlots":0},"@transferOwnership_2221":{"entryPoint":12049,"id":2221,"parameterSlots":2,"returnSlots":0},"@treasuryBalance_302":{"entryPoint":null,"id":302,"parameterSlots":0,"returnSlots":0},"@updateChallengeTaxRate_2011":{"entryPoint":5856,"id":2011,"parameterSlots":1,"returnSlots":0},"@withdrawFeesAndRewardsForAllRoundsAndAllRulings_1800":{"entryPoint":11394,"id":1800,"parameterSlots":2,"returnSlots":0},"@withdrawFeesAndRewardsForAllRounds_1845":{"entryPoint":8215,"id":1845,"parameterSlots":3,"returnSlots":0},"@withdrawFeesAndRewardsForGivenPositions_1905":{"entryPoint":8039,"id":1905,"parameterSlots":4,"returnSlots":0},"@withdrawFeesAndRewards_1987":{"entryPoint":11566,"id":1987,"parameterSlots":4,"returnSlots":1},"@withdraw_1111":{"entryPoint":9498,"id":1111,"parameterSlots":1,"returnSlots":0},"abi_decode_address_payable":{"entryPoint":14174,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":13691,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_enum_RulingOptions":{"entryPoint":13551,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":14526,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address_payable":{"entryPoint":14499,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_RulingOptions_$295t_enum$_RulingOptions_$295":{"entryPoint":14853,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_calldata_ptrt_uint8t_uint72":{"entryPoint":15007,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr":{"entryPoint":13813,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":13610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":15465,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address_payable":{"entryPoint":14668,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_address_payablet_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":14197,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_address_payablet_enum$_RulingOptions_$295":{"entryPoint":14338,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_address_payablet_uint256t_enum$_RulingOptions_$295":{"entryPoint":14895,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_enum$_RulingOptions_$295":{"entryPoint":13566,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_calldata_ptr":{"entryPoint":14592,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":13635,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256_fromMemory":{"entryPoint":15490,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint72":{"entryPoint":13524,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint72t_address_payable":{"entryPoint":14965,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint72":{"entryPoint":13494,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes":{"entryPoint":13958,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_storage":{"entryPoint":15301,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_RulingOptions":{"entryPoint":14069,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string_calldata":{"entryPoint":16000,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_enum$_RulingOptions_$295_t_uint8_t_bool_t_uint72__to_t_address_payable_t_uint8_t_uint8_t_bool_t_uint72__fromStack_reversed":{"entryPoint":14103,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint32_t_uint56_t_uint8__to_t_address_payable_t_uint32_t_uint56_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_bool_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr_t_uint256__to_t_array$_t_bool_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":14398,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":14028,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_storage__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":15553,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IArbitrator_$249__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_RulingOptions_$295_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":15526,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16041,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_calldata_ptr_t_uint8_t_uint256__to_t_string_memory_ptr_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":16157,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0345b6b07b3f7ea23ce7c0682ae193a7b3933d232b736d656630025e0007450f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_09736bc764ff8f7b07f5d004c384a229ed4912017c53bd247c8e39209b9ae7f6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0c03e9d393d30f62793e04d553e45144120700c0c39d75130bccb90781d9e9e5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0fb9b5de11a486bb1b8d34864ad6b246b0b983476450ee45857735429bd77eb9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_264afed15e2abe1afd48e9529ae4102fd34dc15becf22ac12086d34e9bca14d5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5943b819c05c7059125985bc4ac5cf738c94c0822c506b598ab2eced554e2f50__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_646d3354d32a4e6f10f97f8e4dafb31e5ad3c387e7ce2b3b8fd9a6cf92aec955__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6a7ac09dd6d1a595ef63e3c006cc799fa0704d926f43c9ba8a2701161a095cea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_735d504b2c5de2f29425b794cdb33103551951bc0508e48cdd57a296c3d28554__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7c0c82b0d480101a30f3ad2e3ccc7970d31d7e8da6ac4e66c07d00ffcf930f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9591a49cf5d9e3ba9b3aea5505a2b8a639d2f239a0cb6a9059466b60c54a080f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a40667c3d5ae3c08746fe24fceae1033d89d0e1de162ecdda7e68141465d7af7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b54a59a715146ed6c99f49691f55e62e941bfed713a75eda7bc62bf50148d555__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c2f2256a77e1cd7cdc564a3b966df4f3e5bfbdc15f00156637ffbff138e529be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_de142eb746bdd0d0ef7f42e32a89b1f8be902652448bd9ef60b61b168c6d9194__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e23f3e71c05305a9182237d48ba9b404f0c1c59aaff27a9576fb3eb02eaabde6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f3418d70ac679d1f67a83336adc36c46a5610f9d2455f76fc28495336bbc06ed__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14703,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bytes_storage__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":15432,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint72__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint72_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"access_calldata_tail_t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":15926,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":15183,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint56":{"entryPoint":15572,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint8":{"entryPoint":15603,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":15149,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":15126,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":15202,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint72":{"entryPoint":16124,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":15628,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":15704,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":15243,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":16061,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint72":{"entryPoint":16086,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint8":{"entryPoint":15895,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":15104,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":14047,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":15221,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13669,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:30003:7","nodeType":"YulBlock","src":"0:30003:7","statements":[{"nativeSrc":"6:3:7","nodeType":"YulBlock","src":"6:3:7","statements":[]},{"body":{"nativeSrc":"111:87:7","nodeType":"YulBlock","src":"111:87:7","statements":[{"nativeSrc":"121:26:7","nodeType":"YulAssignment","src":"121:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"133:9:7","nodeType":"YulIdentifier","src":"133:9:7"},{"kind":"number","nativeSrc":"144:2:7","nodeType":"YulLiteral","src":"144:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"129:3:7","nodeType":"YulIdentifier","src":"129:3:7"},"nativeSrc":"129:18:7","nodeType":"YulFunctionCall","src":"129:18:7"},"variableNames":[{"name":"tail","nativeSrc":"121:4:7","nodeType":"YulIdentifier","src":"121:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"163:9:7","nodeType":"YulIdentifier","src":"163:9:7"},{"arguments":[{"name":"value0","nativeSrc":"178:6:7","nodeType":"YulIdentifier","src":"178:6:7"},{"kind":"number","nativeSrc":"186:4:7","nodeType":"YulLiteral","src":"186:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"174:3:7","nodeType":"YulIdentifier","src":"174:3:7"},"nativeSrc":"174:17:7","nodeType":"YulFunctionCall","src":"174:17:7"}],"functionName":{"name":"mstore","nativeSrc":"156:6:7","nodeType":"YulIdentifier","src":"156:6:7"},"nativeSrc":"156:36:7","nodeType":"YulFunctionCall","src":"156:36:7"},"nativeSrc":"156:36:7","nodeType":"YulExpressionStatement","src":"156:36:7"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"14:184:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"80:9:7","nodeType":"YulTypedName","src":"80:9:7","type":""},{"name":"value0","nativeSrc":"91:6:7","nodeType":"YulTypedName","src":"91:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"102:4:7","nodeType":"YulTypedName","src":"102:4:7","type":""}],"src":"14:184:7"},{"body":{"nativeSrc":"251:125:7","nodeType":"YulBlock","src":"251:125:7","statements":[{"nativeSrc":"261:29:7","nodeType":"YulAssignment","src":"261:29:7","value":{"arguments":[{"name":"offset","nativeSrc":"283:6:7","nodeType":"YulIdentifier","src":"283:6:7"}],"functionName":{"name":"calldataload","nativeSrc":"270:12:7","nodeType":"YulIdentifier","src":"270:12:7"},"nativeSrc":"270:20:7","nodeType":"YulFunctionCall","src":"270:20:7"},"variableNames":[{"name":"value","nativeSrc":"261:5:7","nodeType":"YulIdentifier","src":"261:5:7"}]},{"body":{"nativeSrc":"354:16:7","nodeType":"YulBlock","src":"354:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"363:1:7","nodeType":"YulLiteral","src":"363:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"366:1:7","nodeType":"YulLiteral","src":"366:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"356:6:7","nodeType":"YulIdentifier","src":"356:6:7"},"nativeSrc":"356:12:7","nodeType":"YulFunctionCall","src":"356:12:7"},"nativeSrc":"356:12:7","nodeType":"YulExpressionStatement","src":"356:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"312:5:7","nodeType":"YulIdentifier","src":"312:5:7"},{"arguments":[{"name":"value","nativeSrc":"323:5:7","nodeType":"YulIdentifier","src":"323:5:7"},{"kind":"number","nativeSrc":"330:20:7","nodeType":"YulLiteral","src":"330:20:7","type":"","value":"0xffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"319:3:7","nodeType":"YulIdentifier","src":"319:3:7"},"nativeSrc":"319:32:7","nodeType":"YulFunctionCall","src":"319:32:7"}],"functionName":{"name":"eq","nativeSrc":"309:2:7","nodeType":"YulIdentifier","src":"309:2:7"},"nativeSrc":"309:43:7","nodeType":"YulFunctionCall","src":"309:43:7"}],"functionName":{"name":"iszero","nativeSrc":"302:6:7","nodeType":"YulIdentifier","src":"302:6:7"},"nativeSrc":"302:51:7","nodeType":"YulFunctionCall","src":"302:51:7"},"nativeSrc":"299:71:7","nodeType":"YulIf","src":"299:71:7"}]},"name":"abi_decode_uint72","nativeSrc":"203:173:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"230:6:7","nodeType":"YulTypedName","src":"230:6:7","type":""}],"returnVariables":[{"name":"value","nativeSrc":"241:5:7","nodeType":"YulTypedName","src":"241:5:7","type":""}],"src":"203:173:7"},{"body":{"nativeSrc":"450:115:7","nodeType":"YulBlock","src":"450:115:7","statements":[{"body":{"nativeSrc":"496:16:7","nodeType":"YulBlock","src":"496:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"505:1:7","nodeType":"YulLiteral","src":"505:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"508:1:7","nodeType":"YulLiteral","src":"508:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"498:6:7","nodeType":"YulIdentifier","src":"498:6:7"},"nativeSrc":"498:12:7","nodeType":"YulFunctionCall","src":"498:12:7"},"nativeSrc":"498:12:7","nodeType":"YulExpressionStatement","src":"498:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"471:7:7","nodeType":"YulIdentifier","src":"471:7:7"},{"name":"headStart","nativeSrc":"480:9:7","nodeType":"YulIdentifier","src":"480:9:7"}],"functionName":{"name":"sub","nativeSrc":"467:3:7","nodeType":"YulIdentifier","src":"467:3:7"},"nativeSrc":"467:23:7","nodeType":"YulFunctionCall","src":"467:23:7"},{"kind":"number","nativeSrc":"492:2:7","nodeType":"YulLiteral","src":"492:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"463:3:7","nodeType":"YulIdentifier","src":"463:3:7"},"nativeSrc":"463:32:7","nodeType":"YulFunctionCall","src":"463:32:7"},"nativeSrc":"460:52:7","nodeType":"YulIf","src":"460:52:7"},{"nativeSrc":"521:38:7","nodeType":"YulAssignment","src":"521:38:7","value":{"arguments":[{"name":"headStart","nativeSrc":"549:9:7","nodeType":"YulIdentifier","src":"549:9:7"}],"functionName":{"name":"abi_decode_uint72","nativeSrc":"531:17:7","nodeType":"YulIdentifier","src":"531:17:7"},"nativeSrc":"531:28:7","nodeType":"YulFunctionCall","src":"531:28:7"},"variableNames":[{"name":"value0","nativeSrc":"521:6:7","nodeType":"YulIdentifier","src":"521:6:7"}]}]},"name":"abi_decode_tuple_t_uint72","nativeSrc":"381:184:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"416:9:7","nodeType":"YulTypedName","src":"416:9:7","type":""},{"name":"dataEnd","nativeSrc":"427:7:7","nodeType":"YulTypedName","src":"427:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"439:6:7","nodeType":"YulTypedName","src":"439:6:7","type":""}],"src":"381:184:7"},{"body":{"nativeSrc":"630:94:7","nodeType":"YulBlock","src":"630:94:7","statements":[{"nativeSrc":"640:29:7","nodeType":"YulAssignment","src":"640:29:7","value":{"arguments":[{"name":"offset","nativeSrc":"662:6:7","nodeType":"YulIdentifier","src":"662:6:7"}],"functionName":{"name":"calldataload","nativeSrc":"649:12:7","nodeType":"YulIdentifier","src":"649:12:7"},"nativeSrc":"649:20:7","nodeType":"YulFunctionCall","src":"649:20:7"},"variableNames":[{"name":"value","nativeSrc":"640:5:7","nodeType":"YulIdentifier","src":"640:5:7"}]},{"body":{"nativeSrc":"702:16:7","nodeType":"YulBlock","src":"702:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"711:1:7","nodeType":"YulLiteral","src":"711:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"714:1:7","nodeType":"YulLiteral","src":"714:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"704:6:7","nodeType":"YulIdentifier","src":"704:6:7"},"nativeSrc":"704:12:7","nodeType":"YulFunctionCall","src":"704:12:7"},"nativeSrc":"704:12:7","nodeType":"YulExpressionStatement","src":"704:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"691:5:7","nodeType":"YulIdentifier","src":"691:5:7"},{"kind":"number","nativeSrc":"698:1:7","nodeType":"YulLiteral","src":"698:1:7","type":"","value":"3"}],"functionName":{"name":"lt","nativeSrc":"688:2:7","nodeType":"YulIdentifier","src":"688:2:7"},"nativeSrc":"688:12:7","nodeType":"YulFunctionCall","src":"688:12:7"}],"functionName":{"name":"iszero","nativeSrc":"681:6:7","nodeType":"YulIdentifier","src":"681:6:7"},"nativeSrc":"681:20:7","nodeType":"YulFunctionCall","src":"681:20:7"},"nativeSrc":"678:40:7","nodeType":"YulIf","src":"678:40:7"}]},"name":"abi_decode_enum_RulingOptions","nativeSrc":"570:154:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"609:6:7","nodeType":"YulTypedName","src":"609:6:7","type":""}],"returnVariables":[{"name":"value","nativeSrc":"620:5:7","nodeType":"YulTypedName","src":"620:5:7","type":""}],"src":"570:154:7"},{"body":{"nativeSrc":"833:224:7","nodeType":"YulBlock","src":"833:224:7","statements":[{"body":{"nativeSrc":"879:16:7","nodeType":"YulBlock","src":"879:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"888:1:7","nodeType":"YulLiteral","src":"888:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"891:1:7","nodeType":"YulLiteral","src":"891:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"881:6:7","nodeType":"YulIdentifier","src":"881:6:7"},"nativeSrc":"881:12:7","nodeType":"YulFunctionCall","src":"881:12:7"},"nativeSrc":"881:12:7","nodeType":"YulExpressionStatement","src":"881:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"854:7:7","nodeType":"YulIdentifier","src":"854:7:7"},{"name":"headStart","nativeSrc":"863:9:7","nodeType":"YulIdentifier","src":"863:9:7"}],"functionName":{"name":"sub","nativeSrc":"850:3:7","nodeType":"YulIdentifier","src":"850:3:7"},"nativeSrc":"850:23:7","nodeType":"YulFunctionCall","src":"850:23:7"},{"kind":"number","nativeSrc":"875:2:7","nodeType":"YulLiteral","src":"875:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"846:3:7","nodeType":"YulIdentifier","src":"846:3:7"},"nativeSrc":"846:32:7","nodeType":"YulFunctionCall","src":"846:32:7"},"nativeSrc":"843:52:7","nodeType":"YulIf","src":"843:52:7"},{"nativeSrc":"904:14:7","nodeType":"YulVariableDeclaration","src":"904:14:7","value":{"kind":"number","nativeSrc":"917:1:7","nodeType":"YulLiteral","src":"917:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"908:5:7","nodeType":"YulTypedName","src":"908:5:7","type":""}]},{"nativeSrc":"927:32:7","nodeType":"YulAssignment","src":"927:32:7","value":{"arguments":[{"name":"headStart","nativeSrc":"949:9:7","nodeType":"YulIdentifier","src":"949:9:7"}],"functionName":{"name":"calldataload","nativeSrc":"936:12:7","nodeType":"YulIdentifier","src":"936:12:7"},"nativeSrc":"936:23:7","nodeType":"YulFunctionCall","src":"936:23:7"},"variableNames":[{"name":"value","nativeSrc":"927:5:7","nodeType":"YulIdentifier","src":"927:5:7"}]},{"nativeSrc":"968:15:7","nodeType":"YulAssignment","src":"968:15:7","value":{"name":"value","nativeSrc":"978:5:7","nodeType":"YulIdentifier","src":"978:5:7"},"variableNames":[{"name":"value0","nativeSrc":"968:6:7","nodeType":"YulIdentifier","src":"968:6:7"}]},{"nativeSrc":"992:59:7","nodeType":"YulAssignment","src":"992:59:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1036:9:7","nodeType":"YulIdentifier","src":"1036:9:7"},{"kind":"number","nativeSrc":"1047:2:7","nodeType":"YulLiteral","src":"1047:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1032:3:7","nodeType":"YulIdentifier","src":"1032:3:7"},"nativeSrc":"1032:18:7","nodeType":"YulFunctionCall","src":"1032:18:7"}],"functionName":{"name":"abi_decode_enum_RulingOptions","nativeSrc":"1002:29:7","nodeType":"YulIdentifier","src":"1002:29:7"},"nativeSrc":"1002:49:7","nodeType":"YulFunctionCall","src":"1002:49:7"},"variableNames":[{"name":"value1","nativeSrc":"992:6:7","nodeType":"YulIdentifier","src":"992:6:7"}]}]},"name":"abi_decode_tuple_t_uint256t_enum$_RulingOptions_$295","nativeSrc":"729:328:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"791:9:7","nodeType":"YulTypedName","src":"791:9:7","type":""},{"name":"dataEnd","nativeSrc":"802:7:7","nodeType":"YulTypedName","src":"802:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"814:6:7","nodeType":"YulTypedName","src":"814:6:7","type":""},{"name":"value1","nativeSrc":"822:6:7","nodeType":"YulTypedName","src":"822:6:7","type":""}],"src":"729:328:7"},{"body":{"nativeSrc":"1157:92:7","nodeType":"YulBlock","src":"1157:92:7","statements":[{"nativeSrc":"1167:26:7","nodeType":"YulAssignment","src":"1167:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"1179:9:7","nodeType":"YulIdentifier","src":"1179:9:7"},{"kind":"number","nativeSrc":"1190:2:7","nodeType":"YulLiteral","src":"1190:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1175:3:7","nodeType":"YulIdentifier","src":"1175:3:7"},"nativeSrc":"1175:18:7","nodeType":"YulFunctionCall","src":"1175:18:7"},"variableNames":[{"name":"tail","nativeSrc":"1167:4:7","nodeType":"YulIdentifier","src":"1167:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1209:9:7","nodeType":"YulIdentifier","src":"1209:9:7"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1234:6:7","nodeType":"YulIdentifier","src":"1234:6:7"}],"functionName":{"name":"iszero","nativeSrc":"1227:6:7","nodeType":"YulIdentifier","src":"1227:6:7"},"nativeSrc":"1227:14:7","nodeType":"YulFunctionCall","src":"1227:14:7"}],"functionName":{"name":"iszero","nativeSrc":"1220:6:7","nodeType":"YulIdentifier","src":"1220:6:7"},"nativeSrc":"1220:22:7","nodeType":"YulFunctionCall","src":"1220:22:7"}],"functionName":{"name":"mstore","nativeSrc":"1202:6:7","nodeType":"YulIdentifier","src":"1202:6:7"},"nativeSrc":"1202:41:7","nodeType":"YulFunctionCall","src":"1202:41:7"},"nativeSrc":"1202:41:7","nodeType":"YulExpressionStatement","src":"1202:41:7"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1062:187:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1126:9:7","nodeType":"YulTypedName","src":"1126:9:7","type":""},{"name":"value0","nativeSrc":"1137:6:7","nodeType":"YulTypedName","src":"1137:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1148:4:7","nodeType":"YulTypedName","src":"1148:4:7","type":""}],"src":"1062:187:7"},{"body":{"nativeSrc":"1324:156:7","nodeType":"YulBlock","src":"1324:156:7","statements":[{"body":{"nativeSrc":"1370:16:7","nodeType":"YulBlock","src":"1370:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1379:1:7","nodeType":"YulLiteral","src":"1379:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1382:1:7","nodeType":"YulLiteral","src":"1382:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1372:6:7","nodeType":"YulIdentifier","src":"1372:6:7"},"nativeSrc":"1372:12:7","nodeType":"YulFunctionCall","src":"1372:12:7"},"nativeSrc":"1372:12:7","nodeType":"YulExpressionStatement","src":"1372:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1345:7:7","nodeType":"YulIdentifier","src":"1345:7:7"},{"name":"headStart","nativeSrc":"1354:9:7","nodeType":"YulIdentifier","src":"1354:9:7"}],"functionName":{"name":"sub","nativeSrc":"1341:3:7","nodeType":"YulIdentifier","src":"1341:3:7"},"nativeSrc":"1341:23:7","nodeType":"YulFunctionCall","src":"1341:23:7"},{"kind":"number","nativeSrc":"1366:2:7","nodeType":"YulLiteral","src":"1366:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1337:3:7","nodeType":"YulIdentifier","src":"1337:3:7"},"nativeSrc":"1337:32:7","nodeType":"YulFunctionCall","src":"1337:32:7"},"nativeSrc":"1334:52:7","nodeType":"YulIf","src":"1334:52:7"},{"nativeSrc":"1395:14:7","nodeType":"YulVariableDeclaration","src":"1395:14:7","value":{"kind":"number","nativeSrc":"1408:1:7","nodeType":"YulLiteral","src":"1408:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1399:5:7","nodeType":"YulTypedName","src":"1399:5:7","type":""}]},{"nativeSrc":"1418:32:7","nodeType":"YulAssignment","src":"1418:32:7","value":{"arguments":[{"name":"headStart","nativeSrc":"1440:9:7","nodeType":"YulIdentifier","src":"1440:9:7"}],"functionName":{"name":"calldataload","nativeSrc":"1427:12:7","nodeType":"YulIdentifier","src":"1427:12:7"},"nativeSrc":"1427:23:7","nodeType":"YulFunctionCall","src":"1427:23:7"},"variableNames":[{"name":"value","nativeSrc":"1418:5:7","nodeType":"YulIdentifier","src":"1418:5:7"}]},{"nativeSrc":"1459:15:7","nodeType":"YulAssignment","src":"1459:15:7","value":{"name":"value","nativeSrc":"1469:5:7","nodeType":"YulIdentifier","src":"1469:5:7"},"variableNames":[{"name":"value0","nativeSrc":"1459:6:7","nodeType":"YulIdentifier","src":"1459:6:7"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1254:226:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1290:9:7","nodeType":"YulTypedName","src":"1290:9:7","type":""},{"name":"dataEnd","nativeSrc":"1301:7:7","nodeType":"YulTypedName","src":"1301:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1313:6:7","nodeType":"YulTypedName","src":"1313:6:7","type":""}],"src":"1254:226:7"},{"body":{"nativeSrc":"1586:76:7","nodeType":"YulBlock","src":"1586:76:7","statements":[{"nativeSrc":"1596:26:7","nodeType":"YulAssignment","src":"1596:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"1608:9:7","nodeType":"YulIdentifier","src":"1608:9:7"},{"kind":"number","nativeSrc":"1619:2:7","nodeType":"YulLiteral","src":"1619:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1604:3:7","nodeType":"YulIdentifier","src":"1604:3:7"},"nativeSrc":"1604:18:7","nodeType":"YulFunctionCall","src":"1604:18:7"},"variableNames":[{"name":"tail","nativeSrc":"1596:4:7","nodeType":"YulIdentifier","src":"1596:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1638:9:7","nodeType":"YulIdentifier","src":"1638:9:7"},{"name":"value0","nativeSrc":"1649:6:7","nodeType":"YulIdentifier","src":"1649:6:7"}],"functionName":{"name":"mstore","nativeSrc":"1631:6:7","nodeType":"YulIdentifier","src":"1631:6:7"},"nativeSrc":"1631:25:7","nodeType":"YulFunctionCall","src":"1631:25:7"},"nativeSrc":"1631:25:7","nodeType":"YulExpressionStatement","src":"1631:25:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1485:177:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1555:9:7","nodeType":"YulTypedName","src":"1555:9:7","type":""},{"name":"value0","nativeSrc":"1566:6:7","nodeType":"YulTypedName","src":"1566:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1577:4:7","nodeType":"YulTypedName","src":"1577:4:7","type":""}],"src":"1485:177:7"},{"body":{"nativeSrc":"1784:125:7","nodeType":"YulBlock","src":"1784:125:7","statements":[{"nativeSrc":"1794:26:7","nodeType":"YulAssignment","src":"1794:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"1806:9:7","nodeType":"YulIdentifier","src":"1806:9:7"},{"kind":"number","nativeSrc":"1817:2:7","nodeType":"YulLiteral","src":"1817:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1802:3:7","nodeType":"YulIdentifier","src":"1802:3:7"},"nativeSrc":"1802:18:7","nodeType":"YulFunctionCall","src":"1802:18:7"},"variableNames":[{"name":"tail","nativeSrc":"1794:4:7","nodeType":"YulIdentifier","src":"1794:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1836:9:7","nodeType":"YulIdentifier","src":"1836:9:7"},{"arguments":[{"name":"value0","nativeSrc":"1851:6:7","nodeType":"YulIdentifier","src":"1851:6:7"},{"kind":"number","nativeSrc":"1859:42:7","nodeType":"YulLiteral","src":"1859:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1847:3:7","nodeType":"YulIdentifier","src":"1847:3:7"},"nativeSrc":"1847:55:7","nodeType":"YulFunctionCall","src":"1847:55:7"}],"functionName":{"name":"mstore","nativeSrc":"1829:6:7","nodeType":"YulIdentifier","src":"1829:6:7"},"nativeSrc":"1829:74:7","nodeType":"YulFunctionCall","src":"1829:74:7"},"nativeSrc":"1829:74:7","nodeType":"YulExpressionStatement","src":"1829:74:7"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nativeSrc":"1667:242:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1753:9:7","nodeType":"YulTypedName","src":"1753:9:7","type":""},{"name":"value0","nativeSrc":"1764:6:7","nodeType":"YulTypedName","src":"1764:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1775:4:7","nodeType":"YulTypedName","src":"1775:4:7","type":""}],"src":"1667:242:7"},{"body":{"nativeSrc":"2001:259:7","nodeType":"YulBlock","src":"2001:259:7","statements":[{"body":{"nativeSrc":"2047:16:7","nodeType":"YulBlock","src":"2047:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2056:1:7","nodeType":"YulLiteral","src":"2056:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2059:1:7","nodeType":"YulLiteral","src":"2059:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2049:6:7","nodeType":"YulIdentifier","src":"2049:6:7"},"nativeSrc":"2049:12:7","nodeType":"YulFunctionCall","src":"2049:12:7"},"nativeSrc":"2049:12:7","nodeType":"YulExpressionStatement","src":"2049:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2022:7:7","nodeType":"YulIdentifier","src":"2022:7:7"},{"name":"headStart","nativeSrc":"2031:9:7","nodeType":"YulIdentifier","src":"2031:9:7"}],"functionName":{"name":"sub","nativeSrc":"2018:3:7","nodeType":"YulIdentifier","src":"2018:3:7"},"nativeSrc":"2018:23:7","nodeType":"YulFunctionCall","src":"2018:23:7"},{"kind":"number","nativeSrc":"2043:2:7","nodeType":"YulLiteral","src":"2043:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2014:3:7","nodeType":"YulIdentifier","src":"2014:3:7"},"nativeSrc":"2014:32:7","nodeType":"YulFunctionCall","src":"2014:32:7"},"nativeSrc":"2011:52:7","nodeType":"YulIf","src":"2011:52:7"},{"nativeSrc":"2072:14:7","nodeType":"YulVariableDeclaration","src":"2072:14:7","value":{"kind":"number","nativeSrc":"2085:1:7","nodeType":"YulLiteral","src":"2085:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2076:5:7","nodeType":"YulTypedName","src":"2076:5:7","type":""}]},{"nativeSrc":"2095:32:7","nodeType":"YulAssignment","src":"2095:32:7","value":{"arguments":[{"name":"headStart","nativeSrc":"2117:9:7","nodeType":"YulIdentifier","src":"2117:9:7"}],"functionName":{"name":"calldataload","nativeSrc":"2104:12:7","nodeType":"YulIdentifier","src":"2104:12:7"},"nativeSrc":"2104:23:7","nodeType":"YulFunctionCall","src":"2104:23:7"},"variableNames":[{"name":"value","nativeSrc":"2095:5:7","nodeType":"YulIdentifier","src":"2095:5:7"}]},{"nativeSrc":"2136:15:7","nodeType":"YulAssignment","src":"2136:15:7","value":{"name":"value","nativeSrc":"2146:5:7","nodeType":"YulIdentifier","src":"2146:5:7"},"variableNames":[{"name":"value0","nativeSrc":"2136:6:7","nodeType":"YulIdentifier","src":"2136:6:7"}]},{"nativeSrc":"2160:16:7","nodeType":"YulVariableDeclaration","src":"2160:16:7","value":{"kind":"number","nativeSrc":"2175:1:7","nodeType":"YulLiteral","src":"2175:1:7","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"2164:7:7","nodeType":"YulTypedName","src":"2164:7:7","type":""}]},{"nativeSrc":"2185:43:7","nodeType":"YulAssignment","src":"2185:43:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2213:9:7","nodeType":"YulIdentifier","src":"2213:9:7"},{"kind":"number","nativeSrc":"2224:2:7","nodeType":"YulLiteral","src":"2224:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2209:3:7","nodeType":"YulIdentifier","src":"2209:3:7"},"nativeSrc":"2209:18:7","nodeType":"YulFunctionCall","src":"2209:18:7"}],"functionName":{"name":"calldataload","nativeSrc":"2196:12:7","nodeType":"YulIdentifier","src":"2196:12:7"},"nativeSrc":"2196:32:7","nodeType":"YulFunctionCall","src":"2196:32:7"},"variableNames":[{"name":"value_1","nativeSrc":"2185:7:7","nodeType":"YulIdentifier","src":"2185:7:7"}]},{"nativeSrc":"2237:17:7","nodeType":"YulAssignment","src":"2237:17:7","value":{"name":"value_1","nativeSrc":"2247:7:7","nodeType":"YulIdentifier","src":"2247:7:7"},"variableNames":[{"name":"value1","nativeSrc":"2237:6:7","nodeType":"YulIdentifier","src":"2237:6:7"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nativeSrc":"1914:346:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1959:9:7","nodeType":"YulTypedName","src":"1959:9:7","type":""},{"name":"dataEnd","nativeSrc":"1970:7:7","nodeType":"YulTypedName","src":"1970:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1982:6:7","nodeType":"YulTypedName","src":"1982:6:7","type":""},{"name":"value1","nativeSrc":"1990:6:7","nodeType":"YulTypedName","src":"1990:6:7","type":""}],"src":"1914:346:7"},{"body":{"nativeSrc":"2458:306:7","nodeType":"YulBlock","src":"2458:306:7","statements":[{"nativeSrc":"2468:27:7","nodeType":"YulAssignment","src":"2468:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"2480:9:7","nodeType":"YulIdentifier","src":"2480:9:7"},{"kind":"number","nativeSrc":"2491:3:7","nodeType":"YulLiteral","src":"2491:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2476:3:7","nodeType":"YulIdentifier","src":"2476:3:7"},"nativeSrc":"2476:19:7","nodeType":"YulFunctionCall","src":"2476:19:7"},"variableNames":[{"name":"tail","nativeSrc":"2468:4:7","nodeType":"YulIdentifier","src":"2468:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2511:9:7","nodeType":"YulIdentifier","src":"2511:9:7"},{"arguments":[{"name":"value0","nativeSrc":"2526:6:7","nodeType":"YulIdentifier","src":"2526:6:7"},{"kind":"number","nativeSrc":"2534:42:7","nodeType":"YulLiteral","src":"2534:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2522:3:7","nodeType":"YulIdentifier","src":"2522:3:7"},"nativeSrc":"2522:55:7","nodeType":"YulFunctionCall","src":"2522:55:7"}],"functionName":{"name":"mstore","nativeSrc":"2504:6:7","nodeType":"YulIdentifier","src":"2504:6:7"},"nativeSrc":"2504:74:7","nodeType":"YulFunctionCall","src":"2504:74:7"},"nativeSrc":"2504:74:7","nodeType":"YulExpressionStatement","src":"2504:74:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2598:9:7","nodeType":"YulIdentifier","src":"2598:9:7"},{"kind":"number","nativeSrc":"2609:2:7","nodeType":"YulLiteral","src":"2609:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2594:3:7","nodeType":"YulIdentifier","src":"2594:3:7"},"nativeSrc":"2594:18:7","nodeType":"YulFunctionCall","src":"2594:18:7"},{"arguments":[{"name":"value1","nativeSrc":"2618:6:7","nodeType":"YulIdentifier","src":"2618:6:7"},{"kind":"number","nativeSrc":"2626:10:7","nodeType":"YulLiteral","src":"2626:10:7","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"2614:3:7","nodeType":"YulIdentifier","src":"2614:3:7"},"nativeSrc":"2614:23:7","nodeType":"YulFunctionCall","src":"2614:23:7"}],"functionName":{"name":"mstore","nativeSrc":"2587:6:7","nodeType":"YulIdentifier","src":"2587:6:7"},"nativeSrc":"2587:51:7","nodeType":"YulFunctionCall","src":"2587:51:7"},"nativeSrc":"2587:51:7","nodeType":"YulExpressionStatement","src":"2587:51:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2658:9:7","nodeType":"YulIdentifier","src":"2658:9:7"},{"kind":"number","nativeSrc":"2669:2:7","nodeType":"YulLiteral","src":"2669:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2654:3:7","nodeType":"YulIdentifier","src":"2654:3:7"},"nativeSrc":"2654:18:7","nodeType":"YulFunctionCall","src":"2654:18:7"},{"arguments":[{"name":"value2","nativeSrc":"2678:6:7","nodeType":"YulIdentifier","src":"2678:6:7"},{"kind":"number","nativeSrc":"2686:16:7","nodeType":"YulLiteral","src":"2686:16:7","type":"","value":"0xffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2674:3:7","nodeType":"YulIdentifier","src":"2674:3:7"},"nativeSrc":"2674:29:7","nodeType":"YulFunctionCall","src":"2674:29:7"}],"functionName":{"name":"mstore","nativeSrc":"2647:6:7","nodeType":"YulIdentifier","src":"2647:6:7"},"nativeSrc":"2647:57:7","nodeType":"YulFunctionCall","src":"2647:57:7"},"nativeSrc":"2647:57:7","nodeType":"YulExpressionStatement","src":"2647:57:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2724:9:7","nodeType":"YulIdentifier","src":"2724:9:7"},{"kind":"number","nativeSrc":"2735:2:7","nodeType":"YulLiteral","src":"2735:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2720:3:7","nodeType":"YulIdentifier","src":"2720:3:7"},"nativeSrc":"2720:18:7","nodeType":"YulFunctionCall","src":"2720:18:7"},{"arguments":[{"name":"value3","nativeSrc":"2744:6:7","nodeType":"YulIdentifier","src":"2744:6:7"},{"kind":"number","nativeSrc":"2752:4:7","nodeType":"YulLiteral","src":"2752:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"2740:3:7","nodeType":"YulIdentifier","src":"2740:3:7"},"nativeSrc":"2740:17:7","nodeType":"YulFunctionCall","src":"2740:17:7"}],"functionName":{"name":"mstore","nativeSrc":"2713:6:7","nodeType":"YulIdentifier","src":"2713:6:7"},"nativeSrc":"2713:45:7","nodeType":"YulFunctionCall","src":"2713:45:7"},"nativeSrc":"2713:45:7","nodeType":"YulExpressionStatement","src":"2713:45:7"}]},"name":"abi_encode_tuple_t_address_payable_t_uint32_t_uint56_t_uint8__to_t_address_payable_t_uint32_t_uint56_t_uint8__fromStack_reversed","nativeSrc":"2265:499:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2403:9:7","nodeType":"YulTypedName","src":"2403:9:7","type":""},{"name":"value3","nativeSrc":"2414:6:7","nodeType":"YulTypedName","src":"2414:6:7","type":""},{"name":"value2","nativeSrc":"2422:6:7","nodeType":"YulTypedName","src":"2422:6:7","type":""},{"name":"value1","nativeSrc":"2430:6:7","nodeType":"YulTypedName","src":"2430:6:7","type":""},{"name":"value0","nativeSrc":"2438:6:7","nodeType":"YulTypedName","src":"2438:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2449:4:7","nodeType":"YulTypedName","src":"2449:4:7","type":""}],"src":"2265:499:7"},{"body":{"nativeSrc":"2801:152:7","nodeType":"YulBlock","src":"2801:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2818:1:7","nodeType":"YulLiteral","src":"2818:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2821:77:7","nodeType":"YulLiteral","src":"2821:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"2811:6:7","nodeType":"YulIdentifier","src":"2811:6:7"},"nativeSrc":"2811:88:7","nodeType":"YulFunctionCall","src":"2811:88:7"},"nativeSrc":"2811:88:7","nodeType":"YulExpressionStatement","src":"2811:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2915:1:7","nodeType":"YulLiteral","src":"2915:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"2918:4:7","nodeType":"YulLiteral","src":"2918:4:7","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2908:6:7","nodeType":"YulIdentifier","src":"2908:6:7"},"nativeSrc":"2908:15:7","nodeType":"YulFunctionCall","src":"2908:15:7"},"nativeSrc":"2908:15:7","nodeType":"YulExpressionStatement","src":"2908:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2939:1:7","nodeType":"YulLiteral","src":"2939:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2942:4:7","nodeType":"YulLiteral","src":"2942:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2932:6:7","nodeType":"YulIdentifier","src":"2932:6:7"},"nativeSrc":"2932:15:7","nodeType":"YulFunctionCall","src":"2932:15:7"},"nativeSrc":"2932:15:7","nodeType":"YulExpressionStatement","src":"2932:15:7"}]},"name":"panic_error_0x41","nativeSrc":"2769:184:7","nodeType":"YulFunctionDefinition","src":"2769:184:7"},{"body":{"nativeSrc":"3033:641:7","nodeType":"YulBlock","src":"3033:641:7","statements":[{"nativeSrc":"3043:13:7","nodeType":"YulVariableDeclaration","src":"3043:13:7","value":{"kind":"number","nativeSrc":"3055:1:7","nodeType":"YulLiteral","src":"3055:1:7","type":"","value":"0"},"variables":[{"name":"size","nativeSrc":"3047:4:7","nodeType":"YulTypedName","src":"3047:4:7","type":""}]},{"body":{"nativeSrc":"3099:22:7","nodeType":"YulBlock","src":"3099:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3101:16:7","nodeType":"YulIdentifier","src":"3101:16:7"},"nativeSrc":"3101:18:7","nodeType":"YulFunctionCall","src":"3101:18:7"},"nativeSrc":"3101:18:7","nodeType":"YulExpressionStatement","src":"3101:18:7"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3071:6:7","nodeType":"YulIdentifier","src":"3071:6:7"},{"kind":"number","nativeSrc":"3079:18:7","nodeType":"YulLiteral","src":"3079:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3068:2:7","nodeType":"YulIdentifier","src":"3068:2:7"},"nativeSrc":"3068:30:7","nodeType":"YulFunctionCall","src":"3068:30:7"},"nativeSrc":"3065:56:7","nodeType":"YulIf","src":"3065:56:7"},{"nativeSrc":"3130:43:7","nodeType":"YulVariableDeclaration","src":"3130:43:7","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3152:6:7","nodeType":"YulIdentifier","src":"3152:6:7"},{"kind":"number","nativeSrc":"3160:2:7","nodeType":"YulLiteral","src":"3160:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3148:3:7","nodeType":"YulIdentifier","src":"3148:3:7"},"nativeSrc":"3148:15:7","nodeType":"YulFunctionCall","src":"3148:15:7"},{"arguments":[{"kind":"number","nativeSrc":"3169:2:7","nodeType":"YulLiteral","src":"3169:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3165:3:7","nodeType":"YulIdentifier","src":"3165:3:7"},"nativeSrc":"3165:7:7","nodeType":"YulFunctionCall","src":"3165:7:7"}],"functionName":{"name":"and","nativeSrc":"3144:3:7","nodeType":"YulIdentifier","src":"3144:3:7"},"nativeSrc":"3144:29:7","nodeType":"YulFunctionCall","src":"3144:29:7"},"variables":[{"name":"result","nativeSrc":"3134:6:7","nodeType":"YulTypedName","src":"3134:6:7","type":""}]},{"nativeSrc":"3182:25:7","nodeType":"YulAssignment","src":"3182:25:7","value":{"arguments":[{"name":"result","nativeSrc":"3194:6:7","nodeType":"YulIdentifier","src":"3194:6:7"},{"kind":"number","nativeSrc":"3202:4:7","nodeType":"YulLiteral","src":"3202:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3190:3:7","nodeType":"YulIdentifier","src":"3190:3:7"},"nativeSrc":"3190:17:7","nodeType":"YulFunctionCall","src":"3190:17:7"},"variableNames":[{"name":"size","nativeSrc":"3182:4:7","nodeType":"YulIdentifier","src":"3182:4:7"}]},{"nativeSrc":"3216:15:7","nodeType":"YulVariableDeclaration","src":"3216:15:7","value":{"kind":"number","nativeSrc":"3230:1:7","nodeType":"YulLiteral","src":"3230:1:7","type":"","value":"0"},"variables":[{"name":"memPtr","nativeSrc":"3220:6:7","nodeType":"YulTypedName","src":"3220:6:7","type":""}]},{"nativeSrc":"3240:19:7","nodeType":"YulAssignment","src":"3240:19:7","value":{"arguments":[{"kind":"number","nativeSrc":"3256:2:7","nodeType":"YulLiteral","src":"3256:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"3250:5:7","nodeType":"YulIdentifier","src":"3250:5:7"},"nativeSrc":"3250:9:7","nodeType":"YulFunctionCall","src":"3250:9:7"},"variableNames":[{"name":"memPtr","nativeSrc":"3240:6:7","nodeType":"YulIdentifier","src":"3240:6:7"}]},{"nativeSrc":"3268:60:7","nodeType":"YulVariableDeclaration","src":"3268:60:7","value":{"arguments":[{"name":"memPtr","nativeSrc":"3290:6:7","nodeType":"YulIdentifier","src":"3290:6:7"},{"arguments":[{"arguments":[{"name":"result","nativeSrc":"3306:6:7","nodeType":"YulIdentifier","src":"3306:6:7"},{"kind":"number","nativeSrc":"3314:2:7","nodeType":"YulLiteral","src":"3314:2:7","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"3302:3:7","nodeType":"YulIdentifier","src":"3302:3:7"},"nativeSrc":"3302:15:7","nodeType":"YulFunctionCall","src":"3302:15:7"},{"arguments":[{"kind":"number","nativeSrc":"3323:2:7","nodeType":"YulLiteral","src":"3323:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3319:3:7","nodeType":"YulIdentifier","src":"3319:3:7"},"nativeSrc":"3319:7:7","nodeType":"YulFunctionCall","src":"3319:7:7"}],"functionName":{"name":"and","nativeSrc":"3298:3:7","nodeType":"YulIdentifier","src":"3298:3:7"},"nativeSrc":"3298:29:7","nodeType":"YulFunctionCall","src":"3298:29:7"}],"functionName":{"name":"add","nativeSrc":"3286:3:7","nodeType":"YulIdentifier","src":"3286:3:7"},"nativeSrc":"3286:42:7","nodeType":"YulFunctionCall","src":"3286:42:7"},"variables":[{"name":"newFreePtr","nativeSrc":"3272:10:7","nodeType":"YulTypedName","src":"3272:10:7","type":""}]},{"body":{"nativeSrc":"3403:22:7","nodeType":"YulBlock","src":"3403:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3405:16:7","nodeType":"YulIdentifier","src":"3405:16:7"},"nativeSrc":"3405:18:7","nodeType":"YulFunctionCall","src":"3405:18:7"},"nativeSrc":"3405:18:7","nodeType":"YulExpressionStatement","src":"3405:18:7"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"3346:10:7","nodeType":"YulIdentifier","src":"3346:10:7"},{"kind":"number","nativeSrc":"3358:18:7","nodeType":"YulLiteral","src":"3358:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3343:2:7","nodeType":"YulIdentifier","src":"3343:2:7"},"nativeSrc":"3343:34:7","nodeType":"YulFunctionCall","src":"3343:34:7"},{"arguments":[{"name":"newFreePtr","nativeSrc":"3382:10:7","nodeType":"YulIdentifier","src":"3382:10:7"},{"name":"memPtr","nativeSrc":"3394:6:7","nodeType":"YulIdentifier","src":"3394:6:7"}],"functionName":{"name":"lt","nativeSrc":"3379:2:7","nodeType":"YulIdentifier","src":"3379:2:7"},"nativeSrc":"3379:22:7","nodeType":"YulFunctionCall","src":"3379:22:7"}],"functionName":{"name":"or","nativeSrc":"3340:2:7","nodeType":"YulIdentifier","src":"3340:2:7"},"nativeSrc":"3340:62:7","nodeType":"YulFunctionCall","src":"3340:62:7"},"nativeSrc":"3337:88:7","nodeType":"YulIf","src":"3337:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3441:2:7","nodeType":"YulLiteral","src":"3441:2:7","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"3445:10:7","nodeType":"YulIdentifier","src":"3445:10:7"}],"functionName":{"name":"mstore","nativeSrc":"3434:6:7","nodeType":"YulIdentifier","src":"3434:6:7"},"nativeSrc":"3434:22:7","nodeType":"YulFunctionCall","src":"3434:22:7"},"nativeSrc":"3434:22:7","nodeType":"YulExpressionStatement","src":"3434:22:7"},{"nativeSrc":"3465:15:7","nodeType":"YulAssignment","src":"3465:15:7","value":{"name":"memPtr","nativeSrc":"3474:6:7","nodeType":"YulIdentifier","src":"3474:6:7"},"variableNames":[{"name":"array","nativeSrc":"3465:5:7","nodeType":"YulIdentifier","src":"3465:5:7"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"3496:6:7","nodeType":"YulIdentifier","src":"3496:6:7"},{"name":"length","nativeSrc":"3504:6:7","nodeType":"YulIdentifier","src":"3504:6:7"}],"functionName":{"name":"mstore","nativeSrc":"3489:6:7","nodeType":"YulIdentifier","src":"3489:6:7"},"nativeSrc":"3489:22:7","nodeType":"YulFunctionCall","src":"3489:22:7"},"nativeSrc":"3489:22:7","nodeType":"YulExpressionStatement","src":"3489:22:7"},{"body":{"nativeSrc":"3549:16:7","nodeType":"YulBlock","src":"3549:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3558:1:7","nodeType":"YulLiteral","src":"3558:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"3561:1:7","nodeType":"YulLiteral","src":"3561:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3551:6:7","nodeType":"YulIdentifier","src":"3551:6:7"},"nativeSrc":"3551:12:7","nodeType":"YulFunctionCall","src":"3551:12:7"},"nativeSrc":"3551:12:7","nodeType":"YulExpressionStatement","src":"3551:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3530:3:7","nodeType":"YulIdentifier","src":"3530:3:7"},{"name":"length","nativeSrc":"3535:6:7","nodeType":"YulIdentifier","src":"3535:6:7"}],"functionName":{"name":"add","nativeSrc":"3526:3:7","nodeType":"YulIdentifier","src":"3526:3:7"},"nativeSrc":"3526:16:7","nodeType":"YulFunctionCall","src":"3526:16:7"},{"name":"end","nativeSrc":"3544:3:7","nodeType":"YulIdentifier","src":"3544:3:7"}],"functionName":{"name":"gt","nativeSrc":"3523:2:7","nodeType":"YulIdentifier","src":"3523:2:7"},"nativeSrc":"3523:25:7","nodeType":"YulFunctionCall","src":"3523:25:7"},"nativeSrc":"3520:45:7","nodeType":"YulIf","src":"3520:45:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3591:6:7","nodeType":"YulIdentifier","src":"3591:6:7"},{"kind":"number","nativeSrc":"3599:4:7","nodeType":"YulLiteral","src":"3599:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3587:3:7","nodeType":"YulIdentifier","src":"3587:3:7"},"nativeSrc":"3587:17:7","nodeType":"YulFunctionCall","src":"3587:17:7"},{"name":"src","nativeSrc":"3606:3:7","nodeType":"YulIdentifier","src":"3606:3:7"},{"name":"length","nativeSrc":"3611:6:7","nodeType":"YulIdentifier","src":"3611:6:7"}],"functionName":{"name":"calldatacopy","nativeSrc":"3574:12:7","nodeType":"YulIdentifier","src":"3574:12:7"},"nativeSrc":"3574:44:7","nodeType":"YulFunctionCall","src":"3574:44:7"},"nativeSrc":"3574:44:7","nodeType":"YulExpressionStatement","src":"3574:44:7"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3642:6:7","nodeType":"YulIdentifier","src":"3642:6:7"},{"name":"length","nativeSrc":"3650:6:7","nodeType":"YulIdentifier","src":"3650:6:7"}],"functionName":{"name":"add","nativeSrc":"3638:3:7","nodeType":"YulIdentifier","src":"3638:3:7"},"nativeSrc":"3638:19:7","nodeType":"YulFunctionCall","src":"3638:19:7"},{"kind":"number","nativeSrc":"3659:4:7","nodeType":"YulLiteral","src":"3659:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3634:3:7","nodeType":"YulIdentifier","src":"3634:3:7"},"nativeSrc":"3634:30:7","nodeType":"YulFunctionCall","src":"3634:30:7"},{"kind":"number","nativeSrc":"3666:1:7","nodeType":"YulLiteral","src":"3666:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3627:6:7","nodeType":"YulIdentifier","src":"3627:6:7"},"nativeSrc":"3627:41:7","nodeType":"YulFunctionCall","src":"3627:41:7"},"nativeSrc":"3627:41:7","nodeType":"YulExpressionStatement","src":"3627:41:7"}]},"name":"abi_decode_available_length_string","nativeSrc":"2958:716:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3002:3:7","nodeType":"YulTypedName","src":"3002:3:7","type":""},{"name":"length","nativeSrc":"3007:6:7","nodeType":"YulTypedName","src":"3007:6:7","type":""},{"name":"end","nativeSrc":"3015:3:7","nodeType":"YulTypedName","src":"3015:3:7","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3023:5:7","nodeType":"YulTypedName","src":"3023:5:7","type":""}],"src":"2958:716:7"},{"body":{"nativeSrc":"3785:695:7","nodeType":"YulBlock","src":"3785:695:7","statements":[{"body":{"nativeSrc":"3831:16:7","nodeType":"YulBlock","src":"3831:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3840:1:7","nodeType":"YulLiteral","src":"3840:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"3843:1:7","nodeType":"YulLiteral","src":"3843:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3833:6:7","nodeType":"YulIdentifier","src":"3833:6:7"},"nativeSrc":"3833:12:7","nodeType":"YulFunctionCall","src":"3833:12:7"},"nativeSrc":"3833:12:7","nodeType":"YulExpressionStatement","src":"3833:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3806:7:7","nodeType":"YulIdentifier","src":"3806:7:7"},{"name":"headStart","nativeSrc":"3815:9:7","nodeType":"YulIdentifier","src":"3815:9:7"}],"functionName":{"name":"sub","nativeSrc":"3802:3:7","nodeType":"YulIdentifier","src":"3802:3:7"},"nativeSrc":"3802:23:7","nodeType":"YulFunctionCall","src":"3802:23:7"},{"kind":"number","nativeSrc":"3827:2:7","nodeType":"YulLiteral","src":"3827:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3798:3:7","nodeType":"YulIdentifier","src":"3798:3:7"},"nativeSrc":"3798:32:7","nodeType":"YulFunctionCall","src":"3798:32:7"},"nativeSrc":"3795:52:7","nodeType":"YulIf","src":"3795:52:7"},{"nativeSrc":"3856:37:7","nodeType":"YulVariableDeclaration","src":"3856:37:7","value":{"arguments":[{"name":"headStart","nativeSrc":"3883:9:7","nodeType":"YulIdentifier","src":"3883:9:7"}],"functionName":{"name":"calldataload","nativeSrc":"3870:12:7","nodeType":"YulIdentifier","src":"3870:12:7"},"nativeSrc":"3870:23:7","nodeType":"YulFunctionCall","src":"3870:23:7"},"variables":[{"name":"offset","nativeSrc":"3860:6:7","nodeType":"YulTypedName","src":"3860:6:7","type":""}]},{"body":{"nativeSrc":"3936:16:7","nodeType":"YulBlock","src":"3936:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3945:1:7","nodeType":"YulLiteral","src":"3945:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"3948:1:7","nodeType":"YulLiteral","src":"3948:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3938:6:7","nodeType":"YulIdentifier","src":"3938:6:7"},"nativeSrc":"3938:12:7","nodeType":"YulFunctionCall","src":"3938:12:7"},"nativeSrc":"3938:12:7","nodeType":"YulExpressionStatement","src":"3938:12:7"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3908:6:7","nodeType":"YulIdentifier","src":"3908:6:7"},{"kind":"number","nativeSrc":"3916:18:7","nodeType":"YulLiteral","src":"3916:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3905:2:7","nodeType":"YulIdentifier","src":"3905:2:7"},"nativeSrc":"3905:30:7","nodeType":"YulFunctionCall","src":"3905:30:7"},"nativeSrc":"3902:50:7","nodeType":"YulIf","src":"3902:50:7"},{"nativeSrc":"3961:32:7","nodeType":"YulVariableDeclaration","src":"3961:32:7","value":{"arguments":[{"name":"headStart","nativeSrc":"3975:9:7","nodeType":"YulIdentifier","src":"3975:9:7"},{"name":"offset","nativeSrc":"3986:6:7","nodeType":"YulIdentifier","src":"3986:6:7"}],"functionName":{"name":"add","nativeSrc":"3971:3:7","nodeType":"YulIdentifier","src":"3971:3:7"},"nativeSrc":"3971:22:7","nodeType":"YulFunctionCall","src":"3971:22:7"},"variables":[{"name":"_1","nativeSrc":"3965:2:7","nodeType":"YulTypedName","src":"3965:2:7","type":""}]},{"body":{"nativeSrc":"4041:16:7","nodeType":"YulBlock","src":"4041:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4050:1:7","nodeType":"YulLiteral","src":"4050:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"4053:1:7","nodeType":"YulLiteral","src":"4053:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4043:6:7","nodeType":"YulIdentifier","src":"4043:6:7"},"nativeSrc":"4043:12:7","nodeType":"YulFunctionCall","src":"4043:12:7"},"nativeSrc":"4043:12:7","nodeType":"YulExpressionStatement","src":"4043:12:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"4020:2:7","nodeType":"YulIdentifier","src":"4020:2:7"},{"kind":"number","nativeSrc":"4024:4:7","nodeType":"YulLiteral","src":"4024:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4016:3:7","nodeType":"YulIdentifier","src":"4016:3:7"},"nativeSrc":"4016:13:7","nodeType":"YulFunctionCall","src":"4016:13:7"},{"name":"dataEnd","nativeSrc":"4031:7:7","nodeType":"YulIdentifier","src":"4031:7:7"}],"functionName":{"name":"slt","nativeSrc":"4012:3:7","nodeType":"YulIdentifier","src":"4012:3:7"},"nativeSrc":"4012:27:7","nodeType":"YulFunctionCall","src":"4012:27:7"}],"functionName":{"name":"iszero","nativeSrc":"4005:6:7","nodeType":"YulIdentifier","src":"4005:6:7"},"nativeSrc":"4005:35:7","nodeType":"YulFunctionCall","src":"4005:35:7"},"nativeSrc":"4002:55:7","nodeType":"YulIf","src":"4002:55:7"},{"nativeSrc":"4066:86:7","nodeType":"YulAssignment","src":"4066:86:7","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"4115:2:7","nodeType":"YulIdentifier","src":"4115:2:7"},{"kind":"number","nativeSrc":"4119:4:7","nodeType":"YulLiteral","src":"4119:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4111:3:7","nodeType":"YulIdentifier","src":"4111:3:7"},"nativeSrc":"4111:13:7","nodeType":"YulFunctionCall","src":"4111:13:7"},{"arguments":[{"name":"_1","nativeSrc":"4139:2:7","nodeType":"YulIdentifier","src":"4139:2:7"}],"functionName":{"name":"calldataload","nativeSrc":"4126:12:7","nodeType":"YulIdentifier","src":"4126:12:7"},"nativeSrc":"4126:16:7","nodeType":"YulFunctionCall","src":"4126:16:7"},{"name":"dataEnd","nativeSrc":"4144:7:7","nodeType":"YulIdentifier","src":"4144:7:7"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"4076:34:7","nodeType":"YulIdentifier","src":"4076:34:7"},"nativeSrc":"4076:76:7","nodeType":"YulFunctionCall","src":"4076:76:7"},"variableNames":[{"name":"value0","nativeSrc":"4066:6:7","nodeType":"YulIdentifier","src":"4066:6:7"}]},{"nativeSrc":"4161:50:7","nodeType":"YulVariableDeclaration","src":"4161:50:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4194:9:7","nodeType":"YulIdentifier","src":"4194:9:7"},{"kind":"number","nativeSrc":"4205:4:7","nodeType":"YulLiteral","src":"4205:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4190:3:7","nodeType":"YulIdentifier","src":"4190:3:7"},"nativeSrc":"4190:20:7","nodeType":"YulFunctionCall","src":"4190:20:7"}],"functionName":{"name":"calldataload","nativeSrc":"4177:12:7","nodeType":"YulIdentifier","src":"4177:12:7"},"nativeSrc":"4177:34:7","nodeType":"YulFunctionCall","src":"4177:34:7"},"variables":[{"name":"offset_1","nativeSrc":"4165:8:7","nodeType":"YulTypedName","src":"4165:8:7","type":""}]},{"body":{"nativeSrc":"4256:16:7","nodeType":"YulBlock","src":"4256:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4265:1:7","nodeType":"YulLiteral","src":"4265:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"4268:1:7","nodeType":"YulLiteral","src":"4268:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4258:6:7","nodeType":"YulIdentifier","src":"4258:6:7"},"nativeSrc":"4258:12:7","nodeType":"YulFunctionCall","src":"4258:12:7"},"nativeSrc":"4258:12:7","nodeType":"YulExpressionStatement","src":"4258:12:7"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"4226:8:7","nodeType":"YulIdentifier","src":"4226:8:7"},{"kind":"number","nativeSrc":"4236:18:7","nodeType":"YulLiteral","src":"4236:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4223:2:7","nodeType":"YulIdentifier","src":"4223:2:7"},"nativeSrc":"4223:32:7","nodeType":"YulFunctionCall","src":"4223:32:7"},"nativeSrc":"4220:52:7","nodeType":"YulIf","src":"4220:52:7"},{"nativeSrc":"4281:34:7","nodeType":"YulVariableDeclaration","src":"4281:34:7","value":{"arguments":[{"name":"headStart","nativeSrc":"4295:9:7","nodeType":"YulIdentifier","src":"4295:9:7"},{"name":"offset_1","nativeSrc":"4306:8:7","nodeType":"YulIdentifier","src":"4306:8:7"}],"functionName":{"name":"add","nativeSrc":"4291:3:7","nodeType":"YulIdentifier","src":"4291:3:7"},"nativeSrc":"4291:24:7","nodeType":"YulFunctionCall","src":"4291:24:7"},"variables":[{"name":"_2","nativeSrc":"4285:2:7","nodeType":"YulTypedName","src":"4285:2:7","type":""}]},{"body":{"nativeSrc":"4363:16:7","nodeType":"YulBlock","src":"4363:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4372:1:7","nodeType":"YulLiteral","src":"4372:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"4375:1:7","nodeType":"YulLiteral","src":"4375:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4365:6:7","nodeType":"YulIdentifier","src":"4365:6:7"},"nativeSrc":"4365:12:7","nodeType":"YulFunctionCall","src":"4365:12:7"},"nativeSrc":"4365:12:7","nodeType":"YulExpressionStatement","src":"4365:12:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"4342:2:7","nodeType":"YulIdentifier","src":"4342:2:7"},{"kind":"number","nativeSrc":"4346:4:7","nodeType":"YulLiteral","src":"4346:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4338:3:7","nodeType":"YulIdentifier","src":"4338:3:7"},"nativeSrc":"4338:13:7","nodeType":"YulFunctionCall","src":"4338:13:7"},{"name":"dataEnd","nativeSrc":"4353:7:7","nodeType":"YulIdentifier","src":"4353:7:7"}],"functionName":{"name":"slt","nativeSrc":"4334:3:7","nodeType":"YulIdentifier","src":"4334:3:7"},"nativeSrc":"4334:27:7","nodeType":"YulFunctionCall","src":"4334:27:7"}],"functionName":{"name":"iszero","nativeSrc":"4327:6:7","nodeType":"YulIdentifier","src":"4327:6:7"},"nativeSrc":"4327:35:7","nodeType":"YulFunctionCall","src":"4327:35:7"},"nativeSrc":"4324:55:7","nodeType":"YulIf","src":"4324:55:7"},{"nativeSrc":"4388:86:7","nodeType":"YulAssignment","src":"4388:86:7","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"4437:2:7","nodeType":"YulIdentifier","src":"4437:2:7"},{"kind":"number","nativeSrc":"4441:4:7","nodeType":"YulLiteral","src":"4441:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4433:3:7","nodeType":"YulIdentifier","src":"4433:3:7"},"nativeSrc":"4433:13:7","nodeType":"YulFunctionCall","src":"4433:13:7"},{"arguments":[{"name":"_2","nativeSrc":"4461:2:7","nodeType":"YulIdentifier","src":"4461:2:7"}],"functionName":{"name":"calldataload","nativeSrc":"4448:12:7","nodeType":"YulIdentifier","src":"4448:12:7"},"nativeSrc":"4448:16:7","nodeType":"YulFunctionCall","src":"4448:16:7"},{"name":"dataEnd","nativeSrc":"4466:7:7","nodeType":"YulIdentifier","src":"4466:7:7"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"4398:34:7","nodeType":"YulIdentifier","src":"4398:34:7"},"nativeSrc":"4398:76:7","nodeType":"YulFunctionCall","src":"4398:76:7"},"variableNames":[{"name":"value1","nativeSrc":"4388:6:7","nodeType":"YulIdentifier","src":"4388:6:7"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr","nativeSrc":"3679:801:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3743:9:7","nodeType":"YulTypedName","src":"3743:9:7","type":""},{"name":"dataEnd","nativeSrc":"3754:7:7","nodeType":"YulTypedName","src":"3754:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3766:6:7","nodeType":"YulTypedName","src":"3766:6:7","type":""},{"name":"value1","nativeSrc":"3774:6:7","nodeType":"YulTypedName","src":"3774:6:7","type":""}],"src":"3679:801:7"},{"body":{"nativeSrc":"4534:350:7","nodeType":"YulBlock","src":"4534:350:7","statements":[{"nativeSrc":"4544:26:7","nodeType":"YulVariableDeclaration","src":"4544:26:7","value":{"arguments":[{"name":"value","nativeSrc":"4564:5:7","nodeType":"YulIdentifier","src":"4564:5:7"}],"functionName":{"name":"mload","nativeSrc":"4558:5:7","nodeType":"YulIdentifier","src":"4558:5:7"},"nativeSrc":"4558:12:7","nodeType":"YulFunctionCall","src":"4558:12:7"},"variables":[{"name":"length","nativeSrc":"4548:6:7","nodeType":"YulTypedName","src":"4548:6:7","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"4586:3:7","nodeType":"YulIdentifier","src":"4586:3:7"},{"name":"length","nativeSrc":"4591:6:7","nodeType":"YulIdentifier","src":"4591:6:7"}],"functionName":{"name":"mstore","nativeSrc":"4579:6:7","nodeType":"YulIdentifier","src":"4579:6:7"},"nativeSrc":"4579:19:7","nodeType":"YulFunctionCall","src":"4579:19:7"},"nativeSrc":"4579:19:7","nodeType":"YulExpressionStatement","src":"4579:19:7"},{"nativeSrc":"4607:10:7","nodeType":"YulVariableDeclaration","src":"4607:10:7","value":{"kind":"number","nativeSrc":"4616:1:7","nodeType":"YulLiteral","src":"4616:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4611:1:7","nodeType":"YulTypedName","src":"4611:1:7","type":""}]},{"body":{"nativeSrc":"4678:87:7","nodeType":"YulBlock","src":"4678:87:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"4707:3:7","nodeType":"YulIdentifier","src":"4707:3:7"},{"name":"i","nativeSrc":"4712:1:7","nodeType":"YulIdentifier","src":"4712:1:7"}],"functionName":{"name":"add","nativeSrc":"4703:3:7","nodeType":"YulIdentifier","src":"4703:3:7"},"nativeSrc":"4703:11:7","nodeType":"YulFunctionCall","src":"4703:11:7"},{"kind":"number","nativeSrc":"4716:4:7","nodeType":"YulLiteral","src":"4716:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4699:3:7","nodeType":"YulIdentifier","src":"4699:3:7"},"nativeSrc":"4699:22:7","nodeType":"YulFunctionCall","src":"4699:22:7"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4737:5:7","nodeType":"YulIdentifier","src":"4737:5:7"},{"name":"i","nativeSrc":"4744:1:7","nodeType":"YulIdentifier","src":"4744:1:7"}],"functionName":{"name":"add","nativeSrc":"4733:3:7","nodeType":"YulIdentifier","src":"4733:3:7"},"nativeSrc":"4733:13:7","nodeType":"YulFunctionCall","src":"4733:13:7"},{"kind":"number","nativeSrc":"4748:4:7","nodeType":"YulLiteral","src":"4748:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4729:3:7","nodeType":"YulIdentifier","src":"4729:3:7"},"nativeSrc":"4729:24:7","nodeType":"YulFunctionCall","src":"4729:24:7"}],"functionName":{"name":"mload","nativeSrc":"4723:5:7","nodeType":"YulIdentifier","src":"4723:5:7"},"nativeSrc":"4723:31:7","nodeType":"YulFunctionCall","src":"4723:31:7"}],"functionName":{"name":"mstore","nativeSrc":"4692:6:7","nodeType":"YulIdentifier","src":"4692:6:7"},"nativeSrc":"4692:63:7","nodeType":"YulFunctionCall","src":"4692:63:7"},"nativeSrc":"4692:63:7","nodeType":"YulExpressionStatement","src":"4692:63:7"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4637:1:7","nodeType":"YulIdentifier","src":"4637:1:7"},{"name":"length","nativeSrc":"4640:6:7","nodeType":"YulIdentifier","src":"4640:6:7"}],"functionName":{"name":"lt","nativeSrc":"4634:2:7","nodeType":"YulIdentifier","src":"4634:2:7"},"nativeSrc":"4634:13:7","nodeType":"YulFunctionCall","src":"4634:13:7"},"nativeSrc":"4626:139:7","nodeType":"YulForLoop","post":{"nativeSrc":"4648:21:7","nodeType":"YulBlock","src":"4648:21:7","statements":[{"nativeSrc":"4650:17:7","nodeType":"YulAssignment","src":"4650:17:7","value":{"arguments":[{"name":"i","nativeSrc":"4659:1:7","nodeType":"YulIdentifier","src":"4659:1:7"},{"kind":"number","nativeSrc":"4662:4:7","nodeType":"YulLiteral","src":"4662:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4655:3:7","nodeType":"YulIdentifier","src":"4655:3:7"},"nativeSrc":"4655:12:7","nodeType":"YulFunctionCall","src":"4655:12:7"},"variableNames":[{"name":"i","nativeSrc":"4650:1:7","nodeType":"YulIdentifier","src":"4650:1:7"}]}]},"pre":{"nativeSrc":"4630:3:7","nodeType":"YulBlock","src":"4630:3:7","statements":[]},"src":"4626:139:7"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"4789:3:7","nodeType":"YulIdentifier","src":"4789:3:7"},{"name":"length","nativeSrc":"4794:6:7","nodeType":"YulIdentifier","src":"4794:6:7"}],"functionName":{"name":"add","nativeSrc":"4785:3:7","nodeType":"YulIdentifier","src":"4785:3:7"},"nativeSrc":"4785:16:7","nodeType":"YulFunctionCall","src":"4785:16:7"},{"kind":"number","nativeSrc":"4803:4:7","nodeType":"YulLiteral","src":"4803:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4781:3:7","nodeType":"YulIdentifier","src":"4781:3:7"},"nativeSrc":"4781:27:7","nodeType":"YulFunctionCall","src":"4781:27:7"},{"kind":"number","nativeSrc":"4810:1:7","nodeType":"YulLiteral","src":"4810:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4774:6:7","nodeType":"YulIdentifier","src":"4774:6:7"},"nativeSrc":"4774:38:7","nodeType":"YulFunctionCall","src":"4774:38:7"},"nativeSrc":"4774:38:7","nodeType":"YulExpressionStatement","src":"4774:38:7"},{"nativeSrc":"4821:57:7","nodeType":"YulAssignment","src":"4821:57:7","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"4836:3:7","nodeType":"YulIdentifier","src":"4836:3:7"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4849:6:7","nodeType":"YulIdentifier","src":"4849:6:7"},{"kind":"number","nativeSrc":"4857:2:7","nodeType":"YulLiteral","src":"4857:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4845:3:7","nodeType":"YulIdentifier","src":"4845:3:7"},"nativeSrc":"4845:15:7","nodeType":"YulFunctionCall","src":"4845:15:7"},{"arguments":[{"kind":"number","nativeSrc":"4866:2:7","nodeType":"YulLiteral","src":"4866:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4862:3:7","nodeType":"YulIdentifier","src":"4862:3:7"},"nativeSrc":"4862:7:7","nodeType":"YulFunctionCall","src":"4862:7:7"}],"functionName":{"name":"and","nativeSrc":"4841:3:7","nodeType":"YulIdentifier","src":"4841:3:7"},"nativeSrc":"4841:29:7","nodeType":"YulFunctionCall","src":"4841:29:7"}],"functionName":{"name":"add","nativeSrc":"4832:3:7","nodeType":"YulIdentifier","src":"4832:3:7"},"nativeSrc":"4832:39:7","nodeType":"YulFunctionCall","src":"4832:39:7"},{"kind":"number","nativeSrc":"4873:4:7","nodeType":"YulLiteral","src":"4873:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4828:3:7","nodeType":"YulIdentifier","src":"4828:3:7"},"nativeSrc":"4828:50:7","nodeType":"YulFunctionCall","src":"4828:50:7"},"variableNames":[{"name":"end","nativeSrc":"4821:3:7","nodeType":"YulIdentifier","src":"4821:3:7"}]}]},"name":"abi_encode_bytes","nativeSrc":"4485:399:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4511:5:7","nodeType":"YulTypedName","src":"4511:5:7","type":""},{"name":"pos","nativeSrc":"4518:3:7","nodeType":"YulTypedName","src":"4518:3:7","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4526:3:7","nodeType":"YulTypedName","src":"4526:3:7","type":""}],"src":"4485:399:7"},{"body":{"nativeSrc":"5008:98:7","nodeType":"YulBlock","src":"5008:98:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5025:9:7","nodeType":"YulIdentifier","src":"5025:9:7"},{"kind":"number","nativeSrc":"5036:2:7","nodeType":"YulLiteral","src":"5036:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5018:6:7","nodeType":"YulIdentifier","src":"5018:6:7"},"nativeSrc":"5018:21:7","nodeType":"YulFunctionCall","src":"5018:21:7"},"nativeSrc":"5018:21:7","nodeType":"YulExpressionStatement","src":"5018:21:7"},{"nativeSrc":"5048:52:7","nodeType":"YulAssignment","src":"5048:52:7","value":{"arguments":[{"name":"value0","nativeSrc":"5073:6:7","nodeType":"YulIdentifier","src":"5073:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"5085:9:7","nodeType":"YulIdentifier","src":"5085:9:7"},{"kind":"number","nativeSrc":"5096:2:7","nodeType":"YulLiteral","src":"5096:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5081:3:7","nodeType":"YulIdentifier","src":"5081:3:7"},"nativeSrc":"5081:18:7","nodeType":"YulFunctionCall","src":"5081:18:7"}],"functionName":{"name":"abi_encode_bytes","nativeSrc":"5056:16:7","nodeType":"YulIdentifier","src":"5056:16:7"},"nativeSrc":"5056:44:7","nodeType":"YulFunctionCall","src":"5056:44:7"},"variableNames":[{"name":"tail","nativeSrc":"5048:4:7","nodeType":"YulIdentifier","src":"5048:4:7"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"4889:217:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4977:9:7","nodeType":"YulTypedName","src":"4977:9:7","type":""},{"name":"value0","nativeSrc":"4988:6:7","nodeType":"YulTypedName","src":"4988:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4999:4:7","nodeType":"YulTypedName","src":"4999:4:7","type":""}],"src":"4889:217:7"},{"body":{"nativeSrc":"5143:152:7","nodeType":"YulBlock","src":"5143:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5160:1:7","nodeType":"YulLiteral","src":"5160:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"5163:77:7","nodeType":"YulLiteral","src":"5163:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5153:6:7","nodeType":"YulIdentifier","src":"5153:6:7"},"nativeSrc":"5153:88:7","nodeType":"YulFunctionCall","src":"5153:88:7"},"nativeSrc":"5153:88:7","nodeType":"YulExpressionStatement","src":"5153:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5257:1:7","nodeType":"YulLiteral","src":"5257:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"5260:4:7","nodeType":"YulLiteral","src":"5260:4:7","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"5250:6:7","nodeType":"YulIdentifier","src":"5250:6:7"},"nativeSrc":"5250:15:7","nodeType":"YulFunctionCall","src":"5250:15:7"},"nativeSrc":"5250:15:7","nodeType":"YulExpressionStatement","src":"5250:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5281:1:7","nodeType":"YulLiteral","src":"5281:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"5284:4:7","nodeType":"YulLiteral","src":"5284:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5274:6:7","nodeType":"YulIdentifier","src":"5274:6:7"},"nativeSrc":"5274:15:7","nodeType":"YulFunctionCall","src":"5274:15:7"},"nativeSrc":"5274:15:7","nodeType":"YulExpressionStatement","src":"5274:15:7"}]},"name":"panic_error_0x21","nativeSrc":"5111:184:7","nodeType":"YulFunctionDefinition","src":"5111:184:7"},{"body":{"nativeSrc":"5355:243:7","nodeType":"YulBlock","src":"5355:243:7","statements":[{"body":{"nativeSrc":"5397:168:7","nodeType":"YulBlock","src":"5397:168:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5418:1:7","nodeType":"YulLiteral","src":"5418:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"5421:77:7","nodeType":"YulLiteral","src":"5421:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5411:6:7","nodeType":"YulIdentifier","src":"5411:6:7"},"nativeSrc":"5411:88:7","nodeType":"YulFunctionCall","src":"5411:88:7"},"nativeSrc":"5411:88:7","nodeType":"YulExpressionStatement","src":"5411:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5519:1:7","nodeType":"YulLiteral","src":"5519:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"5522:4:7","nodeType":"YulLiteral","src":"5522:4:7","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"5512:6:7","nodeType":"YulIdentifier","src":"5512:6:7"},"nativeSrc":"5512:15:7","nodeType":"YulFunctionCall","src":"5512:15:7"},"nativeSrc":"5512:15:7","nodeType":"YulExpressionStatement","src":"5512:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5547:1:7","nodeType":"YulLiteral","src":"5547:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"5550:4:7","nodeType":"YulLiteral","src":"5550:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5540:6:7","nodeType":"YulIdentifier","src":"5540:6:7"},"nativeSrc":"5540:15:7","nodeType":"YulFunctionCall","src":"5540:15:7"},"nativeSrc":"5540:15:7","nodeType":"YulExpressionStatement","src":"5540:15:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5378:5:7","nodeType":"YulIdentifier","src":"5378:5:7"},{"kind":"number","nativeSrc":"5385:1:7","nodeType":"YulLiteral","src":"5385:1:7","type":"","value":"3"}],"functionName":{"name":"lt","nativeSrc":"5375:2:7","nodeType":"YulIdentifier","src":"5375:2:7"},"nativeSrc":"5375:12:7","nodeType":"YulFunctionCall","src":"5375:12:7"}],"functionName":{"name":"iszero","nativeSrc":"5368:6:7","nodeType":"YulIdentifier","src":"5368:6:7"},"nativeSrc":"5368:20:7","nodeType":"YulFunctionCall","src":"5368:20:7"},"nativeSrc":"5365:200:7","nodeType":"YulIf","src":"5365:200:7"},{"expression":{"arguments":[{"name":"pos","nativeSrc":"5581:3:7","nodeType":"YulIdentifier","src":"5581:3:7"},{"name":"value","nativeSrc":"5586:5:7","nodeType":"YulIdentifier","src":"5586:5:7"}],"functionName":{"name":"mstore","nativeSrc":"5574:6:7","nodeType":"YulIdentifier","src":"5574:6:7"},"nativeSrc":"5574:18:7","nodeType":"YulFunctionCall","src":"5574:18:7"},"nativeSrc":"5574:18:7","nodeType":"YulExpressionStatement","src":"5574:18:7"}]},"name":"abi_encode_enum_RulingOptions","nativeSrc":"5300:298:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5339:5:7","nodeType":"YulTypedName","src":"5339:5:7","type":""},{"name":"pos","nativeSrc":"5346:3:7","nodeType":"YulTypedName","src":"5346:3:7","type":""}],"src":"5300:298:7"},{"body":{"nativeSrc":"5835:376:7","nodeType":"YulBlock","src":"5835:376:7","statements":[{"nativeSrc":"5845:27:7","nodeType":"YulAssignment","src":"5845:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"5857:9:7","nodeType":"YulIdentifier","src":"5857:9:7"},{"kind":"number","nativeSrc":"5868:3:7","nodeType":"YulLiteral","src":"5868:3:7","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"5853:3:7","nodeType":"YulIdentifier","src":"5853:3:7"},"nativeSrc":"5853:19:7","nodeType":"YulFunctionCall","src":"5853:19:7"},"variableNames":[{"name":"tail","nativeSrc":"5845:4:7","nodeType":"YulIdentifier","src":"5845:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5888:9:7","nodeType":"YulIdentifier","src":"5888:9:7"},{"arguments":[{"name":"value0","nativeSrc":"5903:6:7","nodeType":"YulIdentifier","src":"5903:6:7"},{"kind":"number","nativeSrc":"5911:42:7","nodeType":"YulLiteral","src":"5911:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"5899:3:7","nodeType":"YulIdentifier","src":"5899:3:7"},"nativeSrc":"5899:55:7","nodeType":"YulFunctionCall","src":"5899:55:7"}],"functionName":{"name":"mstore","nativeSrc":"5881:6:7","nodeType":"YulIdentifier","src":"5881:6:7"},"nativeSrc":"5881:74:7","nodeType":"YulFunctionCall","src":"5881:74:7"},"nativeSrc":"5881:74:7","nodeType":"YulExpressionStatement","src":"5881:74:7"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"5994:6:7","nodeType":"YulIdentifier","src":"5994:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"6006:9:7","nodeType":"YulIdentifier","src":"6006:9:7"},{"kind":"number","nativeSrc":"6017:2:7","nodeType":"YulLiteral","src":"6017:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6002:3:7","nodeType":"YulIdentifier","src":"6002:3:7"},"nativeSrc":"6002:18:7","nodeType":"YulFunctionCall","src":"6002:18:7"}],"functionName":{"name":"abi_encode_enum_RulingOptions","nativeSrc":"5964:29:7","nodeType":"YulIdentifier","src":"5964:29:7"},"nativeSrc":"5964:57:7","nodeType":"YulFunctionCall","src":"5964:57:7"},"nativeSrc":"5964:57:7","nodeType":"YulExpressionStatement","src":"5964:57:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6041:9:7","nodeType":"YulIdentifier","src":"6041:9:7"},{"kind":"number","nativeSrc":"6052:2:7","nodeType":"YulLiteral","src":"6052:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6037:3:7","nodeType":"YulIdentifier","src":"6037:3:7"},"nativeSrc":"6037:18:7","nodeType":"YulFunctionCall","src":"6037:18:7"},{"arguments":[{"name":"value2","nativeSrc":"6061:6:7","nodeType":"YulIdentifier","src":"6061:6:7"},{"kind":"number","nativeSrc":"6069:4:7","nodeType":"YulLiteral","src":"6069:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"6057:3:7","nodeType":"YulIdentifier","src":"6057:3:7"},"nativeSrc":"6057:17:7","nodeType":"YulFunctionCall","src":"6057:17:7"}],"functionName":{"name":"mstore","nativeSrc":"6030:6:7","nodeType":"YulIdentifier","src":"6030:6:7"},"nativeSrc":"6030:45:7","nodeType":"YulFunctionCall","src":"6030:45:7"},"nativeSrc":"6030:45:7","nodeType":"YulExpressionStatement","src":"6030:45:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6095:9:7","nodeType":"YulIdentifier","src":"6095:9:7"},{"kind":"number","nativeSrc":"6106:2:7","nodeType":"YulLiteral","src":"6106:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6091:3:7","nodeType":"YulIdentifier","src":"6091:3:7"},"nativeSrc":"6091:18:7","nodeType":"YulFunctionCall","src":"6091:18:7"},{"arguments":[{"arguments":[{"name":"value3","nativeSrc":"6125:6:7","nodeType":"YulIdentifier","src":"6125:6:7"}],"functionName":{"name":"iszero","nativeSrc":"6118:6:7","nodeType":"YulIdentifier","src":"6118:6:7"},"nativeSrc":"6118:14:7","nodeType":"YulFunctionCall","src":"6118:14:7"}],"functionName":{"name":"iszero","nativeSrc":"6111:6:7","nodeType":"YulIdentifier","src":"6111:6:7"},"nativeSrc":"6111:22:7","nodeType":"YulFunctionCall","src":"6111:22:7"}],"functionName":{"name":"mstore","nativeSrc":"6084:6:7","nodeType":"YulIdentifier","src":"6084:6:7"},"nativeSrc":"6084:50:7","nodeType":"YulFunctionCall","src":"6084:50:7"},"nativeSrc":"6084:50:7","nodeType":"YulExpressionStatement","src":"6084:50:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6154:9:7","nodeType":"YulIdentifier","src":"6154:9:7"},{"kind":"number","nativeSrc":"6165:3:7","nodeType":"YulLiteral","src":"6165:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6150:3:7","nodeType":"YulIdentifier","src":"6150:3:7"},"nativeSrc":"6150:19:7","nodeType":"YulFunctionCall","src":"6150:19:7"},{"arguments":[{"name":"value4","nativeSrc":"6175:6:7","nodeType":"YulIdentifier","src":"6175:6:7"},{"kind":"number","nativeSrc":"6183:20:7","nodeType":"YulLiteral","src":"6183:20:7","type":"","value":"0xffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6171:3:7","nodeType":"YulIdentifier","src":"6171:3:7"},"nativeSrc":"6171:33:7","nodeType":"YulFunctionCall","src":"6171:33:7"}],"functionName":{"name":"mstore","nativeSrc":"6143:6:7","nodeType":"YulIdentifier","src":"6143:6:7"},"nativeSrc":"6143:62:7","nodeType":"YulFunctionCall","src":"6143:62:7"},"nativeSrc":"6143:62:7","nodeType":"YulExpressionStatement","src":"6143:62:7"}]},"name":"abi_encode_tuple_t_address_payable_t_enum$_RulingOptions_$295_t_uint8_t_bool_t_uint72__to_t_address_payable_t_uint8_t_uint8_t_bool_t_uint72__fromStack_reversed","nativeSrc":"5603:608:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5772:9:7","nodeType":"YulTypedName","src":"5772:9:7","type":""},{"name":"value4","nativeSrc":"5783:6:7","nodeType":"YulTypedName","src":"5783:6:7","type":""},{"name":"value3","nativeSrc":"5791:6:7","nodeType":"YulTypedName","src":"5791:6:7","type":""},{"name":"value2","nativeSrc":"5799:6:7","nodeType":"YulTypedName","src":"5799:6:7","type":""},{"name":"value1","nativeSrc":"5807:6:7","nodeType":"YulTypedName","src":"5807:6:7","type":""},{"name":"value0","nativeSrc":"5815:6:7","nodeType":"YulTypedName","src":"5815:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5826:4:7","nodeType":"YulTypedName","src":"5826:4:7","type":""}],"src":"5603:608:7"},{"body":{"nativeSrc":"6345:119:7","nodeType":"YulBlock","src":"6345:119:7","statements":[{"nativeSrc":"6355:26:7","nodeType":"YulAssignment","src":"6355:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"6367:9:7","nodeType":"YulIdentifier","src":"6367:9:7"},{"kind":"number","nativeSrc":"6378:2:7","nodeType":"YulLiteral","src":"6378:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6363:3:7","nodeType":"YulIdentifier","src":"6363:3:7"},"nativeSrc":"6363:18:7","nodeType":"YulFunctionCall","src":"6363:18:7"},"variableNames":[{"name":"tail","nativeSrc":"6355:4:7","nodeType":"YulIdentifier","src":"6355:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6397:9:7","nodeType":"YulIdentifier","src":"6397:9:7"},{"name":"value0","nativeSrc":"6408:6:7","nodeType":"YulIdentifier","src":"6408:6:7"}],"functionName":{"name":"mstore","nativeSrc":"6390:6:7","nodeType":"YulIdentifier","src":"6390:6:7"},"nativeSrc":"6390:25:7","nodeType":"YulFunctionCall","src":"6390:25:7"},"nativeSrc":"6390:25:7","nodeType":"YulExpressionStatement","src":"6390:25:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6435:9:7","nodeType":"YulIdentifier","src":"6435:9:7"},{"kind":"number","nativeSrc":"6446:2:7","nodeType":"YulLiteral","src":"6446:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6431:3:7","nodeType":"YulIdentifier","src":"6431:3:7"},"nativeSrc":"6431:18:7","nodeType":"YulFunctionCall","src":"6431:18:7"},{"name":"value1","nativeSrc":"6451:6:7","nodeType":"YulIdentifier","src":"6451:6:7"}],"functionName":{"name":"mstore","nativeSrc":"6424:6:7","nodeType":"YulIdentifier","src":"6424:6:7"},"nativeSrc":"6424:34:7","nodeType":"YulFunctionCall","src":"6424:34:7"},"nativeSrc":"6424:34:7","nodeType":"YulExpressionStatement","src":"6424:34:7"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6216:248:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6306:9:7","nodeType":"YulTypedName","src":"6306:9:7","type":""},{"name":"value1","nativeSrc":"6317:6:7","nodeType":"YulTypedName","src":"6317:6:7","type":""},{"name":"value0","nativeSrc":"6325:6:7","nodeType":"YulTypedName","src":"6325:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6336:4:7","nodeType":"YulTypedName","src":"6336:4:7","type":""}],"src":"6216:248:7"},{"body":{"nativeSrc":"6526:147:7","nodeType":"YulBlock","src":"6526:147:7","statements":[{"nativeSrc":"6536:29:7","nodeType":"YulAssignment","src":"6536:29:7","value":{"arguments":[{"name":"offset","nativeSrc":"6558:6:7","nodeType":"YulIdentifier","src":"6558:6:7"}],"functionName":{"name":"calldataload","nativeSrc":"6545:12:7","nodeType":"YulIdentifier","src":"6545:12:7"},"nativeSrc":"6545:20:7","nodeType":"YulFunctionCall","src":"6545:20:7"},"variableNames":[{"name":"value","nativeSrc":"6536:5:7","nodeType":"YulIdentifier","src":"6536:5:7"}]},{"body":{"nativeSrc":"6651:16:7","nodeType":"YulBlock","src":"6651:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6660:1:7","nodeType":"YulLiteral","src":"6660:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"6663:1:7","nodeType":"YulLiteral","src":"6663:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6653:6:7","nodeType":"YulIdentifier","src":"6653:6:7"},"nativeSrc":"6653:12:7","nodeType":"YulFunctionCall","src":"6653:12:7"},"nativeSrc":"6653:12:7","nodeType":"YulExpressionStatement","src":"6653:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6587:5:7","nodeType":"YulIdentifier","src":"6587:5:7"},{"arguments":[{"name":"value","nativeSrc":"6598:5:7","nodeType":"YulIdentifier","src":"6598:5:7"},{"kind":"number","nativeSrc":"6605:42:7","nodeType":"YulLiteral","src":"6605:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6594:3:7","nodeType":"YulIdentifier","src":"6594:3:7"},"nativeSrc":"6594:54:7","nodeType":"YulFunctionCall","src":"6594:54:7"}],"functionName":{"name":"eq","nativeSrc":"6584:2:7","nodeType":"YulIdentifier","src":"6584:2:7"},"nativeSrc":"6584:65:7","nodeType":"YulFunctionCall","src":"6584:65:7"}],"functionName":{"name":"iszero","nativeSrc":"6577:6:7","nodeType":"YulIdentifier","src":"6577:6:7"},"nativeSrc":"6577:73:7","nodeType":"YulFunctionCall","src":"6577:73:7"},"nativeSrc":"6574:93:7","nodeType":"YulIf","src":"6574:93:7"}]},"name":"abi_decode_address_payable","nativeSrc":"6469:204:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6505:6:7","nodeType":"YulTypedName","src":"6505:6:7","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6516:5:7","nodeType":"YulTypedName","src":"6516:5:7","type":""}],"src":"6469:204:7"},{"body":{"nativeSrc":"6852:667:7","nodeType":"YulBlock","src":"6852:667:7","statements":[{"body":{"nativeSrc":"6898:16:7","nodeType":"YulBlock","src":"6898:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6907:1:7","nodeType":"YulLiteral","src":"6907:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"6910:1:7","nodeType":"YulLiteral","src":"6910:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6900:6:7","nodeType":"YulIdentifier","src":"6900:6:7"},"nativeSrc":"6900:12:7","nodeType":"YulFunctionCall","src":"6900:12:7"},"nativeSrc":"6900:12:7","nodeType":"YulExpressionStatement","src":"6900:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6873:7:7","nodeType":"YulIdentifier","src":"6873:7:7"},{"name":"headStart","nativeSrc":"6882:9:7","nodeType":"YulIdentifier","src":"6882:9:7"}],"functionName":{"name":"sub","nativeSrc":"6869:3:7","nodeType":"YulIdentifier","src":"6869:3:7"},"nativeSrc":"6869:23:7","nodeType":"YulFunctionCall","src":"6869:23:7"},{"kind":"number","nativeSrc":"6894:2:7","nodeType":"YulLiteral","src":"6894:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"6865:3:7","nodeType":"YulIdentifier","src":"6865:3:7"},"nativeSrc":"6865:32:7","nodeType":"YulFunctionCall","src":"6865:32:7"},"nativeSrc":"6862:52:7","nodeType":"YulIf","src":"6862:52:7"},{"nativeSrc":"6923:14:7","nodeType":"YulVariableDeclaration","src":"6923:14:7","value":{"kind":"number","nativeSrc":"6936:1:7","nodeType":"YulLiteral","src":"6936:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6927:5:7","nodeType":"YulTypedName","src":"6927:5:7","type":""}]},{"nativeSrc":"6946:32:7","nodeType":"YulAssignment","src":"6946:32:7","value":{"arguments":[{"name":"headStart","nativeSrc":"6968:9:7","nodeType":"YulIdentifier","src":"6968:9:7"}],"functionName":{"name":"calldataload","nativeSrc":"6955:12:7","nodeType":"YulIdentifier","src":"6955:12:7"},"nativeSrc":"6955:23:7","nodeType":"YulFunctionCall","src":"6955:23:7"},"variableNames":[{"name":"value","nativeSrc":"6946:5:7","nodeType":"YulIdentifier","src":"6946:5:7"}]},{"nativeSrc":"6987:15:7","nodeType":"YulAssignment","src":"6987:15:7","value":{"name":"value","nativeSrc":"6997:5:7","nodeType":"YulIdentifier","src":"6997:5:7"},"variableNames":[{"name":"value0","nativeSrc":"6987:6:7","nodeType":"YulIdentifier","src":"6987:6:7"}]},{"nativeSrc":"7011:56:7","nodeType":"YulAssignment","src":"7011:56:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7052:9:7","nodeType":"YulIdentifier","src":"7052:9:7"},{"kind":"number","nativeSrc":"7063:2:7","nodeType":"YulLiteral","src":"7063:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7048:3:7","nodeType":"YulIdentifier","src":"7048:3:7"},"nativeSrc":"7048:18:7","nodeType":"YulFunctionCall","src":"7048:18:7"}],"functionName":{"name":"abi_decode_address_payable","nativeSrc":"7021:26:7","nodeType":"YulIdentifier","src":"7021:26:7"},"nativeSrc":"7021:46:7","nodeType":"YulFunctionCall","src":"7021:46:7"},"variableNames":[{"name":"value1","nativeSrc":"7011:6:7","nodeType":"YulIdentifier","src":"7011:6:7"}]},{"nativeSrc":"7076:46:7","nodeType":"YulVariableDeclaration","src":"7076:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7107:9:7","nodeType":"YulIdentifier","src":"7107:9:7"},{"kind":"number","nativeSrc":"7118:2:7","nodeType":"YulLiteral","src":"7118:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7103:3:7","nodeType":"YulIdentifier","src":"7103:3:7"},"nativeSrc":"7103:18:7","nodeType":"YulFunctionCall","src":"7103:18:7"}],"functionName":{"name":"calldataload","nativeSrc":"7090:12:7","nodeType":"YulIdentifier","src":"7090:12:7"},"nativeSrc":"7090:32:7","nodeType":"YulFunctionCall","src":"7090:32:7"},"variables":[{"name":"offset","nativeSrc":"7080:6:7","nodeType":"YulTypedName","src":"7080:6:7","type":""}]},{"body":{"nativeSrc":"7165:16:7","nodeType":"YulBlock","src":"7165:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7174:1:7","nodeType":"YulLiteral","src":"7174:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7177:1:7","nodeType":"YulLiteral","src":"7177:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7167:6:7","nodeType":"YulIdentifier","src":"7167:6:7"},"nativeSrc":"7167:12:7","nodeType":"YulFunctionCall","src":"7167:12:7"},"nativeSrc":"7167:12:7","nodeType":"YulExpressionStatement","src":"7167:12:7"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7137:6:7","nodeType":"YulIdentifier","src":"7137:6:7"},{"kind":"number","nativeSrc":"7145:18:7","nodeType":"YulLiteral","src":"7145:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7134:2:7","nodeType":"YulIdentifier","src":"7134:2:7"},"nativeSrc":"7134:30:7","nodeType":"YulFunctionCall","src":"7134:30:7"},"nativeSrc":"7131:50:7","nodeType":"YulIf","src":"7131:50:7"},{"nativeSrc":"7190:32:7","nodeType":"YulVariableDeclaration","src":"7190:32:7","value":{"arguments":[{"name":"headStart","nativeSrc":"7204:9:7","nodeType":"YulIdentifier","src":"7204:9:7"},{"name":"offset","nativeSrc":"7215:6:7","nodeType":"YulIdentifier","src":"7215:6:7"}],"functionName":{"name":"add","nativeSrc":"7200:3:7","nodeType":"YulIdentifier","src":"7200:3:7"},"nativeSrc":"7200:22:7","nodeType":"YulFunctionCall","src":"7200:22:7"},"variables":[{"name":"_1","nativeSrc":"7194:2:7","nodeType":"YulTypedName","src":"7194:2:7","type":""}]},{"body":{"nativeSrc":"7270:16:7","nodeType":"YulBlock","src":"7270:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7279:1:7","nodeType":"YulLiteral","src":"7279:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7282:1:7","nodeType":"YulLiteral","src":"7282:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7272:6:7","nodeType":"YulIdentifier","src":"7272:6:7"},"nativeSrc":"7272:12:7","nodeType":"YulFunctionCall","src":"7272:12:7"},"nativeSrc":"7272:12:7","nodeType":"YulExpressionStatement","src":"7272:12:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"7249:2:7","nodeType":"YulIdentifier","src":"7249:2:7"},{"kind":"number","nativeSrc":"7253:4:7","nodeType":"YulLiteral","src":"7253:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7245:3:7","nodeType":"YulIdentifier","src":"7245:3:7"},"nativeSrc":"7245:13:7","nodeType":"YulFunctionCall","src":"7245:13:7"},{"name":"dataEnd","nativeSrc":"7260:7:7","nodeType":"YulIdentifier","src":"7260:7:7"}],"functionName":{"name":"slt","nativeSrc":"7241:3:7","nodeType":"YulIdentifier","src":"7241:3:7"},"nativeSrc":"7241:27:7","nodeType":"YulFunctionCall","src":"7241:27:7"}],"functionName":{"name":"iszero","nativeSrc":"7234:6:7","nodeType":"YulIdentifier","src":"7234:6:7"},"nativeSrc":"7234:35:7","nodeType":"YulFunctionCall","src":"7234:35:7"},"nativeSrc":"7231:55:7","nodeType":"YulIf","src":"7231:55:7"},{"nativeSrc":"7295:30:7","nodeType":"YulVariableDeclaration","src":"7295:30:7","value":{"arguments":[{"name":"_1","nativeSrc":"7322:2:7","nodeType":"YulIdentifier","src":"7322:2:7"}],"functionName":{"name":"calldataload","nativeSrc":"7309:12:7","nodeType":"YulIdentifier","src":"7309:12:7"},"nativeSrc":"7309:16:7","nodeType":"YulFunctionCall","src":"7309:16:7"},"variables":[{"name":"length","nativeSrc":"7299:6:7","nodeType":"YulTypedName","src":"7299:6:7","type":""}]},{"body":{"nativeSrc":"7368:16:7","nodeType":"YulBlock","src":"7368:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7377:1:7","nodeType":"YulLiteral","src":"7377:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7380:1:7","nodeType":"YulLiteral","src":"7380:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7370:6:7","nodeType":"YulIdentifier","src":"7370:6:7"},"nativeSrc":"7370:12:7","nodeType":"YulFunctionCall","src":"7370:12:7"},"nativeSrc":"7370:12:7","nodeType":"YulExpressionStatement","src":"7370:12:7"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7340:6:7","nodeType":"YulIdentifier","src":"7340:6:7"},{"kind":"number","nativeSrc":"7348:18:7","nodeType":"YulLiteral","src":"7348:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7337:2:7","nodeType":"YulIdentifier","src":"7337:2:7"},"nativeSrc":"7337:30:7","nodeType":"YulFunctionCall","src":"7337:30:7"},"nativeSrc":"7334:50:7","nodeType":"YulIf","src":"7334:50:7"},{"body":{"nativeSrc":"7442:16:7","nodeType":"YulBlock","src":"7442:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7451:1:7","nodeType":"YulLiteral","src":"7451:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7454:1:7","nodeType":"YulLiteral","src":"7454:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7444:6:7","nodeType":"YulIdentifier","src":"7444:6:7"},"nativeSrc":"7444:12:7","nodeType":"YulFunctionCall","src":"7444:12:7"},"nativeSrc":"7444:12:7","nodeType":"YulExpressionStatement","src":"7444:12:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"7407:2:7","nodeType":"YulIdentifier","src":"7407:2:7"},{"arguments":[{"kind":"number","nativeSrc":"7415:1:7","nodeType":"YulLiteral","src":"7415:1:7","type":"","value":"5"},{"name":"length","nativeSrc":"7418:6:7","nodeType":"YulIdentifier","src":"7418:6:7"}],"functionName":{"name":"shl","nativeSrc":"7411:3:7","nodeType":"YulIdentifier","src":"7411:3:7"},"nativeSrc":"7411:14:7","nodeType":"YulFunctionCall","src":"7411:14:7"}],"functionName":{"name":"add","nativeSrc":"7403:3:7","nodeType":"YulIdentifier","src":"7403:3:7"},"nativeSrc":"7403:23:7","nodeType":"YulFunctionCall","src":"7403:23:7"},{"kind":"number","nativeSrc":"7428:2:7","nodeType":"YulLiteral","src":"7428:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7399:3:7","nodeType":"YulIdentifier","src":"7399:3:7"},"nativeSrc":"7399:32:7","nodeType":"YulFunctionCall","src":"7399:32:7"},{"name":"dataEnd","nativeSrc":"7433:7:7","nodeType":"YulIdentifier","src":"7433:7:7"}],"functionName":{"name":"gt","nativeSrc":"7396:2:7","nodeType":"YulIdentifier","src":"7396:2:7"},"nativeSrc":"7396:45:7","nodeType":"YulFunctionCall","src":"7396:45:7"},"nativeSrc":"7393:65:7","nodeType":"YulIf","src":"7393:65:7"},{"nativeSrc":"7467:21:7","nodeType":"YulAssignment","src":"7467:21:7","value":{"arguments":[{"name":"_1","nativeSrc":"7481:2:7","nodeType":"YulIdentifier","src":"7481:2:7"},{"kind":"number","nativeSrc":"7485:2:7","nodeType":"YulLiteral","src":"7485:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7477:3:7","nodeType":"YulIdentifier","src":"7477:3:7"},"nativeSrc":"7477:11:7","nodeType":"YulFunctionCall","src":"7477:11:7"},"variableNames":[{"name":"value2","nativeSrc":"7467:6:7","nodeType":"YulIdentifier","src":"7467:6:7"}]},{"nativeSrc":"7497:16:7","nodeType":"YulAssignment","src":"7497:16:7","value":{"name":"length","nativeSrc":"7507:6:7","nodeType":"YulIdentifier","src":"7507:6:7"},"variableNames":[{"name":"value3","nativeSrc":"7497:6:7","nodeType":"YulIdentifier","src":"7497:6:7"}]}]},"name":"abi_decode_tuple_t_uint256t_address_payablet_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr","nativeSrc":"6678:841:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6794:9:7","nodeType":"YulTypedName","src":"6794:9:7","type":""},{"name":"dataEnd","nativeSrc":"6805:7:7","nodeType":"YulTypedName","src":"6805:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6817:6:7","nodeType":"YulTypedName","src":"6817:6:7","type":""},{"name":"value1","nativeSrc":"6825:6:7","nodeType":"YulTypedName","src":"6825:6:7","type":""},{"name":"value2","nativeSrc":"6833:6:7","nodeType":"YulTypedName","src":"6833:6:7","type":""},{"name":"value3","nativeSrc":"6841:6:7","nodeType":"YulTypedName","src":"6841:6:7","type":""}],"src":"6678:841:7"},{"body":{"nativeSrc":"7653:289:7","nodeType":"YulBlock","src":"7653:289:7","statements":[{"body":{"nativeSrc":"7699:16:7","nodeType":"YulBlock","src":"7699:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7708:1:7","nodeType":"YulLiteral","src":"7708:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7711:1:7","nodeType":"YulLiteral","src":"7711:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7701:6:7","nodeType":"YulIdentifier","src":"7701:6:7"},"nativeSrc":"7701:12:7","nodeType":"YulFunctionCall","src":"7701:12:7"},"nativeSrc":"7701:12:7","nodeType":"YulExpressionStatement","src":"7701:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7674:7:7","nodeType":"YulIdentifier","src":"7674:7:7"},{"name":"headStart","nativeSrc":"7683:9:7","nodeType":"YulIdentifier","src":"7683:9:7"}],"functionName":{"name":"sub","nativeSrc":"7670:3:7","nodeType":"YulIdentifier","src":"7670:3:7"},"nativeSrc":"7670:23:7","nodeType":"YulFunctionCall","src":"7670:23:7"},{"kind":"number","nativeSrc":"7695:2:7","nodeType":"YulLiteral","src":"7695:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"7666:3:7","nodeType":"YulIdentifier","src":"7666:3:7"},"nativeSrc":"7666:32:7","nodeType":"YulFunctionCall","src":"7666:32:7"},"nativeSrc":"7663:52:7","nodeType":"YulIf","src":"7663:52:7"},{"nativeSrc":"7724:14:7","nodeType":"YulVariableDeclaration","src":"7724:14:7","value":{"kind":"number","nativeSrc":"7737:1:7","nodeType":"YulLiteral","src":"7737:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"7728:5:7","nodeType":"YulTypedName","src":"7728:5:7","type":""}]},{"nativeSrc":"7747:32:7","nodeType":"YulAssignment","src":"7747:32:7","value":{"arguments":[{"name":"headStart","nativeSrc":"7769:9:7","nodeType":"YulIdentifier","src":"7769:9:7"}],"functionName":{"name":"calldataload","nativeSrc":"7756:12:7","nodeType":"YulIdentifier","src":"7756:12:7"},"nativeSrc":"7756:23:7","nodeType":"YulFunctionCall","src":"7756:23:7"},"variableNames":[{"name":"value","nativeSrc":"7747:5:7","nodeType":"YulIdentifier","src":"7747:5:7"}]},{"nativeSrc":"7788:15:7","nodeType":"YulAssignment","src":"7788:15:7","value":{"name":"value","nativeSrc":"7798:5:7","nodeType":"YulIdentifier","src":"7798:5:7"},"variableNames":[{"name":"value0","nativeSrc":"7788:6:7","nodeType":"YulIdentifier","src":"7788:6:7"}]},{"nativeSrc":"7812:56:7","nodeType":"YulAssignment","src":"7812:56:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7853:9:7","nodeType":"YulIdentifier","src":"7853:9:7"},{"kind":"number","nativeSrc":"7864:2:7","nodeType":"YulLiteral","src":"7864:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7849:3:7","nodeType":"YulIdentifier","src":"7849:3:7"},"nativeSrc":"7849:18:7","nodeType":"YulFunctionCall","src":"7849:18:7"}],"functionName":{"name":"abi_decode_address_payable","nativeSrc":"7822:26:7","nodeType":"YulIdentifier","src":"7822:26:7"},"nativeSrc":"7822:46:7","nodeType":"YulFunctionCall","src":"7822:46:7"},"variableNames":[{"name":"value1","nativeSrc":"7812:6:7","nodeType":"YulIdentifier","src":"7812:6:7"}]},{"nativeSrc":"7877:59:7","nodeType":"YulAssignment","src":"7877:59:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7921:9:7","nodeType":"YulIdentifier","src":"7921:9:7"},{"kind":"number","nativeSrc":"7932:2:7","nodeType":"YulLiteral","src":"7932:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7917:3:7","nodeType":"YulIdentifier","src":"7917:3:7"},"nativeSrc":"7917:18:7","nodeType":"YulFunctionCall","src":"7917:18:7"}],"functionName":{"name":"abi_decode_enum_RulingOptions","nativeSrc":"7887:29:7","nodeType":"YulIdentifier","src":"7887:29:7"},"nativeSrc":"7887:49:7","nodeType":"YulFunctionCall","src":"7887:49:7"},"variableNames":[{"name":"value2","nativeSrc":"7877:6:7","nodeType":"YulIdentifier","src":"7877:6:7"}]}]},"name":"abi_decode_tuple_t_uint256t_address_payablet_enum$_RulingOptions_$295","nativeSrc":"7524:418:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7603:9:7","nodeType":"YulTypedName","src":"7603:9:7","type":""},{"name":"dataEnd","nativeSrc":"7614:7:7","nodeType":"YulTypedName","src":"7614:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7626:6:7","nodeType":"YulTypedName","src":"7626:6:7","type":""},{"name":"value1","nativeSrc":"7634:6:7","nodeType":"YulTypedName","src":"7634:6:7","type":""},{"name":"value2","nativeSrc":"7642:6:7","nodeType":"YulTypedName","src":"7642:6:7","type":""}],"src":"7524:418:7"},{"body":{"nativeSrc":"8067:125:7","nodeType":"YulBlock","src":"8067:125:7","statements":[{"nativeSrc":"8077:26:7","nodeType":"YulAssignment","src":"8077:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"8089:9:7","nodeType":"YulIdentifier","src":"8089:9:7"},{"kind":"number","nativeSrc":"8100:2:7","nodeType":"YulLiteral","src":"8100:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8085:3:7","nodeType":"YulIdentifier","src":"8085:3:7"},"nativeSrc":"8085:18:7","nodeType":"YulFunctionCall","src":"8085:18:7"},"variableNames":[{"name":"tail","nativeSrc":"8077:4:7","nodeType":"YulIdentifier","src":"8077:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8119:9:7","nodeType":"YulIdentifier","src":"8119:9:7"},{"arguments":[{"name":"value0","nativeSrc":"8134:6:7","nodeType":"YulIdentifier","src":"8134:6:7"},{"kind":"number","nativeSrc":"8142:42:7","nodeType":"YulLiteral","src":"8142:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"8130:3:7","nodeType":"YulIdentifier","src":"8130:3:7"},"nativeSrc":"8130:55:7","nodeType":"YulFunctionCall","src":"8130:55:7"}],"functionName":{"name":"mstore","nativeSrc":"8112:6:7","nodeType":"YulIdentifier","src":"8112:6:7"},"nativeSrc":"8112:74:7","nodeType":"YulFunctionCall","src":"8112:74:7"},"nativeSrc":"8112:74:7","nodeType":"YulExpressionStatement","src":"8112:74:7"}]},"name":"abi_encode_tuple_t_contract$_IArbitrator_$249__to_t_address__fromStack_reversed","nativeSrc":"7947:245:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8036:9:7","nodeType":"YulTypedName","src":"8036:9:7","type":""},{"name":"value0","nativeSrc":"8047:6:7","nodeType":"YulTypedName","src":"8047:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8058:4:7","nodeType":"YulTypedName","src":"8058:4:7","type":""}],"src":"7947:245:7"},{"body":{"nativeSrc":"8440:698:7","nodeType":"YulBlock","src":"8440:698:7","statements":[{"nativeSrc":"8450:27:7","nodeType":"YulAssignment","src":"8450:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"8462:9:7","nodeType":"YulIdentifier","src":"8462:9:7"},{"kind":"number","nativeSrc":"8473:3:7","nodeType":"YulLiteral","src":"8473:3:7","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"8458:3:7","nodeType":"YulIdentifier","src":"8458:3:7"},"nativeSrc":"8458:19:7","nodeType":"YulFunctionCall","src":"8458:19:7"},"variableNames":[{"name":"tail","nativeSrc":"8450:4:7","nodeType":"YulIdentifier","src":"8450:4:7"}]},{"nativeSrc":"8486:20:7","nodeType":"YulVariableDeclaration","src":"8486:20:7","value":{"name":"headStart","nativeSrc":"8497:9:7","nodeType":"YulIdentifier","src":"8497:9:7"},"variables":[{"name":"pos","nativeSrc":"8490:3:7","nodeType":"YulTypedName","src":"8490:3:7","type":""}]},{"nativeSrc":"8515:16:7","nodeType":"YulAssignment","src":"8515:16:7","value":{"name":"headStart","nativeSrc":"8522:9:7","nodeType":"YulIdentifier","src":"8522:9:7"},"variableNames":[{"name":"pos","nativeSrc":"8515:3:7","nodeType":"YulIdentifier","src":"8515:3:7"}]},{"nativeSrc":"8540:20:7","nodeType":"YulVariableDeclaration","src":"8540:20:7","value":{"name":"value0","nativeSrc":"8554:6:7","nodeType":"YulIdentifier","src":"8554:6:7"},"variables":[{"name":"srcPtr","nativeSrc":"8544:6:7","nodeType":"YulTypedName","src":"8544:6:7","type":""}]},{"nativeSrc":"8569:10:7","nodeType":"YulVariableDeclaration","src":"8569:10:7","value":{"kind":"number","nativeSrc":"8578:1:7","nodeType":"YulLiteral","src":"8578:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8573:1:7","nodeType":"YulTypedName","src":"8573:1:7","type":""}]},{"body":{"nativeSrc":"8635:140:7","nodeType":"YulBlock","src":"8635:140:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8656:3:7","nodeType":"YulIdentifier","src":"8656:3:7"},{"arguments":[{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"8681:6:7","nodeType":"YulIdentifier","src":"8681:6:7"}],"functionName":{"name":"mload","nativeSrc":"8675:5:7","nodeType":"YulIdentifier","src":"8675:5:7"},"nativeSrc":"8675:13:7","nodeType":"YulFunctionCall","src":"8675:13:7"}],"functionName":{"name":"iszero","nativeSrc":"8668:6:7","nodeType":"YulIdentifier","src":"8668:6:7"},"nativeSrc":"8668:21:7","nodeType":"YulFunctionCall","src":"8668:21:7"}],"functionName":{"name":"iszero","nativeSrc":"8661:6:7","nodeType":"YulIdentifier","src":"8661:6:7"},"nativeSrc":"8661:29:7","nodeType":"YulFunctionCall","src":"8661:29:7"}],"functionName":{"name":"mstore","nativeSrc":"8649:6:7","nodeType":"YulIdentifier","src":"8649:6:7"},"nativeSrc":"8649:42:7","nodeType":"YulFunctionCall","src":"8649:42:7"},"nativeSrc":"8649:42:7","nodeType":"YulExpressionStatement","src":"8649:42:7"},{"nativeSrc":"8704:21:7","nodeType":"YulAssignment","src":"8704:21:7","value":{"arguments":[{"name":"pos","nativeSrc":"8715:3:7","nodeType":"YulIdentifier","src":"8715:3:7"},{"kind":"number","nativeSrc":"8720:4:7","nodeType":"YulLiteral","src":"8720:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8711:3:7","nodeType":"YulIdentifier","src":"8711:3:7"},"nativeSrc":"8711:14:7","nodeType":"YulFunctionCall","src":"8711:14:7"},"variableNames":[{"name":"pos","nativeSrc":"8704:3:7","nodeType":"YulIdentifier","src":"8704:3:7"}]},{"nativeSrc":"8738:27:7","nodeType":"YulAssignment","src":"8738:27:7","value":{"arguments":[{"name":"srcPtr","nativeSrc":"8752:6:7","nodeType":"YulIdentifier","src":"8752:6:7"},{"kind":"number","nativeSrc":"8760:4:7","nodeType":"YulLiteral","src":"8760:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8748:3:7","nodeType":"YulIdentifier","src":"8748:3:7"},"nativeSrc":"8748:17:7","nodeType":"YulFunctionCall","src":"8748:17:7"},"variableNames":[{"name":"srcPtr","nativeSrc":"8738:6:7","nodeType":"YulIdentifier","src":"8738:6:7"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8599:1:7","nodeType":"YulIdentifier","src":"8599:1:7"},{"kind":"number","nativeSrc":"8602:4:7","nodeType":"YulLiteral","src":"8602:4:7","type":"","value":"0x03"}],"functionName":{"name":"lt","nativeSrc":"8596:2:7","nodeType":"YulIdentifier","src":"8596:2:7"},"nativeSrc":"8596:11:7","nodeType":"YulFunctionCall","src":"8596:11:7"},"nativeSrc":"8588:187:7","nodeType":"YulForLoop","post":{"nativeSrc":"8608:18:7","nodeType":"YulBlock","src":"8608:18:7","statements":[{"nativeSrc":"8610:14:7","nodeType":"YulAssignment","src":"8610:14:7","value":{"arguments":[{"name":"i","nativeSrc":"8619:1:7","nodeType":"YulIdentifier","src":"8619:1:7"},{"kind":"number","nativeSrc":"8622:1:7","nodeType":"YulLiteral","src":"8622:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8615:3:7","nodeType":"YulIdentifier","src":"8615:3:7"},"nativeSrc":"8615:9:7","nodeType":"YulFunctionCall","src":"8615:9:7"},"variableNames":[{"name":"i","nativeSrc":"8610:1:7","nodeType":"YulIdentifier","src":"8610:1:7"}]}]},"pre":{"nativeSrc":"8592:3:7","nodeType":"YulBlock","src":"8592:3:7","statements":[]},"src":"8588:187:7"},{"nativeSrc":"8784:31:7","nodeType":"YulVariableDeclaration","src":"8784:31:7","value":{"arguments":[{"name":"headStart","nativeSrc":"8801:9:7","nodeType":"YulIdentifier","src":"8801:9:7"},{"kind":"number","nativeSrc":"8812:2:7","nodeType":"YulLiteral","src":"8812:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8797:3:7","nodeType":"YulIdentifier","src":"8797:3:7"},"nativeSrc":"8797:18:7","nodeType":"YulFunctionCall","src":"8797:18:7"},"variables":[{"name":"pos_1","nativeSrc":"8788:5:7","nodeType":"YulTypedName","src":"8788:5:7","type":""}]},{"nativeSrc":"8824:14:7","nodeType":"YulAssignment","src":"8824:14:7","value":{"name":"pos_1","nativeSrc":"8833:5:7","nodeType":"YulIdentifier","src":"8833:5:7"},"variableNames":[{"name":"pos_1","nativeSrc":"8824:5:7","nodeType":"YulIdentifier","src":"8824:5:7"}]},{"nativeSrc":"8847:22:7","nodeType":"YulVariableDeclaration","src":"8847:22:7","value":{"name":"value1","nativeSrc":"8863:6:7","nodeType":"YulIdentifier","src":"8863:6:7"},"variables":[{"name":"srcPtr_1","nativeSrc":"8851:8:7","nodeType":"YulTypedName","src":"8851:8:7","type":""}]},{"nativeSrc":"8878:12:7","nodeType":"YulVariableDeclaration","src":"8878:12:7","value":{"kind":"number","nativeSrc":"8889:1:7","nodeType":"YulLiteral","src":"8889:1:7","type":"","value":"0"},"variables":[{"name":"i_1","nativeSrc":"8882:3:7","nodeType":"YulTypedName","src":"8882:3:7","type":""}]},{"body":{"nativeSrc":"8952:136:7","nodeType":"YulBlock","src":"8952:136:7","statements":[{"expression":{"arguments":[{"name":"pos_1","nativeSrc":"8973:5:7","nodeType":"YulIdentifier","src":"8973:5:7"},{"arguments":[{"name":"srcPtr_1","nativeSrc":"8986:8:7","nodeType":"YulIdentifier","src":"8986:8:7"}],"functionName":{"name":"mload","nativeSrc":"8980:5:7","nodeType":"YulIdentifier","src":"8980:5:7"},"nativeSrc":"8980:15:7","nodeType":"YulFunctionCall","src":"8980:15:7"}],"functionName":{"name":"mstore","nativeSrc":"8966:6:7","nodeType":"YulIdentifier","src":"8966:6:7"},"nativeSrc":"8966:30:7","nodeType":"YulFunctionCall","src":"8966:30:7"},"nativeSrc":"8966:30:7","nodeType":"YulExpressionStatement","src":"8966:30:7"},{"nativeSrc":"9009:25:7","nodeType":"YulAssignment","src":"9009:25:7","value":{"arguments":[{"name":"pos_1","nativeSrc":"9022:5:7","nodeType":"YulIdentifier","src":"9022:5:7"},{"kind":"number","nativeSrc":"9029:4:7","nodeType":"YulLiteral","src":"9029:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9018:3:7","nodeType":"YulIdentifier","src":"9018:3:7"},"nativeSrc":"9018:16:7","nodeType":"YulFunctionCall","src":"9018:16:7"},"variableNames":[{"name":"pos_1","nativeSrc":"9009:5:7","nodeType":"YulIdentifier","src":"9009:5:7"}]},{"nativeSrc":"9047:31:7","nodeType":"YulAssignment","src":"9047:31:7","value":{"arguments":[{"name":"srcPtr_1","nativeSrc":"9063:8:7","nodeType":"YulIdentifier","src":"9063:8:7"},{"kind":"number","nativeSrc":"9073:4:7","nodeType":"YulLiteral","src":"9073:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9059:3:7","nodeType":"YulIdentifier","src":"9059:3:7"},"nativeSrc":"9059:19:7","nodeType":"YulFunctionCall","src":"9059:19:7"},"variableNames":[{"name":"srcPtr_1","nativeSrc":"9047:8:7","nodeType":"YulIdentifier","src":"9047:8:7"}]}]},"condition":{"arguments":[{"name":"i_1","nativeSrc":"8910:3:7","nodeType":"YulIdentifier","src":"8910:3:7"},{"kind":"number","nativeSrc":"8915:4:7","nodeType":"YulLiteral","src":"8915:4:7","type":"","value":"0x03"}],"functionName":{"name":"lt","nativeSrc":"8907:2:7","nodeType":"YulIdentifier","src":"8907:2:7"},"nativeSrc":"8907:13:7","nodeType":"YulFunctionCall","src":"8907:13:7"},"nativeSrc":"8899:189:7","nodeType":"YulForLoop","post":{"nativeSrc":"8921:22:7","nodeType":"YulBlock","src":"8921:22:7","statements":[{"nativeSrc":"8923:18:7","nodeType":"YulAssignment","src":"8923:18:7","value":{"arguments":[{"name":"i_1","nativeSrc":"8934:3:7","nodeType":"YulIdentifier","src":"8934:3:7"},{"kind":"number","nativeSrc":"8939:1:7","nodeType":"YulLiteral","src":"8939:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8930:3:7","nodeType":"YulIdentifier","src":"8930:3:7"},"nativeSrc":"8930:11:7","nodeType":"YulFunctionCall","src":"8930:11:7"},"variableNames":[{"name":"i_1","nativeSrc":"8923:3:7","nodeType":"YulIdentifier","src":"8923:3:7"}]}]},"pre":{"nativeSrc":"8903:3:7","nodeType":"YulBlock","src":"8903:3:7","statements":[]},"src":"8899:189:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9108:9:7","nodeType":"YulIdentifier","src":"9108:9:7"},{"kind":"number","nativeSrc":"9119:3:7","nodeType":"YulLiteral","src":"9119:3:7","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"9104:3:7","nodeType":"YulIdentifier","src":"9104:3:7"},"nativeSrc":"9104:19:7","nodeType":"YulFunctionCall","src":"9104:19:7"},{"name":"value2","nativeSrc":"9125:6:7","nodeType":"YulIdentifier","src":"9125:6:7"}],"functionName":{"name":"mstore","nativeSrc":"9097:6:7","nodeType":"YulIdentifier","src":"9097:6:7"},"nativeSrc":"9097:35:7","nodeType":"YulFunctionCall","src":"9097:35:7"},"nativeSrc":"9097:35:7","nodeType":"YulExpressionStatement","src":"9097:35:7"}]},"name":"abi_encode_tuple_t_array$_t_bool_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr_t_uint256__to_t_array$_t_bool_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"8197:941:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8393:9:7","nodeType":"YulTypedName","src":"8393:9:7","type":""},{"name":"value2","nativeSrc":"8404:6:7","nodeType":"YulTypedName","src":"8404:6:7","type":""},{"name":"value1","nativeSrc":"8412:6:7","nodeType":"YulTypedName","src":"8412:6:7","type":""},{"name":"value0","nativeSrc":"8420:6:7","nodeType":"YulTypedName","src":"8420:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8431:4:7","nodeType":"YulTypedName","src":"8431:4:7","type":""}],"src":"8197:941:7"},{"body":{"nativeSrc":"9221:124:7","nodeType":"YulBlock","src":"9221:124:7","statements":[{"body":{"nativeSrc":"9267:16:7","nodeType":"YulBlock","src":"9267:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9276:1:7","nodeType":"YulLiteral","src":"9276:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"9279:1:7","nodeType":"YulLiteral","src":"9279:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9269:6:7","nodeType":"YulIdentifier","src":"9269:6:7"},"nativeSrc":"9269:12:7","nodeType":"YulFunctionCall","src":"9269:12:7"},"nativeSrc":"9269:12:7","nodeType":"YulExpressionStatement","src":"9269:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9242:7:7","nodeType":"YulIdentifier","src":"9242:7:7"},{"name":"headStart","nativeSrc":"9251:9:7","nodeType":"YulIdentifier","src":"9251:9:7"}],"functionName":{"name":"sub","nativeSrc":"9238:3:7","nodeType":"YulIdentifier","src":"9238:3:7"},"nativeSrc":"9238:23:7","nodeType":"YulFunctionCall","src":"9238:23:7"},{"kind":"number","nativeSrc":"9263:2:7","nodeType":"YulLiteral","src":"9263:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9234:3:7","nodeType":"YulIdentifier","src":"9234:3:7"},"nativeSrc":"9234:32:7","nodeType":"YulFunctionCall","src":"9234:32:7"},"nativeSrc":"9231:52:7","nodeType":"YulIf","src":"9231:52:7"},{"nativeSrc":"9292:47:7","nodeType":"YulAssignment","src":"9292:47:7","value":{"arguments":[{"name":"headStart","nativeSrc":"9329:9:7","nodeType":"YulIdentifier","src":"9329:9:7"}],"functionName":{"name":"abi_decode_address_payable","nativeSrc":"9302:26:7","nodeType":"YulIdentifier","src":"9302:26:7"},"nativeSrc":"9302:37:7","nodeType":"YulFunctionCall","src":"9302:37:7"},"variableNames":[{"name":"value0","nativeSrc":"9292:6:7","nodeType":"YulIdentifier","src":"9292:6:7"}]}]},"name":"abi_decode_tuple_t_address_payable","nativeSrc":"9143:202:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9187:9:7","nodeType":"YulTypedName","src":"9187:9:7","type":""},{"name":"dataEnd","nativeSrc":"9198:7:7","nodeType":"YulTypedName","src":"9198:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9210:6:7","nodeType":"YulTypedName","src":"9210:6:7","type":""}],"src":"9143:202:7"},{"body":{"nativeSrc":"9423:275:7","nodeType":"YulBlock","src":"9423:275:7","statements":[{"body":{"nativeSrc":"9472:16:7","nodeType":"YulBlock","src":"9472:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9481:1:7","nodeType":"YulLiteral","src":"9481:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"9484:1:7","nodeType":"YulLiteral","src":"9484:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9474:6:7","nodeType":"YulIdentifier","src":"9474:6:7"},"nativeSrc":"9474:12:7","nodeType":"YulFunctionCall","src":"9474:12:7"},"nativeSrc":"9474:12:7","nodeType":"YulExpressionStatement","src":"9474:12:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9451:6:7","nodeType":"YulIdentifier","src":"9451:6:7"},{"kind":"number","nativeSrc":"9459:4:7","nodeType":"YulLiteral","src":"9459:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"9447:3:7","nodeType":"YulIdentifier","src":"9447:3:7"},"nativeSrc":"9447:17:7","nodeType":"YulFunctionCall","src":"9447:17:7"},{"name":"end","nativeSrc":"9466:3:7","nodeType":"YulIdentifier","src":"9466:3:7"}],"functionName":{"name":"slt","nativeSrc":"9443:3:7","nodeType":"YulIdentifier","src":"9443:3:7"},"nativeSrc":"9443:27:7","nodeType":"YulFunctionCall","src":"9443:27:7"}],"functionName":{"name":"iszero","nativeSrc":"9436:6:7","nodeType":"YulIdentifier","src":"9436:6:7"},"nativeSrc":"9436:35:7","nodeType":"YulFunctionCall","src":"9436:35:7"},"nativeSrc":"9433:55:7","nodeType":"YulIf","src":"9433:55:7"},{"nativeSrc":"9497:30:7","nodeType":"YulAssignment","src":"9497:30:7","value":{"arguments":[{"name":"offset","nativeSrc":"9520:6:7","nodeType":"YulIdentifier","src":"9520:6:7"}],"functionName":{"name":"calldataload","nativeSrc":"9507:12:7","nodeType":"YulIdentifier","src":"9507:12:7"},"nativeSrc":"9507:20:7","nodeType":"YulFunctionCall","src":"9507:20:7"},"variableNames":[{"name":"length","nativeSrc":"9497:6:7","nodeType":"YulIdentifier","src":"9497:6:7"}]},{"body":{"nativeSrc":"9570:16:7","nodeType":"YulBlock","src":"9570:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9579:1:7","nodeType":"YulLiteral","src":"9579:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"9582:1:7","nodeType":"YulLiteral","src":"9582:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9572:6:7","nodeType":"YulIdentifier","src":"9572:6:7"},"nativeSrc":"9572:12:7","nodeType":"YulFunctionCall","src":"9572:12:7"},"nativeSrc":"9572:12:7","nodeType":"YulExpressionStatement","src":"9572:12:7"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"9542:6:7","nodeType":"YulIdentifier","src":"9542:6:7"},{"kind":"number","nativeSrc":"9550:18:7","nodeType":"YulLiteral","src":"9550:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9539:2:7","nodeType":"YulIdentifier","src":"9539:2:7"},"nativeSrc":"9539:30:7","nodeType":"YulFunctionCall","src":"9539:30:7"},"nativeSrc":"9536:50:7","nodeType":"YulIf","src":"9536:50:7"},{"nativeSrc":"9595:29:7","nodeType":"YulAssignment","src":"9595:29:7","value":{"arguments":[{"name":"offset","nativeSrc":"9611:6:7","nodeType":"YulIdentifier","src":"9611:6:7"},{"kind":"number","nativeSrc":"9619:4:7","nodeType":"YulLiteral","src":"9619:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9607:3:7","nodeType":"YulIdentifier","src":"9607:3:7"},"nativeSrc":"9607:17:7","nodeType":"YulFunctionCall","src":"9607:17:7"},"variableNames":[{"name":"arrayPos","nativeSrc":"9595:8:7","nodeType":"YulIdentifier","src":"9595:8:7"}]},{"body":{"nativeSrc":"9676:16:7","nodeType":"YulBlock","src":"9676:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9685:1:7","nodeType":"YulLiteral","src":"9685:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"9688:1:7","nodeType":"YulLiteral","src":"9688:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9678:6:7","nodeType":"YulIdentifier","src":"9678:6:7"},"nativeSrc":"9678:12:7","nodeType":"YulFunctionCall","src":"9678:12:7"},"nativeSrc":"9678:12:7","nodeType":"YulExpressionStatement","src":"9678:12:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9647:6:7","nodeType":"YulIdentifier","src":"9647:6:7"},{"name":"length","nativeSrc":"9655:6:7","nodeType":"YulIdentifier","src":"9655:6:7"}],"functionName":{"name":"add","nativeSrc":"9643:3:7","nodeType":"YulIdentifier","src":"9643:3:7"},"nativeSrc":"9643:19:7","nodeType":"YulFunctionCall","src":"9643:19:7"},{"kind":"number","nativeSrc":"9664:4:7","nodeType":"YulLiteral","src":"9664:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9639:3:7","nodeType":"YulIdentifier","src":"9639:3:7"},"nativeSrc":"9639:30:7","nodeType":"YulFunctionCall","src":"9639:30:7"},{"name":"end","nativeSrc":"9671:3:7","nodeType":"YulIdentifier","src":"9671:3:7"}],"functionName":{"name":"gt","nativeSrc":"9636:2:7","nodeType":"YulIdentifier","src":"9636:2:7"},"nativeSrc":"9636:39:7","nodeType":"YulFunctionCall","src":"9636:39:7"},"nativeSrc":"9633:59:7","nodeType":"YulIf","src":"9633:59:7"}]},"name":"abi_decode_string_calldata","nativeSrc":"9350:348:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9386:6:7","nodeType":"YulTypedName","src":"9386:6:7","type":""},{"name":"end","nativeSrc":"9394:3:7","nodeType":"YulTypedName","src":"9394:3:7","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"9402:8:7","nodeType":"YulTypedName","src":"9402:8:7","type":""},{"name":"length","nativeSrc":"9412:6:7","nodeType":"YulTypedName","src":"9412:6:7","type":""}],"src":"9350:348:7"},{"body":{"nativeSrc":"9810:418:7","nodeType":"YulBlock","src":"9810:418:7","statements":[{"body":{"nativeSrc":"9856:16:7","nodeType":"YulBlock","src":"9856:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9865:1:7","nodeType":"YulLiteral","src":"9865:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"9868:1:7","nodeType":"YulLiteral","src":"9868:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9858:6:7","nodeType":"YulIdentifier","src":"9858:6:7"},"nativeSrc":"9858:12:7","nodeType":"YulFunctionCall","src":"9858:12:7"},"nativeSrc":"9858:12:7","nodeType":"YulExpressionStatement","src":"9858:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9831:7:7","nodeType":"YulIdentifier","src":"9831:7:7"},{"name":"headStart","nativeSrc":"9840:9:7","nodeType":"YulIdentifier","src":"9840:9:7"}],"functionName":{"name":"sub","nativeSrc":"9827:3:7","nodeType":"YulIdentifier","src":"9827:3:7"},"nativeSrc":"9827:23:7","nodeType":"YulFunctionCall","src":"9827:23:7"},{"kind":"number","nativeSrc":"9852:2:7","nodeType":"YulLiteral","src":"9852:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"9823:3:7","nodeType":"YulIdentifier","src":"9823:3:7"},"nativeSrc":"9823:32:7","nodeType":"YulFunctionCall","src":"9823:32:7"},"nativeSrc":"9820:52:7","nodeType":"YulIf","src":"9820:52:7"},{"nativeSrc":"9881:14:7","nodeType":"YulVariableDeclaration","src":"9881:14:7","value":{"kind":"number","nativeSrc":"9894:1:7","nodeType":"YulLiteral","src":"9894:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"9885:5:7","nodeType":"YulTypedName","src":"9885:5:7","type":""}]},{"nativeSrc":"9904:32:7","nodeType":"YulAssignment","src":"9904:32:7","value":{"arguments":[{"name":"headStart","nativeSrc":"9926:9:7","nodeType":"YulIdentifier","src":"9926:9:7"}],"functionName":{"name":"calldataload","nativeSrc":"9913:12:7","nodeType":"YulIdentifier","src":"9913:12:7"},"nativeSrc":"9913:23:7","nodeType":"YulFunctionCall","src":"9913:23:7"},"variableNames":[{"name":"value","nativeSrc":"9904:5:7","nodeType":"YulIdentifier","src":"9904:5:7"}]},{"nativeSrc":"9945:15:7","nodeType":"YulAssignment","src":"9945:15:7","value":{"name":"value","nativeSrc":"9955:5:7","nodeType":"YulIdentifier","src":"9955:5:7"},"variableNames":[{"name":"value0","nativeSrc":"9945:6:7","nodeType":"YulIdentifier","src":"9945:6:7"}]},{"nativeSrc":"9969:46:7","nodeType":"YulVariableDeclaration","src":"9969:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10000:9:7","nodeType":"YulIdentifier","src":"10000:9:7"},{"kind":"number","nativeSrc":"10011:2:7","nodeType":"YulLiteral","src":"10011:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9996:3:7","nodeType":"YulIdentifier","src":"9996:3:7"},"nativeSrc":"9996:18:7","nodeType":"YulFunctionCall","src":"9996:18:7"}],"functionName":{"name":"calldataload","nativeSrc":"9983:12:7","nodeType":"YulIdentifier","src":"9983:12:7"},"nativeSrc":"9983:32:7","nodeType":"YulFunctionCall","src":"9983:32:7"},"variables":[{"name":"offset","nativeSrc":"9973:6:7","nodeType":"YulTypedName","src":"9973:6:7","type":""}]},{"body":{"nativeSrc":"10058:16:7","nodeType":"YulBlock","src":"10058:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10067:1:7","nodeType":"YulLiteral","src":"10067:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"10070:1:7","nodeType":"YulLiteral","src":"10070:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10060:6:7","nodeType":"YulIdentifier","src":"10060:6:7"},"nativeSrc":"10060:12:7","nodeType":"YulFunctionCall","src":"10060:12:7"},"nativeSrc":"10060:12:7","nodeType":"YulExpressionStatement","src":"10060:12:7"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10030:6:7","nodeType":"YulIdentifier","src":"10030:6:7"},{"kind":"number","nativeSrc":"10038:18:7","nodeType":"YulLiteral","src":"10038:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10027:2:7","nodeType":"YulIdentifier","src":"10027:2:7"},"nativeSrc":"10027:30:7","nodeType":"YulFunctionCall","src":"10027:30:7"},"nativeSrc":"10024:50:7","nodeType":"YulIf","src":"10024:50:7"},{"nativeSrc":"10083:85:7","nodeType":"YulVariableDeclaration","src":"10083:85:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10140:9:7","nodeType":"YulIdentifier","src":"10140:9:7"},{"name":"offset","nativeSrc":"10151:6:7","nodeType":"YulIdentifier","src":"10151:6:7"}],"functionName":{"name":"add","nativeSrc":"10136:3:7","nodeType":"YulIdentifier","src":"10136:3:7"},"nativeSrc":"10136:22:7","nodeType":"YulFunctionCall","src":"10136:22:7"},{"name":"dataEnd","nativeSrc":"10160:7:7","nodeType":"YulIdentifier","src":"10160:7:7"}],"functionName":{"name":"abi_decode_string_calldata","nativeSrc":"10109:26:7","nodeType":"YulIdentifier","src":"10109:26:7"},"nativeSrc":"10109:59:7","nodeType":"YulFunctionCall","src":"10109:59:7"},"variables":[{"name":"value1_1","nativeSrc":"10087:8:7","nodeType":"YulTypedName","src":"10087:8:7","type":""},{"name":"value2_1","nativeSrc":"10097:8:7","nodeType":"YulTypedName","src":"10097:8:7","type":""}]},{"nativeSrc":"10177:18:7","nodeType":"YulAssignment","src":"10177:18:7","value":{"name":"value1_1","nativeSrc":"10187:8:7","nodeType":"YulIdentifier","src":"10187:8:7"},"variableNames":[{"name":"value1","nativeSrc":"10177:6:7","nodeType":"YulIdentifier","src":"10177:6:7"}]},{"nativeSrc":"10204:18:7","nodeType":"YulAssignment","src":"10204:18:7","value":{"name":"value2_1","nativeSrc":"10214:8:7","nodeType":"YulIdentifier","src":"10214:8:7"},"variableNames":[{"name":"value2","nativeSrc":"10204:6:7","nodeType":"YulIdentifier","src":"10204:6:7"}]}]},"name":"abi_decode_tuple_t_uint256t_string_calldata_ptr","nativeSrc":"9703:525:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9760:9:7","nodeType":"YulTypedName","src":"9760:9:7","type":""},{"name":"dataEnd","nativeSrc":"9771:7:7","nodeType":"YulTypedName","src":"9771:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9783:6:7","nodeType":"YulTypedName","src":"9783:6:7","type":""},{"name":"value1","nativeSrc":"9791:6:7","nodeType":"YulTypedName","src":"9791:6:7","type":""},{"name":"value2","nativeSrc":"9799:6:7","nodeType":"YulTypedName","src":"9799:6:7","type":""}],"src":"9703:525:7"},{"body":{"nativeSrc":"10328:221:7","nodeType":"YulBlock","src":"10328:221:7","statements":[{"body":{"nativeSrc":"10374:16:7","nodeType":"YulBlock","src":"10374:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10383:1:7","nodeType":"YulLiteral","src":"10383:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"10386:1:7","nodeType":"YulLiteral","src":"10386:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10376:6:7","nodeType":"YulIdentifier","src":"10376:6:7"},"nativeSrc":"10376:12:7","nodeType":"YulFunctionCall","src":"10376:12:7"},"nativeSrc":"10376:12:7","nodeType":"YulExpressionStatement","src":"10376:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10349:7:7","nodeType":"YulIdentifier","src":"10349:7:7"},{"name":"headStart","nativeSrc":"10358:9:7","nodeType":"YulIdentifier","src":"10358:9:7"}],"functionName":{"name":"sub","nativeSrc":"10345:3:7","nodeType":"YulIdentifier","src":"10345:3:7"},"nativeSrc":"10345:23:7","nodeType":"YulFunctionCall","src":"10345:23:7"},{"kind":"number","nativeSrc":"10370:2:7","nodeType":"YulLiteral","src":"10370:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10341:3:7","nodeType":"YulIdentifier","src":"10341:3:7"},"nativeSrc":"10341:32:7","nodeType":"YulFunctionCall","src":"10341:32:7"},"nativeSrc":"10338:52:7","nodeType":"YulIf","src":"10338:52:7"},{"nativeSrc":"10399:14:7","nodeType":"YulVariableDeclaration","src":"10399:14:7","value":{"kind":"number","nativeSrc":"10412:1:7","nodeType":"YulLiteral","src":"10412:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"10403:5:7","nodeType":"YulTypedName","src":"10403:5:7","type":""}]},{"nativeSrc":"10422:32:7","nodeType":"YulAssignment","src":"10422:32:7","value":{"arguments":[{"name":"headStart","nativeSrc":"10444:9:7","nodeType":"YulIdentifier","src":"10444:9:7"}],"functionName":{"name":"calldataload","nativeSrc":"10431:12:7","nodeType":"YulIdentifier","src":"10431:12:7"},"nativeSrc":"10431:23:7","nodeType":"YulFunctionCall","src":"10431:23:7"},"variableNames":[{"name":"value","nativeSrc":"10422:5:7","nodeType":"YulIdentifier","src":"10422:5:7"}]},{"nativeSrc":"10463:15:7","nodeType":"YulAssignment","src":"10463:15:7","value":{"name":"value","nativeSrc":"10473:5:7","nodeType":"YulIdentifier","src":"10473:5:7"},"variableNames":[{"name":"value0","nativeSrc":"10463:6:7","nodeType":"YulIdentifier","src":"10463:6:7"}]},{"nativeSrc":"10487:56:7","nodeType":"YulAssignment","src":"10487:56:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10528:9:7","nodeType":"YulIdentifier","src":"10528:9:7"},{"kind":"number","nativeSrc":"10539:2:7","nodeType":"YulLiteral","src":"10539:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10524:3:7","nodeType":"YulIdentifier","src":"10524:3:7"},"nativeSrc":"10524:18:7","nodeType":"YulFunctionCall","src":"10524:18:7"}],"functionName":{"name":"abi_decode_address_payable","nativeSrc":"10497:26:7","nodeType":"YulIdentifier","src":"10497:26:7"},"nativeSrc":"10497:46:7","nodeType":"YulFunctionCall","src":"10497:46:7"},"variableNames":[{"name":"value1","nativeSrc":"10487:6:7","nodeType":"YulIdentifier","src":"10487:6:7"}]}]},"name":"abi_decode_tuple_t_uint256t_address_payable","nativeSrc":"10233:316:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10286:9:7","nodeType":"YulTypedName","src":"10286:9:7","type":""},{"name":"dataEnd","nativeSrc":"10297:7:7","nodeType":"YulTypedName","src":"10297:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10309:6:7","nodeType":"YulTypedName","src":"10309:6:7","type":""},{"name":"value1","nativeSrc":"10317:6:7","nodeType":"YulTypedName","src":"10317:6:7","type":""}],"src":"10233:316:7"},{"body":{"nativeSrc":"10783:1086:7","nodeType":"YulBlock","src":"10783:1086:7","statements":[{"nativeSrc":"10793:32:7","nodeType":"YulVariableDeclaration","src":"10793:32:7","value":{"arguments":[{"name":"headStart","nativeSrc":"10811:9:7","nodeType":"YulIdentifier","src":"10811:9:7"},{"kind":"number","nativeSrc":"10822:2:7","nodeType":"YulLiteral","src":"10822:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10807:3:7","nodeType":"YulIdentifier","src":"10807:3:7"},"nativeSrc":"10807:18:7","nodeType":"YulFunctionCall","src":"10807:18:7"},"variables":[{"name":"tail_1","nativeSrc":"10797:6:7","nodeType":"YulTypedName","src":"10797:6:7","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10841:9:7","nodeType":"YulIdentifier","src":"10841:9:7"},{"name":"value0","nativeSrc":"10852:6:7","nodeType":"YulIdentifier","src":"10852:6:7"}],"functionName":{"name":"mstore","nativeSrc":"10834:6:7","nodeType":"YulIdentifier","src":"10834:6:7"},"nativeSrc":"10834:25:7","nodeType":"YulFunctionCall","src":"10834:25:7"},"nativeSrc":"10834:25:7","nodeType":"YulExpressionStatement","src":"10834:25:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10879:9:7","nodeType":"YulIdentifier","src":"10879:9:7"},{"kind":"number","nativeSrc":"10890:2:7","nodeType":"YulLiteral","src":"10890:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10875:3:7","nodeType":"YulIdentifier","src":"10875:3:7"},"nativeSrc":"10875:18:7","nodeType":"YulFunctionCall","src":"10875:18:7"},{"kind":"number","nativeSrc":"10895:2:7","nodeType":"YulLiteral","src":"10895:2:7","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"10868:6:7","nodeType":"YulIdentifier","src":"10868:6:7"},"nativeSrc":"10868:30:7","nodeType":"YulFunctionCall","src":"10868:30:7"},"nativeSrc":"10868:30:7","nodeType":"YulExpressionStatement","src":"10868:30:7"},{"nativeSrc":"10907:17:7","nodeType":"YulVariableDeclaration","src":"10907:17:7","value":{"name":"tail_1","nativeSrc":"10918:6:7","nodeType":"YulIdentifier","src":"10918:6:7"},"variables":[{"name":"pos","nativeSrc":"10911:3:7","nodeType":"YulTypedName","src":"10911:3:7","type":""}]},{"nativeSrc":"10933:27:7","nodeType":"YulVariableDeclaration","src":"10933:27:7","value":{"arguments":[{"name":"value1","nativeSrc":"10953:6:7","nodeType":"YulIdentifier","src":"10953:6:7"}],"functionName":{"name":"mload","nativeSrc":"10947:5:7","nodeType":"YulIdentifier","src":"10947:5:7"},"nativeSrc":"10947:13:7","nodeType":"YulFunctionCall","src":"10947:13:7"},"variables":[{"name":"length","nativeSrc":"10937:6:7","nodeType":"YulTypedName","src":"10937:6:7","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"10976:6:7","nodeType":"YulIdentifier","src":"10976:6:7"},{"name":"length","nativeSrc":"10984:6:7","nodeType":"YulIdentifier","src":"10984:6:7"}],"functionName":{"name":"mstore","nativeSrc":"10969:6:7","nodeType":"YulIdentifier","src":"10969:6:7"},"nativeSrc":"10969:22:7","nodeType":"YulFunctionCall","src":"10969:22:7"},"nativeSrc":"10969:22:7","nodeType":"YulExpressionStatement","src":"10969:22:7"},{"nativeSrc":"11000:25:7","nodeType":"YulAssignment","src":"11000:25:7","value":{"arguments":[{"name":"headStart","nativeSrc":"11011:9:7","nodeType":"YulIdentifier","src":"11011:9:7"},{"kind":"number","nativeSrc":"11022:2:7","nodeType":"YulLiteral","src":"11022:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11007:3:7","nodeType":"YulIdentifier","src":"11007:3:7"},"nativeSrc":"11007:18:7","nodeType":"YulFunctionCall","src":"11007:18:7"},"variableNames":[{"name":"pos","nativeSrc":"11000:3:7","nodeType":"YulIdentifier","src":"11000:3:7"}]},{"nativeSrc":"11034:53:7","nodeType":"YulVariableDeclaration","src":"11034:53:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11056:9:7","nodeType":"YulIdentifier","src":"11056:9:7"},{"arguments":[{"kind":"number","nativeSrc":"11071:1:7","nodeType":"YulLiteral","src":"11071:1:7","type":"","value":"5"},{"name":"length","nativeSrc":"11074:6:7","nodeType":"YulIdentifier","src":"11074:6:7"}],"functionName":{"name":"shl","nativeSrc":"11067:3:7","nodeType":"YulIdentifier","src":"11067:3:7"},"nativeSrc":"11067:14:7","nodeType":"YulFunctionCall","src":"11067:14:7"}],"functionName":{"name":"add","nativeSrc":"11052:3:7","nodeType":"YulIdentifier","src":"11052:3:7"},"nativeSrc":"11052:30:7","nodeType":"YulFunctionCall","src":"11052:30:7"},{"kind":"number","nativeSrc":"11084:2:7","nodeType":"YulLiteral","src":"11084:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11048:3:7","nodeType":"YulIdentifier","src":"11048:3:7"},"nativeSrc":"11048:39:7","nodeType":"YulFunctionCall","src":"11048:39:7"},"variables":[{"name":"tail_2","nativeSrc":"11038:6:7","nodeType":"YulTypedName","src":"11038:6:7","type":""}]},{"nativeSrc":"11096:29:7","nodeType":"YulVariableDeclaration","src":"11096:29:7","value":{"arguments":[{"name":"value1","nativeSrc":"11114:6:7","nodeType":"YulIdentifier","src":"11114:6:7"},{"kind":"number","nativeSrc":"11122:2:7","nodeType":"YulLiteral","src":"11122:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11110:3:7","nodeType":"YulIdentifier","src":"11110:3:7"},"nativeSrc":"11110:15:7","nodeType":"YulFunctionCall","src":"11110:15:7"},"variables":[{"name":"srcPtr","nativeSrc":"11100:6:7","nodeType":"YulTypedName","src":"11100:6:7","type":""}]},{"nativeSrc":"11134:10:7","nodeType":"YulVariableDeclaration","src":"11134:10:7","value":{"kind":"number","nativeSrc":"11143:1:7","nodeType":"YulLiteral","src":"11143:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"11138:1:7","nodeType":"YulTypedName","src":"11138:1:7","type":""}]},{"body":{"nativeSrc":"11202:638:7","nodeType":"YulBlock","src":"11202:638:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11223:3:7","nodeType":"YulIdentifier","src":"11223:3:7"},{"arguments":[{"arguments":[{"name":"tail_2","nativeSrc":"11236:6:7","nodeType":"YulIdentifier","src":"11236:6:7"},{"name":"headStart","nativeSrc":"11244:9:7","nodeType":"YulIdentifier","src":"11244:9:7"}],"functionName":{"name":"sub","nativeSrc":"11232:3:7","nodeType":"YulIdentifier","src":"11232:3:7"},"nativeSrc":"11232:22:7","nodeType":"YulFunctionCall","src":"11232:22:7"},{"arguments":[{"kind":"number","nativeSrc":"11260:2:7","nodeType":"YulLiteral","src":"11260:2:7","type":"","value":"95"}],"functionName":{"name":"not","nativeSrc":"11256:3:7","nodeType":"YulIdentifier","src":"11256:3:7"},"nativeSrc":"11256:7:7","nodeType":"YulFunctionCall","src":"11256:7:7"}],"functionName":{"name":"add","nativeSrc":"11228:3:7","nodeType":"YulIdentifier","src":"11228:3:7"},"nativeSrc":"11228:36:7","nodeType":"YulFunctionCall","src":"11228:36:7"}],"functionName":{"name":"mstore","nativeSrc":"11216:6:7","nodeType":"YulIdentifier","src":"11216:6:7"},"nativeSrc":"11216:49:7","nodeType":"YulFunctionCall","src":"11216:49:7"},"nativeSrc":"11216:49:7","nodeType":"YulExpressionStatement","src":"11216:49:7"},{"nativeSrc":"11278:23:7","nodeType":"YulVariableDeclaration","src":"11278:23:7","value":{"arguments":[{"name":"srcPtr","nativeSrc":"11294:6:7","nodeType":"YulIdentifier","src":"11294:6:7"}],"functionName":{"name":"mload","nativeSrc":"11288:5:7","nodeType":"YulIdentifier","src":"11288:5:7"},"nativeSrc":"11288:13:7","nodeType":"YulFunctionCall","src":"11288:13:7"},"variables":[{"name":"_1","nativeSrc":"11282:2:7","nodeType":"YulTypedName","src":"11282:2:7","type":""}]},{"nativeSrc":"11314:19:7","nodeType":"YulVariableDeclaration","src":"11314:19:7","value":{"name":"tail_2","nativeSrc":"11327:6:7","nodeType":"YulIdentifier","src":"11327:6:7"},"variables":[{"name":"pos_1","nativeSrc":"11318:5:7","nodeType":"YulTypedName","src":"11318:5:7","type":""}]},{"nativeSrc":"11346:25:7","nodeType":"YulVariableDeclaration","src":"11346:25:7","value":{"arguments":[{"name":"_1","nativeSrc":"11368:2:7","nodeType":"YulIdentifier","src":"11368:2:7"}],"functionName":{"name":"mload","nativeSrc":"11362:5:7","nodeType":"YulIdentifier","src":"11362:5:7"},"nativeSrc":"11362:9:7","nodeType":"YulFunctionCall","src":"11362:9:7"},"variables":[{"name":"length_1","nativeSrc":"11350:8:7","nodeType":"YulTypedName","src":"11350:8:7","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nativeSrc":"11391:6:7","nodeType":"YulIdentifier","src":"11391:6:7"},{"name":"length_1","nativeSrc":"11399:8:7","nodeType":"YulIdentifier","src":"11399:8:7"}],"functionName":{"name":"mstore","nativeSrc":"11384:6:7","nodeType":"YulIdentifier","src":"11384:6:7"},"nativeSrc":"11384:24:7","nodeType":"YulFunctionCall","src":"11384:24:7"},"nativeSrc":"11384:24:7","nodeType":"YulExpressionStatement","src":"11384:24:7"},{"nativeSrc":"11421:24:7","nodeType":"YulAssignment","src":"11421:24:7","value":{"arguments":[{"name":"tail_2","nativeSrc":"11434:6:7","nodeType":"YulIdentifier","src":"11434:6:7"},{"kind":"number","nativeSrc":"11442:2:7","nodeType":"YulLiteral","src":"11442:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11430:3:7","nodeType":"YulIdentifier","src":"11430:3:7"},"nativeSrc":"11430:15:7","nodeType":"YulFunctionCall","src":"11430:15:7"},"variableNames":[{"name":"pos_1","nativeSrc":"11421:5:7","nodeType":"YulIdentifier","src":"11421:5:7"}]},{"nativeSrc":"11458:27:7","nodeType":"YulVariableDeclaration","src":"11458:27:7","value":{"arguments":[{"name":"_1","nativeSrc":"11478:2:7","nodeType":"YulIdentifier","src":"11478:2:7"},{"kind":"number","nativeSrc":"11482:2:7","nodeType":"YulLiteral","src":"11482:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11474:3:7","nodeType":"YulIdentifier","src":"11474:3:7"},"nativeSrc":"11474:11:7","nodeType":"YulFunctionCall","src":"11474:11:7"},"variables":[{"name":"srcPtr_1","nativeSrc":"11462:8:7","nodeType":"YulTypedName","src":"11462:8:7","type":""}]},{"nativeSrc":"11498:12:7","nodeType":"YulVariableDeclaration","src":"11498:12:7","value":{"kind":"number","nativeSrc":"11509:1:7","nodeType":"YulLiteral","src":"11509:1:7","type":"","value":"0"},"variables":[{"name":"i_1","nativeSrc":"11502:3:7","nodeType":"YulTypedName","src":"11502:3:7","type":""}]},{"body":{"nativeSrc":"11584:148:7","nodeType":"YulBlock","src":"11584:148:7","statements":[{"expression":{"arguments":[{"name":"pos_1","nativeSrc":"11609:5:7","nodeType":"YulIdentifier","src":"11609:5:7"},{"arguments":[{"name":"srcPtr_1","nativeSrc":"11622:8:7","nodeType":"YulIdentifier","src":"11622:8:7"}],"functionName":{"name":"mload","nativeSrc":"11616:5:7","nodeType":"YulIdentifier","src":"11616:5:7"},"nativeSrc":"11616:15:7","nodeType":"YulFunctionCall","src":"11616:15:7"}],"functionName":{"name":"mstore","nativeSrc":"11602:6:7","nodeType":"YulIdentifier","src":"11602:6:7"},"nativeSrc":"11602:30:7","nodeType":"YulFunctionCall","src":"11602:30:7"},"nativeSrc":"11602:30:7","nodeType":"YulExpressionStatement","src":"11602:30:7"},{"nativeSrc":"11649:23:7","nodeType":"YulAssignment","src":"11649:23:7","value":{"arguments":[{"name":"pos_1","nativeSrc":"11662:5:7","nodeType":"YulIdentifier","src":"11662:5:7"},{"kind":"number","nativeSrc":"11669:2:7","nodeType":"YulLiteral","src":"11669:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11658:3:7","nodeType":"YulIdentifier","src":"11658:3:7"},"nativeSrc":"11658:14:7","nodeType":"YulFunctionCall","src":"11658:14:7"},"variableNames":[{"name":"pos_1","nativeSrc":"11649:5:7","nodeType":"YulIdentifier","src":"11649:5:7"}]},{"nativeSrc":"11689:29:7","nodeType":"YulAssignment","src":"11689:29:7","value":{"arguments":[{"name":"srcPtr_1","nativeSrc":"11705:8:7","nodeType":"YulIdentifier","src":"11705:8:7"},{"kind":"number","nativeSrc":"11715:2:7","nodeType":"YulLiteral","src":"11715:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11701:3:7","nodeType":"YulIdentifier","src":"11701:3:7"},"nativeSrc":"11701:17:7","nodeType":"YulFunctionCall","src":"11701:17:7"},"variableNames":[{"name":"srcPtr_1","nativeSrc":"11689:8:7","nodeType":"YulIdentifier","src":"11689:8:7"}]}]},"condition":{"arguments":[{"name":"i_1","nativeSrc":"11534:3:7","nodeType":"YulIdentifier","src":"11534:3:7"},{"name":"length_1","nativeSrc":"11539:8:7","nodeType":"YulIdentifier","src":"11539:8:7"}],"functionName":{"name":"lt","nativeSrc":"11531:2:7","nodeType":"YulIdentifier","src":"11531:2:7"},"nativeSrc":"11531:17:7","nodeType":"YulFunctionCall","src":"11531:17:7"},"nativeSrc":"11523:209:7","nodeType":"YulForLoop","post":{"nativeSrc":"11549:22:7","nodeType":"YulBlock","src":"11549:22:7","statements":[{"nativeSrc":"11551:18:7","nodeType":"YulAssignment","src":"11551:18:7","value":{"arguments":[{"name":"i_1","nativeSrc":"11562:3:7","nodeType":"YulIdentifier","src":"11562:3:7"},{"kind":"number","nativeSrc":"11567:1:7","nodeType":"YulLiteral","src":"11567:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"11558:3:7","nodeType":"YulIdentifier","src":"11558:3:7"},"nativeSrc":"11558:11:7","nodeType":"YulFunctionCall","src":"11558:11:7"},"variableNames":[{"name":"i_1","nativeSrc":"11551:3:7","nodeType":"YulIdentifier","src":"11551:3:7"}]}]},"pre":{"nativeSrc":"11527:3:7","nodeType":"YulBlock","src":"11527:3:7","statements":[]},"src":"11523:209:7"},{"nativeSrc":"11745:15:7","nodeType":"YulAssignment","src":"11745:15:7","value":{"name":"pos_1","nativeSrc":"11755:5:7","nodeType":"YulIdentifier","src":"11755:5:7"},"variableNames":[{"name":"tail_2","nativeSrc":"11745:6:7","nodeType":"YulIdentifier","src":"11745:6:7"}]},{"nativeSrc":"11773:25:7","nodeType":"YulAssignment","src":"11773:25:7","value":{"arguments":[{"name":"srcPtr","nativeSrc":"11787:6:7","nodeType":"YulIdentifier","src":"11787:6:7"},{"kind":"number","nativeSrc":"11795:2:7","nodeType":"YulLiteral","src":"11795:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11783:3:7","nodeType":"YulIdentifier","src":"11783:3:7"},"nativeSrc":"11783:15:7","nodeType":"YulFunctionCall","src":"11783:15:7"},"variableNames":[{"name":"srcPtr","nativeSrc":"11773:6:7","nodeType":"YulIdentifier","src":"11773:6:7"}]},{"nativeSrc":"11811:19:7","nodeType":"YulAssignment","src":"11811:19:7","value":{"arguments":[{"name":"pos","nativeSrc":"11822:3:7","nodeType":"YulIdentifier","src":"11822:3:7"},{"kind":"number","nativeSrc":"11827:2:7","nodeType":"YulLiteral","src":"11827:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11818:3:7","nodeType":"YulIdentifier","src":"11818:3:7"},"nativeSrc":"11818:12:7","nodeType":"YulFunctionCall","src":"11818:12:7"},"variableNames":[{"name":"pos","nativeSrc":"11811:3:7","nodeType":"YulIdentifier","src":"11811:3:7"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"11164:1:7","nodeType":"YulIdentifier","src":"11164:1:7"},{"name":"length","nativeSrc":"11167:6:7","nodeType":"YulIdentifier","src":"11167:6:7"}],"functionName":{"name":"lt","nativeSrc":"11161:2:7","nodeType":"YulIdentifier","src":"11161:2:7"},"nativeSrc":"11161:13:7","nodeType":"YulFunctionCall","src":"11161:13:7"},"nativeSrc":"11153:687:7","nodeType":"YulForLoop","post":{"nativeSrc":"11175:18:7","nodeType":"YulBlock","src":"11175:18:7","statements":[{"nativeSrc":"11177:14:7","nodeType":"YulAssignment","src":"11177:14:7","value":{"arguments":[{"name":"i","nativeSrc":"11186:1:7","nodeType":"YulIdentifier","src":"11186:1:7"},{"kind":"number","nativeSrc":"11189:1:7","nodeType":"YulLiteral","src":"11189:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"11182:3:7","nodeType":"YulIdentifier","src":"11182:3:7"},"nativeSrc":"11182:9:7","nodeType":"YulFunctionCall","src":"11182:9:7"},"variableNames":[{"name":"i","nativeSrc":"11177:1:7","nodeType":"YulIdentifier","src":"11177:1:7"}]}]},"pre":{"nativeSrc":"11157:3:7","nodeType":"YulBlock","src":"11157:3:7","statements":[]},"src":"11153:687:7"},{"nativeSrc":"11849:14:7","nodeType":"YulAssignment","src":"11849:14:7","value":{"name":"tail_2","nativeSrc":"11857:6:7","nodeType":"YulIdentifier","src":"11857:6:7"},"variableNames":[{"name":"tail","nativeSrc":"11849:4:7","nodeType":"YulIdentifier","src":"11849:4:7"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"10554:1315:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10744:9:7","nodeType":"YulTypedName","src":"10744:9:7","type":""},{"name":"value1","nativeSrc":"10755:6:7","nodeType":"YulTypedName","src":"10755:6:7","type":""},{"name":"value0","nativeSrc":"10763:6:7","nodeType":"YulTypedName","src":"10763:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10774:4:7","nodeType":"YulTypedName","src":"10774:4:7","type":""}],"src":"10554:1315:7"},{"body":{"nativeSrc":"11995:195:7","nodeType":"YulBlock","src":"11995:195:7","statements":[{"body":{"nativeSrc":"12041:16:7","nodeType":"YulBlock","src":"12041:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12050:1:7","nodeType":"YulLiteral","src":"12050:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"12053:1:7","nodeType":"YulLiteral","src":"12053:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12043:6:7","nodeType":"YulIdentifier","src":"12043:6:7"},"nativeSrc":"12043:12:7","nodeType":"YulFunctionCall","src":"12043:12:7"},"nativeSrc":"12043:12:7","nodeType":"YulExpressionStatement","src":"12043:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12016:7:7","nodeType":"YulIdentifier","src":"12016:7:7"},{"name":"headStart","nativeSrc":"12025:9:7","nodeType":"YulIdentifier","src":"12025:9:7"}],"functionName":{"name":"sub","nativeSrc":"12012:3:7","nodeType":"YulIdentifier","src":"12012:3:7"},"nativeSrc":"12012:23:7","nodeType":"YulFunctionCall","src":"12012:23:7"},{"kind":"number","nativeSrc":"12037:2:7","nodeType":"YulLiteral","src":"12037:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"12008:3:7","nodeType":"YulIdentifier","src":"12008:3:7"},"nativeSrc":"12008:32:7","nodeType":"YulFunctionCall","src":"12008:32:7"},"nativeSrc":"12005:52:7","nodeType":"YulIf","src":"12005:52:7"},{"nativeSrc":"12066:50:7","nodeType":"YulAssignment","src":"12066:50:7","value":{"arguments":[{"name":"headStart","nativeSrc":"12106:9:7","nodeType":"YulIdentifier","src":"12106:9:7"}],"functionName":{"name":"abi_decode_enum_RulingOptions","nativeSrc":"12076:29:7","nodeType":"YulIdentifier","src":"12076:29:7"},"nativeSrc":"12076:40:7","nodeType":"YulFunctionCall","src":"12076:40:7"},"variableNames":[{"name":"value0","nativeSrc":"12066:6:7","nodeType":"YulIdentifier","src":"12066:6:7"}]},{"nativeSrc":"12125:59:7","nodeType":"YulAssignment","src":"12125:59:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12169:9:7","nodeType":"YulIdentifier","src":"12169:9:7"},{"kind":"number","nativeSrc":"12180:2:7","nodeType":"YulLiteral","src":"12180:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12165:3:7","nodeType":"YulIdentifier","src":"12165:3:7"},"nativeSrc":"12165:18:7","nodeType":"YulFunctionCall","src":"12165:18:7"}],"functionName":{"name":"abi_decode_enum_RulingOptions","nativeSrc":"12135:29:7","nodeType":"YulIdentifier","src":"12135:29:7"},"nativeSrc":"12135:49:7","nodeType":"YulFunctionCall","src":"12135:49:7"},"variableNames":[{"name":"value1","nativeSrc":"12125:6:7","nodeType":"YulIdentifier","src":"12125:6:7"}]}]},"name":"abi_decode_tuple_t_enum$_RulingOptions_$295t_enum$_RulingOptions_$295","nativeSrc":"11874:316:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11953:9:7","nodeType":"YulTypedName","src":"11953:9:7","type":""},{"name":"dataEnd","nativeSrc":"11964:7:7","nodeType":"YulTypedName","src":"11964:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11976:6:7","nodeType":"YulTypedName","src":"11976:6:7","type":""},{"name":"value1","nativeSrc":"11984:6:7","nodeType":"YulTypedName","src":"11984:6:7","type":""}],"src":"11874:316:7"},{"body":{"nativeSrc":"12341:393:7","nodeType":"YulBlock","src":"12341:393:7","statements":[{"body":{"nativeSrc":"12388:16:7","nodeType":"YulBlock","src":"12388:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12397:1:7","nodeType":"YulLiteral","src":"12397:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"12400:1:7","nodeType":"YulLiteral","src":"12400:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12390:6:7","nodeType":"YulIdentifier","src":"12390:6:7"},"nativeSrc":"12390:12:7","nodeType":"YulFunctionCall","src":"12390:12:7"},"nativeSrc":"12390:12:7","nodeType":"YulExpressionStatement","src":"12390:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12362:7:7","nodeType":"YulIdentifier","src":"12362:7:7"},{"name":"headStart","nativeSrc":"12371:9:7","nodeType":"YulIdentifier","src":"12371:9:7"}],"functionName":{"name":"sub","nativeSrc":"12358:3:7","nodeType":"YulIdentifier","src":"12358:3:7"},"nativeSrc":"12358:23:7","nodeType":"YulFunctionCall","src":"12358:23:7"},{"kind":"number","nativeSrc":"12383:3:7","nodeType":"YulLiteral","src":"12383:3:7","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"12354:3:7","nodeType":"YulIdentifier","src":"12354:3:7"},"nativeSrc":"12354:33:7","nodeType":"YulFunctionCall","src":"12354:33:7"},"nativeSrc":"12351:53:7","nodeType":"YulIf","src":"12351:53:7"},{"nativeSrc":"12413:14:7","nodeType":"YulVariableDeclaration","src":"12413:14:7","value":{"kind":"number","nativeSrc":"12426:1:7","nodeType":"YulLiteral","src":"12426:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"12417:5:7","nodeType":"YulTypedName","src":"12417:5:7","type":""}]},{"nativeSrc":"12436:32:7","nodeType":"YulAssignment","src":"12436:32:7","value":{"arguments":[{"name":"headStart","nativeSrc":"12458:9:7","nodeType":"YulIdentifier","src":"12458:9:7"}],"functionName":{"name":"calldataload","nativeSrc":"12445:12:7","nodeType":"YulIdentifier","src":"12445:12:7"},"nativeSrc":"12445:23:7","nodeType":"YulFunctionCall","src":"12445:23:7"},"variableNames":[{"name":"value","nativeSrc":"12436:5:7","nodeType":"YulIdentifier","src":"12436:5:7"}]},{"nativeSrc":"12477:15:7","nodeType":"YulAssignment","src":"12477:15:7","value":{"name":"value","nativeSrc":"12487:5:7","nodeType":"YulIdentifier","src":"12487:5:7"},"variableNames":[{"name":"value0","nativeSrc":"12477:6:7","nodeType":"YulIdentifier","src":"12477:6:7"}]},{"nativeSrc":"12501:56:7","nodeType":"YulAssignment","src":"12501:56:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12542:9:7","nodeType":"YulIdentifier","src":"12542:9:7"},{"kind":"number","nativeSrc":"12553:2:7","nodeType":"YulLiteral","src":"12553:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12538:3:7","nodeType":"YulIdentifier","src":"12538:3:7"},"nativeSrc":"12538:18:7","nodeType":"YulFunctionCall","src":"12538:18:7"}],"functionName":{"name":"abi_decode_address_payable","nativeSrc":"12511:26:7","nodeType":"YulIdentifier","src":"12511:26:7"},"nativeSrc":"12511:46:7","nodeType":"YulFunctionCall","src":"12511:46:7"},"variableNames":[{"name":"value1","nativeSrc":"12501:6:7","nodeType":"YulIdentifier","src":"12501:6:7"}]},{"nativeSrc":"12566:16:7","nodeType":"YulVariableDeclaration","src":"12566:16:7","value":{"kind":"number","nativeSrc":"12581:1:7","nodeType":"YulLiteral","src":"12581:1:7","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"12570:7:7","nodeType":"YulTypedName","src":"12570:7:7","type":""}]},{"nativeSrc":"12591:43:7","nodeType":"YulAssignment","src":"12591:43:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12619:9:7","nodeType":"YulIdentifier","src":"12619:9:7"},{"kind":"number","nativeSrc":"12630:2:7","nodeType":"YulLiteral","src":"12630:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12615:3:7","nodeType":"YulIdentifier","src":"12615:3:7"},"nativeSrc":"12615:18:7","nodeType":"YulFunctionCall","src":"12615:18:7"}],"functionName":{"name":"calldataload","nativeSrc":"12602:12:7","nodeType":"YulIdentifier","src":"12602:12:7"},"nativeSrc":"12602:32:7","nodeType":"YulFunctionCall","src":"12602:32:7"},"variableNames":[{"name":"value_1","nativeSrc":"12591:7:7","nodeType":"YulIdentifier","src":"12591:7:7"}]},{"nativeSrc":"12643:17:7","nodeType":"YulAssignment","src":"12643:17:7","value":{"name":"value_1","nativeSrc":"12653:7:7","nodeType":"YulIdentifier","src":"12653:7:7"},"variableNames":[{"name":"value2","nativeSrc":"12643:6:7","nodeType":"YulIdentifier","src":"12643:6:7"}]},{"nativeSrc":"12669:59:7","nodeType":"YulAssignment","src":"12669:59:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12713:9:7","nodeType":"YulIdentifier","src":"12713:9:7"},{"kind":"number","nativeSrc":"12724:2:7","nodeType":"YulLiteral","src":"12724:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12709:3:7","nodeType":"YulIdentifier","src":"12709:3:7"},"nativeSrc":"12709:18:7","nodeType":"YulFunctionCall","src":"12709:18:7"}],"functionName":{"name":"abi_decode_enum_RulingOptions","nativeSrc":"12679:29:7","nodeType":"YulIdentifier","src":"12679:29:7"},"nativeSrc":"12679:49:7","nodeType":"YulFunctionCall","src":"12679:49:7"},"variableNames":[{"name":"value3","nativeSrc":"12669:6:7","nodeType":"YulIdentifier","src":"12669:6:7"}]}]},"name":"abi_decode_tuple_t_uint256t_address_payablet_uint256t_enum$_RulingOptions_$295","nativeSrc":"12195:539:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12283:9:7","nodeType":"YulTypedName","src":"12283:9:7","type":""},{"name":"dataEnd","nativeSrc":"12294:7:7","nodeType":"YulTypedName","src":"12294:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12306:6:7","nodeType":"YulTypedName","src":"12306:6:7","type":""},{"name":"value1","nativeSrc":"12314:6:7","nodeType":"YulTypedName","src":"12314:6:7","type":""},{"name":"value2","nativeSrc":"12322:6:7","nodeType":"YulTypedName","src":"12322:6:7","type":""},{"name":"value3","nativeSrc":"12330:6:7","nodeType":"YulTypedName","src":"12330:6:7","type":""}],"src":"12195:539:7"},{"body":{"nativeSrc":"12833:180:7","nodeType":"YulBlock","src":"12833:180:7","statements":[{"body":{"nativeSrc":"12879:16:7","nodeType":"YulBlock","src":"12879:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12888:1:7","nodeType":"YulLiteral","src":"12888:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"12891:1:7","nodeType":"YulLiteral","src":"12891:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12881:6:7","nodeType":"YulIdentifier","src":"12881:6:7"},"nativeSrc":"12881:12:7","nodeType":"YulFunctionCall","src":"12881:12:7"},"nativeSrc":"12881:12:7","nodeType":"YulExpressionStatement","src":"12881:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12854:7:7","nodeType":"YulIdentifier","src":"12854:7:7"},{"name":"headStart","nativeSrc":"12863:9:7","nodeType":"YulIdentifier","src":"12863:9:7"}],"functionName":{"name":"sub","nativeSrc":"12850:3:7","nodeType":"YulIdentifier","src":"12850:3:7"},"nativeSrc":"12850:23:7","nodeType":"YulFunctionCall","src":"12850:23:7"},{"kind":"number","nativeSrc":"12875:2:7","nodeType":"YulLiteral","src":"12875:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"12846:3:7","nodeType":"YulIdentifier","src":"12846:3:7"},"nativeSrc":"12846:32:7","nodeType":"YulFunctionCall","src":"12846:32:7"},"nativeSrc":"12843:52:7","nodeType":"YulIf","src":"12843:52:7"},{"nativeSrc":"12904:38:7","nodeType":"YulAssignment","src":"12904:38:7","value":{"arguments":[{"name":"headStart","nativeSrc":"12932:9:7","nodeType":"YulIdentifier","src":"12932:9:7"}],"functionName":{"name":"abi_decode_uint72","nativeSrc":"12914:17:7","nodeType":"YulIdentifier","src":"12914:17:7"},"nativeSrc":"12914:28:7","nodeType":"YulFunctionCall","src":"12914:28:7"},"variableNames":[{"name":"value0","nativeSrc":"12904:6:7","nodeType":"YulIdentifier","src":"12904:6:7"}]},{"nativeSrc":"12951:56:7","nodeType":"YulAssignment","src":"12951:56:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12992:9:7","nodeType":"YulIdentifier","src":"12992:9:7"},{"kind":"number","nativeSrc":"13003:2:7","nodeType":"YulLiteral","src":"13003:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12988:3:7","nodeType":"YulIdentifier","src":"12988:3:7"},"nativeSrc":"12988:18:7","nodeType":"YulFunctionCall","src":"12988:18:7"}],"functionName":{"name":"abi_decode_address_payable","nativeSrc":"12961:26:7","nodeType":"YulIdentifier","src":"12961:26:7"},"nativeSrc":"12961:46:7","nodeType":"YulFunctionCall","src":"12961:46:7"},"variableNames":[{"name":"value1","nativeSrc":"12951:6:7","nodeType":"YulIdentifier","src":"12951:6:7"}]}]},"name":"abi_decode_tuple_t_uint72t_address_payable","nativeSrc":"12739:274:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12791:9:7","nodeType":"YulTypedName","src":"12791:9:7","type":""},{"name":"dataEnd","nativeSrc":"12802:7:7","nodeType":"YulTypedName","src":"12802:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12814:6:7","nodeType":"YulTypedName","src":"12814:6:7","type":""},{"name":"value1","nativeSrc":"12822:6:7","nodeType":"YulTypedName","src":"12822:6:7","type":""}],"src":"12739:274:7"},{"body":{"nativeSrc":"13139:519:7","nodeType":"YulBlock","src":"13139:519:7","statements":[{"body":{"nativeSrc":"13185:16:7","nodeType":"YulBlock","src":"13185:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13194:1:7","nodeType":"YulLiteral","src":"13194:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"13197:1:7","nodeType":"YulLiteral","src":"13197:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13187:6:7","nodeType":"YulIdentifier","src":"13187:6:7"},"nativeSrc":"13187:12:7","nodeType":"YulFunctionCall","src":"13187:12:7"},"nativeSrc":"13187:12:7","nodeType":"YulExpressionStatement","src":"13187:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13160:7:7","nodeType":"YulIdentifier","src":"13160:7:7"},{"name":"headStart","nativeSrc":"13169:9:7","nodeType":"YulIdentifier","src":"13169:9:7"}],"functionName":{"name":"sub","nativeSrc":"13156:3:7","nodeType":"YulIdentifier","src":"13156:3:7"},"nativeSrc":"13156:23:7","nodeType":"YulFunctionCall","src":"13156:23:7"},{"kind":"number","nativeSrc":"13181:2:7","nodeType":"YulLiteral","src":"13181:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"13152:3:7","nodeType":"YulIdentifier","src":"13152:3:7"},"nativeSrc":"13152:32:7","nodeType":"YulFunctionCall","src":"13152:32:7"},"nativeSrc":"13149:52:7","nodeType":"YulIf","src":"13149:52:7"},{"nativeSrc":"13210:37:7","nodeType":"YulVariableDeclaration","src":"13210:37:7","value":{"arguments":[{"name":"headStart","nativeSrc":"13237:9:7","nodeType":"YulIdentifier","src":"13237:9:7"}],"functionName":{"name":"calldataload","nativeSrc":"13224:12:7","nodeType":"YulIdentifier","src":"13224:12:7"},"nativeSrc":"13224:23:7","nodeType":"YulFunctionCall","src":"13224:23:7"},"variables":[{"name":"offset","nativeSrc":"13214:6:7","nodeType":"YulTypedName","src":"13214:6:7","type":""}]},{"body":{"nativeSrc":"13290:16:7","nodeType":"YulBlock","src":"13290:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13299:1:7","nodeType":"YulLiteral","src":"13299:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"13302:1:7","nodeType":"YulLiteral","src":"13302:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13292:6:7","nodeType":"YulIdentifier","src":"13292:6:7"},"nativeSrc":"13292:12:7","nodeType":"YulFunctionCall","src":"13292:12:7"},"nativeSrc":"13292:12:7","nodeType":"YulExpressionStatement","src":"13292:12:7"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"13262:6:7","nodeType":"YulIdentifier","src":"13262:6:7"},{"kind":"number","nativeSrc":"13270:18:7","nodeType":"YulLiteral","src":"13270:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13259:2:7","nodeType":"YulIdentifier","src":"13259:2:7"},"nativeSrc":"13259:30:7","nodeType":"YulFunctionCall","src":"13259:30:7"},"nativeSrc":"13256:50:7","nodeType":"YulIf","src":"13256:50:7"},{"nativeSrc":"13315:85:7","nodeType":"YulVariableDeclaration","src":"13315:85:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13372:9:7","nodeType":"YulIdentifier","src":"13372:9:7"},{"name":"offset","nativeSrc":"13383:6:7","nodeType":"YulIdentifier","src":"13383:6:7"}],"functionName":{"name":"add","nativeSrc":"13368:3:7","nodeType":"YulIdentifier","src":"13368:3:7"},"nativeSrc":"13368:22:7","nodeType":"YulFunctionCall","src":"13368:22:7"},{"name":"dataEnd","nativeSrc":"13392:7:7","nodeType":"YulIdentifier","src":"13392:7:7"}],"functionName":{"name":"abi_decode_string_calldata","nativeSrc":"13341:26:7","nodeType":"YulIdentifier","src":"13341:26:7"},"nativeSrc":"13341:59:7","nodeType":"YulFunctionCall","src":"13341:59:7"},"variables":[{"name":"value0_1","nativeSrc":"13319:8:7","nodeType":"YulTypedName","src":"13319:8:7","type":""},{"name":"value1_1","nativeSrc":"13329:8:7","nodeType":"YulTypedName","src":"13329:8:7","type":""}]},{"nativeSrc":"13409:18:7","nodeType":"YulAssignment","src":"13409:18:7","value":{"name":"value0_1","nativeSrc":"13419:8:7","nodeType":"YulIdentifier","src":"13419:8:7"},"variableNames":[{"name":"value0","nativeSrc":"13409:6:7","nodeType":"YulIdentifier","src":"13409:6:7"}]},{"nativeSrc":"13436:18:7","nodeType":"YulAssignment","src":"13436:18:7","value":{"name":"value1_1","nativeSrc":"13446:8:7","nodeType":"YulIdentifier","src":"13446:8:7"},"variableNames":[{"name":"value1","nativeSrc":"13436:6:7","nodeType":"YulIdentifier","src":"13436:6:7"}]},{"nativeSrc":"13463:45:7","nodeType":"YulVariableDeclaration","src":"13463:45:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13493:9:7","nodeType":"YulIdentifier","src":"13493:9:7"},{"kind":"number","nativeSrc":"13504:2:7","nodeType":"YulLiteral","src":"13504:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13489:3:7","nodeType":"YulIdentifier","src":"13489:3:7"},"nativeSrc":"13489:18:7","nodeType":"YulFunctionCall","src":"13489:18:7"}],"functionName":{"name":"calldataload","nativeSrc":"13476:12:7","nodeType":"YulIdentifier","src":"13476:12:7"},"nativeSrc":"13476:32:7","nodeType":"YulFunctionCall","src":"13476:32:7"},"variables":[{"name":"value","nativeSrc":"13467:5:7","nodeType":"YulTypedName","src":"13467:5:7","type":""}]},{"body":{"nativeSrc":"13556:16:7","nodeType":"YulBlock","src":"13556:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13565:1:7","nodeType":"YulLiteral","src":"13565:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"13568:1:7","nodeType":"YulLiteral","src":"13568:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13558:6:7","nodeType":"YulIdentifier","src":"13558:6:7"},"nativeSrc":"13558:12:7","nodeType":"YulFunctionCall","src":"13558:12:7"},"nativeSrc":"13558:12:7","nodeType":"YulExpressionStatement","src":"13558:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"13530:5:7","nodeType":"YulIdentifier","src":"13530:5:7"},{"arguments":[{"name":"value","nativeSrc":"13541:5:7","nodeType":"YulIdentifier","src":"13541:5:7"},{"kind":"number","nativeSrc":"13548:4:7","nodeType":"YulLiteral","src":"13548:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"13537:3:7","nodeType":"YulIdentifier","src":"13537:3:7"},"nativeSrc":"13537:16:7","nodeType":"YulFunctionCall","src":"13537:16:7"}],"functionName":{"name":"eq","nativeSrc":"13527:2:7","nodeType":"YulIdentifier","src":"13527:2:7"},"nativeSrc":"13527:27:7","nodeType":"YulFunctionCall","src":"13527:27:7"}],"functionName":{"name":"iszero","nativeSrc":"13520:6:7","nodeType":"YulIdentifier","src":"13520:6:7"},"nativeSrc":"13520:35:7","nodeType":"YulFunctionCall","src":"13520:35:7"},"nativeSrc":"13517:55:7","nodeType":"YulIf","src":"13517:55:7"},{"nativeSrc":"13581:15:7","nodeType":"YulAssignment","src":"13581:15:7","value":{"name":"value","nativeSrc":"13591:5:7","nodeType":"YulIdentifier","src":"13591:5:7"},"variableNames":[{"name":"value2","nativeSrc":"13581:6:7","nodeType":"YulIdentifier","src":"13581:6:7"}]},{"nativeSrc":"13605:47:7","nodeType":"YulAssignment","src":"13605:47:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13637:9:7","nodeType":"YulIdentifier","src":"13637:9:7"},{"kind":"number","nativeSrc":"13648:2:7","nodeType":"YulLiteral","src":"13648:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13633:3:7","nodeType":"YulIdentifier","src":"13633:3:7"},"nativeSrc":"13633:18:7","nodeType":"YulFunctionCall","src":"13633:18:7"}],"functionName":{"name":"abi_decode_uint72","nativeSrc":"13615:17:7","nodeType":"YulIdentifier","src":"13615:17:7"},"nativeSrc":"13615:37:7","nodeType":"YulFunctionCall","src":"13615:37:7"},"variableNames":[{"name":"value3","nativeSrc":"13605:6:7","nodeType":"YulIdentifier","src":"13605:6:7"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_uint8t_uint72","nativeSrc":"13018:640:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13081:9:7","nodeType":"YulTypedName","src":"13081:9:7","type":""},{"name":"dataEnd","nativeSrc":"13092:7:7","nodeType":"YulTypedName","src":"13092:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13104:6:7","nodeType":"YulTypedName","src":"13104:6:7","type":""},{"name":"value1","nativeSrc":"13112:6:7","nodeType":"YulTypedName","src":"13112:6:7","type":""},{"name":"value2","nativeSrc":"13120:6:7","nodeType":"YulTypedName","src":"13120:6:7","type":""},{"name":"value3","nativeSrc":"13128:6:7","nodeType":"YulTypedName","src":"13128:6:7","type":""}],"src":"13018:640:7"},{"body":{"nativeSrc":"13784:98:7","nodeType":"YulBlock","src":"13784:98:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13801:9:7","nodeType":"YulIdentifier","src":"13801:9:7"},{"kind":"number","nativeSrc":"13812:2:7","nodeType":"YulLiteral","src":"13812:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13794:6:7","nodeType":"YulIdentifier","src":"13794:6:7"},"nativeSrc":"13794:21:7","nodeType":"YulFunctionCall","src":"13794:21:7"},"nativeSrc":"13794:21:7","nodeType":"YulExpressionStatement","src":"13794:21:7"},{"nativeSrc":"13824:52:7","nodeType":"YulAssignment","src":"13824:52:7","value":{"arguments":[{"name":"value0","nativeSrc":"13849:6:7","nodeType":"YulIdentifier","src":"13849:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"13861:9:7","nodeType":"YulIdentifier","src":"13861:9:7"},{"kind":"number","nativeSrc":"13872:2:7","nodeType":"YulLiteral","src":"13872:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13857:3:7","nodeType":"YulIdentifier","src":"13857:3:7"},"nativeSrc":"13857:18:7","nodeType":"YulFunctionCall","src":"13857:18:7"}],"functionName":{"name":"abi_encode_bytes","nativeSrc":"13832:16:7","nodeType":"YulIdentifier","src":"13832:16:7"},"nativeSrc":"13832:44:7","nodeType":"YulFunctionCall","src":"13832:44:7"},"variableNames":[{"name":"tail","nativeSrc":"13824:4:7","nodeType":"YulIdentifier","src":"13824:4:7"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13663:219:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13753:9:7","nodeType":"YulTypedName","src":"13753:9:7","type":""},{"name":"value0","nativeSrc":"13764:6:7","nodeType":"YulTypedName","src":"13764:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13775:4:7","nodeType":"YulTypedName","src":"13775:4:7","type":""}],"src":"13663:219:7"},{"body":{"nativeSrc":"14061:171:7","nodeType":"YulBlock","src":"14061:171:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14078:9:7","nodeType":"YulIdentifier","src":"14078:9:7"},{"kind":"number","nativeSrc":"14089:2:7","nodeType":"YulLiteral","src":"14089:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14071:6:7","nodeType":"YulIdentifier","src":"14071:6:7"},"nativeSrc":"14071:21:7","nodeType":"YulFunctionCall","src":"14071:21:7"},"nativeSrc":"14071:21:7","nodeType":"YulExpressionStatement","src":"14071:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14112:9:7","nodeType":"YulIdentifier","src":"14112:9:7"},{"kind":"number","nativeSrc":"14123:2:7","nodeType":"YulLiteral","src":"14123:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14108:3:7","nodeType":"YulIdentifier","src":"14108:3:7"},"nativeSrc":"14108:18:7","nodeType":"YulFunctionCall","src":"14108:18:7"},{"kind":"number","nativeSrc":"14128:2:7","nodeType":"YulLiteral","src":"14128:2:7","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"14101:6:7","nodeType":"YulIdentifier","src":"14101:6:7"},"nativeSrc":"14101:30:7","nodeType":"YulFunctionCall","src":"14101:30:7"},"nativeSrc":"14101:30:7","nodeType":"YulExpressionStatement","src":"14101:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14151:9:7","nodeType":"YulIdentifier","src":"14151:9:7"},{"kind":"number","nativeSrc":"14162:2:7","nodeType":"YulLiteral","src":"14162:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14147:3:7","nodeType":"YulIdentifier","src":"14147:3:7"},"nativeSrc":"14147:18:7","nodeType":"YulFunctionCall","src":"14147:18:7"},{"hexValue":"4e6f7468696e6720746f206368616c6c656e67652e","kind":"string","nativeSrc":"14167:23:7","nodeType":"YulLiteral","src":"14167:23:7","type":"","value":"Nothing to challenge."}],"functionName":{"name":"mstore","nativeSrc":"14140:6:7","nodeType":"YulIdentifier","src":"14140:6:7"},"nativeSrc":"14140:51:7","nodeType":"YulFunctionCall","src":"14140:51:7"},"nativeSrc":"14140:51:7","nodeType":"YulExpressionStatement","src":"14140:51:7"},{"nativeSrc":"14200:26:7","nodeType":"YulAssignment","src":"14200:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"14212:9:7","nodeType":"YulIdentifier","src":"14212:9:7"},{"kind":"number","nativeSrc":"14223:2:7","nodeType":"YulLiteral","src":"14223:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14208:3:7","nodeType":"YulIdentifier","src":"14208:3:7"},"nativeSrc":"14208:18:7","nodeType":"YulFunctionCall","src":"14208:18:7"},"variableNames":[{"name":"tail","nativeSrc":"14200:4:7","nodeType":"YulIdentifier","src":"14200:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_0fb9b5de11a486bb1b8d34864ad6b246b0b983476450ee45857735429bd77eb9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13887:345:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14038:9:7","nodeType":"YulTypedName","src":"14038:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14052:4:7","nodeType":"YulTypedName","src":"14052:4:7","type":""}],"src":"13887:345:7"},{"body":{"nativeSrc":"14411:180:7","nodeType":"YulBlock","src":"14411:180:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14428:9:7","nodeType":"YulIdentifier","src":"14428:9:7"},{"kind":"number","nativeSrc":"14439:2:7","nodeType":"YulLiteral","src":"14439:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14421:6:7","nodeType":"YulIdentifier","src":"14421:6:7"},"nativeSrc":"14421:21:7","nodeType":"YulFunctionCall","src":"14421:21:7"},"nativeSrc":"14421:21:7","nodeType":"YulExpressionStatement","src":"14421:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14462:9:7","nodeType":"YulIdentifier","src":"14462:9:7"},{"kind":"number","nativeSrc":"14473:2:7","nodeType":"YulLiteral","src":"14473:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14458:3:7","nodeType":"YulIdentifier","src":"14458:3:7"},"nativeSrc":"14458:18:7","nodeType":"YulFunctionCall","src":"14458:18:7"},{"kind":"number","nativeSrc":"14478:2:7","nodeType":"YulLiteral","src":"14478:2:7","type":"","value":"30"}],"functionName":{"name":"mstore","nativeSrc":"14451:6:7","nodeType":"YulIdentifier","src":"14451:6:7"},"nativeSrc":"14451:30:7","nodeType":"YulFunctionCall","src":"14451:30:7"},"nativeSrc":"14451:30:7","nodeType":"YulExpressionStatement","src":"14451:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14501:9:7","nodeType":"YulIdentifier","src":"14501:9:7"},{"kind":"number","nativeSrc":"14512:2:7","nodeType":"YulLiteral","src":"14512:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14497:3:7","nodeType":"YulIdentifier","src":"14497:3:7"},"nativeSrc":"14497:18:7","nodeType":"YulFunctionCall","src":"14497:18:7"},{"hexValue":"546865726520697320616e206f6e676f696e67206368616c6c656e67652e","kind":"string","nativeSrc":"14517:32:7","nodeType":"YulLiteral","src":"14517:32:7","type":"","value":"There is an ongoing challenge."}],"functionName":{"name":"mstore","nativeSrc":"14490:6:7","nodeType":"YulIdentifier","src":"14490:6:7"},"nativeSrc":"14490:60:7","nodeType":"YulFunctionCall","src":"14490:60:7"},"nativeSrc":"14490:60:7","nodeType":"YulExpressionStatement","src":"14490:60:7"},{"nativeSrc":"14559:26:7","nodeType":"YulAssignment","src":"14559:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"14571:9:7","nodeType":"YulIdentifier","src":"14571:9:7"},{"kind":"number","nativeSrc":"14582:2:7","nodeType":"YulLiteral","src":"14582:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14567:3:7","nodeType":"YulIdentifier","src":"14567:3:7"},"nativeSrc":"14567:18:7","nodeType":"YulFunctionCall","src":"14567:18:7"},"variableNames":[{"name":"tail","nativeSrc":"14559:4:7","nodeType":"YulIdentifier","src":"14559:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_b54a59a715146ed6c99f49691f55e62e941bfed713a75eda7bc62bf50148d555__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14237:354:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14388:9:7","nodeType":"YulTypedName","src":"14388:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14402:4:7","nodeType":"YulTypedName","src":"14402:4:7","type":""}],"src":"14237:354:7"},{"body":{"nativeSrc":"14770:182:7","nodeType":"YulBlock","src":"14770:182:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14787:9:7","nodeType":"YulIdentifier","src":"14787:9:7"},{"kind":"number","nativeSrc":"14798:2:7","nodeType":"YulLiteral","src":"14798:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14780:6:7","nodeType":"YulIdentifier","src":"14780:6:7"},"nativeSrc":"14780:21:7","nodeType":"YulFunctionCall","src":"14780:21:7"},"nativeSrc":"14780:21:7","nodeType":"YulExpressionStatement","src":"14780:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14821:9:7","nodeType":"YulIdentifier","src":"14821:9:7"},{"kind":"number","nativeSrc":"14832:2:7","nodeType":"YulLiteral","src":"14832:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14817:3:7","nodeType":"YulIdentifier","src":"14817:3:7"},"nativeSrc":"14817:18:7","nodeType":"YulFunctionCall","src":"14817:18:7"},{"kind":"number","nativeSrc":"14837:2:7","nodeType":"YulLiteral","src":"14837:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14810:6:7","nodeType":"YulIdentifier","src":"14810:6:7"},"nativeSrc":"14810:30:7","nodeType":"YulFunctionCall","src":"14810:30:7"},"nativeSrc":"14810:30:7","nodeType":"YulExpressionStatement","src":"14810:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14860:9:7","nodeType":"YulIdentifier","src":"14860:9:7"},{"kind":"number","nativeSrc":"14871:2:7","nodeType":"YulLiteral","src":"14871:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14856:3:7","nodeType":"YulIdentifier","src":"14856:3:7"},"nativeSrc":"14856:18:7","nodeType":"YulFunctionCall","src":"14856:18:7"},{"hexValue":"496e73756666696369656e742066756e647320746f206368616c6c656e67652e","kind":"string","nativeSrc":"14876:34:7","nodeType":"YulLiteral","src":"14876:34:7","type":"","value":"Insufficient funds to challenge."}],"functionName":{"name":"mstore","nativeSrc":"14849:6:7","nodeType":"YulIdentifier","src":"14849:6:7"},"nativeSrc":"14849:62:7","nodeType":"YulFunctionCall","src":"14849:62:7"},"nativeSrc":"14849:62:7","nodeType":"YulExpressionStatement","src":"14849:62:7"},{"nativeSrc":"14920:26:7","nodeType":"YulAssignment","src":"14920:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"14932:9:7","nodeType":"YulIdentifier","src":"14932:9:7"},{"kind":"number","nativeSrc":"14943:2:7","nodeType":"YulLiteral","src":"14943:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14928:3:7","nodeType":"YulIdentifier","src":"14928:3:7"},"nativeSrc":"14928:18:7","nodeType":"YulFunctionCall","src":"14928:18:7"},"variableNames":[{"name":"tail","nativeSrc":"14920:4:7","nodeType":"YulIdentifier","src":"14920:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_0c03e9d393d30f62793e04d553e45144120700c0c39d75130bccb90781d9e9e5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14596:356:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14747:9:7","nodeType":"YulTypedName","src":"14747:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14761:4:7","nodeType":"YulTypedName","src":"14761:4:7","type":""}],"src":"14596:356:7"},{"body":{"nativeSrc":"14989:152:7","nodeType":"YulBlock","src":"14989:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15006:1:7","nodeType":"YulLiteral","src":"15006:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"15009:77:7","nodeType":"YulLiteral","src":"15009:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14999:6:7","nodeType":"YulIdentifier","src":"14999:6:7"},"nativeSrc":"14999:88:7","nodeType":"YulFunctionCall","src":"14999:88:7"},"nativeSrc":"14999:88:7","nodeType":"YulExpressionStatement","src":"14999:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15103:1:7","nodeType":"YulLiteral","src":"15103:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"15106:4:7","nodeType":"YulLiteral","src":"15106:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"15096:6:7","nodeType":"YulIdentifier","src":"15096:6:7"},"nativeSrc":"15096:15:7","nodeType":"YulFunctionCall","src":"15096:15:7"},"nativeSrc":"15096:15:7","nodeType":"YulExpressionStatement","src":"15096:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15127:1:7","nodeType":"YulLiteral","src":"15127:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"15130:4:7","nodeType":"YulLiteral","src":"15130:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15120:6:7","nodeType":"YulIdentifier","src":"15120:6:7"},"nativeSrc":"15120:15:7","nodeType":"YulFunctionCall","src":"15120:15:7"},"nativeSrc":"15120:15:7","nodeType":"YulExpressionStatement","src":"15120:15:7"}]},"name":"panic_error_0x11","nativeSrc":"14957:184:7","nodeType":"YulFunctionDefinition","src":"14957:184:7"},{"body":{"nativeSrc":"15198:116:7","nodeType":"YulBlock","src":"15198:116:7","statements":[{"nativeSrc":"15208:20:7","nodeType":"YulAssignment","src":"15208:20:7","value":{"arguments":[{"name":"x","nativeSrc":"15223:1:7","nodeType":"YulIdentifier","src":"15223:1:7"},{"name":"y","nativeSrc":"15226:1:7","nodeType":"YulIdentifier","src":"15226:1:7"}],"functionName":{"name":"mul","nativeSrc":"15219:3:7","nodeType":"YulIdentifier","src":"15219:3:7"},"nativeSrc":"15219:9:7","nodeType":"YulFunctionCall","src":"15219:9:7"},"variableNames":[{"name":"product","nativeSrc":"15208:7:7","nodeType":"YulIdentifier","src":"15208:7:7"}]},{"body":{"nativeSrc":"15286:22:7","nodeType":"YulBlock","src":"15286:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"15288:16:7","nodeType":"YulIdentifier","src":"15288:16:7"},"nativeSrc":"15288:18:7","nodeType":"YulFunctionCall","src":"15288:18:7"},"nativeSrc":"15288:18:7","nodeType":"YulExpressionStatement","src":"15288:18:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"15257:1:7","nodeType":"YulIdentifier","src":"15257:1:7"}],"functionName":{"name":"iszero","nativeSrc":"15250:6:7","nodeType":"YulIdentifier","src":"15250:6:7"},"nativeSrc":"15250:9:7","nodeType":"YulFunctionCall","src":"15250:9:7"},{"arguments":[{"name":"y","nativeSrc":"15264:1:7","nodeType":"YulIdentifier","src":"15264:1:7"},{"arguments":[{"name":"product","nativeSrc":"15271:7:7","nodeType":"YulIdentifier","src":"15271:7:7"},{"name":"x","nativeSrc":"15280:1:7","nodeType":"YulIdentifier","src":"15280:1:7"}],"functionName":{"name":"div","nativeSrc":"15267:3:7","nodeType":"YulIdentifier","src":"15267:3:7"},"nativeSrc":"15267:15:7","nodeType":"YulFunctionCall","src":"15267:15:7"}],"functionName":{"name":"eq","nativeSrc":"15261:2:7","nodeType":"YulIdentifier","src":"15261:2:7"},"nativeSrc":"15261:22:7","nodeType":"YulFunctionCall","src":"15261:22:7"}],"functionName":{"name":"or","nativeSrc":"15247:2:7","nodeType":"YulIdentifier","src":"15247:2:7"},"nativeSrc":"15247:37:7","nodeType":"YulFunctionCall","src":"15247:37:7"}],"functionName":{"name":"iszero","nativeSrc":"15240:6:7","nodeType":"YulIdentifier","src":"15240:6:7"},"nativeSrc":"15240:45:7","nodeType":"YulFunctionCall","src":"15240:45:7"},"nativeSrc":"15237:71:7","nodeType":"YulIf","src":"15237:71:7"}]},"name":"checked_mul_t_uint256","nativeSrc":"15146:168:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15177:1:7","nodeType":"YulTypedName","src":"15177:1:7","type":""},{"name":"y","nativeSrc":"15180:1:7","nodeType":"YulTypedName","src":"15180:1:7","type":""}],"returnVariables":[{"name":"product","nativeSrc":"15186:7:7","nodeType":"YulTypedName","src":"15186:7:7","type":""}],"src":"15146:168:7"},{"body":{"nativeSrc":"15365:228:7","nodeType":"YulBlock","src":"15365:228:7","statements":[{"body":{"nativeSrc":"15396:168:7","nodeType":"YulBlock","src":"15396:168:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15417:1:7","nodeType":"YulLiteral","src":"15417:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"15420:77:7","nodeType":"YulLiteral","src":"15420:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15410:6:7","nodeType":"YulIdentifier","src":"15410:6:7"},"nativeSrc":"15410:88:7","nodeType":"YulFunctionCall","src":"15410:88:7"},"nativeSrc":"15410:88:7","nodeType":"YulExpressionStatement","src":"15410:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15518:1:7","nodeType":"YulLiteral","src":"15518:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"15521:4:7","nodeType":"YulLiteral","src":"15521:4:7","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"15511:6:7","nodeType":"YulIdentifier","src":"15511:6:7"},"nativeSrc":"15511:15:7","nodeType":"YulFunctionCall","src":"15511:15:7"},"nativeSrc":"15511:15:7","nodeType":"YulExpressionStatement","src":"15511:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15546:1:7","nodeType":"YulLiteral","src":"15546:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"15549:4:7","nodeType":"YulLiteral","src":"15549:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15539:6:7","nodeType":"YulIdentifier","src":"15539:6:7"},"nativeSrc":"15539:15:7","nodeType":"YulFunctionCall","src":"15539:15:7"},"nativeSrc":"15539:15:7","nodeType":"YulExpressionStatement","src":"15539:15:7"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"15385:1:7","nodeType":"YulIdentifier","src":"15385:1:7"}],"functionName":{"name":"iszero","nativeSrc":"15378:6:7","nodeType":"YulIdentifier","src":"15378:6:7"},"nativeSrc":"15378:9:7","nodeType":"YulFunctionCall","src":"15378:9:7"},"nativeSrc":"15375:189:7","nodeType":"YulIf","src":"15375:189:7"},{"nativeSrc":"15573:14:7","nodeType":"YulAssignment","src":"15573:14:7","value":{"arguments":[{"name":"x","nativeSrc":"15582:1:7","nodeType":"YulIdentifier","src":"15582:1:7"},{"name":"y","nativeSrc":"15585:1:7","nodeType":"YulIdentifier","src":"15585:1:7"}],"functionName":{"name":"div","nativeSrc":"15578:3:7","nodeType":"YulIdentifier","src":"15578:3:7"},"nativeSrc":"15578:9:7","nodeType":"YulFunctionCall","src":"15578:9:7"},"variableNames":[{"name":"r","nativeSrc":"15573:1:7","nodeType":"YulIdentifier","src":"15573:1:7"}]}]},"name":"checked_div_t_uint256","nativeSrc":"15319:274:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15350:1:7","nodeType":"YulTypedName","src":"15350:1:7","type":""},{"name":"y","nativeSrc":"15353:1:7","nodeType":"YulTypedName","src":"15353:1:7","type":""}],"returnVariables":[{"name":"r","nativeSrc":"15359:1:7","nodeType":"YulTypedName","src":"15359:1:7","type":""}],"src":"15319:274:7"},{"body":{"nativeSrc":"15646:77:7","nodeType":"YulBlock","src":"15646:77:7","statements":[{"nativeSrc":"15656:16:7","nodeType":"YulAssignment","src":"15656:16:7","value":{"arguments":[{"name":"x","nativeSrc":"15667:1:7","nodeType":"YulIdentifier","src":"15667:1:7"},{"name":"y","nativeSrc":"15670:1:7","nodeType":"YulIdentifier","src":"15670:1:7"}],"functionName":{"name":"add","nativeSrc":"15663:3:7","nodeType":"YulIdentifier","src":"15663:3:7"},"nativeSrc":"15663:9:7","nodeType":"YulFunctionCall","src":"15663:9:7"},"variableNames":[{"name":"sum","nativeSrc":"15656:3:7","nodeType":"YulIdentifier","src":"15656:3:7"}]},{"body":{"nativeSrc":"15695:22:7","nodeType":"YulBlock","src":"15695:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"15697:16:7","nodeType":"YulIdentifier","src":"15697:16:7"},"nativeSrc":"15697:18:7","nodeType":"YulFunctionCall","src":"15697:18:7"},"nativeSrc":"15697:18:7","nodeType":"YulExpressionStatement","src":"15697:18:7"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"15687:1:7","nodeType":"YulIdentifier","src":"15687:1:7"},{"name":"sum","nativeSrc":"15690:3:7","nodeType":"YulIdentifier","src":"15690:3:7"}],"functionName":{"name":"gt","nativeSrc":"15684:2:7","nodeType":"YulIdentifier","src":"15684:2:7"},"nativeSrc":"15684:10:7","nodeType":"YulFunctionCall","src":"15684:10:7"},"nativeSrc":"15681:36:7","nodeType":"YulIf","src":"15681:36:7"}]},"name":"checked_add_t_uint256","nativeSrc":"15598:125:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15629:1:7","nodeType":"YulTypedName","src":"15629:1:7","type":""},{"name":"y","nativeSrc":"15632:1:7","nodeType":"YulTypedName","src":"15632:1:7","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"15638:3:7","nodeType":"YulTypedName","src":"15638:3:7","type":""}],"src":"15598:125:7"},{"body":{"nativeSrc":"15777:79:7","nodeType":"YulBlock","src":"15777:79:7","statements":[{"nativeSrc":"15787:17:7","nodeType":"YulAssignment","src":"15787:17:7","value":{"arguments":[{"name":"x","nativeSrc":"15799:1:7","nodeType":"YulIdentifier","src":"15799:1:7"},{"name":"y","nativeSrc":"15802:1:7","nodeType":"YulIdentifier","src":"15802:1:7"}],"functionName":{"name":"sub","nativeSrc":"15795:3:7","nodeType":"YulIdentifier","src":"15795:3:7"},"nativeSrc":"15795:9:7","nodeType":"YulFunctionCall","src":"15795:9:7"},"variableNames":[{"name":"diff","nativeSrc":"15787:4:7","nodeType":"YulIdentifier","src":"15787:4:7"}]},{"body":{"nativeSrc":"15828:22:7","nodeType":"YulBlock","src":"15828:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"15830:16:7","nodeType":"YulIdentifier","src":"15830:16:7"},"nativeSrc":"15830:18:7","nodeType":"YulFunctionCall","src":"15830:18:7"},"nativeSrc":"15830:18:7","nodeType":"YulExpressionStatement","src":"15830:18:7"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"15819:4:7","nodeType":"YulIdentifier","src":"15819:4:7"},{"name":"x","nativeSrc":"15825:1:7","nodeType":"YulIdentifier","src":"15825:1:7"}],"functionName":{"name":"gt","nativeSrc":"15816:2:7","nodeType":"YulIdentifier","src":"15816:2:7"},"nativeSrc":"15816:11:7","nodeType":"YulFunctionCall","src":"15816:11:7"},"nativeSrc":"15813:37:7","nodeType":"YulIf","src":"15813:37:7"}]},"name":"checked_sub_t_uint256","nativeSrc":"15728:128:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15759:1:7","nodeType":"YulTypedName","src":"15759:1:7","type":""},{"name":"y","nativeSrc":"15762:1:7","nodeType":"YulTypedName","src":"15762:1:7","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"15768:4:7","nodeType":"YulTypedName","src":"15768:4:7","type":""}],"src":"15728:128:7"},{"body":{"nativeSrc":"15893:152:7","nodeType":"YulBlock","src":"15893:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15910:1:7","nodeType":"YulLiteral","src":"15910:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"15913:77:7","nodeType":"YulLiteral","src":"15913:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15903:6:7","nodeType":"YulIdentifier","src":"15903:6:7"},"nativeSrc":"15903:88:7","nodeType":"YulFunctionCall","src":"15903:88:7"},"nativeSrc":"15903:88:7","nodeType":"YulExpressionStatement","src":"15903:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16007:1:7","nodeType":"YulLiteral","src":"16007:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"16010:4:7","nodeType":"YulLiteral","src":"16010:4:7","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"16000:6:7","nodeType":"YulIdentifier","src":"16000:6:7"},"nativeSrc":"16000:15:7","nodeType":"YulFunctionCall","src":"16000:15:7"},"nativeSrc":"16000:15:7","nodeType":"YulExpressionStatement","src":"16000:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16031:1:7","nodeType":"YulLiteral","src":"16031:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"16034:4:7","nodeType":"YulLiteral","src":"16034:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16024:6:7","nodeType":"YulIdentifier","src":"16024:6:7"},"nativeSrc":"16024:15:7","nodeType":"YulFunctionCall","src":"16024:15:7"},"nativeSrc":"16024:15:7","nodeType":"YulExpressionStatement","src":"16024:15:7"}]},"name":"panic_error_0x32","nativeSrc":"15861:184:7","nodeType":"YulFunctionDefinition","src":"15861:184:7"},{"body":{"nativeSrc":"16105:382:7","nodeType":"YulBlock","src":"16105:382:7","statements":[{"nativeSrc":"16115:22:7","nodeType":"YulAssignment","src":"16115:22:7","value":{"arguments":[{"kind":"number","nativeSrc":"16129:1:7","nodeType":"YulLiteral","src":"16129:1:7","type":"","value":"1"},{"name":"data","nativeSrc":"16132:4:7","nodeType":"YulIdentifier","src":"16132:4:7"}],"functionName":{"name":"shr","nativeSrc":"16125:3:7","nodeType":"YulIdentifier","src":"16125:3:7"},"nativeSrc":"16125:12:7","nodeType":"YulFunctionCall","src":"16125:12:7"},"variableNames":[{"name":"length","nativeSrc":"16115:6:7","nodeType":"YulIdentifier","src":"16115:6:7"}]},{"nativeSrc":"16146:38:7","nodeType":"YulVariableDeclaration","src":"16146:38:7","value":{"arguments":[{"name":"data","nativeSrc":"16176:4:7","nodeType":"YulIdentifier","src":"16176:4:7"},{"kind":"number","nativeSrc":"16182:1:7","nodeType":"YulLiteral","src":"16182:1:7","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"16172:3:7","nodeType":"YulIdentifier","src":"16172:3:7"},"nativeSrc":"16172:12:7","nodeType":"YulFunctionCall","src":"16172:12:7"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"16150:18:7","nodeType":"YulTypedName","src":"16150:18:7","type":""}]},{"body":{"nativeSrc":"16223:31:7","nodeType":"YulBlock","src":"16223:31:7","statements":[{"nativeSrc":"16225:27:7","nodeType":"YulAssignment","src":"16225:27:7","value":{"arguments":[{"name":"length","nativeSrc":"16239:6:7","nodeType":"YulIdentifier","src":"16239:6:7"},{"kind":"number","nativeSrc":"16247:4:7","nodeType":"YulLiteral","src":"16247:4:7","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"16235:3:7","nodeType":"YulIdentifier","src":"16235:3:7"},"nativeSrc":"16235:17:7","nodeType":"YulFunctionCall","src":"16235:17:7"},"variableNames":[{"name":"length","nativeSrc":"16225:6:7","nodeType":"YulIdentifier","src":"16225:6:7"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"16203:18:7","nodeType":"YulIdentifier","src":"16203:18:7"}],"functionName":{"name":"iszero","nativeSrc":"16196:6:7","nodeType":"YulIdentifier","src":"16196:6:7"},"nativeSrc":"16196:26:7","nodeType":"YulFunctionCall","src":"16196:26:7"},"nativeSrc":"16193:61:7","nodeType":"YulIf","src":"16193:61:7"},{"body":{"nativeSrc":"16313:168:7","nodeType":"YulBlock","src":"16313:168:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16334:1:7","nodeType":"YulLiteral","src":"16334:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"16337:77:7","nodeType":"YulLiteral","src":"16337:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16327:6:7","nodeType":"YulIdentifier","src":"16327:6:7"},"nativeSrc":"16327:88:7","nodeType":"YulFunctionCall","src":"16327:88:7"},"nativeSrc":"16327:88:7","nodeType":"YulExpressionStatement","src":"16327:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16435:1:7","nodeType":"YulLiteral","src":"16435:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"16438:4:7","nodeType":"YulLiteral","src":"16438:4:7","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"16428:6:7","nodeType":"YulIdentifier","src":"16428:6:7"},"nativeSrc":"16428:15:7","nodeType":"YulFunctionCall","src":"16428:15:7"},"nativeSrc":"16428:15:7","nodeType":"YulExpressionStatement","src":"16428:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16463:1:7","nodeType":"YulLiteral","src":"16463:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"16466:4:7","nodeType":"YulLiteral","src":"16466:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16456:6:7","nodeType":"YulIdentifier","src":"16456:6:7"},"nativeSrc":"16456:15:7","nodeType":"YulFunctionCall","src":"16456:15:7"},"nativeSrc":"16456:15:7","nodeType":"YulExpressionStatement","src":"16456:15:7"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"16269:18:7","nodeType":"YulIdentifier","src":"16269:18:7"},{"arguments":[{"name":"length","nativeSrc":"16292:6:7","nodeType":"YulIdentifier","src":"16292:6:7"},{"kind":"number","nativeSrc":"16300:2:7","nodeType":"YulLiteral","src":"16300:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"16289:2:7","nodeType":"YulIdentifier","src":"16289:2:7"},"nativeSrc":"16289:14:7","nodeType":"YulFunctionCall","src":"16289:14:7"}],"functionName":{"name":"eq","nativeSrc":"16266:2:7","nodeType":"YulIdentifier","src":"16266:2:7"},"nativeSrc":"16266:38:7","nodeType":"YulFunctionCall","src":"16266:38:7"},"nativeSrc":"16263:218:7","nodeType":"YulIf","src":"16263:218:7"}]},"name":"extract_byte_array_length","nativeSrc":"16050:437:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"16085:4:7","nodeType":"YulTypedName","src":"16085:4:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"16094:6:7","nodeType":"YulTypedName","src":"16094:6:7","type":""}],"src":"16050:437:7"},{"body":{"nativeSrc":"16547:65:7","nodeType":"YulBlock","src":"16547:65:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16564:1:7","nodeType":"YulLiteral","src":"16564:1:7","type":"","value":"0"},{"name":"ptr","nativeSrc":"16567:3:7","nodeType":"YulIdentifier","src":"16567:3:7"}],"functionName":{"name":"mstore","nativeSrc":"16557:6:7","nodeType":"YulIdentifier","src":"16557:6:7"},"nativeSrc":"16557:14:7","nodeType":"YulFunctionCall","src":"16557:14:7"},"nativeSrc":"16557:14:7","nodeType":"YulExpressionStatement","src":"16557:14:7"},{"nativeSrc":"16580:26:7","nodeType":"YulAssignment","src":"16580:26:7","value":{"arguments":[{"kind":"number","nativeSrc":"16598:1:7","nodeType":"YulLiteral","src":"16598:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"16601:4:7","nodeType":"YulLiteral","src":"16601:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"16588:9:7","nodeType":"YulIdentifier","src":"16588:9:7"},"nativeSrc":"16588:18:7","nodeType":"YulFunctionCall","src":"16588:18:7"},"variableNames":[{"name":"data","nativeSrc":"16580:4:7","nodeType":"YulIdentifier","src":"16580:4:7"}]}]},"name":"array_dataslot_bytes_storage","nativeSrc":"16492:120:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"16530:3:7","nodeType":"YulTypedName","src":"16530:3:7","type":""}],"returnVariables":[{"name":"data","nativeSrc":"16538:4:7","nodeType":"YulTypedName","src":"16538:4:7","type":""}],"src":"16492:120:7"},{"body":{"nativeSrc":"16674:681:7","nodeType":"YulBlock","src":"16674:681:7","statements":[{"nativeSrc":"16684:29:7","nodeType":"YulVariableDeclaration","src":"16684:29:7","value":{"arguments":[{"name":"value","nativeSrc":"16707:5:7","nodeType":"YulIdentifier","src":"16707:5:7"}],"functionName":{"name":"sload","nativeSrc":"16701:5:7","nodeType":"YulIdentifier","src":"16701:5:7"},"nativeSrc":"16701:12:7","nodeType":"YulFunctionCall","src":"16701:12:7"},"variables":[{"name":"slotValue","nativeSrc":"16688:9:7","nodeType":"YulTypedName","src":"16688:9:7","type":""}]},{"nativeSrc":"16722:50:7","nodeType":"YulVariableDeclaration","src":"16722:50:7","value":{"arguments":[{"name":"slotValue","nativeSrc":"16762:9:7","nodeType":"YulIdentifier","src":"16762:9:7"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"16736:25:7","nodeType":"YulIdentifier","src":"16736:25:7"},"nativeSrc":"16736:36:7","nodeType":"YulFunctionCall","src":"16736:36:7"},"variables":[{"name":"length","nativeSrc":"16726:6:7","nodeType":"YulTypedName","src":"16726:6:7","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"16788:3:7","nodeType":"YulIdentifier","src":"16788:3:7"},{"name":"length","nativeSrc":"16793:6:7","nodeType":"YulIdentifier","src":"16793:6:7"}],"functionName":{"name":"mstore","nativeSrc":"16781:6:7","nodeType":"YulIdentifier","src":"16781:6:7"},"nativeSrc":"16781:19:7","nodeType":"YulFunctionCall","src":"16781:19:7"},"nativeSrc":"16781:19:7","nodeType":"YulExpressionStatement","src":"16781:19:7"},{"cases":[{"body":{"nativeSrc":"16849:143:7","nodeType":"YulBlock","src":"16849:143:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"16874:3:7","nodeType":"YulIdentifier","src":"16874:3:7"},{"kind":"number","nativeSrc":"16879:4:7","nodeType":"YulLiteral","src":"16879:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16870:3:7","nodeType":"YulIdentifier","src":"16870:3:7"},"nativeSrc":"16870:14:7","nodeType":"YulFunctionCall","src":"16870:14:7"},{"arguments":[{"name":"slotValue","nativeSrc":"16890:9:7","nodeType":"YulIdentifier","src":"16890:9:7"},{"arguments":[{"kind":"number","nativeSrc":"16905:3:7","nodeType":"YulLiteral","src":"16905:3:7","type":"","value":"255"}],"functionName":{"name":"not","nativeSrc":"16901:3:7","nodeType":"YulIdentifier","src":"16901:3:7"},"nativeSrc":"16901:8:7","nodeType":"YulFunctionCall","src":"16901:8:7"}],"functionName":{"name":"and","nativeSrc":"16886:3:7","nodeType":"YulIdentifier","src":"16886:3:7"},"nativeSrc":"16886:24:7","nodeType":"YulFunctionCall","src":"16886:24:7"}],"functionName":{"name":"mstore","nativeSrc":"16863:6:7","nodeType":"YulIdentifier","src":"16863:6:7"},"nativeSrc":"16863:48:7","nodeType":"YulFunctionCall","src":"16863:48:7"},"nativeSrc":"16863:48:7","nodeType":"YulExpressionStatement","src":"16863:48:7"},{"nativeSrc":"16924:58:7","nodeType":"YulAssignment","src":"16924:58:7","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"16939:3:7","nodeType":"YulIdentifier","src":"16939:3:7"},{"arguments":[{"kind":"number","nativeSrc":"16948:1:7","nodeType":"YulLiteral","src":"16948:1:7","type":"","value":"5"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"16965:6:7","nodeType":"YulIdentifier","src":"16965:6:7"}],"functionName":{"name":"iszero","nativeSrc":"16958:6:7","nodeType":"YulIdentifier","src":"16958:6:7"},"nativeSrc":"16958:14:7","nodeType":"YulFunctionCall","src":"16958:14:7"}],"functionName":{"name":"iszero","nativeSrc":"16951:6:7","nodeType":"YulIdentifier","src":"16951:6:7"},"nativeSrc":"16951:22:7","nodeType":"YulFunctionCall","src":"16951:22:7"}],"functionName":{"name":"shl","nativeSrc":"16944:3:7","nodeType":"YulIdentifier","src":"16944:3:7"},"nativeSrc":"16944:30:7","nodeType":"YulFunctionCall","src":"16944:30:7"}],"functionName":{"name":"add","nativeSrc":"16935:3:7","nodeType":"YulIdentifier","src":"16935:3:7"},"nativeSrc":"16935:40:7","nodeType":"YulFunctionCall","src":"16935:40:7"},{"kind":"number","nativeSrc":"16977:4:7","nodeType":"YulLiteral","src":"16977:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16931:3:7","nodeType":"YulIdentifier","src":"16931:3:7"},"nativeSrc":"16931:51:7","nodeType":"YulFunctionCall","src":"16931:51:7"},"variableNames":[{"name":"ret","nativeSrc":"16924:3:7","nodeType":"YulIdentifier","src":"16924:3:7"}]}]},"nativeSrc":"16842:150:7","nodeType":"YulCase","src":"16842:150:7","value":{"kind":"number","nativeSrc":"16847:1:7","nodeType":"YulLiteral","src":"16847:1:7","type":"","value":"0"}},{"body":{"nativeSrc":"17008:341:7","nodeType":"YulBlock","src":"17008:341:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17029:1:7","nodeType":"YulLiteral","src":"17029:1:7","type":"","value":"0"},{"name":"value","nativeSrc":"17032:5:7","nodeType":"YulIdentifier","src":"17032:5:7"}],"functionName":{"name":"mstore","nativeSrc":"17022:6:7","nodeType":"YulIdentifier","src":"17022:6:7"},"nativeSrc":"17022:16:7","nodeType":"YulFunctionCall","src":"17022:16:7"},"nativeSrc":"17022:16:7","nodeType":"YulExpressionStatement","src":"17022:16:7"},{"nativeSrc":"17051:33:7","nodeType":"YulVariableDeclaration","src":"17051:33:7","value":{"arguments":[{"kind":"number","nativeSrc":"17076:1:7","nodeType":"YulLiteral","src":"17076:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"17079:4:7","nodeType":"YulLiteral","src":"17079:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"17066:9:7","nodeType":"YulIdentifier","src":"17066:9:7"},"nativeSrc":"17066:18:7","nodeType":"YulFunctionCall","src":"17066:18:7"},"variables":[{"name":"dataPos","nativeSrc":"17055:7:7","nodeType":"YulTypedName","src":"17055:7:7","type":""}]},{"nativeSrc":"17097:10:7","nodeType":"YulVariableDeclaration","src":"17097:10:7","value":{"kind":"number","nativeSrc":"17106:1:7","nodeType":"YulLiteral","src":"17106:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"17101:1:7","nodeType":"YulTypedName","src":"17101:1:7","type":""}]},{"body":{"nativeSrc":"17176:121:7","nodeType":"YulBlock","src":"17176:121:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"17209:3:7","nodeType":"YulIdentifier","src":"17209:3:7"},{"name":"i","nativeSrc":"17214:1:7","nodeType":"YulIdentifier","src":"17214:1:7"}],"functionName":{"name":"add","nativeSrc":"17205:3:7","nodeType":"YulIdentifier","src":"17205:3:7"},"nativeSrc":"17205:11:7","nodeType":"YulFunctionCall","src":"17205:11:7"},{"kind":"number","nativeSrc":"17218:4:7","nodeType":"YulLiteral","src":"17218:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17201:3:7","nodeType":"YulIdentifier","src":"17201:3:7"},"nativeSrc":"17201:22:7","nodeType":"YulFunctionCall","src":"17201:22:7"},{"arguments":[{"name":"dataPos","nativeSrc":"17231:7:7","nodeType":"YulIdentifier","src":"17231:7:7"}],"functionName":{"name":"sload","nativeSrc":"17225:5:7","nodeType":"YulIdentifier","src":"17225:5:7"},"nativeSrc":"17225:14:7","nodeType":"YulFunctionCall","src":"17225:14:7"}],"functionName":{"name":"mstore","nativeSrc":"17194:6:7","nodeType":"YulIdentifier","src":"17194:6:7"},"nativeSrc":"17194:46:7","nodeType":"YulFunctionCall","src":"17194:46:7"},"nativeSrc":"17194:46:7","nodeType":"YulExpressionStatement","src":"17194:46:7"},{"nativeSrc":"17257:26:7","nodeType":"YulAssignment","src":"17257:26:7","value":{"arguments":[{"name":"dataPos","nativeSrc":"17272:7:7","nodeType":"YulIdentifier","src":"17272:7:7"},{"kind":"number","nativeSrc":"17281:1:7","nodeType":"YulLiteral","src":"17281:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"17268:3:7","nodeType":"YulIdentifier","src":"17268:3:7"},"nativeSrc":"17268:15:7","nodeType":"YulFunctionCall","src":"17268:15:7"},"variableNames":[{"name":"dataPos","nativeSrc":"17257:7:7","nodeType":"YulIdentifier","src":"17257:7:7"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"17131:1:7","nodeType":"YulIdentifier","src":"17131:1:7"},{"name":"length","nativeSrc":"17134:6:7","nodeType":"YulIdentifier","src":"17134:6:7"}],"functionName":{"name":"lt","nativeSrc":"17128:2:7","nodeType":"YulIdentifier","src":"17128:2:7"},"nativeSrc":"17128:13:7","nodeType":"YulFunctionCall","src":"17128:13:7"},"nativeSrc":"17120:177:7","nodeType":"YulForLoop","post":{"nativeSrc":"17142:21:7","nodeType":"YulBlock","src":"17142:21:7","statements":[{"nativeSrc":"17144:17:7","nodeType":"YulAssignment","src":"17144:17:7","value":{"arguments":[{"name":"i","nativeSrc":"17153:1:7","nodeType":"YulIdentifier","src":"17153:1:7"},{"kind":"number","nativeSrc":"17156:4:7","nodeType":"YulLiteral","src":"17156:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17149:3:7","nodeType":"YulIdentifier","src":"17149:3:7"},"nativeSrc":"17149:12:7","nodeType":"YulFunctionCall","src":"17149:12:7"},"variableNames":[{"name":"i","nativeSrc":"17144:1:7","nodeType":"YulIdentifier","src":"17144:1:7"}]}]},"pre":{"nativeSrc":"17124:3:7","nodeType":"YulBlock","src":"17124:3:7","statements":[]},"src":"17120:177:7"},{"nativeSrc":"17310:29:7","nodeType":"YulAssignment","src":"17310:29:7","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"17325:3:7","nodeType":"YulIdentifier","src":"17325:3:7"},{"name":"i","nativeSrc":"17330:1:7","nodeType":"YulIdentifier","src":"17330:1:7"}],"functionName":{"name":"add","nativeSrc":"17321:3:7","nodeType":"YulIdentifier","src":"17321:3:7"},"nativeSrc":"17321:11:7","nodeType":"YulFunctionCall","src":"17321:11:7"},{"kind":"number","nativeSrc":"17334:4:7","nodeType":"YulLiteral","src":"17334:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17317:3:7","nodeType":"YulIdentifier","src":"17317:3:7"},"nativeSrc":"17317:22:7","nodeType":"YulFunctionCall","src":"17317:22:7"},"variableNames":[{"name":"ret","nativeSrc":"17310:3:7","nodeType":"YulIdentifier","src":"17310:3:7"}]}]},"nativeSrc":"17001:348:7","nodeType":"YulCase","src":"17001:348:7","value":{"kind":"number","nativeSrc":"17006:1:7","nodeType":"YulLiteral","src":"17006:1:7","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nativeSrc":"16820:9:7","nodeType":"YulIdentifier","src":"16820:9:7"},{"kind":"number","nativeSrc":"16831:1:7","nodeType":"YulLiteral","src":"16831:1:7","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"16816:3:7","nodeType":"YulIdentifier","src":"16816:3:7"},"nativeSrc":"16816:17:7","nodeType":"YulFunctionCall","src":"16816:17:7"},"nativeSrc":"16809:540:7","nodeType":"YulSwitch","src":"16809:540:7"}]},"name":"abi_encode_bytes_storage","nativeSrc":"16617:738:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16651:5:7","nodeType":"YulTypedName","src":"16651:5:7","type":""},{"name":"pos","nativeSrc":"16658:3:7","nodeType":"YulTypedName","src":"16658:3:7","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"16666:3:7","nodeType":"YulTypedName","src":"16666:3:7","type":""}],"src":"16617:738:7"},{"body":{"nativeSrc":"17504:149:7","nodeType":"YulBlock","src":"17504:149:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17521:9:7","nodeType":"YulIdentifier","src":"17521:9:7"},{"name":"value0","nativeSrc":"17532:6:7","nodeType":"YulIdentifier","src":"17532:6:7"}],"functionName":{"name":"mstore","nativeSrc":"17514:6:7","nodeType":"YulIdentifier","src":"17514:6:7"},"nativeSrc":"17514:25:7","nodeType":"YulFunctionCall","src":"17514:25:7"},"nativeSrc":"17514:25:7","nodeType":"YulExpressionStatement","src":"17514:25:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17559:9:7","nodeType":"YulIdentifier","src":"17559:9:7"},{"kind":"number","nativeSrc":"17570:2:7","nodeType":"YulLiteral","src":"17570:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17555:3:7","nodeType":"YulIdentifier","src":"17555:3:7"},"nativeSrc":"17555:18:7","nodeType":"YulFunctionCall","src":"17555:18:7"},{"kind":"number","nativeSrc":"17575:2:7","nodeType":"YulLiteral","src":"17575:2:7","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"17548:6:7","nodeType":"YulIdentifier","src":"17548:6:7"},"nativeSrc":"17548:30:7","nodeType":"YulFunctionCall","src":"17548:30:7"},"nativeSrc":"17548:30:7","nodeType":"YulExpressionStatement","src":"17548:30:7"},{"nativeSrc":"17587:60:7","nodeType":"YulAssignment","src":"17587:60:7","value":{"arguments":[{"name":"value1","nativeSrc":"17620:6:7","nodeType":"YulIdentifier","src":"17620:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"17632:9:7","nodeType":"YulIdentifier","src":"17632:9:7"},{"kind":"number","nativeSrc":"17643:2:7","nodeType":"YulLiteral","src":"17643:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17628:3:7","nodeType":"YulIdentifier","src":"17628:3:7"},"nativeSrc":"17628:18:7","nodeType":"YulFunctionCall","src":"17628:18:7"}],"functionName":{"name":"abi_encode_bytes_storage","nativeSrc":"17595:24:7","nodeType":"YulIdentifier","src":"17595:24:7"},"nativeSrc":"17595:52:7","nodeType":"YulFunctionCall","src":"17595:52:7"},"variableNames":[{"name":"tail","nativeSrc":"17587:4:7","nodeType":"YulIdentifier","src":"17587:4:7"}]}]},"name":"abi_encode_tuple_t_uint256_t_bytes_storage__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"17360:293:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17465:9:7","nodeType":"YulTypedName","src":"17465:9:7","type":""},{"name":"value1","nativeSrc":"17476:6:7","nodeType":"YulTypedName","src":"17476:6:7","type":""},{"name":"value0","nativeSrc":"17484:6:7","nodeType":"YulTypedName","src":"17484:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17495:4:7","nodeType":"YulTypedName","src":"17495:4:7","type":""}],"src":"17360:293:7"},{"body":{"nativeSrc":"17739:149:7","nodeType":"YulBlock","src":"17739:149:7","statements":[{"body":{"nativeSrc":"17785:16:7","nodeType":"YulBlock","src":"17785:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17794:1:7","nodeType":"YulLiteral","src":"17794:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"17797:1:7","nodeType":"YulLiteral","src":"17797:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"17787:6:7","nodeType":"YulIdentifier","src":"17787:6:7"},"nativeSrc":"17787:12:7","nodeType":"YulFunctionCall","src":"17787:12:7"},"nativeSrc":"17787:12:7","nodeType":"YulExpressionStatement","src":"17787:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17760:7:7","nodeType":"YulIdentifier","src":"17760:7:7"},{"name":"headStart","nativeSrc":"17769:9:7","nodeType":"YulIdentifier","src":"17769:9:7"}],"functionName":{"name":"sub","nativeSrc":"17756:3:7","nodeType":"YulIdentifier","src":"17756:3:7"},"nativeSrc":"17756:23:7","nodeType":"YulFunctionCall","src":"17756:23:7"},{"kind":"number","nativeSrc":"17781:2:7","nodeType":"YulLiteral","src":"17781:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"17752:3:7","nodeType":"YulIdentifier","src":"17752:3:7"},"nativeSrc":"17752:32:7","nodeType":"YulFunctionCall","src":"17752:32:7"},"nativeSrc":"17749:52:7","nodeType":"YulIf","src":"17749:52:7"},{"nativeSrc":"17810:14:7","nodeType":"YulVariableDeclaration","src":"17810:14:7","value":{"kind":"number","nativeSrc":"17823:1:7","nodeType":"YulLiteral","src":"17823:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"17814:5:7","nodeType":"YulTypedName","src":"17814:5:7","type":""}]},{"nativeSrc":"17833:25:7","nodeType":"YulAssignment","src":"17833:25:7","value":{"arguments":[{"name":"headStart","nativeSrc":"17848:9:7","nodeType":"YulIdentifier","src":"17848:9:7"}],"functionName":{"name":"mload","nativeSrc":"17842:5:7","nodeType":"YulIdentifier","src":"17842:5:7"},"nativeSrc":"17842:16:7","nodeType":"YulFunctionCall","src":"17842:16:7"},"variableNames":[{"name":"value","nativeSrc":"17833:5:7","nodeType":"YulIdentifier","src":"17833:5:7"}]},{"nativeSrc":"17867:15:7","nodeType":"YulAssignment","src":"17867:15:7","value":{"name":"value","nativeSrc":"17877:5:7","nodeType":"YulIdentifier","src":"17877:5:7"},"variableNames":[{"name":"value0","nativeSrc":"17867:6:7","nodeType":"YulIdentifier","src":"17867:6:7"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"17658:230:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17705:9:7","nodeType":"YulTypedName","src":"17705:9:7","type":""},{"name":"dataEnd","nativeSrc":"17716:7:7","nodeType":"YulTypedName","src":"17716:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17728:6:7","nodeType":"YulTypedName","src":"17728:6:7","type":""}],"src":"17658:230:7"},{"body":{"nativeSrc":"18020:130:7","nodeType":"YulBlock","src":"18020:130:7","statements":[{"nativeSrc":"18030:26:7","nodeType":"YulAssignment","src":"18030:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"18042:9:7","nodeType":"YulIdentifier","src":"18042:9:7"},{"kind":"number","nativeSrc":"18053:2:7","nodeType":"YulLiteral","src":"18053:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18038:3:7","nodeType":"YulIdentifier","src":"18038:3:7"},"nativeSrc":"18038:18:7","nodeType":"YulFunctionCall","src":"18038:18:7"},"variableNames":[{"name":"tail","nativeSrc":"18030:4:7","nodeType":"YulIdentifier","src":"18030:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18072:9:7","nodeType":"YulIdentifier","src":"18072:9:7"},{"arguments":[{"name":"value0","nativeSrc":"18087:6:7","nodeType":"YulIdentifier","src":"18087:6:7"},{"kind":"number","nativeSrc":"18095:4:7","nodeType":"YulLiteral","src":"18095:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"18083:3:7","nodeType":"YulIdentifier","src":"18083:3:7"},"nativeSrc":"18083:17:7","nodeType":"YulFunctionCall","src":"18083:17:7"}],"functionName":{"name":"mstore","nativeSrc":"18065:6:7","nodeType":"YulIdentifier","src":"18065:6:7"},"nativeSrc":"18065:36:7","nodeType":"YulFunctionCall","src":"18065:36:7"},"nativeSrc":"18065:36:7","nodeType":"YulExpressionStatement","src":"18065:36:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18121:9:7","nodeType":"YulIdentifier","src":"18121:9:7"},{"kind":"number","nativeSrc":"18132:2:7","nodeType":"YulLiteral","src":"18132:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18117:3:7","nodeType":"YulIdentifier","src":"18117:3:7"},"nativeSrc":"18117:18:7","nodeType":"YulFunctionCall","src":"18117:18:7"},{"name":"value1","nativeSrc":"18137:6:7","nodeType":"YulIdentifier","src":"18137:6:7"}],"functionName":{"name":"mstore","nativeSrc":"18110:6:7","nodeType":"YulIdentifier","src":"18110:6:7"},"nativeSrc":"18110:34:7","nodeType":"YulFunctionCall","src":"18110:34:7"},"nativeSrc":"18110:34:7","nodeType":"YulExpressionStatement","src":"18110:34:7"}]},"name":"abi_encode_tuple_t_uint8_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"17893:257:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17981:9:7","nodeType":"YulTypedName","src":"17981:9:7","type":""},{"name":"value1","nativeSrc":"17992:6:7","nodeType":"YulTypedName","src":"17992:6:7","type":""},{"name":"value0","nativeSrc":"18000:6:7","nodeType":"YulTypedName","src":"18000:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18011:4:7","nodeType":"YulTypedName","src":"18011:4:7","type":""}],"src":"17893:257:7"},{"body":{"nativeSrc":"18284:168:7","nodeType":"YulBlock","src":"18284:168:7","statements":[{"nativeSrc":"18294:26:7","nodeType":"YulAssignment","src":"18294:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"18306:9:7","nodeType":"YulIdentifier","src":"18306:9:7"},{"kind":"number","nativeSrc":"18317:2:7","nodeType":"YulLiteral","src":"18317:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18302:3:7","nodeType":"YulIdentifier","src":"18302:3:7"},"nativeSrc":"18302:18:7","nodeType":"YulFunctionCall","src":"18302:18:7"},"variableNames":[{"name":"tail","nativeSrc":"18294:4:7","nodeType":"YulIdentifier","src":"18294:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18336:9:7","nodeType":"YulIdentifier","src":"18336:9:7"},{"arguments":[{"name":"value0","nativeSrc":"18351:6:7","nodeType":"YulIdentifier","src":"18351:6:7"},{"kind":"number","nativeSrc":"18359:42:7","nodeType":"YulLiteral","src":"18359:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"18347:3:7","nodeType":"YulIdentifier","src":"18347:3:7"},"nativeSrc":"18347:55:7","nodeType":"YulFunctionCall","src":"18347:55:7"}],"functionName":{"name":"mstore","nativeSrc":"18329:6:7","nodeType":"YulIdentifier","src":"18329:6:7"},"nativeSrc":"18329:74:7","nodeType":"YulFunctionCall","src":"18329:74:7"},"nativeSrc":"18329:74:7","nodeType":"YulExpressionStatement","src":"18329:74:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18423:9:7","nodeType":"YulIdentifier","src":"18423:9:7"},{"kind":"number","nativeSrc":"18434:2:7","nodeType":"YulLiteral","src":"18434:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18419:3:7","nodeType":"YulIdentifier","src":"18419:3:7"},"nativeSrc":"18419:18:7","nodeType":"YulFunctionCall","src":"18419:18:7"},{"name":"value1","nativeSrc":"18439:6:7","nodeType":"YulIdentifier","src":"18439:6:7"}],"functionName":{"name":"mstore","nativeSrc":"18412:6:7","nodeType":"YulIdentifier","src":"18412:6:7"},"nativeSrc":"18412:34:7","nodeType":"YulFunctionCall","src":"18412:34:7"},"nativeSrc":"18412:34:7","nodeType":"YulExpressionStatement","src":"18412:34:7"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"18155:297:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18245:9:7","nodeType":"YulTypedName","src":"18245:9:7","type":""},{"name":"value1","nativeSrc":"18256:6:7","nodeType":"YulTypedName","src":"18256:6:7","type":""},{"name":"value0","nativeSrc":"18264:6:7","nodeType":"YulTypedName","src":"18264:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18275:4:7","nodeType":"YulTypedName","src":"18275:4:7","type":""}],"src":"18155:297:7"},{"body":{"nativeSrc":"18555:245:7","nodeType":"YulBlock","src":"18555:245:7","statements":[{"body":{"nativeSrc":"18601:16:7","nodeType":"YulBlock","src":"18601:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18610:1:7","nodeType":"YulLiteral","src":"18610:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"18613:1:7","nodeType":"YulLiteral","src":"18613:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"18603:6:7","nodeType":"YulIdentifier","src":"18603:6:7"},"nativeSrc":"18603:12:7","nodeType":"YulFunctionCall","src":"18603:12:7"},"nativeSrc":"18603:12:7","nodeType":"YulExpressionStatement","src":"18603:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"18576:7:7","nodeType":"YulIdentifier","src":"18576:7:7"},{"name":"headStart","nativeSrc":"18585:9:7","nodeType":"YulIdentifier","src":"18585:9:7"}],"functionName":{"name":"sub","nativeSrc":"18572:3:7","nodeType":"YulIdentifier","src":"18572:3:7"},"nativeSrc":"18572:23:7","nodeType":"YulFunctionCall","src":"18572:23:7"},{"kind":"number","nativeSrc":"18597:2:7","nodeType":"YulLiteral","src":"18597:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"18568:3:7","nodeType":"YulIdentifier","src":"18568:3:7"},"nativeSrc":"18568:32:7","nodeType":"YulFunctionCall","src":"18568:32:7"},"nativeSrc":"18565:52:7","nodeType":"YulIf","src":"18565:52:7"},{"nativeSrc":"18626:14:7","nodeType":"YulVariableDeclaration","src":"18626:14:7","value":{"kind":"number","nativeSrc":"18639:1:7","nodeType":"YulLiteral","src":"18639:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"18630:5:7","nodeType":"YulTypedName","src":"18630:5:7","type":""}]},{"nativeSrc":"18649:25:7","nodeType":"YulAssignment","src":"18649:25:7","value":{"arguments":[{"name":"headStart","nativeSrc":"18664:9:7","nodeType":"YulIdentifier","src":"18664:9:7"}],"functionName":{"name":"mload","nativeSrc":"18658:5:7","nodeType":"YulIdentifier","src":"18658:5:7"},"nativeSrc":"18658:16:7","nodeType":"YulFunctionCall","src":"18658:16:7"},"variableNames":[{"name":"value","nativeSrc":"18649:5:7","nodeType":"YulIdentifier","src":"18649:5:7"}]},{"nativeSrc":"18683:15:7","nodeType":"YulAssignment","src":"18683:15:7","value":{"name":"value","nativeSrc":"18693:5:7","nodeType":"YulIdentifier","src":"18693:5:7"},"variableNames":[{"name":"value0","nativeSrc":"18683:6:7","nodeType":"YulIdentifier","src":"18683:6:7"}]},{"nativeSrc":"18707:16:7","nodeType":"YulVariableDeclaration","src":"18707:16:7","value":{"kind":"number","nativeSrc":"18722:1:7","nodeType":"YulLiteral","src":"18722:1:7","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"18711:7:7","nodeType":"YulTypedName","src":"18711:7:7","type":""}]},{"nativeSrc":"18732:36:7","nodeType":"YulAssignment","src":"18732:36:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18753:9:7","nodeType":"YulIdentifier","src":"18753:9:7"},{"kind":"number","nativeSrc":"18764:2:7","nodeType":"YulLiteral","src":"18764:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18749:3:7","nodeType":"YulIdentifier","src":"18749:3:7"},"nativeSrc":"18749:18:7","nodeType":"YulFunctionCall","src":"18749:18:7"}],"functionName":{"name":"mload","nativeSrc":"18743:5:7","nodeType":"YulIdentifier","src":"18743:5:7"},"nativeSrc":"18743:25:7","nodeType":"YulFunctionCall","src":"18743:25:7"},"variableNames":[{"name":"value_1","nativeSrc":"18732:7:7","nodeType":"YulIdentifier","src":"18732:7:7"}]},{"nativeSrc":"18777:17:7","nodeType":"YulAssignment","src":"18777:17:7","value":{"name":"value_1","nativeSrc":"18787:7:7","nodeType":"YulIdentifier","src":"18787:7:7"},"variableNames":[{"name":"value1","nativeSrc":"18777:6:7","nodeType":"YulIdentifier","src":"18777:6:7"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nativeSrc":"18457:343:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18513:9:7","nodeType":"YulTypedName","src":"18513:9:7","type":""},{"name":"dataEnd","nativeSrc":"18524:7:7","nodeType":"YulTypedName","src":"18524:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"18536:6:7","nodeType":"YulTypedName","src":"18536:6:7","type":""},{"name":"value1","nativeSrc":"18544:6:7","nodeType":"YulTypedName","src":"18544:6:7","type":""}],"src":"18457:343:7"},{"body":{"nativeSrc":"18979:236:7","nodeType":"YulBlock","src":"18979:236:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18996:9:7","nodeType":"YulIdentifier","src":"18996:9:7"},{"kind":"number","nativeSrc":"19007:2:7","nodeType":"YulLiteral","src":"19007:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"18989:6:7","nodeType":"YulIdentifier","src":"18989:6:7"},"nativeSrc":"18989:21:7","nodeType":"YulFunctionCall","src":"18989:21:7"},"nativeSrc":"18989:21:7","nodeType":"YulExpressionStatement","src":"18989:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19030:9:7","nodeType":"YulIdentifier","src":"19030:9:7"},{"kind":"number","nativeSrc":"19041:2:7","nodeType":"YulLiteral","src":"19041:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19026:3:7","nodeType":"YulIdentifier","src":"19026:3:7"},"nativeSrc":"19026:18:7","nodeType":"YulFunctionCall","src":"19026:18:7"},{"kind":"number","nativeSrc":"19046:2:7","nodeType":"YulLiteral","src":"19046:2:7","type":"","value":"46"}],"functionName":{"name":"mstore","nativeSrc":"19019:6:7","nodeType":"YulIdentifier","src":"19019:6:7"},"nativeSrc":"19019:30:7","nodeType":"YulFunctionCall","src":"19019:30:7"},"nativeSrc":"19019:30:7","nodeType":"YulExpressionStatement","src":"19019:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19069:9:7","nodeType":"YulIdentifier","src":"19069:9:7"},{"kind":"number","nativeSrc":"19080:2:7","nodeType":"YulLiteral","src":"19080:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19065:3:7","nodeType":"YulIdentifier","src":"19065:3:7"},"nativeSrc":"19065:18:7","nodeType":"YulFunctionCall","src":"19065:18:7"},{"hexValue":"46756e64696e67206d757374206265206d6164652077697468696e2074686520","kind":"string","nativeSrc":"19085:34:7","nodeType":"YulLiteral","src":"19085:34:7","type":"","value":"Funding must be made within the "}],"functionName":{"name":"mstore","nativeSrc":"19058:6:7","nodeType":"YulIdentifier","src":"19058:6:7"},"nativeSrc":"19058:62:7","nodeType":"YulFunctionCall","src":"19058:62:7"},"nativeSrc":"19058:62:7","nodeType":"YulExpressionStatement","src":"19058:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19140:9:7","nodeType":"YulIdentifier","src":"19140:9:7"},{"kind":"number","nativeSrc":"19151:2:7","nodeType":"YulLiteral","src":"19151:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19136:3:7","nodeType":"YulIdentifier","src":"19136:3:7"},"nativeSrc":"19136:18:7","nodeType":"YulFunctionCall","src":"19136:18:7"},{"hexValue":"61707065616c20706572696f642e","kind":"string","nativeSrc":"19156:16:7","nodeType":"YulLiteral","src":"19156:16:7","type":"","value":"appeal period."}],"functionName":{"name":"mstore","nativeSrc":"19129:6:7","nodeType":"YulIdentifier","src":"19129:6:7"},"nativeSrc":"19129:44:7","nodeType":"YulFunctionCall","src":"19129:44:7"},"nativeSrc":"19129:44:7","nodeType":"YulExpressionStatement","src":"19129:44:7"},{"nativeSrc":"19182:27:7","nodeType":"YulAssignment","src":"19182:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"19194:9:7","nodeType":"YulIdentifier","src":"19194:9:7"},{"kind":"number","nativeSrc":"19205:3:7","nodeType":"YulLiteral","src":"19205:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"19190:3:7","nodeType":"YulIdentifier","src":"19190:3:7"},"nativeSrc":"19190:19:7","nodeType":"YulFunctionCall","src":"19190:19:7"},"variableNames":[{"name":"tail","nativeSrc":"19182:4:7","nodeType":"YulIdentifier","src":"19182:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_0345b6b07b3f7ea23ce7c0682ae193a7b3933d232b736d656630025e0007450f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18805:410:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18956:9:7","nodeType":"YulTypedName","src":"18956:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18970:4:7","nodeType":"YulTypedName","src":"18970:4:7","type":""}],"src":"18805:410:7"},{"body":{"nativeSrc":"19394:247:7","nodeType":"YulBlock","src":"19394:247:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19411:9:7","nodeType":"YulIdentifier","src":"19411:9:7"},{"kind":"number","nativeSrc":"19422:2:7","nodeType":"YulLiteral","src":"19422:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"19404:6:7","nodeType":"YulIdentifier","src":"19404:6:7"},"nativeSrc":"19404:21:7","nodeType":"YulFunctionCall","src":"19404:21:7"},"nativeSrc":"19404:21:7","nodeType":"YulExpressionStatement","src":"19404:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19445:9:7","nodeType":"YulIdentifier","src":"19445:9:7"},{"kind":"number","nativeSrc":"19456:2:7","nodeType":"YulLiteral","src":"19456:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19441:3:7","nodeType":"YulIdentifier","src":"19441:3:7"},"nativeSrc":"19441:18:7","nodeType":"YulFunctionCall","src":"19441:18:7"},{"kind":"number","nativeSrc":"19461:2:7","nodeType":"YulLiteral","src":"19461:2:7","type":"","value":"57"}],"functionName":{"name":"mstore","nativeSrc":"19434:6:7","nodeType":"YulIdentifier","src":"19434:6:7"},"nativeSrc":"19434:30:7","nodeType":"YulFunctionCall","src":"19434:30:7"},"nativeSrc":"19434:30:7","nodeType":"YulExpressionStatement","src":"19434:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19484:9:7","nodeType":"YulIdentifier","src":"19484:9:7"},{"kind":"number","nativeSrc":"19495:2:7","nodeType":"YulLiteral","src":"19495:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19480:3:7","nodeType":"YulIdentifier","src":"19480:3:7"},"nativeSrc":"19480:18:7","nodeType":"YulFunctionCall","src":"19480:18:7"},{"hexValue":"46756e64696e67206d757374206265206d6164652077697468696e2074686520","kind":"string","nativeSrc":"19500:34:7","nodeType":"YulLiteral","src":"19500:34:7","type":"","value":"Funding must be made within the "}],"functionName":{"name":"mstore","nativeSrc":"19473:6:7","nodeType":"YulIdentifier","src":"19473:6:7"},"nativeSrc":"19473:62:7","nodeType":"YulFunctionCall","src":"19473:62:7"},"nativeSrc":"19473:62:7","nodeType":"YulExpressionStatement","src":"19473:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19555:9:7","nodeType":"YulIdentifier","src":"19555:9:7"},{"kind":"number","nativeSrc":"19566:2:7","nodeType":"YulLiteral","src":"19566:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19551:3:7","nodeType":"YulIdentifier","src":"19551:3:7"},"nativeSrc":"19551:18:7","nodeType":"YulFunctionCall","src":"19551:18:7"},{"hexValue":"66697273742068616c662061707065616c20706572696f642e","kind":"string","nativeSrc":"19571:27:7","nodeType":"YulLiteral","src":"19571:27:7","type":"","value":"first half appeal period."}],"functionName":{"name":"mstore","nativeSrc":"19544:6:7","nodeType":"YulIdentifier","src":"19544:6:7"},"nativeSrc":"19544:55:7","nodeType":"YulFunctionCall","src":"19544:55:7"},"nativeSrc":"19544:55:7","nodeType":"YulExpressionStatement","src":"19544:55:7"},{"nativeSrc":"19608:27:7","nodeType":"YulAssignment","src":"19608:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"19620:9:7","nodeType":"YulIdentifier","src":"19620:9:7"},{"kind":"number","nativeSrc":"19631:3:7","nodeType":"YulLiteral","src":"19631:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"19616:3:7","nodeType":"YulIdentifier","src":"19616:3:7"},"nativeSrc":"19616:19:7","nodeType":"YulFunctionCall","src":"19616:19:7"},"variableNames":[{"name":"tail","nativeSrc":"19608:4:7","nodeType":"YulIdentifier","src":"19608:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_f3418d70ac679d1f67a83336adc36c46a5610f9d2455f76fc28495336bbc06ed__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19220:421:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19371:9:7","nodeType":"YulTypedName","src":"19371:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19385:4:7","nodeType":"YulTypedName","src":"19385:4:7","type":""}],"src":"19220:421:7"},{"body":{"nativeSrc":"19820:223:7","nodeType":"YulBlock","src":"19820:223:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19837:9:7","nodeType":"YulIdentifier","src":"19837:9:7"},{"kind":"number","nativeSrc":"19848:2:7","nodeType":"YulLiteral","src":"19848:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"19830:6:7","nodeType":"YulIdentifier","src":"19830:6:7"},"nativeSrc":"19830:21:7","nodeType":"YulFunctionCall","src":"19830:21:7"},"nativeSrc":"19830:21:7","nodeType":"YulExpressionStatement","src":"19830:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19871:9:7","nodeType":"YulIdentifier","src":"19871:9:7"},{"kind":"number","nativeSrc":"19882:2:7","nodeType":"YulLiteral","src":"19882:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19867:3:7","nodeType":"YulIdentifier","src":"19867:3:7"},"nativeSrc":"19867:18:7","nodeType":"YulFunctionCall","src":"19867:18:7"},{"kind":"number","nativeSrc":"19887:2:7","nodeType":"YulLiteral","src":"19887:2:7","type":"","value":"33"}],"functionName":{"name":"mstore","nativeSrc":"19860:6:7","nodeType":"YulIdentifier","src":"19860:6:7"},"nativeSrc":"19860:30:7","nodeType":"YulFunctionCall","src":"19860:30:7"},"nativeSrc":"19860:30:7","nodeType":"YulExpressionStatement","src":"19860:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19910:9:7","nodeType":"YulIdentifier","src":"19910:9:7"},{"kind":"number","nativeSrc":"19921:2:7","nodeType":"YulLiteral","src":"19921:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19906:3:7","nodeType":"YulIdentifier","src":"19906:3:7"},"nativeSrc":"19906:18:7","nodeType":"YulFunctionCall","src":"19906:18:7"},{"hexValue":"41707065616c206665652068617320616c7265616479206265656e2070616964","kind":"string","nativeSrc":"19926:34:7","nodeType":"YulLiteral","src":"19926:34:7","type":"","value":"Appeal fee has already been paid"}],"functionName":{"name":"mstore","nativeSrc":"19899:6:7","nodeType":"YulIdentifier","src":"19899:6:7"},"nativeSrc":"19899:62:7","nodeType":"YulFunctionCall","src":"19899:62:7"},"nativeSrc":"19899:62:7","nodeType":"YulExpressionStatement","src":"19899:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19981:9:7","nodeType":"YulIdentifier","src":"19981:9:7"},{"kind":"number","nativeSrc":"19992:2:7","nodeType":"YulLiteral","src":"19992:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19977:3:7","nodeType":"YulIdentifier","src":"19977:3:7"},"nativeSrc":"19977:18:7","nodeType":"YulFunctionCall","src":"19977:18:7"},{"hexValue":"2e","kind":"string","nativeSrc":"19997:3:7","nodeType":"YulLiteral","src":"19997:3:7","type":"","value":"."}],"functionName":{"name":"mstore","nativeSrc":"19970:6:7","nodeType":"YulIdentifier","src":"19970:6:7"},"nativeSrc":"19970:31:7","nodeType":"YulFunctionCall","src":"19970:31:7"},"nativeSrc":"19970:31:7","nodeType":"YulExpressionStatement","src":"19970:31:7"},{"nativeSrc":"20010:27:7","nodeType":"YulAssignment","src":"20010:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"20022:9:7","nodeType":"YulIdentifier","src":"20022:9:7"},{"kind":"number","nativeSrc":"20033:3:7","nodeType":"YulLiteral","src":"20033:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"20018:3:7","nodeType":"YulIdentifier","src":"20018:3:7"},"nativeSrc":"20018:19:7","nodeType":"YulFunctionCall","src":"20018:19:7"},"variableNames":[{"name":"tail","nativeSrc":"20010:4:7","nodeType":"YulIdentifier","src":"20010:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_c2f2256a77e1cd7cdc564a3b966df4f3e5bfbdc15f00156637ffbff138e529be__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19646:397:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19797:9:7","nodeType":"YulTypedName","src":"19797:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19811:4:7","nodeType":"YulTypedName","src":"19811:4:7","type":""}],"src":"19646:397:7"},{"body":{"nativeSrc":"20192:142:7","nodeType":"YulBlock","src":"20192:142:7","statements":[{"nativeSrc":"20202:26:7","nodeType":"YulAssignment","src":"20202:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"20214:9:7","nodeType":"YulIdentifier","src":"20214:9:7"},{"kind":"number","nativeSrc":"20225:2:7","nodeType":"YulLiteral","src":"20225:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20210:3:7","nodeType":"YulIdentifier","src":"20210:3:7"},"nativeSrc":"20210:18:7","nodeType":"YulFunctionCall","src":"20210:18:7"},"variableNames":[{"name":"tail","nativeSrc":"20202:4:7","nodeType":"YulIdentifier","src":"20202:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20267:6:7","nodeType":"YulIdentifier","src":"20267:6:7"},{"name":"headStart","nativeSrc":"20275:9:7","nodeType":"YulIdentifier","src":"20275:9:7"}],"functionName":{"name":"abi_encode_enum_RulingOptions","nativeSrc":"20237:29:7","nodeType":"YulIdentifier","src":"20237:29:7"},"nativeSrc":"20237:48:7","nodeType":"YulFunctionCall","src":"20237:48:7"},"nativeSrc":"20237:48:7","nodeType":"YulExpressionStatement","src":"20237:48:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20305:9:7","nodeType":"YulIdentifier","src":"20305:9:7"},{"kind":"number","nativeSrc":"20316:2:7","nodeType":"YulLiteral","src":"20316:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20301:3:7","nodeType":"YulIdentifier","src":"20301:3:7"},"nativeSrc":"20301:18:7","nodeType":"YulFunctionCall","src":"20301:18:7"},{"name":"value1","nativeSrc":"20321:6:7","nodeType":"YulIdentifier","src":"20321:6:7"}],"functionName":{"name":"mstore","nativeSrc":"20294:6:7","nodeType":"YulIdentifier","src":"20294:6:7"},"nativeSrc":"20294:34:7","nodeType":"YulFunctionCall","src":"20294:34:7"},"nativeSrc":"20294:34:7","nodeType":"YulExpressionStatement","src":"20294:34:7"}]},"name":"abi_encode_tuple_t_enum$_RulingOptions_$295_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nativeSrc":"20048:286:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20153:9:7","nodeType":"YulTypedName","src":"20153:9:7","type":""},{"name":"value1","nativeSrc":"20164:6:7","nodeType":"YulTypedName","src":"20164:6:7","type":""},{"name":"value0","nativeSrc":"20172:6:7","nodeType":"YulTypedName","src":"20172:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20183:4:7","nodeType":"YulTypedName","src":"20183:4:7","type":""}],"src":"20048:286:7"},{"body":{"nativeSrc":"20513:244:7","nodeType":"YulBlock","src":"20513:244:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20530:9:7","nodeType":"YulIdentifier","src":"20530:9:7"},{"kind":"number","nativeSrc":"20541:2:7","nodeType":"YulLiteral","src":"20541:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"20523:6:7","nodeType":"YulIdentifier","src":"20523:6:7"},"nativeSrc":"20523:21:7","nodeType":"YulFunctionCall","src":"20523:21:7"},"nativeSrc":"20523:21:7","nodeType":"YulExpressionStatement","src":"20523:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20564:9:7","nodeType":"YulIdentifier","src":"20564:9:7"},{"kind":"number","nativeSrc":"20575:2:7","nodeType":"YulLiteral","src":"20575:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20560:3:7","nodeType":"YulIdentifier","src":"20560:3:7"},"nativeSrc":"20560:18:7","nodeType":"YulFunctionCall","src":"20560:18:7"},{"kind":"number","nativeSrc":"20580:2:7","nodeType":"YulLiteral","src":"20580:2:7","type":"","value":"54"}],"functionName":{"name":"mstore","nativeSrc":"20553:6:7","nodeType":"YulIdentifier","src":"20553:6:7"},"nativeSrc":"20553:30:7","nodeType":"YulFunctionCall","src":"20553:30:7"},"nativeSrc":"20553:30:7","nodeType":"YulExpressionStatement","src":"20553:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20603:9:7","nodeType":"YulIdentifier","src":"20603:9:7"},{"kind":"number","nativeSrc":"20614:2:7","nodeType":"YulLiteral","src":"20614:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20599:3:7","nodeType":"YulIdentifier","src":"20599:3:7"},"nativeSrc":"20599:18:7","nodeType":"YulFunctionCall","src":"20599:18:7"},{"hexValue":"5468652074617820726174652063616e206f6e6c7920626520696e6372656173","kind":"string","nativeSrc":"20619:34:7","nodeType":"YulLiteral","src":"20619:34:7","type":"","value":"The tax rate can only be increas"}],"functionName":{"name":"mstore","nativeSrc":"20592:6:7","nodeType":"YulIdentifier","src":"20592:6:7"},"nativeSrc":"20592:62:7","nodeType":"YulFunctionCall","src":"20592:62:7"},"nativeSrc":"20592:62:7","nodeType":"YulExpressionStatement","src":"20592:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20674:9:7","nodeType":"YulIdentifier","src":"20674:9:7"},{"kind":"number","nativeSrc":"20685:2:7","nodeType":"YulLiteral","src":"20685:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20670:3:7","nodeType":"YulIdentifier","src":"20670:3:7"},"nativeSrc":"20670:18:7","nodeType":"YulFunctionCall","src":"20670:18:7"},{"hexValue":"65642062792061206d6178696d756d206f6620323525","kind":"string","nativeSrc":"20690:24:7","nodeType":"YulLiteral","src":"20690:24:7","type":"","value":"ed by a maximum of 25%"}],"functionName":{"name":"mstore","nativeSrc":"20663:6:7","nodeType":"YulIdentifier","src":"20663:6:7"},"nativeSrc":"20663:52:7","nodeType":"YulFunctionCall","src":"20663:52:7"},"nativeSrc":"20663:52:7","nodeType":"YulExpressionStatement","src":"20663:52:7"},{"nativeSrc":"20724:27:7","nodeType":"YulAssignment","src":"20724:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"20736:9:7","nodeType":"YulIdentifier","src":"20736:9:7"},{"kind":"number","nativeSrc":"20747:3:7","nodeType":"YulLiteral","src":"20747:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"20732:3:7","nodeType":"YulIdentifier","src":"20732:3:7"},"nativeSrc":"20732:19:7","nodeType":"YulFunctionCall","src":"20732:19:7"},"variableNames":[{"name":"tail","nativeSrc":"20724:4:7","nodeType":"YulIdentifier","src":"20724:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_5943b819c05c7059125985bc4ac5cf738c94c0822c506b598ab2eced554e2f50__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20339:418:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20490:9:7","nodeType":"YulTypedName","src":"20490:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20504:4:7","nodeType":"YulTypedName","src":"20504:4:7","type":""}],"src":"20339:418:7"},{"body":{"nativeSrc":"20862:103:7","nodeType":"YulBlock","src":"20862:103:7","statements":[{"nativeSrc":"20872:26:7","nodeType":"YulAssignment","src":"20872:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"20884:9:7","nodeType":"YulIdentifier","src":"20884:9:7"},{"kind":"number","nativeSrc":"20895:2:7","nodeType":"YulLiteral","src":"20895:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20880:3:7","nodeType":"YulIdentifier","src":"20880:3:7"},"nativeSrc":"20880:18:7","nodeType":"YulFunctionCall","src":"20880:18:7"},"variableNames":[{"name":"tail","nativeSrc":"20872:4:7","nodeType":"YulIdentifier","src":"20872:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20914:9:7","nodeType":"YulIdentifier","src":"20914:9:7"},{"arguments":[{"name":"value0","nativeSrc":"20929:6:7","nodeType":"YulIdentifier","src":"20929:6:7"},{"kind":"number","nativeSrc":"20937:20:7","nodeType":"YulLiteral","src":"20937:20:7","type":"","value":"0xffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"20925:3:7","nodeType":"YulIdentifier","src":"20925:3:7"},"nativeSrc":"20925:33:7","nodeType":"YulFunctionCall","src":"20925:33:7"}],"functionName":{"name":"mstore","nativeSrc":"20907:6:7","nodeType":"YulIdentifier","src":"20907:6:7"},"nativeSrc":"20907:52:7","nodeType":"YulFunctionCall","src":"20907:52:7"},"nativeSrc":"20907:52:7","nodeType":"YulExpressionStatement","src":"20907:52:7"}]},"name":"abi_encode_tuple_t_uint72__to_t_uint256__fromStack_reversed","nativeSrc":"20762:203:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20831:9:7","nodeType":"YulTypedName","src":"20831:9:7","type":""},{"name":"value0","nativeSrc":"20842:6:7","nodeType":"YulTypedName","src":"20842:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20853:4:7","nodeType":"YulTypedName","src":"20853:4:7","type":""}],"src":"20762:203:7"},{"body":{"nativeSrc":"21086:106:7","nodeType":"YulBlock","src":"21086:106:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21103:9:7","nodeType":"YulIdentifier","src":"21103:9:7"},{"kind":"number","nativeSrc":"21114:2:7","nodeType":"YulLiteral","src":"21114:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"21096:6:7","nodeType":"YulIdentifier","src":"21096:6:7"},"nativeSrc":"21096:21:7","nodeType":"YulFunctionCall","src":"21096:21:7"},"nativeSrc":"21096:21:7","nodeType":"YulExpressionStatement","src":"21096:21:7"},{"nativeSrc":"21126:60:7","nodeType":"YulAssignment","src":"21126:60:7","value":{"arguments":[{"name":"value0","nativeSrc":"21159:6:7","nodeType":"YulIdentifier","src":"21159:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"21171:9:7","nodeType":"YulIdentifier","src":"21171:9:7"},{"kind":"number","nativeSrc":"21182:2:7","nodeType":"YulLiteral","src":"21182:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21167:3:7","nodeType":"YulIdentifier","src":"21167:3:7"},"nativeSrc":"21167:18:7","nodeType":"YulFunctionCall","src":"21167:18:7"}],"functionName":{"name":"abi_encode_bytes_storage","nativeSrc":"21134:24:7","nodeType":"YulIdentifier","src":"21134:24:7"},"nativeSrc":"21134:52:7","nodeType":"YulFunctionCall","src":"21134:52:7"},"variableNames":[{"name":"tail","nativeSrc":"21126:4:7","nodeType":"YulIdentifier","src":"21126:4:7"}]}]},"name":"abi_encode_tuple_t_bytes_storage__to_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"20970:222:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21055:9:7","nodeType":"YulTypedName","src":"21055:9:7","type":""},{"name":"value0","nativeSrc":"21066:6:7","nodeType":"YulTypedName","src":"21066:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21077:4:7","nodeType":"YulTypedName","src":"21077:4:7","type":""}],"src":"20970:222:7"},{"body":{"nativeSrc":"21371:236:7","nodeType":"YulBlock","src":"21371:236:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21388:9:7","nodeType":"YulIdentifier","src":"21388:9:7"},{"kind":"number","nativeSrc":"21399:2:7","nodeType":"YulLiteral","src":"21399:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"21381:6:7","nodeType":"YulIdentifier","src":"21381:6:7"},"nativeSrc":"21381:21:7","nodeType":"YulFunctionCall","src":"21381:21:7"},"nativeSrc":"21381:21:7","nodeType":"YulExpressionStatement","src":"21381:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21422:9:7","nodeType":"YulIdentifier","src":"21422:9:7"},{"kind":"number","nativeSrc":"21433:2:7","nodeType":"YulLiteral","src":"21433:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21418:3:7","nodeType":"YulIdentifier","src":"21418:3:7"},"nativeSrc":"21418:18:7","nodeType":"YulFunctionCall","src":"21418:18:7"},{"kind":"number","nativeSrc":"21438:2:7","nodeType":"YulLiteral","src":"21438:2:7","type":"","value":"46"}],"functionName":{"name":"mstore","nativeSrc":"21411:6:7","nodeType":"YulIdentifier","src":"21411:6:7"},"nativeSrc":"21411:30:7","nodeType":"YulFunctionCall","src":"21411:30:7"},"nativeSrc":"21411:30:7","nodeType":"YulExpressionStatement","src":"21411:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21461:9:7","nodeType":"YulIdentifier","src":"21461:9:7"},{"kind":"number","nativeSrc":"21472:2:7","nodeType":"YulLiteral","src":"21472:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21457:3:7","nodeType":"YulIdentifier","src":"21457:3:7"},"nativeSrc":"21457:18:7","nodeType":"YulFunctionCall","src":"21457:18:7"},{"hexValue":"4f6e6c7920617574686f722063616e20696e63726561736520626f756e747920","kind":"string","nativeSrc":"21477:34:7","nodeType":"YulLiteral","src":"21477:34:7","type":"","value":"Only author can increase bounty "}],"functionName":{"name":"mstore","nativeSrc":"21450:6:7","nodeType":"YulIdentifier","src":"21450:6:7"},"nativeSrc":"21450:62:7","nodeType":"YulFunctionCall","src":"21450:62:7"},"nativeSrc":"21450:62:7","nodeType":"YulExpressionStatement","src":"21450:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21532:9:7","nodeType":"YulIdentifier","src":"21532:9:7"},{"kind":"number","nativeSrc":"21543:2:7","nodeType":"YulLiteral","src":"21543:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21528:3:7","nodeType":"YulIdentifier","src":"21528:3:7"},"nativeSrc":"21528:18:7","nodeType":"YulFunctionCall","src":"21528:18:7"},{"hexValue":"6f6620616e2061727469636c652e","kind":"string","nativeSrc":"21548:16:7","nodeType":"YulLiteral","src":"21548:16:7","type":"","value":"of an article."}],"functionName":{"name":"mstore","nativeSrc":"21521:6:7","nodeType":"YulIdentifier","src":"21521:6:7"},"nativeSrc":"21521:44:7","nodeType":"YulFunctionCall","src":"21521:44:7"},"nativeSrc":"21521:44:7","nodeType":"YulExpressionStatement","src":"21521:44:7"},{"nativeSrc":"21574:27:7","nodeType":"YulAssignment","src":"21574:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"21586:9:7","nodeType":"YulIdentifier","src":"21586:9:7"},{"kind":"number","nativeSrc":"21597:3:7","nodeType":"YulLiteral","src":"21597:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"21582:3:7","nodeType":"YulIdentifier","src":"21582:3:7"},"nativeSrc":"21582:19:7","nodeType":"YulFunctionCall","src":"21582:19:7"},"variableNames":[{"name":"tail","nativeSrc":"21574:4:7","nodeType":"YulIdentifier","src":"21574:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_a40667c3d5ae3c08746fe24fceae1033d89d0e1de162ecdda7e68141465d7af7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21197:410:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21348:9:7","nodeType":"YulTypedName","src":"21348:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21362:4:7","nodeType":"YulTypedName","src":"21362:4:7","type":""}],"src":"21197:410:7"},{"body":{"nativeSrc":"21659:138:7","nodeType":"YulBlock","src":"21659:138:7","statements":[{"nativeSrc":"21669:62:7","nodeType":"YulAssignment","src":"21669:62:7","value":{"arguments":[{"arguments":[{"name":"x","nativeSrc":"21684:1:7","nodeType":"YulIdentifier","src":"21684:1:7"},{"kind":"number","nativeSrc":"21687:16:7","nodeType":"YulLiteral","src":"21687:16:7","type":"","value":"0xffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"21680:3:7","nodeType":"YulIdentifier","src":"21680:3:7"},"nativeSrc":"21680:24:7","nodeType":"YulFunctionCall","src":"21680:24:7"},{"arguments":[{"name":"y","nativeSrc":"21710:1:7","nodeType":"YulIdentifier","src":"21710:1:7"},{"kind":"number","nativeSrc":"21713:16:7","nodeType":"YulLiteral","src":"21713:16:7","type":"","value":"0xffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"21706:3:7","nodeType":"YulIdentifier","src":"21706:3:7"},"nativeSrc":"21706:24:7","nodeType":"YulFunctionCall","src":"21706:24:7"}],"functionName":{"name":"add","nativeSrc":"21676:3:7","nodeType":"YulIdentifier","src":"21676:3:7"},"nativeSrc":"21676:55:7","nodeType":"YulFunctionCall","src":"21676:55:7"},"variableNames":[{"name":"sum","nativeSrc":"21669:3:7","nodeType":"YulIdentifier","src":"21669:3:7"}]},{"body":{"nativeSrc":"21769:22:7","nodeType":"YulBlock","src":"21769:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"21771:16:7","nodeType":"YulIdentifier","src":"21771:16:7"},"nativeSrc":"21771:18:7","nodeType":"YulFunctionCall","src":"21771:18:7"},"nativeSrc":"21771:18:7","nodeType":"YulExpressionStatement","src":"21771:18:7"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"21746:3:7","nodeType":"YulIdentifier","src":"21746:3:7"},{"kind":"number","nativeSrc":"21751:16:7","nodeType":"YulLiteral","src":"21751:16:7","type":"","value":"0xffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"21743:2:7","nodeType":"YulIdentifier","src":"21743:2:7"},"nativeSrc":"21743:25:7","nodeType":"YulFunctionCall","src":"21743:25:7"},"nativeSrc":"21740:51:7","nodeType":"YulIf","src":"21740:51:7"}]},"name":"checked_add_t_uint56","nativeSrc":"21612:185:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"21642:1:7","nodeType":"YulTypedName","src":"21642:1:7","type":""},{"name":"y","nativeSrc":"21645:1:7","nodeType":"YulTypedName","src":"21645:1:7","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"21651:3:7","nodeType":"YulTypedName","src":"21651:3:7","type":""}],"src":"21612:185:7"},{"body":{"nativeSrc":"21930:146:7","nodeType":"YulBlock","src":"21930:146:7","statements":[{"nativeSrc":"21940:26:7","nodeType":"YulAssignment","src":"21940:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"21952:9:7","nodeType":"YulIdentifier","src":"21952:9:7"},{"kind":"number","nativeSrc":"21963:2:7","nodeType":"YulLiteral","src":"21963:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21948:3:7","nodeType":"YulIdentifier","src":"21948:3:7"},"nativeSrc":"21948:18:7","nodeType":"YulFunctionCall","src":"21948:18:7"},"variableNames":[{"name":"tail","nativeSrc":"21940:4:7","nodeType":"YulIdentifier","src":"21940:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21982:9:7","nodeType":"YulIdentifier","src":"21982:9:7"},{"arguments":[{"name":"value0","nativeSrc":"21997:6:7","nodeType":"YulIdentifier","src":"21997:6:7"},{"kind":"number","nativeSrc":"22005:20:7","nodeType":"YulLiteral","src":"22005:20:7","type":"","value":"0xffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"21993:3:7","nodeType":"YulIdentifier","src":"21993:3:7"},"nativeSrc":"21993:33:7","nodeType":"YulFunctionCall","src":"21993:33:7"}],"functionName":{"name":"mstore","nativeSrc":"21975:6:7","nodeType":"YulIdentifier","src":"21975:6:7"},"nativeSrc":"21975:52:7","nodeType":"YulFunctionCall","src":"21975:52:7"},"nativeSrc":"21975:52:7","nodeType":"YulExpressionStatement","src":"21975:52:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22047:9:7","nodeType":"YulIdentifier","src":"22047:9:7"},{"kind":"number","nativeSrc":"22058:2:7","nodeType":"YulLiteral","src":"22058:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22043:3:7","nodeType":"YulIdentifier","src":"22043:3:7"},"nativeSrc":"22043:18:7","nodeType":"YulFunctionCall","src":"22043:18:7"},{"name":"value1","nativeSrc":"22063:6:7","nodeType":"YulIdentifier","src":"22063:6:7"}],"functionName":{"name":"mstore","nativeSrc":"22036:6:7","nodeType":"YulIdentifier","src":"22036:6:7"},"nativeSrc":"22036:34:7","nodeType":"YulFunctionCall","src":"22036:34:7"},"nativeSrc":"22036:34:7","nodeType":"YulExpressionStatement","src":"22036:34:7"}]},"name":"abi_encode_tuple_t_uint72_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"21802:274:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21891:9:7","nodeType":"YulTypedName","src":"21891:9:7","type":""},{"name":"value1","nativeSrc":"21902:6:7","nodeType":"YulTypedName","src":"21902:6:7","type":""},{"name":"value0","nativeSrc":"21910:6:7","nodeType":"YulTypedName","src":"21910:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21921:4:7","nodeType":"YulTypedName","src":"21921:4:7","type":""}],"src":"21802:274:7"},{"body":{"nativeSrc":"22127:102:7","nodeType":"YulBlock","src":"22127:102:7","statements":[{"nativeSrc":"22137:38:7","nodeType":"YulAssignment","src":"22137:38:7","value":{"arguments":[{"arguments":[{"name":"x","nativeSrc":"22152:1:7","nodeType":"YulIdentifier","src":"22152:1:7"},{"kind":"number","nativeSrc":"22155:4:7","nodeType":"YulLiteral","src":"22155:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"22148:3:7","nodeType":"YulIdentifier","src":"22148:3:7"},"nativeSrc":"22148:12:7","nodeType":"YulFunctionCall","src":"22148:12:7"},{"arguments":[{"name":"y","nativeSrc":"22166:1:7","nodeType":"YulIdentifier","src":"22166:1:7"},{"kind":"number","nativeSrc":"22169:4:7","nodeType":"YulLiteral","src":"22169:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"22162:3:7","nodeType":"YulIdentifier","src":"22162:3:7"},"nativeSrc":"22162:12:7","nodeType":"YulFunctionCall","src":"22162:12:7"}],"functionName":{"name":"add","nativeSrc":"22144:3:7","nodeType":"YulIdentifier","src":"22144:3:7"},"nativeSrc":"22144:31:7","nodeType":"YulFunctionCall","src":"22144:31:7"},"variableNames":[{"name":"sum","nativeSrc":"22137:3:7","nodeType":"YulIdentifier","src":"22137:3:7"}]},{"body":{"nativeSrc":"22201:22:7","nodeType":"YulBlock","src":"22201:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"22203:16:7","nodeType":"YulIdentifier","src":"22203:16:7"},"nativeSrc":"22203:18:7","nodeType":"YulFunctionCall","src":"22203:18:7"},"nativeSrc":"22203:18:7","nodeType":"YulExpressionStatement","src":"22203:18:7"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"22190:3:7","nodeType":"YulIdentifier","src":"22190:3:7"},{"kind":"number","nativeSrc":"22195:4:7","nodeType":"YulLiteral","src":"22195:4:7","type":"","value":"0xff"}],"functionName":{"name":"gt","nativeSrc":"22187:2:7","nodeType":"YulIdentifier","src":"22187:2:7"},"nativeSrc":"22187:13:7","nodeType":"YulFunctionCall","src":"22187:13:7"},"nativeSrc":"22184:39:7","nodeType":"YulIf","src":"22184:39:7"}]},"name":"checked_add_t_uint8","nativeSrc":"22081:148:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"22110:1:7","nodeType":"YulTypedName","src":"22110:1:7","type":""},{"name":"y","nativeSrc":"22113:1:7","nodeType":"YulTypedName","src":"22113:1:7","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"22119:3:7","nodeType":"YulTypedName","src":"22119:3:7","type":""}],"src":"22081:148:7"},{"body":{"nativeSrc":"22408:182:7","nodeType":"YulBlock","src":"22408:182:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"22425:9:7","nodeType":"YulIdentifier","src":"22425:9:7"},{"kind":"number","nativeSrc":"22436:2:7","nodeType":"YulLiteral","src":"22436:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"22418:6:7","nodeType":"YulIdentifier","src":"22418:6:7"},"nativeSrc":"22418:21:7","nodeType":"YulFunctionCall","src":"22418:21:7"},"nativeSrc":"22418:21:7","nodeType":"YulExpressionStatement","src":"22418:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22459:9:7","nodeType":"YulIdentifier","src":"22459:9:7"},{"kind":"number","nativeSrc":"22470:2:7","nodeType":"YulLiteral","src":"22470:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22455:3:7","nodeType":"YulIdentifier","src":"22455:3:7"},"nativeSrc":"22455:18:7","nodeType":"YulFunctionCall","src":"22455:18:7"},{"kind":"number","nativeSrc":"22475:2:7","nodeType":"YulLiteral","src":"22475:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"22448:6:7","nodeType":"YulIdentifier","src":"22448:6:7"},"nativeSrc":"22448:30:7","nodeType":"YulFunctionCall","src":"22448:30:7"},"nativeSrc":"22448:30:7","nodeType":"YulExpressionStatement","src":"22448:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22498:9:7","nodeType":"YulIdentifier","src":"22498:9:7"},{"kind":"number","nativeSrc":"22509:2:7","nodeType":"YulLiteral","src":"22509:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22494:3:7","nodeType":"YulIdentifier","src":"22494:3:7"},"nativeSrc":"22494:18:7","nodeType":"YulFunctionCall","src":"22494:18:7"},{"hexValue":"4e6f207370616365206c65667420666f722061206e65772063617465676f7279","kind":"string","nativeSrc":"22514:34:7","nodeType":"YulLiteral","src":"22514:34:7","type":"","value":"No space left for a new category"}],"functionName":{"name":"mstore","nativeSrc":"22487:6:7","nodeType":"YulIdentifier","src":"22487:6:7"},"nativeSrc":"22487:62:7","nodeType":"YulFunctionCall","src":"22487:62:7"},"nativeSrc":"22487:62:7","nodeType":"YulExpressionStatement","src":"22487:62:7"},{"nativeSrc":"22558:26:7","nodeType":"YulAssignment","src":"22558:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"22570:9:7","nodeType":"YulIdentifier","src":"22570:9:7"},{"kind":"number","nativeSrc":"22581:2:7","nodeType":"YulLiteral","src":"22581:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22566:3:7","nodeType":"YulIdentifier","src":"22566:3:7"},"nativeSrc":"22566:18:7","nodeType":"YulFunctionCall","src":"22566:18:7"},"variableNames":[{"name":"tail","nativeSrc":"22558:4:7","nodeType":"YulIdentifier","src":"22558:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_e23f3e71c05305a9182237d48ba9b404f0c1c59aaff27a9576fb3eb02eaabde6__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22234:356:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22385:9:7","nodeType":"YulTypedName","src":"22385:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22399:4:7","nodeType":"YulTypedName","src":"22399:4:7","type":""}],"src":"22234:356:7"},{"body":{"nativeSrc":"22675:437:7","nodeType":"YulBlock","src":"22675:437:7","statements":[{"body":{"nativeSrc":"22708:398:7","nodeType":"YulBlock","src":"22708:398:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22729:1:7","nodeType":"YulLiteral","src":"22729:1:7","type":"","value":"0"},{"name":"array","nativeSrc":"22732:5:7","nodeType":"YulIdentifier","src":"22732:5:7"}],"functionName":{"name":"mstore","nativeSrc":"22722:6:7","nodeType":"YulIdentifier","src":"22722:6:7"},"nativeSrc":"22722:16:7","nodeType":"YulFunctionCall","src":"22722:16:7"},"nativeSrc":"22722:16:7","nodeType":"YulExpressionStatement","src":"22722:16:7"},{"nativeSrc":"22751:30:7","nodeType":"YulVariableDeclaration","src":"22751:30:7","value":{"arguments":[{"kind":"number","nativeSrc":"22773:1:7","nodeType":"YulLiteral","src":"22773:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"22776:4:7","nodeType":"YulLiteral","src":"22776:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"22763:9:7","nodeType":"YulIdentifier","src":"22763:9:7"},"nativeSrc":"22763:18:7","nodeType":"YulFunctionCall","src":"22763:18:7"},"variables":[{"name":"data","nativeSrc":"22755:4:7","nodeType":"YulTypedName","src":"22755:4:7","type":""}]},{"nativeSrc":"22794:57:7","nodeType":"YulVariableDeclaration","src":"22794:57:7","value":{"arguments":[{"name":"data","nativeSrc":"22817:4:7","nodeType":"YulIdentifier","src":"22817:4:7"},{"arguments":[{"kind":"number","nativeSrc":"22827:1:7","nodeType":"YulLiteral","src":"22827:1:7","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"22834:10:7","nodeType":"YulIdentifier","src":"22834:10:7"},{"kind":"number","nativeSrc":"22846:2:7","nodeType":"YulLiteral","src":"22846:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"22830:3:7","nodeType":"YulIdentifier","src":"22830:3:7"},"nativeSrc":"22830:19:7","nodeType":"YulFunctionCall","src":"22830:19:7"}],"functionName":{"name":"shr","nativeSrc":"22823:3:7","nodeType":"YulIdentifier","src":"22823:3:7"},"nativeSrc":"22823:27:7","nodeType":"YulFunctionCall","src":"22823:27:7"}],"functionName":{"name":"add","nativeSrc":"22813:3:7","nodeType":"YulIdentifier","src":"22813:3:7"},"nativeSrc":"22813:38:7","nodeType":"YulFunctionCall","src":"22813:38:7"},"variables":[{"name":"deleteStart","nativeSrc":"22798:11:7","nodeType":"YulTypedName","src":"22798:11:7","type":""}]},{"body":{"nativeSrc":"22888:23:7","nodeType":"YulBlock","src":"22888:23:7","statements":[{"nativeSrc":"22890:19:7","nodeType":"YulAssignment","src":"22890:19:7","value":{"name":"data","nativeSrc":"22905:4:7","nodeType":"YulIdentifier","src":"22905:4:7"},"variableNames":[{"name":"deleteStart","nativeSrc":"22890:11:7","nodeType":"YulIdentifier","src":"22890:11:7"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"22870:10:7","nodeType":"YulIdentifier","src":"22870:10:7"},{"kind":"number","nativeSrc":"22882:4:7","nodeType":"YulLiteral","src":"22882:4:7","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"22867:2:7","nodeType":"YulIdentifier","src":"22867:2:7"},"nativeSrc":"22867:20:7","nodeType":"YulFunctionCall","src":"22867:20:7"},"nativeSrc":"22864:47:7","nodeType":"YulIf","src":"22864:47:7"},{"nativeSrc":"22924:41:7","nodeType":"YulVariableDeclaration","src":"22924:41:7","value":{"arguments":[{"name":"data","nativeSrc":"22938:4:7","nodeType":"YulIdentifier","src":"22938:4:7"},{"arguments":[{"kind":"number","nativeSrc":"22948:1:7","nodeType":"YulLiteral","src":"22948:1:7","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"22955:3:7","nodeType":"YulIdentifier","src":"22955:3:7"},{"kind":"number","nativeSrc":"22960:2:7","nodeType":"YulLiteral","src":"22960:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"22951:3:7","nodeType":"YulIdentifier","src":"22951:3:7"},"nativeSrc":"22951:12:7","nodeType":"YulFunctionCall","src":"22951:12:7"}],"functionName":{"name":"shr","nativeSrc":"22944:3:7","nodeType":"YulIdentifier","src":"22944:3:7"},"nativeSrc":"22944:20:7","nodeType":"YulFunctionCall","src":"22944:20:7"}],"functionName":{"name":"add","nativeSrc":"22934:3:7","nodeType":"YulIdentifier","src":"22934:3:7"},"nativeSrc":"22934:31:7","nodeType":"YulFunctionCall","src":"22934:31:7"},"variables":[{"name":"_1","nativeSrc":"22928:2:7","nodeType":"YulTypedName","src":"22928:2:7","type":""}]},{"nativeSrc":"22978:24:7","nodeType":"YulVariableDeclaration","src":"22978:24:7","value":{"name":"deleteStart","nativeSrc":"22991:11:7","nodeType":"YulIdentifier","src":"22991:11:7"},"variables":[{"name":"start","nativeSrc":"22982:5:7","nodeType":"YulTypedName","src":"22982:5:7","type":""}]},{"body":{"nativeSrc":"23076:20:7","nodeType":"YulBlock","src":"23076:20:7","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"23085:5:7","nodeType":"YulIdentifier","src":"23085:5:7"},{"kind":"number","nativeSrc":"23092:1:7","nodeType":"YulLiteral","src":"23092:1:7","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"23078:6:7","nodeType":"YulIdentifier","src":"23078:6:7"},"nativeSrc":"23078:16:7","nodeType":"YulFunctionCall","src":"23078:16:7"},"nativeSrc":"23078:16:7","nodeType":"YulExpressionStatement","src":"23078:16:7"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"23026:5:7","nodeType":"YulIdentifier","src":"23026:5:7"},{"name":"_1","nativeSrc":"23033:2:7","nodeType":"YulIdentifier","src":"23033:2:7"}],"functionName":{"name":"lt","nativeSrc":"23023:2:7","nodeType":"YulIdentifier","src":"23023:2:7"},"nativeSrc":"23023:13:7","nodeType":"YulFunctionCall","src":"23023:13:7"},"nativeSrc":"23015:81:7","nodeType":"YulForLoop","post":{"nativeSrc":"23037:26:7","nodeType":"YulBlock","src":"23037:26:7","statements":[{"nativeSrc":"23039:22:7","nodeType":"YulAssignment","src":"23039:22:7","value":{"arguments":[{"name":"start","nativeSrc":"23052:5:7","nodeType":"YulIdentifier","src":"23052:5:7"},{"kind":"number","nativeSrc":"23059:1:7","nodeType":"YulLiteral","src":"23059:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"23048:3:7","nodeType":"YulIdentifier","src":"23048:3:7"},"nativeSrc":"23048:13:7","nodeType":"YulFunctionCall","src":"23048:13:7"},"variableNames":[{"name":"start","nativeSrc":"23039:5:7","nodeType":"YulIdentifier","src":"23039:5:7"}]}]},"pre":{"nativeSrc":"23019:3:7","nodeType":"YulBlock","src":"23019:3:7","statements":[]},"src":"23015:81:7"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"22691:3:7","nodeType":"YulIdentifier","src":"22691:3:7"},{"kind":"number","nativeSrc":"22696:2:7","nodeType":"YulLiteral","src":"22696:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"22688:2:7","nodeType":"YulIdentifier","src":"22688:2:7"},"nativeSrc":"22688:11:7","nodeType":"YulFunctionCall","src":"22688:11:7"},"nativeSrc":"22685:421:7","nodeType":"YulIf","src":"22685:421:7"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nativeSrc":"22595:517:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"22647:5:7","nodeType":"YulTypedName","src":"22647:5:7","type":""},{"name":"len","nativeSrc":"22654:3:7","nodeType":"YulTypedName","src":"22654:3:7","type":""},{"name":"startIndex","nativeSrc":"22659:10:7","nodeType":"YulTypedName","src":"22659:10:7","type":""}],"src":"22595:517:7"},{"body":{"nativeSrc":"23202:81:7","nodeType":"YulBlock","src":"23202:81:7","statements":[{"nativeSrc":"23212:65:7","nodeType":"YulAssignment","src":"23212:65:7","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"23227:4:7","nodeType":"YulIdentifier","src":"23227:4:7"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"23245:1:7","nodeType":"YulLiteral","src":"23245:1:7","type":"","value":"3"},{"name":"len","nativeSrc":"23248:3:7","nodeType":"YulIdentifier","src":"23248:3:7"}],"functionName":{"name":"shl","nativeSrc":"23241:3:7","nodeType":"YulIdentifier","src":"23241:3:7"},"nativeSrc":"23241:11:7","nodeType":"YulFunctionCall","src":"23241:11:7"},{"arguments":[{"kind":"number","nativeSrc":"23258:1:7","nodeType":"YulLiteral","src":"23258:1:7","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"23254:3:7","nodeType":"YulIdentifier","src":"23254:3:7"},"nativeSrc":"23254:6:7","nodeType":"YulFunctionCall","src":"23254:6:7"}],"functionName":{"name":"shr","nativeSrc":"23237:3:7","nodeType":"YulIdentifier","src":"23237:3:7"},"nativeSrc":"23237:24:7","nodeType":"YulFunctionCall","src":"23237:24:7"}],"functionName":{"name":"not","nativeSrc":"23233:3:7","nodeType":"YulIdentifier","src":"23233:3:7"},"nativeSrc":"23233:29:7","nodeType":"YulFunctionCall","src":"23233:29:7"}],"functionName":{"name":"and","nativeSrc":"23223:3:7","nodeType":"YulIdentifier","src":"23223:3:7"},"nativeSrc":"23223:40:7","nodeType":"YulFunctionCall","src":"23223:40:7"},{"arguments":[{"kind":"number","nativeSrc":"23269:1:7","nodeType":"YulLiteral","src":"23269:1:7","type":"","value":"1"},{"name":"len","nativeSrc":"23272:3:7","nodeType":"YulIdentifier","src":"23272:3:7"}],"functionName":{"name":"shl","nativeSrc":"23265:3:7","nodeType":"YulIdentifier","src":"23265:3:7"},"nativeSrc":"23265:11:7","nodeType":"YulFunctionCall","src":"23265:11:7"}],"functionName":{"name":"or","nativeSrc":"23220:2:7","nodeType":"YulIdentifier","src":"23220:2:7"},"nativeSrc":"23220:57:7","nodeType":"YulFunctionCall","src":"23220:57:7"},"variableNames":[{"name":"used","nativeSrc":"23212:4:7","nodeType":"YulIdentifier","src":"23212:4:7"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"23117:166:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"23179:4:7","nodeType":"YulTypedName","src":"23179:4:7","type":""},{"name":"len","nativeSrc":"23185:3:7","nodeType":"YulTypedName","src":"23185:3:7","type":""}],"returnVariables":[{"name":"used","nativeSrc":"23193:4:7","nodeType":"YulTypedName","src":"23193:4:7","type":""}],"src":"23117:166:7"},{"body":{"nativeSrc":"23382:1201:7","nodeType":"YulBlock","src":"23382:1201:7","statements":[{"nativeSrc":"23392:24:7","nodeType":"YulVariableDeclaration","src":"23392:24:7","value":{"arguments":[{"name":"src","nativeSrc":"23412:3:7","nodeType":"YulIdentifier","src":"23412:3:7"}],"functionName":{"name":"mload","nativeSrc":"23406:5:7","nodeType":"YulIdentifier","src":"23406:5:7"},"nativeSrc":"23406:10:7","nodeType":"YulFunctionCall","src":"23406:10:7"},"variables":[{"name":"newLen","nativeSrc":"23396:6:7","nodeType":"YulTypedName","src":"23396:6:7","type":""}]},{"body":{"nativeSrc":"23459:22:7","nodeType":"YulBlock","src":"23459:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"23461:16:7","nodeType":"YulIdentifier","src":"23461:16:7"},"nativeSrc":"23461:18:7","nodeType":"YulFunctionCall","src":"23461:18:7"},"nativeSrc":"23461:18:7","nodeType":"YulExpressionStatement","src":"23461:18:7"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"23431:6:7","nodeType":"YulIdentifier","src":"23431:6:7"},{"kind":"number","nativeSrc":"23439:18:7","nodeType":"YulLiteral","src":"23439:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"23428:2:7","nodeType":"YulIdentifier","src":"23428:2:7"},"nativeSrc":"23428:30:7","nodeType":"YulFunctionCall","src":"23428:30:7"},"nativeSrc":"23425:56:7","nodeType":"YulIf","src":"23425:56:7"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"23533:4:7","nodeType":"YulIdentifier","src":"23533:4:7"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"23571:4:7","nodeType":"YulIdentifier","src":"23571:4:7"}],"functionName":{"name":"sload","nativeSrc":"23565:5:7","nodeType":"YulIdentifier","src":"23565:5:7"},"nativeSrc":"23565:11:7","nodeType":"YulFunctionCall","src":"23565:11:7"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"23539:25:7","nodeType":"YulIdentifier","src":"23539:25:7"},"nativeSrc":"23539:38:7","nodeType":"YulFunctionCall","src":"23539:38:7"},{"name":"newLen","nativeSrc":"23579:6:7","nodeType":"YulIdentifier","src":"23579:6:7"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nativeSrc":"23490:42:7","nodeType":"YulIdentifier","src":"23490:42:7"},"nativeSrc":"23490:96:7","nodeType":"YulFunctionCall","src":"23490:96:7"},"nativeSrc":"23490:96:7","nodeType":"YulExpressionStatement","src":"23490:96:7"},{"nativeSrc":"23595:18:7","nodeType":"YulVariableDeclaration","src":"23595:18:7","value":{"kind":"number","nativeSrc":"23612:1:7","nodeType":"YulLiteral","src":"23612:1:7","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"23599:9:7","nodeType":"YulTypedName","src":"23599:9:7","type":""}]},{"nativeSrc":"23622:17:7","nodeType":"YulAssignment","src":"23622:17:7","value":{"kind":"number","nativeSrc":"23635:4:7","nodeType":"YulLiteral","src":"23635:4:7","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"23622:9:7","nodeType":"YulIdentifier","src":"23622:9:7"}]},{"cases":[{"body":{"nativeSrc":"23685:641:7","nodeType":"YulBlock","src":"23685:641:7","statements":[{"nativeSrc":"23699:35:7","nodeType":"YulVariableDeclaration","src":"23699:35:7","value":{"arguments":[{"name":"newLen","nativeSrc":"23718:6:7","nodeType":"YulIdentifier","src":"23718:6:7"},{"arguments":[{"kind":"number","nativeSrc":"23730:2:7","nodeType":"YulLiteral","src":"23730:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"23726:3:7","nodeType":"YulIdentifier","src":"23726:3:7"},"nativeSrc":"23726:7:7","nodeType":"YulFunctionCall","src":"23726:7:7"}],"functionName":{"name":"and","nativeSrc":"23714:3:7","nodeType":"YulIdentifier","src":"23714:3:7"},"nativeSrc":"23714:20:7","nodeType":"YulFunctionCall","src":"23714:20:7"},"variables":[{"name":"loopEnd","nativeSrc":"23703:7:7","nodeType":"YulTypedName","src":"23703:7:7","type":""}]},{"nativeSrc":"23747:48:7","nodeType":"YulVariableDeclaration","src":"23747:48:7","value":{"arguments":[{"name":"slot","nativeSrc":"23790:4:7","nodeType":"YulIdentifier","src":"23790:4:7"}],"functionName":{"name":"array_dataslot_bytes_storage","nativeSrc":"23761:28:7","nodeType":"YulIdentifier","src":"23761:28:7"},"nativeSrc":"23761:34:7","nodeType":"YulFunctionCall","src":"23761:34:7"},"variables":[{"name":"dstPtr","nativeSrc":"23751:6:7","nodeType":"YulTypedName","src":"23751:6:7","type":""}]},{"nativeSrc":"23808:10:7","nodeType":"YulVariableDeclaration","src":"23808:10:7","value":{"kind":"number","nativeSrc":"23817:1:7","nodeType":"YulLiteral","src":"23817:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"23812:1:7","nodeType":"YulTypedName","src":"23812:1:7","type":""}]},{"body":{"nativeSrc":"23888:165:7","nodeType":"YulBlock","src":"23888:165:7","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"23913:6:7","nodeType":"YulIdentifier","src":"23913:6:7"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"23931:3:7","nodeType":"YulIdentifier","src":"23931:3:7"},{"name":"srcOffset","nativeSrc":"23936:9:7","nodeType":"YulIdentifier","src":"23936:9:7"}],"functionName":{"name":"add","nativeSrc":"23927:3:7","nodeType":"YulIdentifier","src":"23927:3:7"},"nativeSrc":"23927:19:7","nodeType":"YulFunctionCall","src":"23927:19:7"}],"functionName":{"name":"mload","nativeSrc":"23921:5:7","nodeType":"YulIdentifier","src":"23921:5:7"},"nativeSrc":"23921:26:7","nodeType":"YulFunctionCall","src":"23921:26:7"}],"functionName":{"name":"sstore","nativeSrc":"23906:6:7","nodeType":"YulIdentifier","src":"23906:6:7"},"nativeSrc":"23906:42:7","nodeType":"YulFunctionCall","src":"23906:42:7"},"nativeSrc":"23906:42:7","nodeType":"YulExpressionStatement","src":"23906:42:7"},{"nativeSrc":"23965:24:7","nodeType":"YulAssignment","src":"23965:24:7","value":{"arguments":[{"name":"dstPtr","nativeSrc":"23979:6:7","nodeType":"YulIdentifier","src":"23979:6:7"},{"kind":"number","nativeSrc":"23987:1:7","nodeType":"YulLiteral","src":"23987:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"23975:3:7","nodeType":"YulIdentifier","src":"23975:3:7"},"nativeSrc":"23975:14:7","nodeType":"YulFunctionCall","src":"23975:14:7"},"variableNames":[{"name":"dstPtr","nativeSrc":"23965:6:7","nodeType":"YulIdentifier","src":"23965:6:7"}]},{"nativeSrc":"24006:33:7","nodeType":"YulAssignment","src":"24006:33:7","value":{"arguments":[{"name":"srcOffset","nativeSrc":"24023:9:7","nodeType":"YulIdentifier","src":"24023:9:7"},{"kind":"number","nativeSrc":"24034:4:7","nodeType":"YulLiteral","src":"24034:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"24019:3:7","nodeType":"YulIdentifier","src":"24019:3:7"},"nativeSrc":"24019:20:7","nodeType":"YulFunctionCall","src":"24019:20:7"},"variableNames":[{"name":"srcOffset","nativeSrc":"24006:9:7","nodeType":"YulIdentifier","src":"24006:9:7"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"23842:1:7","nodeType":"YulIdentifier","src":"23842:1:7"},{"name":"loopEnd","nativeSrc":"23845:7:7","nodeType":"YulIdentifier","src":"23845:7:7"}],"functionName":{"name":"lt","nativeSrc":"23839:2:7","nodeType":"YulIdentifier","src":"23839:2:7"},"nativeSrc":"23839:14:7","nodeType":"YulFunctionCall","src":"23839:14:7"},"nativeSrc":"23831:222:7","nodeType":"YulForLoop","post":{"nativeSrc":"23854:21:7","nodeType":"YulBlock","src":"23854:21:7","statements":[{"nativeSrc":"23856:17:7","nodeType":"YulAssignment","src":"23856:17:7","value":{"arguments":[{"name":"i","nativeSrc":"23865:1:7","nodeType":"YulIdentifier","src":"23865:1:7"},{"kind":"number","nativeSrc":"23868:4:7","nodeType":"YulLiteral","src":"23868:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"23861:3:7","nodeType":"YulIdentifier","src":"23861:3:7"},"nativeSrc":"23861:12:7","nodeType":"YulFunctionCall","src":"23861:12:7"},"variableNames":[{"name":"i","nativeSrc":"23856:1:7","nodeType":"YulIdentifier","src":"23856:1:7"}]}]},"pre":{"nativeSrc":"23835:3:7","nodeType":"YulBlock","src":"23835:3:7","statements":[]},"src":"23831:222:7"},{"body":{"nativeSrc":"24101:166:7","nodeType":"YulBlock","src":"24101:166:7","statements":[{"nativeSrc":"24119:43:7","nodeType":"YulVariableDeclaration","src":"24119:43:7","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"24146:3:7","nodeType":"YulIdentifier","src":"24146:3:7"},{"name":"srcOffset","nativeSrc":"24151:9:7","nodeType":"YulIdentifier","src":"24151:9:7"}],"functionName":{"name":"add","nativeSrc":"24142:3:7","nodeType":"YulIdentifier","src":"24142:3:7"},"nativeSrc":"24142:19:7","nodeType":"YulFunctionCall","src":"24142:19:7"}],"functionName":{"name":"mload","nativeSrc":"24136:5:7","nodeType":"YulIdentifier","src":"24136:5:7"},"nativeSrc":"24136:26:7","nodeType":"YulFunctionCall","src":"24136:26:7"},"variables":[{"name":"lastValue","nativeSrc":"24123:9:7","nodeType":"YulTypedName","src":"24123:9:7","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"24186:6:7","nodeType":"YulIdentifier","src":"24186:6:7"},{"arguments":[{"name":"lastValue","nativeSrc":"24198:9:7","nodeType":"YulIdentifier","src":"24198:9:7"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"24225:1:7","nodeType":"YulLiteral","src":"24225:1:7","type":"","value":"3"},{"name":"newLen","nativeSrc":"24228:6:7","nodeType":"YulIdentifier","src":"24228:6:7"}],"functionName":{"name":"shl","nativeSrc":"24221:3:7","nodeType":"YulIdentifier","src":"24221:3:7"},"nativeSrc":"24221:14:7","nodeType":"YulFunctionCall","src":"24221:14:7"},{"kind":"number","nativeSrc":"24237:3:7","nodeType":"YulLiteral","src":"24237:3:7","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"24217:3:7","nodeType":"YulIdentifier","src":"24217:3:7"},"nativeSrc":"24217:24:7","nodeType":"YulFunctionCall","src":"24217:24:7"},{"arguments":[{"kind":"number","nativeSrc":"24247:1:7","nodeType":"YulLiteral","src":"24247:1:7","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"24243:3:7","nodeType":"YulIdentifier","src":"24243:3:7"},"nativeSrc":"24243:6:7","nodeType":"YulFunctionCall","src":"24243:6:7"}],"functionName":{"name":"shr","nativeSrc":"24213:3:7","nodeType":"YulIdentifier","src":"24213:3:7"},"nativeSrc":"24213:37:7","nodeType":"YulFunctionCall","src":"24213:37:7"}],"functionName":{"name":"not","nativeSrc":"24209:3:7","nodeType":"YulIdentifier","src":"24209:3:7"},"nativeSrc":"24209:42:7","nodeType":"YulFunctionCall","src":"24209:42:7"}],"functionName":{"name":"and","nativeSrc":"24194:3:7","nodeType":"YulIdentifier","src":"24194:3:7"},"nativeSrc":"24194:58:7","nodeType":"YulFunctionCall","src":"24194:58:7"}],"functionName":{"name":"sstore","nativeSrc":"24179:6:7","nodeType":"YulIdentifier","src":"24179:6:7"},"nativeSrc":"24179:74:7","nodeType":"YulFunctionCall","src":"24179:74:7"},"nativeSrc":"24179:74:7","nodeType":"YulExpressionStatement","src":"24179:74:7"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"24072:7:7","nodeType":"YulIdentifier","src":"24072:7:7"},{"name":"newLen","nativeSrc":"24081:6:7","nodeType":"YulIdentifier","src":"24081:6:7"}],"functionName":{"name":"lt","nativeSrc":"24069:2:7","nodeType":"YulIdentifier","src":"24069:2:7"},"nativeSrc":"24069:19:7","nodeType":"YulFunctionCall","src":"24069:19:7"},"nativeSrc":"24066:201:7","nodeType":"YulIf","src":"24066:201:7"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"24287:4:7","nodeType":"YulIdentifier","src":"24287:4:7"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"24301:1:7","nodeType":"YulLiteral","src":"24301:1:7","type":"","value":"1"},{"name":"newLen","nativeSrc":"24304:6:7","nodeType":"YulIdentifier","src":"24304:6:7"}],"functionName":{"name":"shl","nativeSrc":"24297:3:7","nodeType":"YulIdentifier","src":"24297:3:7"},"nativeSrc":"24297:14:7","nodeType":"YulFunctionCall","src":"24297:14:7"},{"kind":"number","nativeSrc":"24313:1:7","nodeType":"YulLiteral","src":"24313:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"24293:3:7","nodeType":"YulIdentifier","src":"24293:3:7"},"nativeSrc":"24293:22:7","nodeType":"YulFunctionCall","src":"24293:22:7"}],"functionName":{"name":"sstore","nativeSrc":"24280:6:7","nodeType":"YulIdentifier","src":"24280:6:7"},"nativeSrc":"24280:36:7","nodeType":"YulFunctionCall","src":"24280:36:7"},"nativeSrc":"24280:36:7","nodeType":"YulExpressionStatement","src":"24280:36:7"}]},"nativeSrc":"23678:648:7","nodeType":"YulCase","src":"23678:648:7","value":{"kind":"number","nativeSrc":"23683:1:7","nodeType":"YulLiteral","src":"23683:1:7","type":"","value":"1"}},{"body":{"nativeSrc":"24343:234:7","nodeType":"YulBlock","src":"24343:234:7","statements":[{"nativeSrc":"24357:14:7","nodeType":"YulVariableDeclaration","src":"24357:14:7","value":{"kind":"number","nativeSrc":"24370:1:7","nodeType":"YulLiteral","src":"24370:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"24361:5:7","nodeType":"YulTypedName","src":"24361:5:7","type":""}]},{"body":{"nativeSrc":"24406:67:7","nodeType":"YulBlock","src":"24406:67:7","statements":[{"nativeSrc":"24424:35:7","nodeType":"YulAssignment","src":"24424:35:7","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"24443:3:7","nodeType":"YulIdentifier","src":"24443:3:7"},{"name":"srcOffset","nativeSrc":"24448:9:7","nodeType":"YulIdentifier","src":"24448:9:7"}],"functionName":{"name":"add","nativeSrc":"24439:3:7","nodeType":"YulIdentifier","src":"24439:3:7"},"nativeSrc":"24439:19:7","nodeType":"YulFunctionCall","src":"24439:19:7"}],"functionName":{"name":"mload","nativeSrc":"24433:5:7","nodeType":"YulIdentifier","src":"24433:5:7"},"nativeSrc":"24433:26:7","nodeType":"YulFunctionCall","src":"24433:26:7"},"variableNames":[{"name":"value","nativeSrc":"24424:5:7","nodeType":"YulIdentifier","src":"24424:5:7"}]}]},"condition":{"name":"newLen","nativeSrc":"24387:6:7","nodeType":"YulIdentifier","src":"24387:6:7"},"nativeSrc":"24384:89:7","nodeType":"YulIf","src":"24384:89:7"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"24493:4:7","nodeType":"YulIdentifier","src":"24493:4:7"},{"arguments":[{"name":"value","nativeSrc":"24552:5:7","nodeType":"YulIdentifier","src":"24552:5:7"},{"name":"newLen","nativeSrc":"24559:6:7","nodeType":"YulIdentifier","src":"24559:6:7"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"24499:52:7","nodeType":"YulIdentifier","src":"24499:52:7"},"nativeSrc":"24499:67:7","nodeType":"YulFunctionCall","src":"24499:67:7"}],"functionName":{"name":"sstore","nativeSrc":"24486:6:7","nodeType":"YulIdentifier","src":"24486:6:7"},"nativeSrc":"24486:81:7","nodeType":"YulFunctionCall","src":"24486:81:7"},"nativeSrc":"24486:81:7","nodeType":"YulExpressionStatement","src":"24486:81:7"}]},"nativeSrc":"24335:242:7","nodeType":"YulCase","src":"24335:242:7","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"23658:6:7","nodeType":"YulIdentifier","src":"23658:6:7"},{"kind":"number","nativeSrc":"23666:2:7","nodeType":"YulLiteral","src":"23666:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"23655:2:7","nodeType":"YulIdentifier","src":"23655:2:7"},"nativeSrc":"23655:14:7","nodeType":"YulFunctionCall","src":"23655:14:7"},"nativeSrc":"23648:929:7","nodeType":"YulSwitch","src":"23648:929:7"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nativeSrc":"23288:1295:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"23367:4:7","nodeType":"YulTypedName","src":"23367:4:7","type":""},{"name":"src","nativeSrc":"23373:3:7","nodeType":"YulTypedName","src":"23373:3:7","type":""}],"src":"23288:1295:7"},{"body":{"nativeSrc":"24633:130:7","nodeType":"YulBlock","src":"24633:130:7","statements":[{"nativeSrc":"24643:31:7","nodeType":"YulVariableDeclaration","src":"24643:31:7","value":{"arguments":[{"name":"value","nativeSrc":"24662:5:7","nodeType":"YulIdentifier","src":"24662:5:7"},{"kind":"number","nativeSrc":"24669:4:7","nodeType":"YulLiteral","src":"24669:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"24658:3:7","nodeType":"YulIdentifier","src":"24658:3:7"},"nativeSrc":"24658:16:7","nodeType":"YulFunctionCall","src":"24658:16:7"},"variables":[{"name":"value_1","nativeSrc":"24647:7:7","nodeType":"YulTypedName","src":"24647:7:7","type":""}]},{"body":{"nativeSrc":"24704:22:7","nodeType":"YulBlock","src":"24704:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"24706:16:7","nodeType":"YulIdentifier","src":"24706:16:7"},"nativeSrc":"24706:18:7","nodeType":"YulFunctionCall","src":"24706:18:7"},"nativeSrc":"24706:18:7","nodeType":"YulExpressionStatement","src":"24706:18:7"}]},"condition":{"arguments":[{"name":"value_1","nativeSrc":"24689:7:7","nodeType":"YulIdentifier","src":"24689:7:7"},{"kind":"number","nativeSrc":"24698:4:7","nodeType":"YulLiteral","src":"24698:4:7","type":"","value":"0xff"}],"functionName":{"name":"eq","nativeSrc":"24686:2:7","nodeType":"YulIdentifier","src":"24686:2:7"},"nativeSrc":"24686:17:7","nodeType":"YulFunctionCall","src":"24686:17:7"},"nativeSrc":"24683:43:7","nodeType":"YulIf","src":"24683:43:7"},{"nativeSrc":"24735:22:7","nodeType":"YulAssignment","src":"24735:22:7","value":{"arguments":[{"name":"value_1","nativeSrc":"24746:7:7","nodeType":"YulIdentifier","src":"24746:7:7"},{"kind":"number","nativeSrc":"24755:1:7","nodeType":"YulLiteral","src":"24755:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"24742:3:7","nodeType":"YulIdentifier","src":"24742:3:7"},"nativeSrc":"24742:15:7","nodeType":"YulFunctionCall","src":"24742:15:7"},"variableNames":[{"name":"ret","nativeSrc":"24735:3:7","nodeType":"YulIdentifier","src":"24735:3:7"}]}]},"name":"increment_t_uint8","nativeSrc":"24588:175:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24615:5:7","nodeType":"YulTypedName","src":"24615:5:7","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"24625:3:7","nodeType":"YulTypedName","src":"24625:3:7","type":""}],"src":"24588:175:7"},{"body":{"nativeSrc":"24878:435:7","nodeType":"YulBlock","src":"24878:435:7","statements":[{"nativeSrc":"24888:51:7","nodeType":"YulVariableDeclaration","src":"24888:51:7","value":{"arguments":[{"name":"ptr_to_tail","nativeSrc":"24927:11:7","nodeType":"YulIdentifier","src":"24927:11:7"}],"functionName":{"name":"calldataload","nativeSrc":"24914:12:7","nodeType":"YulIdentifier","src":"24914:12:7"},"nativeSrc":"24914:25:7","nodeType":"YulFunctionCall","src":"24914:25:7"},"variables":[{"name":"rel_offset_of_tail","nativeSrc":"24892:18:7","nodeType":"YulTypedName","src":"24892:18:7","type":""}]},{"body":{"nativeSrc":"25028:16:7","nodeType":"YulBlock","src":"25028:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"25037:1:7","nodeType":"YulLiteral","src":"25037:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"25040:1:7","nodeType":"YulLiteral","src":"25040:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"25030:6:7","nodeType":"YulIdentifier","src":"25030:6:7"},"nativeSrc":"25030:12:7","nodeType":"YulFunctionCall","src":"25030:12:7"},"nativeSrc":"25030:12:7","nodeType":"YulExpressionStatement","src":"25030:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nativeSrc":"24962:18:7","nodeType":"YulIdentifier","src":"24962:18:7"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"24990:12:7","nodeType":"YulIdentifier","src":"24990:12:7"},"nativeSrc":"24990:14:7","nodeType":"YulFunctionCall","src":"24990:14:7"},{"name":"base_ref","nativeSrc":"25006:8:7","nodeType":"YulIdentifier","src":"25006:8:7"}],"functionName":{"name":"sub","nativeSrc":"24986:3:7","nodeType":"YulIdentifier","src":"24986:3:7"},"nativeSrc":"24986:29:7","nodeType":"YulFunctionCall","src":"24986:29:7"},{"arguments":[{"kind":"number","nativeSrc":"25021:2:7","nodeType":"YulLiteral","src":"25021:2:7","type":"","value":"30"}],"functionName":{"name":"not","nativeSrc":"25017:3:7","nodeType":"YulIdentifier","src":"25017:3:7"},"nativeSrc":"25017:7:7","nodeType":"YulFunctionCall","src":"25017:7:7"}],"functionName":{"name":"add","nativeSrc":"24982:3:7","nodeType":"YulIdentifier","src":"24982:3:7"},"nativeSrc":"24982:43:7","nodeType":"YulFunctionCall","src":"24982:43:7"}],"functionName":{"name":"slt","nativeSrc":"24958:3:7","nodeType":"YulIdentifier","src":"24958:3:7"},"nativeSrc":"24958:68:7","nodeType":"YulFunctionCall","src":"24958:68:7"}],"functionName":{"name":"iszero","nativeSrc":"24951:6:7","nodeType":"YulIdentifier","src":"24951:6:7"},"nativeSrc":"24951:76:7","nodeType":"YulFunctionCall","src":"24951:76:7"},"nativeSrc":"24948:96:7","nodeType":"YulIf","src":"24948:96:7"},{"nativeSrc":"25053:47:7","nodeType":"YulVariableDeclaration","src":"25053:47:7","value":{"arguments":[{"name":"base_ref","nativeSrc":"25071:8:7","nodeType":"YulIdentifier","src":"25071:8:7"},{"name":"rel_offset_of_tail","nativeSrc":"25081:18:7","nodeType":"YulIdentifier","src":"25081:18:7"}],"functionName":{"name":"add","nativeSrc":"25067:3:7","nodeType":"YulIdentifier","src":"25067:3:7"},"nativeSrc":"25067:33:7","nodeType":"YulFunctionCall","src":"25067:33:7"},"variables":[{"name":"addr_1","nativeSrc":"25057:6:7","nodeType":"YulTypedName","src":"25057:6:7","type":""}]},{"nativeSrc":"25109:30:7","nodeType":"YulAssignment","src":"25109:30:7","value":{"arguments":[{"name":"addr_1","nativeSrc":"25132:6:7","nodeType":"YulIdentifier","src":"25132:6:7"}],"functionName":{"name":"calldataload","nativeSrc":"25119:12:7","nodeType":"YulIdentifier","src":"25119:12:7"},"nativeSrc":"25119:20:7","nodeType":"YulFunctionCall","src":"25119:20:7"},"variableNames":[{"name":"length","nativeSrc":"25109:6:7","nodeType":"YulIdentifier","src":"25109:6:7"}]},{"body":{"nativeSrc":"25182:16:7","nodeType":"YulBlock","src":"25182:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"25191:1:7","nodeType":"YulLiteral","src":"25191:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"25194:1:7","nodeType":"YulLiteral","src":"25194:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"25184:6:7","nodeType":"YulIdentifier","src":"25184:6:7"},"nativeSrc":"25184:12:7","nodeType":"YulFunctionCall","src":"25184:12:7"},"nativeSrc":"25184:12:7","nodeType":"YulExpressionStatement","src":"25184:12:7"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"25154:6:7","nodeType":"YulIdentifier","src":"25154:6:7"},{"kind":"number","nativeSrc":"25162:18:7","nodeType":"YulLiteral","src":"25162:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"25151:2:7","nodeType":"YulIdentifier","src":"25151:2:7"},"nativeSrc":"25151:30:7","nodeType":"YulFunctionCall","src":"25151:30:7"},"nativeSrc":"25148:50:7","nodeType":"YulIf","src":"25148:50:7"},{"nativeSrc":"25207:25:7","nodeType":"YulAssignment","src":"25207:25:7","value":{"arguments":[{"name":"addr_1","nativeSrc":"25219:6:7","nodeType":"YulIdentifier","src":"25219:6:7"},{"kind":"number","nativeSrc":"25227:4:7","nodeType":"YulLiteral","src":"25227:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"25215:3:7","nodeType":"YulIdentifier","src":"25215:3:7"},"nativeSrc":"25215:17:7","nodeType":"YulFunctionCall","src":"25215:17:7"},"variableNames":[{"name":"addr","nativeSrc":"25207:4:7","nodeType":"YulIdentifier","src":"25207:4:7"}]},{"body":{"nativeSrc":"25291:16:7","nodeType":"YulBlock","src":"25291:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"25300:1:7","nodeType":"YulLiteral","src":"25300:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"25303:1:7","nodeType":"YulLiteral","src":"25303:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"25293:6:7","nodeType":"YulIdentifier","src":"25293:6:7"},"nativeSrc":"25293:12:7","nodeType":"YulFunctionCall","src":"25293:12:7"},"nativeSrc":"25293:12:7","nodeType":"YulExpressionStatement","src":"25293:12:7"}]},"condition":{"arguments":[{"name":"addr","nativeSrc":"25248:4:7","nodeType":"YulIdentifier","src":"25248:4:7"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"25258:12:7","nodeType":"YulIdentifier","src":"25258:12:7"},"nativeSrc":"25258:14:7","nodeType":"YulFunctionCall","src":"25258:14:7"},{"arguments":[{"kind":"number","nativeSrc":"25278:1:7","nodeType":"YulLiteral","src":"25278:1:7","type":"","value":"5"},{"name":"length","nativeSrc":"25281:6:7","nodeType":"YulIdentifier","src":"25281:6:7"}],"functionName":{"name":"shl","nativeSrc":"25274:3:7","nodeType":"YulIdentifier","src":"25274:3:7"},"nativeSrc":"25274:14:7","nodeType":"YulFunctionCall","src":"25274:14:7"}],"functionName":{"name":"sub","nativeSrc":"25254:3:7","nodeType":"YulIdentifier","src":"25254:3:7"},"nativeSrc":"25254:35:7","nodeType":"YulFunctionCall","src":"25254:35:7"}],"functionName":{"name":"sgt","nativeSrc":"25244:3:7","nodeType":"YulIdentifier","src":"25244:3:7"},"nativeSrc":"25244:46:7","nodeType":"YulFunctionCall","src":"25244:46:7"},"nativeSrc":"25241:66:7","nodeType":"YulIf","src":"25241:66:7"}]},"name":"access_calldata_tail_t_array$_t_uint256_$dyn_calldata_ptr","nativeSrc":"24768:545:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nativeSrc":"24835:8:7","nodeType":"YulTypedName","src":"24835:8:7","type":""},{"name":"ptr_to_tail","nativeSrc":"24845:11:7","nodeType":"YulTypedName","src":"24845:11:7","type":""}],"returnVariables":[{"name":"addr","nativeSrc":"24861:4:7","nodeType":"YulTypedName","src":"24861:4:7","type":""},{"name":"length","nativeSrc":"24867:6:7","nodeType":"YulTypedName","src":"24867:6:7","type":""}],"src":"24768:545:7"},{"body":{"nativeSrc":"25385:200:7","nodeType":"YulBlock","src":"25385:200:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"25402:3:7","nodeType":"YulIdentifier","src":"25402:3:7"},{"name":"length","nativeSrc":"25407:6:7","nodeType":"YulIdentifier","src":"25407:6:7"}],"functionName":{"name":"mstore","nativeSrc":"25395:6:7","nodeType":"YulIdentifier","src":"25395:6:7"},"nativeSrc":"25395:19:7","nodeType":"YulFunctionCall","src":"25395:19:7"},"nativeSrc":"25395:19:7","nodeType":"YulExpressionStatement","src":"25395:19:7"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"25440:3:7","nodeType":"YulIdentifier","src":"25440:3:7"},{"kind":"number","nativeSrc":"25445:4:7","nodeType":"YulLiteral","src":"25445:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"25436:3:7","nodeType":"YulIdentifier","src":"25436:3:7"},"nativeSrc":"25436:14:7","nodeType":"YulFunctionCall","src":"25436:14:7"},{"name":"start","nativeSrc":"25452:5:7","nodeType":"YulIdentifier","src":"25452:5:7"},{"name":"length","nativeSrc":"25459:6:7","nodeType":"YulIdentifier","src":"25459:6:7"}],"functionName":{"name":"calldatacopy","nativeSrc":"25423:12:7","nodeType":"YulIdentifier","src":"25423:12:7"},"nativeSrc":"25423:43:7","nodeType":"YulFunctionCall","src":"25423:43:7"},"nativeSrc":"25423:43:7","nodeType":"YulExpressionStatement","src":"25423:43:7"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"25490:3:7","nodeType":"YulIdentifier","src":"25490:3:7"},{"name":"length","nativeSrc":"25495:6:7","nodeType":"YulIdentifier","src":"25495:6:7"}],"functionName":{"name":"add","nativeSrc":"25486:3:7","nodeType":"YulIdentifier","src":"25486:3:7"},"nativeSrc":"25486:16:7","nodeType":"YulFunctionCall","src":"25486:16:7"},{"kind":"number","nativeSrc":"25504:4:7","nodeType":"YulLiteral","src":"25504:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"25482:3:7","nodeType":"YulIdentifier","src":"25482:3:7"},"nativeSrc":"25482:27:7","nodeType":"YulFunctionCall","src":"25482:27:7"},{"kind":"number","nativeSrc":"25511:1:7","nodeType":"YulLiteral","src":"25511:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"25475:6:7","nodeType":"YulIdentifier","src":"25475:6:7"},"nativeSrc":"25475:38:7","nodeType":"YulFunctionCall","src":"25475:38:7"},"nativeSrc":"25475:38:7","nodeType":"YulExpressionStatement","src":"25475:38:7"},{"nativeSrc":"25522:57:7","nodeType":"YulAssignment","src":"25522:57:7","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"25537:3:7","nodeType":"YulIdentifier","src":"25537:3:7"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"25550:6:7","nodeType":"YulIdentifier","src":"25550:6:7"},{"kind":"number","nativeSrc":"25558:2:7","nodeType":"YulLiteral","src":"25558:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"25546:3:7","nodeType":"YulIdentifier","src":"25546:3:7"},"nativeSrc":"25546:15:7","nodeType":"YulFunctionCall","src":"25546:15:7"},{"arguments":[{"kind":"number","nativeSrc":"25567:2:7","nodeType":"YulLiteral","src":"25567:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"25563:3:7","nodeType":"YulIdentifier","src":"25563:3:7"},"nativeSrc":"25563:7:7","nodeType":"YulFunctionCall","src":"25563:7:7"}],"functionName":{"name":"and","nativeSrc":"25542:3:7","nodeType":"YulIdentifier","src":"25542:3:7"},"nativeSrc":"25542:29:7","nodeType":"YulFunctionCall","src":"25542:29:7"}],"functionName":{"name":"add","nativeSrc":"25533:3:7","nodeType":"YulIdentifier","src":"25533:3:7"},"nativeSrc":"25533:39:7","nodeType":"YulFunctionCall","src":"25533:39:7"},{"kind":"number","nativeSrc":"25574:4:7","nodeType":"YulLiteral","src":"25574:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"25529:3:7","nodeType":"YulIdentifier","src":"25529:3:7"},"nativeSrc":"25529:50:7","nodeType":"YulFunctionCall","src":"25529:50:7"},"variableNames":[{"name":"end","nativeSrc":"25522:3:7","nodeType":"YulIdentifier","src":"25522:3:7"}]}]},"name":"abi_encode_string_calldata","nativeSrc":"25318:267:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"25354:5:7","nodeType":"YulTypedName","src":"25354:5:7","type":""},{"name":"length","nativeSrc":"25361:6:7","nodeType":"YulTypedName","src":"25361:6:7","type":""},{"name":"pos","nativeSrc":"25369:3:7","nodeType":"YulTypedName","src":"25369:3:7","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25377:3:7","nodeType":"YulTypedName","src":"25377:3:7","type":""}],"src":"25318:267:7"},{"body":{"nativeSrc":"25721:116:7","nodeType":"YulBlock","src":"25721:116:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"25738:9:7","nodeType":"YulIdentifier","src":"25738:9:7"},{"kind":"number","nativeSrc":"25749:2:7","nodeType":"YulLiteral","src":"25749:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"25731:6:7","nodeType":"YulIdentifier","src":"25731:6:7"},"nativeSrc":"25731:21:7","nodeType":"YulFunctionCall","src":"25731:21:7"},"nativeSrc":"25731:21:7","nodeType":"YulExpressionStatement","src":"25731:21:7"},{"nativeSrc":"25761:70:7","nodeType":"YulAssignment","src":"25761:70:7","value":{"arguments":[{"name":"value0","nativeSrc":"25796:6:7","nodeType":"YulIdentifier","src":"25796:6:7"},{"name":"value1","nativeSrc":"25804:6:7","nodeType":"YulIdentifier","src":"25804:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"25816:9:7","nodeType":"YulIdentifier","src":"25816:9:7"},{"kind":"number","nativeSrc":"25827:2:7","nodeType":"YulLiteral","src":"25827:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25812:3:7","nodeType":"YulIdentifier","src":"25812:3:7"},"nativeSrc":"25812:18:7","nodeType":"YulFunctionCall","src":"25812:18:7"}],"functionName":{"name":"abi_encode_string_calldata","nativeSrc":"25769:26:7","nodeType":"YulIdentifier","src":"25769:26:7"},"nativeSrc":"25769:62:7","nodeType":"YulFunctionCall","src":"25769:62:7"},"variableNames":[{"name":"tail","nativeSrc":"25761:4:7","nodeType":"YulIdentifier","src":"25761:4:7"}]}]},"name":"abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"25590:247:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25682:9:7","nodeType":"YulTypedName","src":"25682:9:7","type":""},{"name":"value1","nativeSrc":"25693:6:7","nodeType":"YulTypedName","src":"25693:6:7","type":""},{"name":"value0","nativeSrc":"25701:6:7","nodeType":"YulTypedName","src":"25701:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25712:4:7","nodeType":"YulTypedName","src":"25712:4:7","type":""}],"src":"25590:247:7"},{"body":{"nativeSrc":"26016:226:7","nodeType":"YulBlock","src":"26016:226:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"26033:9:7","nodeType":"YulIdentifier","src":"26033:9:7"},{"kind":"number","nativeSrc":"26044:2:7","nodeType":"YulLiteral","src":"26044:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"26026:6:7","nodeType":"YulIdentifier","src":"26026:6:7"},"nativeSrc":"26026:21:7","nodeType":"YulFunctionCall","src":"26026:21:7"},"nativeSrc":"26026:21:7","nodeType":"YulExpressionStatement","src":"26026:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26067:9:7","nodeType":"YulIdentifier","src":"26067:9:7"},{"kind":"number","nativeSrc":"26078:2:7","nodeType":"YulLiteral","src":"26078:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26063:3:7","nodeType":"YulIdentifier","src":"26063:3:7"},"nativeSrc":"26063:18:7","nodeType":"YulFunctionCall","src":"26063:18:7"},{"kind":"number","nativeSrc":"26083:2:7","nodeType":"YulLiteral","src":"26083:2:7","type":"","value":"36"}],"functionName":{"name":"mstore","nativeSrc":"26056:6:7","nodeType":"YulIdentifier","src":"26056:6:7"},"nativeSrc":"26056:30:7","nodeType":"YulFunctionCall","src":"26056:30:7"},"nativeSrc":"26056:30:7","nodeType":"YulExpressionStatement","src":"26056:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26106:9:7","nodeType":"YulIdentifier","src":"26106:9:7"},{"kind":"number","nativeSrc":"26117:2:7","nodeType":"YulLiteral","src":"26117:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26102:3:7","nodeType":"YulIdentifier","src":"26102:3:7"},"nativeSrc":"26102:18:7","nodeType":"YulFunctionCall","src":"26102:18:7"},{"hexValue":"4f6e6c7920617574686f722063616e20776974686472617720616e2061727469","kind":"string","nativeSrc":"26122:34:7","nodeType":"YulLiteral","src":"26122:34:7","type":"","value":"Only author can withdraw an arti"}],"functionName":{"name":"mstore","nativeSrc":"26095:6:7","nodeType":"YulIdentifier","src":"26095:6:7"},"nativeSrc":"26095:62:7","nodeType":"YulFunctionCall","src":"26095:62:7"},"nativeSrc":"26095:62:7","nodeType":"YulExpressionStatement","src":"26095:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26177:9:7","nodeType":"YulIdentifier","src":"26177:9:7"},{"kind":"number","nativeSrc":"26188:2:7","nodeType":"YulLiteral","src":"26188:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26173:3:7","nodeType":"YulIdentifier","src":"26173:3:7"},"nativeSrc":"26173:18:7","nodeType":"YulFunctionCall","src":"26173:18:7"},{"hexValue":"636c652e","kind":"string","nativeSrc":"26193:6:7","nodeType":"YulLiteral","src":"26193:6:7","type":"","value":"cle."}],"functionName":{"name":"mstore","nativeSrc":"26166:6:7","nodeType":"YulIdentifier","src":"26166:6:7"},"nativeSrc":"26166:34:7","nodeType":"YulFunctionCall","src":"26166:34:7"},"nativeSrc":"26166:34:7","nodeType":"YulExpressionStatement","src":"26166:34:7"},{"nativeSrc":"26209:27:7","nodeType":"YulAssignment","src":"26209:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"26221:9:7","nodeType":"YulIdentifier","src":"26221:9:7"},{"kind":"number","nativeSrc":"26232:3:7","nodeType":"YulLiteral","src":"26232:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"26217:3:7","nodeType":"YulIdentifier","src":"26217:3:7"},"nativeSrc":"26217:19:7","nodeType":"YulFunctionCall","src":"26217:19:7"},"variableNames":[{"name":"tail","nativeSrc":"26209:4:7","nodeType":"YulIdentifier","src":"26209:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_6a7ac09dd6d1a595ef63e3c006cc799fa0704d926f43c9ba8a2701161a095cea__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"25842:400:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25993:9:7","nodeType":"YulTypedName","src":"25993:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26007:4:7","nodeType":"YulTypedName","src":"26007:4:7","type":""}],"src":"25842:400:7"},{"body":{"nativeSrc":"26421:228:7","nodeType":"YulBlock","src":"26421:228:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"26438:9:7","nodeType":"YulIdentifier","src":"26438:9:7"},{"kind":"number","nativeSrc":"26449:2:7","nodeType":"YulLiteral","src":"26449:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"26431:6:7","nodeType":"YulIdentifier","src":"26431:6:7"},"nativeSrc":"26431:21:7","nodeType":"YulFunctionCall","src":"26431:21:7"},"nativeSrc":"26431:21:7","nodeType":"YulExpressionStatement","src":"26431:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26472:9:7","nodeType":"YulIdentifier","src":"26472:9:7"},{"kind":"number","nativeSrc":"26483:2:7","nodeType":"YulLiteral","src":"26483:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26468:3:7","nodeType":"YulIdentifier","src":"26468:3:7"},"nativeSrc":"26468:18:7","nodeType":"YulFunctionCall","src":"26468:18:7"},{"kind":"number","nativeSrc":"26488:2:7","nodeType":"YulLiteral","src":"26488:2:7","type":"","value":"38"}],"functionName":{"name":"mstore","nativeSrc":"26461:6:7","nodeType":"YulIdentifier","src":"26461:6:7"},"nativeSrc":"26461:30:7","nodeType":"YulFunctionCall","src":"26461:30:7"},"nativeSrc":"26461:30:7","nodeType":"YulExpressionStatement","src":"26461:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26511:9:7","nodeType":"YulIdentifier","src":"26511:9:7"},{"kind":"number","nativeSrc":"26522:2:7","nodeType":"YulLiteral","src":"26522:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26507:3:7","nodeType":"YulIdentifier","src":"26507:3:7"},"nativeSrc":"26507:18:7","nodeType":"YulFunctionCall","src":"26507:18:7"},{"hexValue":"596f75206e65656420746f20696e697469617465207769746864726177616c20","kind":"string","nativeSrc":"26527:34:7","nodeType":"YulLiteral","src":"26527:34:7","type":"","value":"You need to initiate withdrawal "}],"functionName":{"name":"mstore","nativeSrc":"26500:6:7","nodeType":"YulIdentifier","src":"26500:6:7"},"nativeSrc":"26500:62:7","nodeType":"YulFunctionCall","src":"26500:62:7"},"nativeSrc":"26500:62:7","nodeType":"YulExpressionStatement","src":"26500:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26582:9:7","nodeType":"YulIdentifier","src":"26582:9:7"},{"kind":"number","nativeSrc":"26593:2:7","nodeType":"YulLiteral","src":"26593:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26578:3:7","nodeType":"YulIdentifier","src":"26578:3:7"},"nativeSrc":"26578:18:7","nodeType":"YulFunctionCall","src":"26578:18:7"},{"hexValue":"66697273742e","kind":"string","nativeSrc":"26598:8:7","nodeType":"YulLiteral","src":"26598:8:7","type":"","value":"first."}],"functionName":{"name":"mstore","nativeSrc":"26571:6:7","nodeType":"YulIdentifier","src":"26571:6:7"},"nativeSrc":"26571:36:7","nodeType":"YulFunctionCall","src":"26571:36:7"},"nativeSrc":"26571:36:7","nodeType":"YulExpressionStatement","src":"26571:36:7"},{"nativeSrc":"26616:27:7","nodeType":"YulAssignment","src":"26616:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"26628:9:7","nodeType":"YulIdentifier","src":"26628:9:7"},{"kind":"number","nativeSrc":"26639:3:7","nodeType":"YulLiteral","src":"26639:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"26624:3:7","nodeType":"YulIdentifier","src":"26624:3:7"},"nativeSrc":"26624:19:7","nodeType":"YulFunctionCall","src":"26624:19:7"},"variableNames":[{"name":"tail","nativeSrc":"26616:4:7","nodeType":"YulIdentifier","src":"26616:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_646d3354d32a4e6f10f97f8e4dafb31e5ad3c387e7ce2b3b8fd9a6cf92aec955__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"26247:402:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26398:9:7","nodeType":"YulTypedName","src":"26398:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26412:4:7","nodeType":"YulTypedName","src":"26412:4:7","type":""}],"src":"26247:402:7"},{"body":{"nativeSrc":"26828:253:7","nodeType":"YulBlock","src":"26828:253:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"26845:9:7","nodeType":"YulIdentifier","src":"26845:9:7"},{"kind":"number","nativeSrc":"26856:2:7","nodeType":"YulLiteral","src":"26856:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"26838:6:7","nodeType":"YulIdentifier","src":"26838:6:7"},"nativeSrc":"26838:21:7","nodeType":"YulFunctionCall","src":"26838:21:7"},"nativeSrc":"26838:21:7","nodeType":"YulExpressionStatement","src":"26838:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26879:9:7","nodeType":"YulIdentifier","src":"26879:9:7"},{"kind":"number","nativeSrc":"26890:2:7","nodeType":"YulLiteral","src":"26890:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26875:3:7","nodeType":"YulIdentifier","src":"26875:3:7"},"nativeSrc":"26875:18:7","nodeType":"YulFunctionCall","src":"26875:18:7"},{"kind":"number","nativeSrc":"26895:2:7","nodeType":"YulLiteral","src":"26895:2:7","type":"","value":"63"}],"functionName":{"name":"mstore","nativeSrc":"26868:6:7","nodeType":"YulIdentifier","src":"26868:6:7"},"nativeSrc":"26868:30:7","nodeType":"YulFunctionCall","src":"26868:30:7"},"nativeSrc":"26868:30:7","nodeType":"YulExpressionStatement","src":"26868:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26918:9:7","nodeType":"YulIdentifier","src":"26918:9:7"},{"kind":"number","nativeSrc":"26929:2:7","nodeType":"YulLiteral","src":"26929:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26914:3:7","nodeType":"YulIdentifier","src":"26914:3:7"},"nativeSrc":"26914:18:7","nodeType":"YulFunctionCall","src":"26914:18:7"},{"hexValue":"596f75206e65656420746f207761697420666f722074696d656c6f636b206f72","kind":"string","nativeSrc":"26934:34:7","nodeType":"YulLiteral","src":"26934:34:7","type":"","value":"You need to wait for timelock or"}],"functionName":{"name":"mstore","nativeSrc":"26907:6:7","nodeType":"YulIdentifier","src":"26907:6:7"},"nativeSrc":"26907:62:7","nodeType":"YulFunctionCall","src":"26907:62:7"},"nativeSrc":"26907:62:7","nodeType":"YulExpressionStatement","src":"26907:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26989:9:7","nodeType":"YulIdentifier","src":"26989:9:7"},{"kind":"number","nativeSrc":"27000:2:7","nodeType":"YulLiteral","src":"27000:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26985:3:7","nodeType":"YulIdentifier","src":"26985:3:7"},"nativeSrc":"26985:18:7","nodeType":"YulFunctionCall","src":"26985:18:7"},{"hexValue":"207761697420756e74696c20746865206368616c6c656e676520656e64732e","kind":"string","nativeSrc":"27005:33:7","nodeType":"YulLiteral","src":"27005:33:7","type":"","value":" wait until the challenge ends."}],"functionName":{"name":"mstore","nativeSrc":"26978:6:7","nodeType":"YulIdentifier","src":"26978:6:7"},"nativeSrc":"26978:61:7","nodeType":"YulFunctionCall","src":"26978:61:7"},"nativeSrc":"26978:61:7","nodeType":"YulExpressionStatement","src":"26978:61:7"},{"nativeSrc":"27048:27:7","nodeType":"YulAssignment","src":"27048:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"27060:9:7","nodeType":"YulIdentifier","src":"27060:9:7"},{"kind":"number","nativeSrc":"27071:3:7","nodeType":"YulLiteral","src":"27071:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"27056:3:7","nodeType":"YulIdentifier","src":"27056:3:7"},"nativeSrc":"27056:19:7","nodeType":"YulFunctionCall","src":"27056:19:7"},"variableNames":[{"name":"tail","nativeSrc":"27048:4:7","nodeType":"YulIdentifier","src":"27048:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_7c0c82b0d480101a30f3ad2e3ccc7970d31d7e8da6ac4e66c07d00ffcf930f48__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"26654:427:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26805:9:7","nodeType":"YulTypedName","src":"26805:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26819:4:7","nodeType":"YulTypedName","src":"26819:4:7","type":""}],"src":"26654:427:7"},{"body":{"nativeSrc":"27133:88:7","nodeType":"YulBlock","src":"27133:88:7","statements":[{"body":{"nativeSrc":"27164:22:7","nodeType":"YulBlock","src":"27164:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"27166:16:7","nodeType":"YulIdentifier","src":"27166:16:7"},"nativeSrc":"27166:18:7","nodeType":"YulFunctionCall","src":"27166:18:7"},"nativeSrc":"27166:18:7","nodeType":"YulExpressionStatement","src":"27166:18:7"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"27149:5:7","nodeType":"YulIdentifier","src":"27149:5:7"},{"arguments":[{"kind":"number","nativeSrc":"27160:1:7","nodeType":"YulLiteral","src":"27160:1:7","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"27156:3:7","nodeType":"YulIdentifier","src":"27156:3:7"},"nativeSrc":"27156:6:7","nodeType":"YulFunctionCall","src":"27156:6:7"}],"functionName":{"name":"eq","nativeSrc":"27146:2:7","nodeType":"YulIdentifier","src":"27146:2:7"},"nativeSrc":"27146:17:7","nodeType":"YulFunctionCall","src":"27146:17:7"},"nativeSrc":"27143:43:7","nodeType":"YulIf","src":"27143:43:7"},{"nativeSrc":"27195:20:7","nodeType":"YulAssignment","src":"27195:20:7","value":{"arguments":[{"name":"value","nativeSrc":"27206:5:7","nodeType":"YulIdentifier","src":"27206:5:7"},{"kind":"number","nativeSrc":"27213:1:7","nodeType":"YulLiteral","src":"27213:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"27202:3:7","nodeType":"YulIdentifier","src":"27202:3:7"},"nativeSrc":"27202:13:7","nodeType":"YulFunctionCall","src":"27202:13:7"},"variableNames":[{"name":"ret","nativeSrc":"27195:3:7","nodeType":"YulIdentifier","src":"27195:3:7"}]}]},"name":"increment_t_uint256","nativeSrc":"27086:135:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"27115:5:7","nodeType":"YulTypedName","src":"27115:5:7","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"27125:3:7","nodeType":"YulTypedName","src":"27125:3:7","type":""}],"src":"27086:135:7"},{"body":{"nativeSrc":"27400:243:7","nodeType":"YulBlock","src":"27400:243:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"27417:9:7","nodeType":"YulIdentifier","src":"27417:9:7"},{"kind":"number","nativeSrc":"27428:2:7","nodeType":"YulLiteral","src":"27428:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"27410:6:7","nodeType":"YulIdentifier","src":"27410:6:7"},"nativeSrc":"27410:21:7","nodeType":"YulFunctionCall","src":"27410:21:7"},"nativeSrc":"27410:21:7","nodeType":"YulExpressionStatement","src":"27410:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27451:9:7","nodeType":"YulIdentifier","src":"27451:9:7"},{"kind":"number","nativeSrc":"27462:2:7","nodeType":"YulLiteral","src":"27462:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27447:3:7","nodeType":"YulIdentifier","src":"27447:3:7"},"nativeSrc":"27447:18:7","nodeType":"YulFunctionCall","src":"27447:18:7"},{"kind":"number","nativeSrc":"27467:2:7","nodeType":"YulLiteral","src":"27467:2:7","type":"","value":"53"}],"functionName":{"name":"mstore","nativeSrc":"27440:6:7","nodeType":"YulIdentifier","src":"27440:6:7"},"nativeSrc":"27440:30:7","nodeType":"YulFunctionCall","src":"27440:30:7"},"nativeSrc":"27440:30:7","nodeType":"YulExpressionStatement","src":"27440:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27490:9:7","nodeType":"YulIdentifier","src":"27490:9:7"},{"kind":"number","nativeSrc":"27501:2:7","nodeType":"YulLiteral","src":"27501:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27486:3:7","nodeType":"YulIdentifier","src":"27486:3:7"},"nativeSrc":"27486:18:7","nodeType":"YulFunctionCall","src":"27486:18:7"},{"hexValue":"5769746864726177616c20616c726561647920696e69746961746564206f7220","kind":"string","nativeSrc":"27506:34:7","nodeType":"YulLiteral","src":"27506:34:7","type":"","value":"Withdrawal already initiated or "}],"functionName":{"name":"mstore","nativeSrc":"27479:6:7","nodeType":"YulIdentifier","src":"27479:6:7"},"nativeSrc":"27479:62:7","nodeType":"YulFunctionCall","src":"27479:62:7"},"nativeSrc":"27479:62:7","nodeType":"YulExpressionStatement","src":"27479:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27561:9:7","nodeType":"YulIdentifier","src":"27561:9:7"},{"kind":"number","nativeSrc":"27572:2:7","nodeType":"YulLiteral","src":"27572:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"27557:3:7","nodeType":"YulIdentifier","src":"27557:3:7"},"nativeSrc":"27557:18:7","nodeType":"YulFunctionCall","src":"27557:18:7"},{"hexValue":"74686572652069732061206368616c6c656e67652e","kind":"string","nativeSrc":"27577:23:7","nodeType":"YulLiteral","src":"27577:23:7","type":"","value":"there is a challenge."}],"functionName":{"name":"mstore","nativeSrc":"27550:6:7","nodeType":"YulIdentifier","src":"27550:6:7"},"nativeSrc":"27550:51:7","nodeType":"YulFunctionCall","src":"27550:51:7"},"nativeSrc":"27550:51:7","nodeType":"YulExpressionStatement","src":"27550:51:7"},{"nativeSrc":"27610:27:7","nodeType":"YulAssignment","src":"27610:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"27622:9:7","nodeType":"YulIdentifier","src":"27622:9:7"},{"kind":"number","nativeSrc":"27633:3:7","nodeType":"YulLiteral","src":"27633:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"27618:3:7","nodeType":"YulIdentifier","src":"27618:3:7"},"nativeSrc":"27618:19:7","nodeType":"YulFunctionCall","src":"27618:19:7"},"variableNames":[{"name":"tail","nativeSrc":"27610:4:7","nodeType":"YulIdentifier","src":"27610:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_09736bc764ff8f7b07f5d004c384a229ed4912017c53bd247c8e39209b9ae7f6__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"27226:417:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27377:9:7","nodeType":"YulTypedName","src":"27377:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27391:4:7","nodeType":"YulTypedName","src":"27391:4:7","type":""}],"src":"27226:417:7"},{"body":{"nativeSrc":"27822:173:7","nodeType":"YulBlock","src":"27822:173:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"27839:9:7","nodeType":"YulIdentifier","src":"27839:9:7"},{"kind":"number","nativeSrc":"27850:2:7","nodeType":"YulLiteral","src":"27850:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"27832:6:7","nodeType":"YulIdentifier","src":"27832:6:7"},"nativeSrc":"27832:21:7","nodeType":"YulFunctionCall","src":"27832:21:7"},"nativeSrc":"27832:21:7","nodeType":"YulExpressionStatement","src":"27832:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27873:9:7","nodeType":"YulIdentifier","src":"27873:9:7"},{"kind":"number","nativeSrc":"27884:2:7","nodeType":"YulLiteral","src":"27884:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27869:3:7","nodeType":"YulIdentifier","src":"27869:3:7"},"nativeSrc":"27869:18:7","nodeType":"YulFunctionCall","src":"27869:18:7"},{"kind":"number","nativeSrc":"27889:2:7","nodeType":"YulLiteral","src":"27889:2:7","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"27862:6:7","nodeType":"YulIdentifier","src":"27862:6:7"},"nativeSrc":"27862:30:7","nodeType":"YulFunctionCall","src":"27862:30:7"},"nativeSrc":"27862:30:7","nodeType":"YulExpressionStatement","src":"27862:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27912:9:7","nodeType":"YulIdentifier","src":"27912:9:7"},{"kind":"number","nativeSrc":"27923:2:7","nodeType":"YulLiteral","src":"27923:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27908:3:7","nodeType":"YulIdentifier","src":"27908:3:7"},"nativeSrc":"27908:18:7","nodeType":"YulFunctionCall","src":"27908:18:7"},{"hexValue":"5468657265206973206e6f2072756c696e67207965742e","kind":"string","nativeSrc":"27928:25:7","nodeType":"YulLiteral","src":"27928:25:7","type":"","value":"There is no ruling yet."}],"functionName":{"name":"mstore","nativeSrc":"27901:6:7","nodeType":"YulIdentifier","src":"27901:6:7"},"nativeSrc":"27901:53:7","nodeType":"YulFunctionCall","src":"27901:53:7"},"nativeSrc":"27901:53:7","nodeType":"YulExpressionStatement","src":"27901:53:7"},{"nativeSrc":"27963:26:7","nodeType":"YulAssignment","src":"27963:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"27975:9:7","nodeType":"YulIdentifier","src":"27975:9:7"},{"kind":"number","nativeSrc":"27986:2:7","nodeType":"YulLiteral","src":"27986:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"27971:3:7","nodeType":"YulIdentifier","src":"27971:3:7"},"nativeSrc":"27971:18:7","nodeType":"YulFunctionCall","src":"27971:18:7"},"variableNames":[{"name":"tail","nativeSrc":"27963:4:7","nodeType":"YulIdentifier","src":"27963:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_9591a49cf5d9e3ba9b3aea5505a2b8a639d2f239a0cb6a9059466b60c54a080f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"27648:347:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27799:9:7","nodeType":"YulTypedName","src":"27799:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27813:4:7","nodeType":"YulTypedName","src":"27813:4:7","type":""}],"src":"27648:347:7"},{"body":{"nativeSrc":"28046:162:7","nodeType":"YulBlock","src":"28046:162:7","statements":[{"nativeSrc":"28056:47:7","nodeType":"YulVariableDeclaration","src":"28056:47:7","value":{"arguments":[{"name":"value","nativeSrc":"28075:5:7","nodeType":"YulIdentifier","src":"28075:5:7"},{"kind":"number","nativeSrc":"28082:20:7","nodeType":"YulLiteral","src":"28082:20:7","type":"","value":"0xffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"28071:3:7","nodeType":"YulIdentifier","src":"28071:3:7"},"nativeSrc":"28071:32:7","nodeType":"YulFunctionCall","src":"28071:32:7"},"variables":[{"name":"value_1","nativeSrc":"28060:7:7","nodeType":"YulTypedName","src":"28060:7:7","type":""}]},{"body":{"nativeSrc":"28149:22:7","nodeType":"YulBlock","src":"28149:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"28151:16:7","nodeType":"YulIdentifier","src":"28151:16:7"},"nativeSrc":"28151:18:7","nodeType":"YulFunctionCall","src":"28151:18:7"},"nativeSrc":"28151:18:7","nodeType":"YulExpressionStatement","src":"28151:18:7"}]},"condition":{"arguments":[{"name":"value_1","nativeSrc":"28118:7:7","nodeType":"YulIdentifier","src":"28118:7:7"},{"kind":"number","nativeSrc":"28127:20:7","nodeType":"YulLiteral","src":"28127:20:7","type":"","value":"0xffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"28115:2:7","nodeType":"YulIdentifier","src":"28115:2:7"},"nativeSrc":"28115:33:7","nodeType":"YulFunctionCall","src":"28115:33:7"},"nativeSrc":"28112:59:7","nodeType":"YulIf","src":"28112:59:7"},{"nativeSrc":"28180:22:7","nodeType":"YulAssignment","src":"28180:22:7","value":{"arguments":[{"name":"value_1","nativeSrc":"28191:7:7","nodeType":"YulIdentifier","src":"28191:7:7"},{"kind":"number","nativeSrc":"28200:1:7","nodeType":"YulLiteral","src":"28200:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"28187:3:7","nodeType":"YulIdentifier","src":"28187:3:7"},"nativeSrc":"28187:15:7","nodeType":"YulFunctionCall","src":"28187:15:7"},"variableNames":[{"name":"ret","nativeSrc":"28180:3:7","nodeType":"YulIdentifier","src":"28180:3:7"}]}]},"name":"increment_t_uint72","nativeSrc":"28000:208:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"28028:5:7","nodeType":"YulTypedName","src":"28028:5:7","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"28038:3:7","nodeType":"YulTypedName","src":"28038:3:7","type":""}],"src":"28000:208:7"},{"body":{"nativeSrc":"28261:152:7","nodeType":"YulBlock","src":"28261:152:7","statements":[{"nativeSrc":"28271:71:7","nodeType":"YulAssignment","src":"28271:71:7","value":{"arguments":[{"arguments":[{"name":"x","nativeSrc":"28287:1:7","nodeType":"YulIdentifier","src":"28287:1:7"},{"kind":"number","nativeSrc":"28290:20:7","nodeType":"YulLiteral","src":"28290:20:7","type":"","value":"0xffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"28283:3:7","nodeType":"YulIdentifier","src":"28283:3:7"},"nativeSrc":"28283:28:7","nodeType":"YulFunctionCall","src":"28283:28:7"},{"arguments":[{"name":"y","nativeSrc":"28317:1:7","nodeType":"YulIdentifier","src":"28317:1:7"},{"kind":"number","nativeSrc":"28320:20:7","nodeType":"YulLiteral","src":"28320:20:7","type":"","value":"0xffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"28313:3:7","nodeType":"YulIdentifier","src":"28313:3:7"},"nativeSrc":"28313:28:7","nodeType":"YulFunctionCall","src":"28313:28:7"}],"functionName":{"name":"sub","nativeSrc":"28279:3:7","nodeType":"YulIdentifier","src":"28279:3:7"},"nativeSrc":"28279:63:7","nodeType":"YulFunctionCall","src":"28279:63:7"},"variableNames":[{"name":"diff","nativeSrc":"28271:4:7","nodeType":"YulIdentifier","src":"28271:4:7"}]},{"body":{"nativeSrc":"28385:22:7","nodeType":"YulBlock","src":"28385:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"28387:16:7","nodeType":"YulIdentifier","src":"28387:16:7"},"nativeSrc":"28387:18:7","nodeType":"YulFunctionCall","src":"28387:18:7"},"nativeSrc":"28387:18:7","nodeType":"YulExpressionStatement","src":"28387:18:7"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"28357:4:7","nodeType":"YulIdentifier","src":"28357:4:7"},{"kind":"number","nativeSrc":"28363:20:7","nodeType":"YulLiteral","src":"28363:20:7","type":"","value":"0xffffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"28354:2:7","nodeType":"YulIdentifier","src":"28354:2:7"},"nativeSrc":"28354:30:7","nodeType":"YulFunctionCall","src":"28354:30:7"},"nativeSrc":"28351:56:7","nodeType":"YulIf","src":"28351:56:7"}]},"name":"checked_sub_t_uint72","nativeSrc":"28213:200:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"28243:1:7","nodeType":"YulTypedName","src":"28243:1:7","type":""},{"name":"y","nativeSrc":"28246:1:7","nodeType":"YulTypedName","src":"28246:1:7","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"28252:4:7","nodeType":"YulTypedName","src":"28252:4:7","type":""}],"src":"28213:200:7"},{"body":{"nativeSrc":"28592:225:7","nodeType":"YulBlock","src":"28592:225:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"28609:9:7","nodeType":"YulIdentifier","src":"28609:9:7"},{"kind":"number","nativeSrc":"28620:2:7","nodeType":"YulLiteral","src":"28620:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"28602:6:7","nodeType":"YulIdentifier","src":"28602:6:7"},"nativeSrc":"28602:21:7","nodeType":"YulFunctionCall","src":"28602:21:7"},"nativeSrc":"28602:21:7","nodeType":"YulExpressionStatement","src":"28602:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28643:9:7","nodeType":"YulIdentifier","src":"28643:9:7"},{"kind":"number","nativeSrc":"28654:2:7","nodeType":"YulLiteral","src":"28654:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28639:3:7","nodeType":"YulIdentifier","src":"28639:3:7"},"nativeSrc":"28639:18:7","nodeType":"YulFunctionCall","src":"28639:18:7"},{"kind":"number","nativeSrc":"28659:2:7","nodeType":"YulLiteral","src":"28659:2:7","type":"","value":"35"}],"functionName":{"name":"mstore","nativeSrc":"28632:6:7","nodeType":"YulIdentifier","src":"28632:6:7"},"nativeSrc":"28632:30:7","nodeType":"YulFunctionCall","src":"28632:30:7"},"nativeSrc":"28632:30:7","nodeType":"YulExpressionStatement","src":"28632:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28682:9:7","nodeType":"YulIdentifier","src":"28682:9:7"},{"kind":"number","nativeSrc":"28693:2:7","nodeType":"YulLiteral","src":"28693:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"28678:3:7","nodeType":"YulIdentifier","src":"28678:3:7"},"nativeSrc":"28678:18:7","nodeType":"YulFunctionCall","src":"28678:18:7"},{"hexValue":"4f6e6c7920617574686f722063616e207472616e73666572206f776e65727368","kind":"string","nativeSrc":"28698:34:7","nodeType":"YulLiteral","src":"28698:34:7","type":"","value":"Only author can transfer ownersh"}],"functionName":{"name":"mstore","nativeSrc":"28671:6:7","nodeType":"YulIdentifier","src":"28671:6:7"},"nativeSrc":"28671:62:7","nodeType":"YulFunctionCall","src":"28671:62:7"},"nativeSrc":"28671:62:7","nodeType":"YulExpressionStatement","src":"28671:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28753:9:7","nodeType":"YulIdentifier","src":"28753:9:7"},{"kind":"number","nativeSrc":"28764:2:7","nodeType":"YulLiteral","src":"28764:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"28749:3:7","nodeType":"YulIdentifier","src":"28749:3:7"},"nativeSrc":"28749:18:7","nodeType":"YulFunctionCall","src":"28749:18:7"},{"hexValue":"69702e","kind":"string","nativeSrc":"28769:5:7","nodeType":"YulLiteral","src":"28769:5:7","type":"","value":"ip."}],"functionName":{"name":"mstore","nativeSrc":"28742:6:7","nodeType":"YulIdentifier","src":"28742:6:7"},"nativeSrc":"28742:33:7","nodeType":"YulFunctionCall","src":"28742:33:7"},"nativeSrc":"28742:33:7","nodeType":"YulExpressionStatement","src":"28742:33:7"},{"nativeSrc":"28784:27:7","nodeType":"YulAssignment","src":"28784:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"28796:9:7","nodeType":"YulIdentifier","src":"28796:9:7"},{"kind":"number","nativeSrc":"28807:3:7","nodeType":"YulLiteral","src":"28807:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"28792:3:7","nodeType":"YulIdentifier","src":"28792:3:7"},"nativeSrc":"28792:19:7","nodeType":"YulFunctionCall","src":"28792:19:7"},"variableNames":[{"name":"tail","nativeSrc":"28784:4:7","nodeType":"YulIdentifier","src":"28784:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_264afed15e2abe1afd48e9529ae4102fd34dc15becf22ac12086d34e9bca14d5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"28418:399:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28569:9:7","nodeType":"YulTypedName","src":"28569:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28583:4:7","nodeType":"YulTypedName","src":"28583:4:7","type":""}],"src":"28418:399:7"},{"body":{"nativeSrc":"28996:178:7","nodeType":"YulBlock","src":"28996:178:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"29013:9:7","nodeType":"YulIdentifier","src":"29013:9:7"},{"kind":"number","nativeSrc":"29024:2:7","nodeType":"YulLiteral","src":"29024:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"29006:6:7","nodeType":"YulIdentifier","src":"29006:6:7"},"nativeSrc":"29006:21:7","nodeType":"YulFunctionCall","src":"29006:21:7"},"nativeSrc":"29006:21:7","nodeType":"YulExpressionStatement","src":"29006:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29047:9:7","nodeType":"YulIdentifier","src":"29047:9:7"},{"kind":"number","nativeSrc":"29058:2:7","nodeType":"YulLiteral","src":"29058:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29043:3:7","nodeType":"YulIdentifier","src":"29043:3:7"},"nativeSrc":"29043:18:7","nodeType":"YulFunctionCall","src":"29043:18:7"},{"kind":"number","nativeSrc":"29063:2:7","nodeType":"YulLiteral","src":"29063:2:7","type":"","value":"28"}],"functionName":{"name":"mstore","nativeSrc":"29036:6:7","nodeType":"YulIdentifier","src":"29036:6:7"},"nativeSrc":"29036:30:7","nodeType":"YulFunctionCall","src":"29036:30:7"},"nativeSrc":"29036:30:7","nodeType":"YulExpressionStatement","src":"29036:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29086:9:7","nodeType":"YulIdentifier","src":"29086:9:7"},{"kind":"number","nativeSrc":"29097:2:7","nodeType":"YulLiteral","src":"29097:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"29082:3:7","nodeType":"YulIdentifier","src":"29082:3:7"},"nativeSrc":"29082:18:7","nodeType":"YulFunctionCall","src":"29082:18:7"},{"hexValue":"546869732063617465676f727920646f6573206e6f74206578697374","kind":"string","nativeSrc":"29102:30:7","nodeType":"YulLiteral","src":"29102:30:7","type":"","value":"This category does not exist"}],"functionName":{"name":"mstore","nativeSrc":"29075:6:7","nodeType":"YulIdentifier","src":"29075:6:7"},"nativeSrc":"29075:58:7","nodeType":"YulFunctionCall","src":"29075:58:7"},"nativeSrc":"29075:58:7","nodeType":"YulExpressionStatement","src":"29075:58:7"},{"nativeSrc":"29142:26:7","nodeType":"YulAssignment","src":"29142:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"29154:9:7","nodeType":"YulIdentifier","src":"29154:9:7"},{"kind":"number","nativeSrc":"29165:2:7","nodeType":"YulLiteral","src":"29165:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"29150:3:7","nodeType":"YulIdentifier","src":"29150:3:7"},"nativeSrc":"29150:18:7","nodeType":"YulFunctionCall","src":"29150:18:7"},"variableNames":[{"name":"tail","nativeSrc":"29142:4:7","nodeType":"YulIdentifier","src":"29142:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_de142eb746bdd0d0ef7f42e32a89b1f8be902652448bd9ef60b61b168c6d9194__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"28822:352:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28973:9:7","nodeType":"YulTypedName","src":"28973:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28987:4:7","nodeType":"YulTypedName","src":"28987:4:7","type":""}],"src":"28822:352:7"},{"body":{"nativeSrc":"29353:247:7","nodeType":"YulBlock","src":"29353:247:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"29370:9:7","nodeType":"YulIdentifier","src":"29370:9:7"},{"kind":"number","nativeSrc":"29381:2:7","nodeType":"YulLiteral","src":"29381:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"29363:6:7","nodeType":"YulIdentifier","src":"29363:6:7"},"nativeSrc":"29363:21:7","nodeType":"YulFunctionCall","src":"29363:21:7"},"nativeSrc":"29363:21:7","nodeType":"YulExpressionStatement","src":"29363:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29404:9:7","nodeType":"YulIdentifier","src":"29404:9:7"},{"kind":"number","nativeSrc":"29415:2:7","nodeType":"YulLiteral","src":"29415:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29400:3:7","nodeType":"YulIdentifier","src":"29400:3:7"},"nativeSrc":"29400:18:7","nodeType":"YulFunctionCall","src":"29400:18:7"},{"kind":"number","nativeSrc":"29420:2:7","nodeType":"YulLiteral","src":"29420:2:7","type":"","value":"57"}],"functionName":{"name":"mstore","nativeSrc":"29393:6:7","nodeType":"YulIdentifier","src":"29393:6:7"},"nativeSrc":"29393:30:7","nodeType":"YulFunctionCall","src":"29393:30:7"},"nativeSrc":"29393:30:7","nodeType":"YulExpressionStatement","src":"29393:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29443:9:7","nodeType":"YulIdentifier","src":"29443:9:7"},{"kind":"number","nativeSrc":"29454:2:7","nodeType":"YulLiteral","src":"29454:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"29439:3:7","nodeType":"YulIdentifier","src":"29439:3:7"},"nativeSrc":"29439:18:7","nodeType":"YulFunctionCall","src":"29439:18:7"},{"hexValue":"596f752063616e277420696e697469616c697a6520616e2061727469636c6520","kind":"string","nativeSrc":"29459:34:7","nodeType":"YulLiteral","src":"29459:34:7","type":"","value":"You can't initialize an article "}],"functionName":{"name":"mstore","nativeSrc":"29432:6:7","nodeType":"YulIdentifier","src":"29432:6:7"},"nativeSrc":"29432:62:7","nodeType":"YulFunctionCall","src":"29432:62:7"},"nativeSrc":"29432:62:7","nodeType":"YulExpressionStatement","src":"29432:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29514:9:7","nodeType":"YulIdentifier","src":"29514:9:7"},{"kind":"number","nativeSrc":"29525:2:7","nodeType":"YulLiteral","src":"29525:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"29510:3:7","nodeType":"YulIdentifier","src":"29510:3:7"},"nativeSrc":"29510:18:7","nodeType":"YulFunctionCall","src":"29510:18:7"},{"hexValue":"776974686f75742070757474696e67206120626f756e74792e","kind":"string","nativeSrc":"29530:27:7","nodeType":"YulLiteral","src":"29530:27:7","type":"","value":"without putting a bounty."}],"functionName":{"name":"mstore","nativeSrc":"29503:6:7","nodeType":"YulIdentifier","src":"29503:6:7"},"nativeSrc":"29503:55:7","nodeType":"YulFunctionCall","src":"29503:55:7"},"nativeSrc":"29503:55:7","nodeType":"YulExpressionStatement","src":"29503:55:7"},{"nativeSrc":"29567:27:7","nodeType":"YulAssignment","src":"29567:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"29579:9:7","nodeType":"YulIdentifier","src":"29579:9:7"},{"kind":"number","nativeSrc":"29590:3:7","nodeType":"YulLiteral","src":"29590:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"29575:3:7","nodeType":"YulIdentifier","src":"29575:3:7"},"nativeSrc":"29575:19:7","nodeType":"YulFunctionCall","src":"29575:19:7"},"variableNames":[{"name":"tail","nativeSrc":"29567:4:7","nodeType":"YulIdentifier","src":"29567:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_735d504b2c5de2f29425b794cdb33103551951bc0508e48cdd57a296c3d28554__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"29179:421:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29330:9:7","nodeType":"YulTypedName","src":"29330:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"29344:4:7","nodeType":"YulTypedName","src":"29344:4:7","type":""}],"src":"29179:421:7"},{"body":{"nativeSrc":"29788:213:7","nodeType":"YulBlock","src":"29788:213:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"29805:9:7","nodeType":"YulIdentifier","src":"29805:9:7"},{"kind":"number","nativeSrc":"29816:2:7","nodeType":"YulLiteral","src":"29816:2:7","type":"","value":"96"}],"functionName":{"name":"mstore","nativeSrc":"29798:6:7","nodeType":"YulIdentifier","src":"29798:6:7"},"nativeSrc":"29798:21:7","nodeType":"YulFunctionCall","src":"29798:21:7"},"nativeSrc":"29798:21:7","nodeType":"YulExpressionStatement","src":"29798:21:7"},{"nativeSrc":"29828:70:7","nodeType":"YulAssignment","src":"29828:70:7","value":{"arguments":[{"name":"value0","nativeSrc":"29863:6:7","nodeType":"YulIdentifier","src":"29863:6:7"},{"name":"value1","nativeSrc":"29871:6:7","nodeType":"YulIdentifier","src":"29871:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"29883:9:7","nodeType":"YulIdentifier","src":"29883:9:7"},{"kind":"number","nativeSrc":"29894:2:7","nodeType":"YulLiteral","src":"29894:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"29879:3:7","nodeType":"YulIdentifier","src":"29879:3:7"},"nativeSrc":"29879:18:7","nodeType":"YulFunctionCall","src":"29879:18:7"}],"functionName":{"name":"abi_encode_string_calldata","nativeSrc":"29836:26:7","nodeType":"YulIdentifier","src":"29836:26:7"},"nativeSrc":"29836:62:7","nodeType":"YulFunctionCall","src":"29836:62:7"},"variableNames":[{"name":"tail","nativeSrc":"29828:4:7","nodeType":"YulIdentifier","src":"29828:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29918:9:7","nodeType":"YulIdentifier","src":"29918:9:7"},{"kind":"number","nativeSrc":"29929:2:7","nodeType":"YulLiteral","src":"29929:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29914:3:7","nodeType":"YulIdentifier","src":"29914:3:7"},"nativeSrc":"29914:18:7","nodeType":"YulFunctionCall","src":"29914:18:7"},{"arguments":[{"name":"value2","nativeSrc":"29938:6:7","nodeType":"YulIdentifier","src":"29938:6:7"},{"kind":"number","nativeSrc":"29946:4:7","nodeType":"YulLiteral","src":"29946:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"29934:3:7","nodeType":"YulIdentifier","src":"29934:3:7"},"nativeSrc":"29934:17:7","nodeType":"YulFunctionCall","src":"29934:17:7"}],"functionName":{"name":"mstore","nativeSrc":"29907:6:7","nodeType":"YulIdentifier","src":"29907:6:7"},"nativeSrc":"29907:45:7","nodeType":"YulFunctionCall","src":"29907:45:7"},"nativeSrc":"29907:45:7","nodeType":"YulExpressionStatement","src":"29907:45:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29972:9:7","nodeType":"YulIdentifier","src":"29972:9:7"},{"kind":"number","nativeSrc":"29983:2:7","nodeType":"YulLiteral","src":"29983:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"29968:3:7","nodeType":"YulIdentifier","src":"29968:3:7"},"nativeSrc":"29968:18:7","nodeType":"YulFunctionCall","src":"29968:18:7"},{"name":"value3","nativeSrc":"29988:6:7","nodeType":"YulIdentifier","src":"29988:6:7"}],"functionName":{"name":"mstore","nativeSrc":"29961:6:7","nodeType":"YulIdentifier","src":"29961:6:7"},"nativeSrc":"29961:34:7","nodeType":"YulFunctionCall","src":"29961:34:7"},"nativeSrc":"29961:34:7","nodeType":"YulExpressionStatement","src":"29961:34:7"}]},"name":"abi_encode_tuple_t_string_calldata_ptr_t_uint8_t_uint256__to_t_string_memory_ptr_t_uint8_t_uint256__fromStack_reversed","nativeSrc":"29605:396:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29733:9:7","nodeType":"YulTypedName","src":"29733:9:7","type":""},{"name":"value3","nativeSrc":"29744:6:7","nodeType":"YulTypedName","src":"29744:6:7","type":""},{"name":"value2","nativeSrc":"29752:6:7","nodeType":"YulTypedName","src":"29752:6:7","type":""},{"name":"value1","nativeSrc":"29760:6:7","nodeType":"YulTypedName","src":"29760:6:7","type":""},{"name":"value0","nativeSrc":"29768:6:7","nodeType":"YulTypedName","src":"29768:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"29779:4:7","nodeType":"YulTypedName","src":"29779:4:7","type":""}],"src":"29605:396:7"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_uint72(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint72(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint72(headStart)\n    }\n    function abi_decode_enum_RulingOptions(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_enum$_RulingOptions_$295(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_enum_RulingOptions(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address_payable_t_uint32_t_uint56_t_uint8__to_t_address_payable_t_uint32_t_uint56_t_uint8__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffff))\n        mstore(add(headStart, 96), and(value3, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let size := 0\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let result := and(add(length, 31), not(31))\n        size := add(result, 0x20)\n        let memPtr := 0\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(result, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_1, 0x20), calldataload(_1), dataEnd)\n        let offset_1 := calldataload(add(headStart, 0x20))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset_1)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_string(add(_2, 0x20), calldataload(_2), dataEnd)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(pos, i), 0x20), mload(add(add(value, i), 0x20)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_RulingOptions(value, pos)\n    {\n        if iszero(lt(value, 3))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_address_payable_t_enum$_RulingOptions_$295_t_uint8_t_bool_t_uint72__to_t_address_payable_t_uint8_t_uint8_t_bool_t_uint72__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        abi_encode_enum_RulingOptions(value1, add(headStart, 32))\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_address_payable(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address_payablet_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address_payable(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_1, 32)\n        value3 := length\n    }\n    function abi_decode_tuple_t_uint256t_address_payablet_enum$_RulingOptions_$295(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address_payable(add(headStart, 32))\n        value2 := abi_decode_enum_RulingOptions(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_contract$_IArbitrator_$249__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_array$_t_bool_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr_t_uint256__to_t_array$_t_bool_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        let pos := headStart\n        pos := headStart\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, 0x03) { i := add(i, 1) }\n        {\n            mstore(pos, iszero(iszero(mload(srcPtr))))\n            pos := add(pos, 0x20)\n            srcPtr := add(srcPtr, 0x20)\n        }\n        let pos_1 := add(headStart, 96)\n        pos_1 := pos_1\n        let srcPtr_1 := value1\n        let i_1 := 0\n        for { } lt(i_1, 0x03) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos_1, mload(srcPtr_1))\n            pos_1 := add(pos_1, 0x20)\n            srcPtr_1 := add(srcPtr_1, 0x20)\n        }\n        mstore(add(headStart, 192), value2)\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_payable(headStart)\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_decode_tuple_t_uint256t_address_payable(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address_payable(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let tail_2 := add(add(headStart, shl(5, length)), 96)\n        let srcPtr := add(value1, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(95)))\n            let _1 := mload(srcPtr)\n            let pos_1 := tail_2\n            let length_1 := mload(_1)\n            mstore(tail_2, length_1)\n            pos_1 := add(tail_2, 32)\n            let srcPtr_1 := add(_1, 32)\n            let i_1 := 0\n            for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n            {\n                mstore(pos_1, mload(srcPtr_1))\n                pos_1 := add(pos_1, 32)\n                srcPtr_1 := add(srcPtr_1, 32)\n            }\n            tail_2 := pos_1\n            srcPtr := add(srcPtr, 32)\n            pos := add(pos, 32)\n        }\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_enum$_RulingOptions_$295t_enum$_RulingOptions_$295(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_enum_RulingOptions(headStart)\n        value1 := abi_decode_enum_RulingOptions(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_address_payablet_uint256t_enum$_RulingOptions_$295(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address_payable(add(headStart, 32))\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value2 := value_1\n        value3 := abi_decode_enum_RulingOptions(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint72t_address_payable(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint72(headStart)\n        value1 := abi_decode_address_payable(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_uint8t_uint72(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value2 := value\n        value3 := abi_decode_uint72(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_0fb9b5de11a486bb1b8d34864ad6b246b0b983476450ee45857735429bd77eb9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Nothing to challenge.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b54a59a715146ed6c99f49691f55e62e941bfed713a75eda7bc62bf50148d555__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"There is an ongoing challenge.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0c03e9d393d30f62793e04d553e45144120700c0c39d75130bccb90781d9e9e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Insufficient funds to challenge.\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_bytes_storage(value, pos) -> ret\n    {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        mstore(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            mstore(add(pos, 0x20), and(slotValue, not(255)))\n            ret := add(add(pos, shl(5, iszero(iszero(length)))), 0x20)\n        }\n        case 1 {\n            mstore(0, value)\n            let dataPos := keccak256(0, 0x20)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) }\n            {\n                mstore(add(add(pos, i), 0x20), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(add(pos, i), 0x20)\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_bytes_storage__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes_storage(value1, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint8_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_0345b6b07b3f7ea23ce7c0682ae193a7b3933d232b736d656630025e0007450f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Funding must be made within the \")\n        mstore(add(headStart, 96), \"appeal period.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f3418d70ac679d1f67a83336adc36c46a5610f9d2455f76fc28495336bbc06ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"Funding must be made within the \")\n        mstore(add(headStart, 96), \"first half appeal period.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c2f2256a77e1cd7cdc564a3b966df4f3e5bfbdc15f00156637ffbff138e529be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Appeal fee has already been paid\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_enum$_RulingOptions_$295_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        abi_encode_enum_RulingOptions(value0, headStart)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_5943b819c05c7059125985bc4ac5cf738c94c0822c506b598ab2eced554e2f50__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"The tax rate can only be increas\")\n        mstore(add(headStart, 96), \"ed by a maximum of 25%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint72__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes_storage__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes_storage(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_a40667c3d5ae3c08746fe24fceae1033d89d0e1de162ecdda7e68141465d7af7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Only author can increase bounty \")\n        mstore(add(headStart, 96), \"of an article.\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint56(x, y) -> sum\n    {\n        sum := add(and(x, 0xffffffffffffff), and(y, 0xffffffffffffff))\n        if gt(sum, 0xffffffffffffff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint72_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        sum := add(and(x, 0xff), and(y, 0xff))\n        if gt(sum, 0xff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_e23f3e71c05305a9182237d48ba9b404f0c1c59aaff27a9576fb3eb02eaabde6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"No space left for a new category\")\n        tail := add(headStart, 96)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function access_calldata_tail_t_array$_t_uint256_$dyn_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), shl(5, length))) { revert(0, 0) }\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_calldata(value0, value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_6a7ac09dd6d1a595ef63e3c006cc799fa0704d926f43c9ba8a2701161a095cea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Only author can withdraw an arti\")\n        mstore(add(headStart, 96), \"cle.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_646d3354d32a4e6f10f97f8e4dafb31e5ad3c387e7ce2b3b8fd9a6cf92aec955__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"You need to initiate withdrawal \")\n        mstore(add(headStart, 96), \"first.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7c0c82b0d480101a30f3ad2e3ccc7970d31d7e8da6ac4e66c07d00ffcf930f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"You need to wait for timelock or\")\n        mstore(add(headStart, 96), \" wait until the challenge ends.\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_09736bc764ff8f7b07f5d004c384a229ed4912017c53bd247c8e39209b9ae7f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"Withdrawal already initiated or \")\n        mstore(add(headStart, 96), \"there is a challenge.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9591a49cf5d9e3ba9b3aea5505a2b8a639d2f239a0cb6a9059466b60c54a080f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"There is no ruling yet.\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint72(value) -> ret\n    {\n        let value_1 := and(value, 0xffffffffffffffffff)\n        if eq(value_1, 0xffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function checked_sub_t_uint72(x, y) -> diff\n    {\n        diff := sub(and(x, 0xffffffffffffffffff), and(y, 0xffffffffffffffffff))\n        if gt(diff, 0xffffffffffffffffff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_264afed15e2abe1afd48e9529ae4102fd34dc15becf22ac12086d34e9bca14d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Only author can transfer ownersh\")\n        mstore(add(headStart, 96), \"ip.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_de142eb746bdd0d0ef7f42e32a89b1f8be902652448bd9ef60b61b168c6d9194__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"This category does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_735d504b2c5de2f29425b794cdb33103551951bc0508e48cdd57a296c3d28554__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"You can't initialize an article \")\n        mstore(add(headStart, 96), \"without putting a bounty.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_uint8_t_uint256__to_t_string_memory_ptr_t_uint8_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_string_calldata(value0, value1, add(headStart, 96))\n        mstore(add(headStart, 32), and(value2, 0xff))\n        mstore(add(headStart, 64), value3)\n    }\n}","id":7,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"707":[{"length":32,"start":1648},{"length":32,"start":3077},{"length":32,"start":3459},{"length":32,"start":3649},{"length":32,"start":3791},{"length":32,"start":4276},{"length":32,"start":5361},{"length":32,"start":5676},{"length":32,"start":6066},{"length":32,"start":6752},{"length":32,"start":7746},{"length":32,"start":8299},{"length":32,"start":9146},{"length":32,"start":9396}]},"linkReferences":{},"object":"60806040526004361061031e5760003560e01c8063a509efeb116101a5578063c9330c0f116100ec578063e349ad3011610095578063faa0ba9d1161006f578063faa0ba9d146109c0578063fc0ac672146109d3578063fe6ca782146109e9578063ffa1ad74146109ff57600080fd5b8063e349ad3014610965578063ec4adca91461097b578063f851a4401461099b57600080fd5b8063d970d18c116100c6578063d970d18c14610910578063dc227fc214610925578063e165720c1461094557600080fd5b8063c9330c0f146108ba578063c94828f0146108da578063d3b476b1146108fa57600080fd5b8063b34bfaa81161014e578063ba0ec60b11610128578063ba0ec60b1461086f578063ba4c8f8f14610884578063be467604146108a457600080fd5b8063b34bfaa814610824578063b4c705811461083a578063b7bddc721461085a57600080fd5b8063adc7faba1161017f578063adc7faba146107b6578063af4a9144146107d6578063b14f2a391461080457600080fd5b8063a509efeb14610756578063a6a7f0eb14610776578063a92c47071461079657600080fd5b80634de12db0116102695780637597b3cb116102125780638f283970116101ec5780638f283970146106f657806392239dff1461071657806392e259251461073657600080fd5b80637597b3cb146106925780637f67bd6c146106a75780638a9bb02a146106c757600080fd5b806367284f211161024357806367284f211461061e5780636760aeb01461063e57806368871c9c1461065e57600080fd5b80634de12db014610541578063564a565d1461056e578063638af3da146105e957600080fd5b8063311a6c56116102cb5780633e556162116102a55780633e5561621461046d57806344b9ad061461050e5780634c55c0001461052157600080fd5b8063311a6c5614610417578063313dab2014610437578063376414831461044d57600080fd5b80631e26de34116102fc5780631e26de341461038c57806326804bef146103ba5780632d2c5565146103da57600080fd5b806303624fc01461032357806312a145e11461035457806312b3a2c014610369575b600080fd5b34801561032f57600080fd5b5060075461033d9060ff1681565b60405160ff90911681526020015b60405180910390f35b6103676103623660046134d4565b610a48565b005b61037c6103773660046134fe565b610e1b565b604051901515815260200161034b565b34801561039857600080fd5b506103ac6103a736600461352a565b611617565b60405190815260200161034b565b3480156103c657600080fd5b506103676103d536600461352a565b6116e0565b3480156103e657600080fd5b506000546103ff9061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161034b565b34801561042357600080fd5b50610367610432366004613543565b6117a7565b34801561044357600080fd5b506103ac60015481565b34801561045957600080fd5b506103ac6104683660046134d4565b611a3d565b34801561047957600080fd5b506104ce6104883660046134d4565b6048602052600090815260409020546001600160a01b03811690600160a01b810463ffffffff1690600160c01b810466ffffffffffffff1690600160f81b900460ff1684565b604080516001600160a01b03909516855263ffffffff909316602085015266ffffffffffffff9091169183019190915260ff16606082015260800161034b565b61036761051c3660046134d4565b611b58565b34801561052d57600080fd5b5061036761053c3660046135f5565b611c9e565b34801561054d57600080fd5b5061056161055c36600461352a565b611d9a565b60405161034b91906136cc565b34801561057a57600080fd5b506105d861058936600461352a565b6049602052600090815260409020546001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204169068ffffffffffffffffff600160b81b9091041685565b60405161034b959493929190613717565b3480156105f557600080fd5b506106096106043660046134fe565b611e3a565b6040805192835260208301919091520161034b565b34801561062a57600080fd5b50610367610639366004613775565b611f67565b34801561064a57600080fd5b50610367610659366004613802565b612017565b34801561066a57600080fd5b506103ff7f000000000000000000000000000000000000000000000000000000000000000081565b34801561069e57600080fd5b506103ac600281565b3480156106b357600080fd5b506103ac6106c236600461352a565b612052565b3480156106d357600080fd5b506106e76106e2366004613543565b6120de565b60405161034b9392919061383e565b34801561070257600080fd5b506103676107113660046138a3565b6121ce565b34801561072257600080fd5b5061036761073136600461352a565b612249565b34801561074257600080fd5b5061036761075136600461352a565b612298565b34801561076257600080fd5b506103ac6107713660046134fe565b6122e7565b34801561078257600080fd5b50610367610791366004613900565b6124a7565b3480156107a257600080fd5b506103676107b13660046134d4565b61251a565b3480156107c257600080fd5b506103676107d136600461352a565b612753565b3480156107e257600080fd5b506107f66107f136600461394c565b6127a2565b60405161034b92919061396f565b34801561081057600080fd5b5061036761081f3660046138a3565b612981565b34801561083057600080fd5b506103ac60055481565b34801561084657600080fd5b506103ac610855366004613a05565b6129fa565b34801561086657600080fd5b50610367612a84565b34801561087b57600080fd5b50610367612ae9565b34801561089057600080fd5b5061036761089f3660046134d4565b612b19565b3480156108b057600080fd5b506103ac60025481565b3480156108c657600080fd5b506103676108d536600461394c565b612c82565b3480156108e657600080fd5b506103676108f536600461352a565b612cdf565b34801561090657600080fd5b506103ac60035481565b34801561091c57600080fd5b506103ac602081565b34801561093157600080fd5b506103ac610940366004613a2f565b612d2e565b34801561095157600080fd5b506103ac6109603660046134d4565b612e92565b34801561097157600080fd5b506103ac60045481565b34801561098757600080fd5b50610367610996366004613a75565b612f11565b3480156109a757600080fd5b506007546103ff9061010090046001600160a01b031681565b6103676109ce366004613a9f565b61300b565b3480156109df57600080fd5b506103ac60065481565b3480156109f557600080fd5b506103ac61040081565b348015610a0b57600080fd5b506105616040518060400160405280600581526020017f312e322e3000000000000000000000000000000000000000000000000000000081525081565b68ffffffffffffffffff811660009081526048602052604090208054600160c01b900466ffffffffffffff16610ac55760405162461bcd60e51b815260206004820152601560248201527f4e6f7468696e6720746f206368616c6c656e67652e000000000000000000000060448201526064015b60405180910390fd5b805463fffffffe19600160a01b90910463ffffffff1601610b285760405162461bcd60e51b815260206004820152601e60248201527f546865726520697320616e206f6e676f696e67206368616c6c656e67652e00006044820152606401610abc565b805463ffffffff60a01b191677ffffffff0000000000000000000000000000000000000000178155610b5982611a3d565b341015610ba85760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e742066756e647320746f206368616c6c656e67652e6044820152606401610abc565b600654815460009161040091610bd59190600160c01b900460201b6affffffffffffff0000000016613b16565b610bdf9190613b2d565b90508060016000828254610bf39190613b4f565b90915550600090506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663c13517e1610c348434613b62565b8554600290600890600160f81b900460ff1660408110610c5657610c56613b75565b016040518463ffffffff1660e01b8152600401610c74929190613c48565b60206040518083038185885af1158015610c92573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610cb79190613c69565b600081815260496020908152604091829020805460018083018054909101905576ffffff0000000000000000000000000000000000000000163376ffffffffffffffffffffffffffffffffffffffffffffff1617600160b81b68ffffffffffffffffff8a16021780825587547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff909116600160f81b9182900460ff908116600160a81b029190911790925587548451919004909116815290810183905291925082916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016917f74baab670a4015ab2f1b467c5252a96141a2573f2908e58a92081e80d3cfde3d910160405180910390a3604080513381526020810183905268ffffffffffffffffff8616917f1e5338a1fb672aa84963dc9f9e4afd009b4ed726debb09224bf4d02a6c68b4e4910160405180910390a250505050565b6000828152604960205260408082209051631c3db16d60e01b81526004810185905282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c3db16d90602401602060405180830381865afa158015610e90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb49190613c69565b6002811115610ec557610ec56136df565b90506000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663afe15cfb8a6040518263ffffffff1660e01b8152600401610f1b91815260200190565b6040805180830381865afa158015610f37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5b9190613c82565b915091506000856002811115610f7357610f736136df565b896002811115610f8557610f856136df565b0361100857814210610fff5760405162461bcd60e51b815260206004820152602e60248201527f46756e64696e67206d757374206265206d6164652077697468696e207468652060448201527f61707065616c20706572696f642e0000000000000000000000000000000000006064820152608401610abc565b506004546110b0565b600254610400906110198585613b62565b6110239190613b16565b61102d9190613b2d565b6110379084613b4f565b42106110ab5760405162461bcd60e51b815260206004820152603960248201527f46756e64696e67206d757374206265206d6164652077697468696e207468652060448201527f66697273742068616c662061707065616c20706572696f642e000000000000006064820152608401610abc565b506005545b86547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f23f16e6908c90600890600160a81b900460ff166040811061110257611102613b75565b016040518363ffffffff1660e01b8152600401611120929190613c48565b602060405180830381865afa15801561113d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111619190613c69565b94506104006111708287613b16565b61117a9190613b2d565b6111849086613b4f565b6001888101549195508a94506000935061119f925090613b62565b905060008660010182815481106111b8576111b8613b75565b90600052602060002090600602019050806001018360028111156111de576111de6136df565b600381106111ee576111ee613b75565b602081049091015460ff601f9092166101000a900416156112775760405162461bcd60e51b815260206004820152602160248201527f41707065616c206665652068617320616c7265616479206265656e207061696460448201527f2e000000000000000000000000000000000000000000000000000000000000006064820152608401610abc565b60008082600201856002811115611290576112906136df565b600381106112a0576112a0613b75565b015490508581106112b457600091506112d8565b346112bf8288613b62565b116112d3576112ce8187613b62565b6112d5565b345b91505b50336001600160a01b0316838c7f2b4ef80a862edc5616a4e61c11f4a368f33323faca91fa7635d48b85c183e66a8d85604051611316929190613ca6565b60405180910390a43360009081526020839052604090208190856002811115611341576113416136df565b6003811061135157611351613b75565b0160008282546113619190613b4f565b92505081905550808260020185600281111561137f5761137f6136df565b6003811061138f5761138f613b75565b01600082825461139f9190613b4f565b9250508190555084826002018560028111156113bd576113bd6136df565b600381106113cd576113cd613b75565b01541061149b57816002018460028111156113ea576113ea6136df565b600381106113fa576113fa613b75565b015482600501600082825461140f9190613b4f565b909155506001905082810185600281111561142c5761142c6136df565b6003811061143c5761143c613b75565b602091828204019190066101000a81548160ff02191690831515021790555089600281111561146d5761146d6136df565b60405184908d907fb5681f036910f38d8c2fa06f2cbedc227ecf03d7c4a358ee9096197b15ff8fd090600090a45b6001820154610100900460ff1680156114be5750600182015462010000900460ff165b156115925760018089018054909101815560009081526005830180548892906114e8908490613b62565b909155505087547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906349912f889088908e90600890600160a81b900460ff166040811061154157611541613b75565b016040518463ffffffff1660e01b815260040161155f929190613c48565b6000604051808303818588803b15801561157857600080fd5b505af115801561158c573d6000803e3d6000fd5b50505050505b600061159e8234613b62565b11156115ca57336108fc6115b28334613b62565b6040518115909202916000818181858888f150505050505b816001018460028111156115e0576115e06136df565b600381106115f0576115f0613b75565b602081049091015460ff601f9092166101000a900416985050505050505050505b92915050565b600081815260496020526040808220805490917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163f23f16e6918691600891600160a81b90910460ff1690811061167a5761167a613b75565b016040518363ffffffff1660e01b8152600401611698929190613c48565b602060405180830381865afa1580156116b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d99190613c69565b9392505050565b60075461010090046001600160a01b031633146116fc57600080fd5b6101008111156117745760405162461bcd60e51b815260206004820152603660248201527f5468652074617820726174652063616e206f6e6c7920626520696e637265617360448201527f65642062792061206d6178696d756d206f6620323525000000000000000000006064820152608401610abc565b600681905560405181907f5100ab374784a62034356f9af3b71ea723c1e89beb5627c6c1dacea1117250b890600090a250565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146117dc57600080fd5b60008281526049602052604081206001808201805492939290916117ff91613b62565b8154811061180f5761180f613b75565b60009182526020822060016006929092020190810154909250610100900460ff161561183d57506001611853565b6001820154610100900460ff1615611853575060025b600080826002811115611868576118686136df565b036118845784600281111561187f5761187f6136df565b611886565b815b8454909150819085907fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b8360028111156118c8576118c86136df565b02179055508354600160b81b900468ffffffffffffffffff1660008181526048602052604090206002836002811115611903576119036136df565b036119bb5780547fff00000000000000ffffffffffffffffffffffffffffffffffffffffffffffff8116825560405168ffffffffffffffffff84168152600160c01b909104602090811b6affffffffffffff0000000016917f8271992f9b3a3f30dc2a464982dc4a136e7357403462443a171a0fb0c6ccc265910160405180910390a16000898152604960205260408082205490516001600160a01b039091169183156108fc02918491818181858888f15050505050505b805463ffffffff60a01b1916815585547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b178655604051889033907f394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e7562227690611a2b908b815260200190565b60405180910390a35050505050505050565b68ffffffffffffffffff81166000908152604860205260408082208054909183917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163f7434ea991600891600160f81b90910460ff16908110611aac57611aac613b75565b016040518263ffffffff1660e01b8152600401611ac99190613cc1565b602060405180830381865afa158015611ae6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0a9190613c69565b600654835491925060009161040091611b3991600160c01b900460201b6affffffffffffff0000000016613b16565b611b439190613b2d565b9050611b4f8183613b4f565b95945050505050565b68ffffffffffffffffff8116600090815260486020526040902080546001600160a01b03163314611bf15760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c7920617574686f722063616e20696e63726561736520626f756e74792060448201527f6f6620616e2061727469636c652e0000000000000000000000000000000000006064820152608401610abc565b80543460201c908290601890611c18908490600160c01b900466ffffffffffffff16613cd4565b82546101009290920a66ffffffffffffff8181021990931691909216919091021790555080546040805168ffffffffffffffffff85168152600160c01b909204602090811b6affffffffffffff0000000016908301527fdf5fc410d3381cc7f0a7fe3af72f4e3cf53ef5787f20554af69035a950e1b2e391015b60405180910390a15050565b600754611caf9060ff166001613cf3565b60ff16600003611d015760405162461bcd60e51b815260206004820181905260248201527f4e6f207370616365206c65667420666f722061206e65772063617465676f72796044820152606401610abc565b60075460405160ff909116907f61606860eb6c87306811e2695215385101daab53bd6ab4e9f9049aead9363c7d90611d3a9085906136cc565b60405180910390a2600754819060089060ff1660408110611d5d57611d5d613b75565b0190611d699082613d58565b506007805460ff16906000611d7d83613e17565b91906101000a81548160ff021916908360ff160217905550505050565b60088160408110611daa57600080fd5b018054909150611db990613b8b565b80601f0160208091040260200160405190810160405280929190818152602001828054611de590613b8b565b8015611e325780601f10611e0757610100808354040283529160200191611e32565b820191906000526020600020905b815481529060010190602001808311611e1557829003601f168201915b505050505081565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663afe15cfb876040518263ffffffff1660e01b8152600401611e8e91815260200190565b6040805180830381865afa158015611eaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ece9190613c82565b9150915060006104006002548484611ee69190613b62565b611ef09190613b16565b611efa9190613b2d565b611f049084613b4f565b90506000866002811115611f1a57611f1a6136df565b611f2389612052565b6002811115611f3457611f346136df565b6002811115611f4557611f456136df565b14905080611f54578382611f57565b83835b95509550505050505b9250929050565b60005b818110156120105760005b838383818110611f8757611f87613b75565b9050602002810190611f999190613e36565b9050811015612007576000848484818110611fb657611fb6613b75565b9050602002810190611fc89190613e36565b83818110611fd857611fd8613b75565b905060200201351115611fff57611ffd868684846002811115610940576109406136df565b505b600101611f75565b50600101611f6a565b5050505050565b6000838152604960205260408120600181015490915b8181101561204a5761204186868387612d2e565b5060010161202d565b505050505050565b604051631c3db16d60e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c3db16d90602401602060405180830381865afa1580156120ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116119190613c69565b6120e6613498565b6120ee613498565b600084815260496020526040812060010180548291908690811061211457612114613b75565b906000526020600020906006020190508060010181600201826005015482600380602002604051908101604052809291908260038015612189576020028201916000905b825461010083900a900460ff1615158152602060019283018181049485019490930390920291018084116121585790505b505060408051606081019182905294975086935060039250905082845b8154815260200190600101908083116121a65750505050509150935093509350509250925092565b60075461010090046001600160a01b031633146121ea57600080fd5b6007805474ffffffffffffffffffffffffffffffffffffffff0019166101006001600160a01b038416908102919091179091556040517f0c2515f25186df02132ad46f01e062c3b8982c8de57fa2b1b0a280d8e810f39b90600090a250565b60075461010090046001600160a01b0316331461226557600080fd5b600581905560405181907f505f3bf1e426c82f14f7c9cfb2d31ef5b7bb76428e16bd90dabec113e3d4a2bc90600090a250565b60075461010090046001600160a01b031633146122b457600080fd5b600381905560405181907f207e19e347becb468ef02d25790188e4d5da0fe37176d3bbb7940168ec5d613690600090a250565b6000828152604960205260408120600180820154839161230691613b62565b9050600082600101828154811061231f5761231f613b75565b906000526020600020906006020190506000856002811115612343576123436136df565b61234c88612052565b600281111561235d5761235d6136df565b600281111561236e5761236e6136df565b14905060008161238057600554612384565b6004545b905060008360020188600281111561239e5761239e6136df565b600381106123ae576123ae613b75565b015486549091506000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f23f16e6908c90600890600160a81b900460ff166040811061240857612408613b75565b016040518363ffffffff1660e01b8152600401612426929190613c48565b602060405180830381865afa158015612443573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124679190613c69565b905060006104006124788584613b16565b6124829190613b2d565b61248c9083613b4f565b90506124988382613b62565b9b9a5050505050505050505050565b336001600160a01b0316837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c858560405161250d929190613ea9565b60405180910390a4505050565b68ffffffffffffffffff8116600090815260486020526040902080546001600160a01b031633146125995760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920617574686f722063616e20776974686472617720616e206172746960448201526331b6329760e11b6064820152608401610abc565b8054600160a01b900463ffffffff1660000361261d5760405162461bcd60e51b815260206004820152602660248201527f596f75206e65656420746f20696e697469617465207769746864726177616c2060448201527f66697273742e00000000000000000000000000000000000000000000000000006064820152608401610abc565b805442600160a01b90910463ffffffff1611156126a25760405162461bcd60e51b815260206004820152603f60248201527f596f75206e65656420746f207761697420666f722074696d656c6f636b206f7260448201527f207761697420756e74696c20746865206368616c6c656e676520656e64732e006064820152608401610abc565b80547fff0000000000000000000000ffffffffffffffffffffffffffffffffffffffff81168255604051600160c01b90910460201b6affffffffffffff00000000169033906108fc8315029083906000818181858888f1935050505015801561270f573d6000803e3d6000fd5b5060405168ffffffffffffffffff841681527f70b41d8cca762ceec66d93f536dbb31f5cabbf1901f862508b9438de54fce4eb9060200160405180910390a1505050565b60075461010090046001600160a01b0316331461276f57600080fd5b600481905560405181907f8df75282265171690a1298cf028f5e3c7d8d42313394a4f25d4aeea6c1ea62cf90600090a250565b6000828152604960205260408120805460609190600160b01b900460ff166127ce576000925050611f60565b60018101548154600160a01b900460ff168167ffffffffffffffff8111156127f8576127f8613565565b60405190808252806020026020018201604052801561282b57816020015b60608152602001906001900390816128165790505b50935060005b828110156129765761284560026001613b4f565b67ffffffffffffffff81111561285d5761285d613565565b604051908082528060200260200182016040528015612886578160200160208202803683370190505b5085828151811061289957612899613b75565b602002602001018190525060008460010182815481106128bb576128bb613b75565b9060005260206000209060060201905060005b6002811161296c5760006128f5838b8460028111156128ef576128ef6136df565b8861327a565b9050801561295957612914838b8460028111156128ef576128ef6136df565b61291e908a613b4f565b98508088858151811061293357612933613b75565b6020026020010151838151811061294c5761294c613b75565b6020026020010181815250505b508061296481613ebd565b9150506128ce565b5050600101612831565b505050509250929050565b60075461010090046001600160a01b0316331461299d57600080fd5b6000805474ffffffffffffffffffffffffffffffffffffffff0019166101006001600160a01b03841690810291909117825560405190917f8a3509a4057c89a5993a4a3140c2ebf7e829d325d8998eaa6c48adcff98b2cef91a250565b600080836002811115612a0f57612a0f6136df565b836002811115612a2157612a216136df565b1490506103e8600082612a3657600554612a3a565b6004545b9050612a4861040082613b4f565b82610400600554600454612a5c9190613b4f565b612a669190613b4f565b612a709190613b16565b612a7a9190613b2d565b9695505050505050565b60018054600091829055815460405191926101009091046001600160a01b0316916108fc84150291849190818181858888f150506040518493507fb315332b30dc40d1e51def214ce42d93a73bd0c17b08db04b34f10736bb2f06f925060009150a250565b60075461010090046001600160a01b03163314612b0557600080fd5b6000805460ff19811660ff90911615179055565b68ffffffffffffffffff8116600090815260486020526040902080546001600160a01b03163314612b985760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920617574686f722063616e20776974686472617720616e206172746960448201526331b6329760e11b6064820152608401610abc565b8054600160a01b900463ffffffff1615612c1a5760405162461bcd60e51b815260206004820152603560248201527f5769746864726177616c20616c726561647920696e69746961746564206f722060448201527f74686572652069732061206368616c6c656e67652e00000000000000000000006064820152608401610abc565b600354612c279042613b4f565b815463ffffffff91909116600160a01b0263ffffffff60a01b1990911617815560405168ffffffffffffffffff831681527f416c1ad2b96c356f3bbd35431f86cce449ddbb4f8c3755ea9d2776b04c2e9c8f90602001611c92565b6000828152604960205260408120600181015490915b818110156120105760005b60028111612cd657612cc3868684846002811115610940576109406136df565b5080612cce81613ebd565b915050612ca3565b50600101612c98565b60075461010090046001600160a01b03163314612cfb57600080fd5b600281905560405181907fbf39faa024d2f97599a0095e84098ee2171b6681738416c0030f442ba956d52b90600090a250565b60008481526049602052604081208054600160b01b900460ff16612d945760405162461bcd60e51b815260206004820152601760248201527f5468657265206973206e6f2072756c696e67207965742e0000000000000000006044820152606401610abc565b6000816001018581548110612dab57612dab613b75565b90600052602060002090600602019050612dd88187868560000160149054906101000a900460ff1661327a565b92508215612e88576001600160a01b0386166000908152602082905260408120856002811115612e0a57612e0a6136df565b60038110612e1a57612e1a613b75565b01556040516001600160a01b0387169084156108fc029085906000818181858888f1935050505050856001600160a01b031685887fff2b7c936d6023fea901b3455cefc23b124c1ca5997dc5b48c461fd20984289d8787604051612e7f929190613ca6565b60405180910390a45b5050949350505050565b6000805b6048600084612ea481613ed6565b955068ffffffffffffffffff1668ffffffffffffffffff16815260200190815260200160002090508060000160189054906101000a900466ffffffffffffff1666ffffffffffffff16600003612e9657612eff600184613efc565b68ffffffffffffffffff169392505050565b68ffffffffffffffffff8216600090815260486020526040902080546001600160a01b03163314612faa5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920617574686f722063616e207472616e73666572206f776e6572736860448201527f69702e00000000000000000000000000000000000000000000000000000000006064820152608401610abc565b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831690811782556040517fdfc39691aec87dc6aa51ff70c0e592f260c54d2ed6c64e8c4c2306da0eec872b90600090a2505050565b60075460ff908116908316106130635760405162461bcd60e51b815260206004820152601c60248201527f546869732063617465676f727920646f6573206e6f74206578697374000000006044820152606401610abc565b60005b604860008361307481613ed6565b945068ffffffffffffffffff1668ffffffffffffffffff16815260200190815260200160002090508060000160189054906101000a900466ffffffffffffff1666ffffffffffffff166000036130665780547fff00000000000000ffffffff000000000000000000000000000000000000000016337fff00000000000000ffffffffffffffffffffffffffffffffffffffffffffffff1617600160c01b3460201c66ffffffffffffff9081168202929092177effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160f81b60ff8716021780845504166131c95760405162461bcd60e51b815260206004820152603960248201527f596f752063616e277420696e697469616c697a6520616e2061727469636c652060448201527f776974686f75742070757474696e67206120626f756e74792e000000000000006064820152608401610abc565b60006131d6600184613efc565b68ffffffffffffffffff1690507f4f9a2b734331c583faf3f19d1feb5f08b742e016a56fb61379950beaf3e22341868686846040516132189493929190613f1d565b60405180910390a1815460408051838152600160c01b909204602090811b6affffffffffffff0000000016908301527fdf5fc410d3381cc7f0a7fe3af72f4e3cf53ef5787f20554af69035a950e1b2e3910160405180910390a1505050505050565b60008260018601816002811115613293576132936136df565b600381106132a3576132a3613b75565b602081049091015460ff601f9092166101000a900416613300576001600160a01b03851660009081526020879052604090208160028111156132e7576132e76136df565b600381106132f7576132f7613b75565b0154915061348f565b826002811115613312576133126136df565b846002811115613324576133246136df565b036133e357600086600201826002811115613341576133416136df565b6003811061335157613351613b75565b01541161335f5760006133dc565b85600201816002811115613375576133756136df565b6003811061338557613385613b75565b015460058701546001600160a01b03871660009081526020899052604090208360028111156133b6576133b66136df565b600381106133c6576133c6613b75565b01546133d29190613b16565b6133dc9190613b2d565b915061348f565b856001018360028111156133f9576133f96136df565b6003811061340957613409613b75565b602081049091015460ff601f9092166101000a90041661348f57600486015460038701546134379190613b4f565b60058701546001600160a01b0387166000908152602089905260409020836002811115613466576134666136df565b6003811061347657613476613b75565b01546134829190613b16565b61348c9190613b2d565b91505b50949350505050565b60405180606001604052806003906020820280368337509192915050565b803568ffffffffffffffffff811681146134cf57600080fd5b919050565b6000602082840312156134e657600080fd5b6116d9826134b6565b8035600381106134cf57600080fd5b6000806040838503121561351157600080fd5b82359150613521602084016134ef565b90509250929050565b60006020828403121561353c57600080fd5b5035919050565b6000806040838503121561355657600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff84111561359657613596613565565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff821117156135c5576135c5613565565b6040528381529050808284018510156135dd57600080fd5b83836020830137600060208583010152509392505050565b6000806040838503121561360857600080fd5b823567ffffffffffffffff81111561361f57600080fd5b8301601f8101851361363057600080fd5b61363f8582356020840161357b565b925050602083013567ffffffffffffffff81111561365c57600080fd5b8301601f8101851361366d57600080fd5b61367c8582356020840161357b565b9150509250929050565b6000815180845260005b818110156136ac57602081850181015186830182015201613690565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006116d96020830184613686565b634e487b7160e01b600052602160045260246000fd5b6003811061371357634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038616815260a0810161373460208301876136f5565b60ff949094166040820152911515606083015268ffffffffffffffffff1660809091015292915050565b80356001600160a01b03811681146134cf57600080fd5b6000806000806060858703121561378b57600080fd5b8435935061379b6020860161375e565b9250604085013567ffffffffffffffff8111156137b757600080fd5b8501601f810187136137c857600080fd5b803567ffffffffffffffff8111156137df57600080fd5b8760208260051b84010111156137f457600080fd5b949793965060200194505050565b60008060006060848603121561381757600080fd5b833592506138276020850161375e565b9150613835604085016134ef565b90509250925092565b60e08101818560005b60038110156138685781511515835260209283019290910190600101613847565b505050606082018460005b6003811015613892578151835260209283019290910190600101613873565b5050508260c0830152949350505050565b6000602082840312156138b557600080fd5b6116d98261375e565b60008083601f8401126138d057600080fd5b50813567ffffffffffffffff8111156138e857600080fd5b602083019150836020828501011115611f6057600080fd5b60008060006040848603121561391557600080fd5b83359250602084013567ffffffffffffffff81111561393357600080fd5b61393f868287016138be565b9497909650939450505050565b6000806040838503121561395f57600080fd5b823591506135216020840161375e565b6000604082018483526040602084015280845180835260608501915060608160051b86010192506020860160005b828110156139f857868503605f190184528151805180875260209182019187019060005b818110156139df5783518352602093840193909201916001016139c1565b509096505050602093840193919091019060010161399d565b5092979650505050505050565b60008060408385031215613a1857600080fd5b613a21836134ef565b9150613521602084016134ef565b60008060008060808587031215613a4557600080fd5b84359350613a556020860161375e565b925060408501359150613a6a606086016134ef565b905092959194509250565b60008060408385031215613a8857600080fd5b613a91836134b6565b91506135216020840161375e565b60008060008060608587031215613ab557600080fd5b843567ffffffffffffffff811115613acc57600080fd5b613ad8878288016138be565b909550935050602085013560ff81168114613af257600080fd5b9150613a6a604086016134b6565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761161157611611613b00565b600082613b4a57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561161157611611613b00565b8181038181111561161157611611613b00565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680613b9f57607f821691505b602082108103613bbf57634e487b7160e01b600052602260045260246000fd5b50919050565b60008154613bd281613b8b565b808552600182168015613bec5760018114613c0857613c3f565b60ff1983166020870152602082151560051b8701019350613c3f565b84600052602060002060005b83811015613c365781546020828a010152600182019150602081019050613c14565b87016020019450505b50505092915050565b828152604060208201526000613c616040830184613bc5565b949350505050565b600060208284031215613c7b57600080fd5b5051919050565b60008060408385031215613c9557600080fd5b505080516020909101519092909150565b60408101613cb482856136f5565b8260208301529392505050565b6020815260006116d96020830184613bc5565b66ffffffffffffff818116838216019081111561161157611611613b00565b60ff818116838216019081111561161157611611613b00565b601f821115613d5357806000526020600020601f840160051c81016020851015613d335750805b601f840160051c820191505b818110156120105760008155600101613d3f565b505050565b815167ffffffffffffffff811115613d7257613d72613565565b613d8681613d808454613b8b565b84613d0c565b6020601f821160018114613dba5760008315613da25750848201515b600019600385901b1c1916600184901b178455612010565b600084815260208120601f198516915b82811015613dea5787850151825560209485019460019092019101613dca565b5084821015613e085786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b600060ff821660ff8103613e2d57613e2d613b00565b60010192915050565b6000808335601e19843603018112613e4d57600080fd5b83018035915067ffffffffffffffff821115613e6857600080fd5b6020019150600581901b3603821315611f6057600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000613c61602083018486613e80565b600060018201613ecf57613ecf613b00565b5060010190565b600068ffffffffffffffffff821668ffffffffffffffffff8103613e2d57613e2d613b00565b68ffffffffffffffffff828116828216039081111561161157611611613b00565b606081526000613f31606083018688613e80565b60ff94909416602083015250604001529291505056fea264697066735822122033ebebbc41f48fc1789af0980443b9fc46e3f37029fbccd21e86aef900428e3664736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x31E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA509EFEB GT PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xC9330C0F GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xE349AD30 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xFAA0BA9D GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xFAA0BA9D EQ PUSH2 0x9C0 JUMPI DUP1 PUSH4 0xFC0AC672 EQ PUSH2 0x9D3 JUMPI DUP1 PUSH4 0xFE6CA782 EQ PUSH2 0x9E9 JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x9FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE349AD30 EQ PUSH2 0x965 JUMPI DUP1 PUSH4 0xEC4ADCA9 EQ PUSH2 0x97B JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD970D18C GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xD970D18C EQ PUSH2 0x910 JUMPI DUP1 PUSH4 0xDC227FC2 EQ PUSH2 0x925 JUMPI DUP1 PUSH4 0xE165720C EQ PUSH2 0x945 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC9330C0F EQ PUSH2 0x8BA JUMPI DUP1 PUSH4 0xC94828F0 EQ PUSH2 0x8DA JUMPI DUP1 PUSH4 0xD3B476B1 EQ PUSH2 0x8FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB34BFAA8 GT PUSH2 0x14E JUMPI DUP1 PUSH4 0xBA0EC60B GT PUSH2 0x128 JUMPI DUP1 PUSH4 0xBA0EC60B EQ PUSH2 0x86F JUMPI DUP1 PUSH4 0xBA4C8F8F EQ PUSH2 0x884 JUMPI DUP1 PUSH4 0xBE467604 EQ PUSH2 0x8A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB34BFAA8 EQ PUSH2 0x824 JUMPI DUP1 PUSH4 0xB4C70581 EQ PUSH2 0x83A JUMPI DUP1 PUSH4 0xB7BDDC72 EQ PUSH2 0x85A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xADC7FABA GT PUSH2 0x17F JUMPI DUP1 PUSH4 0xADC7FABA EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xAF4A9144 EQ PUSH2 0x7D6 JUMPI DUP1 PUSH4 0xB14F2A39 EQ PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA509EFEB EQ PUSH2 0x756 JUMPI DUP1 PUSH4 0xA6A7F0EB EQ PUSH2 0x776 JUMPI DUP1 PUSH4 0xA92C4707 EQ PUSH2 0x796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DE12DB0 GT PUSH2 0x269 JUMPI DUP1 PUSH4 0x7597B3CB GT PUSH2 0x212 JUMPI DUP1 PUSH4 0x8F283970 GT PUSH2 0x1EC JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x6F6 JUMPI DUP1 PUSH4 0x92239DFF EQ PUSH2 0x716 JUMPI DUP1 PUSH4 0x92E25925 EQ PUSH2 0x736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7597B3CB EQ PUSH2 0x692 JUMPI DUP1 PUSH4 0x7F67BD6C EQ PUSH2 0x6A7 JUMPI DUP1 PUSH4 0x8A9BB02A EQ PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67284F21 GT PUSH2 0x243 JUMPI DUP1 PUSH4 0x67284F21 EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0x6760AEB0 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0x68871C9C EQ PUSH2 0x65E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DE12DB0 EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0x564A565D EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x638AF3DA EQ PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x311A6C56 GT PUSH2 0x2CB JUMPI DUP1 PUSH4 0x3E556162 GT PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x3E556162 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x44B9AD06 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0x4C55C000 EQ PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x311A6C56 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x313DAB20 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x37641483 EQ PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E26DE34 GT PUSH2 0x2FC JUMPI DUP1 PUSH4 0x1E26DE34 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x26804BEF EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x2D2C5565 EQ PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3624FC0 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x12A145E1 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x12B3A2C0 EQ PUSH2 0x369 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x33D SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x367 PUSH2 0x362 CALLDATASIZE PUSH1 0x4 PUSH2 0x34D4 JUMP JUMPDEST PUSH2 0xA48 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37C PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x34FE JUMP JUMPDEST PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH2 0x16E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x3FF SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x3543 JUMP JUMPDEST PUSH2 0x17A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x34D4 JUMP JUMPDEST PUSH2 0x1A3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CE PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x34D4 JUMP JUMPDEST PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL DUP2 DIV PUSH7 0xFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH7 0xFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x34B JUMP JUMPDEST PUSH2 0x367 PUSH2 0x51C CALLDATASIZE PUSH1 0x4 PUSH2 0x34D4 JUMP JUMPDEST PUSH2 0x1B58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x53C CALLDATASIZE PUSH1 0x4 PUSH2 0x35F5 JUMP JUMPDEST PUSH2 0x1C9E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x561 PUSH2 0x55C CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH2 0x1D9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x36CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D8 PUSH2 0x589 CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL DUP3 DIV AND SWAP1 PUSH9 0xFFFFFFFFFFFFFFFFFF PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3717 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x609 PUSH2 0x604 CALLDATASIZE PUSH1 0x4 PUSH2 0x34FE JUMP JUMPDEST PUSH2 0x1E3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x3775 JUMP JUMPDEST PUSH2 0x1F67 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x659 CALLDATASIZE PUSH1 0x4 PUSH2 0x3802 JUMP JUMPDEST PUSH2 0x2017 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x2 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x6C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH2 0x2052 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E7 PUSH2 0x6E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3543 JUMP JUMPDEST PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x383E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x711 CALLDATASIZE PUSH1 0x4 PUSH2 0x38A3 JUMP JUMPDEST PUSH2 0x21CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x731 CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH2 0x2249 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x751 CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH2 0x2298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x771 CALLDATASIZE PUSH1 0x4 PUSH2 0x34FE JUMP JUMPDEST PUSH2 0x22E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x791 CALLDATASIZE PUSH1 0x4 PUSH2 0x3900 JUMP JUMPDEST PUSH2 0x24A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x7B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x34D4 JUMP JUMPDEST PUSH2 0x251A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x7D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH2 0x2753 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F6 PUSH2 0x7F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x394C JUMP JUMPDEST PUSH2 0x27A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP3 SWAP2 SWAP1 PUSH2 0x396F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x81F CALLDATASIZE PUSH1 0x4 PUSH2 0x38A3 JUMP JUMPDEST PUSH2 0x2981 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x830 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x855 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A05 JUMP JUMPDEST PUSH2 0x29FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x2A84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x2AE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x89F CALLDATASIZE PUSH1 0x4 PUSH2 0x34D4 JUMP JUMPDEST PUSH2 0x2B19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x8D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x394C JUMP JUMPDEST PUSH2 0x2C82 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x8F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x352A JUMP JUMPDEST PUSH2 0x2CDF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x20 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x940 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x2D2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x960 CALLDATASIZE PUSH1 0x4 PUSH2 0x34D4 JUMP JUMPDEST PUSH2 0x2E92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x971 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x996 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A75 JUMP JUMPDEST PUSH2 0x2F11 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x3FF SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x367 PUSH2 0x9CE CALLDATASIZE PUSH1 0x4 PUSH2 0x3A9F JUMP JUMPDEST PUSH2 0x300B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x400 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x561 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E322E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F206368616C6C656E67652E0000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH4 0xFFFFFFFE NOT PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND ADD PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865726520697320616E206F6E676F696E67206368616C6C656E67652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH24 0xFFFFFFFF0000000000000000000000000000000000000000 OR DUP2 SSTORE PUSH2 0xB59 DUP3 PUSH2 0x1A3D JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742066756E647320746F206368616C6C656E67652E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x400 SWAP2 PUSH2 0xBD5 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x20 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0xBDF SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBF3 SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0xC13517E1 PUSH2 0xC34 DUP5 CALLVALUE PUSH2 0x3B62 JUMP JUMPDEST DUP6 SLOAD PUSH1 0x2 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0xC56 JUMPI PUSH2 0xC56 PUSH2 0x3B75 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC74 SWAP3 SWAP2 SWAP1 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB7 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH23 0xFFFFFF0000000000000000000000000000000000000000 AND CALLER PUSH23 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND OR PUSH1 0x1 PUSH1 0xB8 SHL PUSH9 0xFFFFFFFFFFFFFFFFFF DUP11 AND MUL OR DUP1 DUP3 SSTORE DUP8 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xF8 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE DUP8 SLOAD DUP5 MLOAD SWAP2 SWAP1 DIV SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH32 0x74BAAB670A4015AB2F1B467C5252A96141A2573F2908E58A92081E80D3CFDE3D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF DUP7 AND SWAP2 PUSH32 0x1E5338A1FB672AA84963DC9F9E4AFD009B4ED726DEBB09224BF4D02A6C68B4E4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH4 0x1C3DB16D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE DUP3 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x1C3DB16D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xEC5 JUMPI PUSH2 0xEC5 PUSH2 0x36DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAFE15CFB DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5B SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF73 JUMPI PUSH2 0xF73 PUSH2 0x36DF JUMP JUMPDEST DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF85 JUMPI PUSH2 0xF85 PUSH2 0x36DF JUMP JUMPDEST SUB PUSH2 0x1008 JUMPI DUP2 TIMESTAMP LT PUSH2 0xFFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E64696E67206D757374206265206D6164652077697468696E2074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61707065616C20706572696F642E000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x400 SWAP1 PUSH2 0x1019 DUP6 DUP6 PUSH2 0x3B62 JUMP JUMPDEST PUSH2 0x1023 SWAP2 SWAP1 PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0x102D SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST PUSH2 0x1037 SWAP1 DUP5 PUSH2 0x3B4F JUMP JUMPDEST TIMESTAMP LT PUSH2 0x10AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E64696E67206D757374206265206D6164652077697468696E2074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x66697273742068616C662061707065616C20706572696F642E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST POP PUSH1 0x5 SLOAD JUMPDEST DUP7 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF23F16E6 SWAP1 DUP13 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x1102 JUMPI PUSH2 0x1102 PUSH2 0x3B75 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1120 SWAP3 SWAP2 SWAP1 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x113D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1161 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST SWAP5 POP PUSH2 0x400 PUSH2 0x1170 DUP3 DUP8 PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0x117A SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST PUSH2 0x1184 SWAP1 DUP7 PUSH2 0x3B4F JUMP JUMPDEST PUSH1 0x1 DUP9 DUP2 ADD SLOAD SWAP2 SWAP6 POP DUP11 SWAP5 POP PUSH1 0x0 SWAP4 POP PUSH2 0x119F SWAP3 POP SWAP1 PUSH2 0x3B62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11B8 JUMPI PUSH2 0x11B8 PUSH2 0x3B75 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x11DE JUMPI PUSH2 0x11DE PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x11EE JUMPI PUSH2 0x11EE PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND ISZERO PUSH2 0x1277 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41707065616C206665652068617320616C7265616479206265656E2070616964 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1290 JUMPI PUSH2 0x1290 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x12A0 JUMPI PUSH2 0x12A0 PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD SWAP1 POP DUP6 DUP2 LT PUSH2 0x12B4 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x12D8 JUMP JUMPDEST CALLVALUE PUSH2 0x12BF DUP3 DUP9 PUSH2 0x3B62 JUMP JUMPDEST GT PUSH2 0x12D3 JUMPI PUSH2 0x12CE DUP2 DUP8 PUSH2 0x3B62 JUMP JUMPDEST PUSH2 0x12D5 JUMP JUMPDEST CALLVALUE JUMPDEST SWAP2 POP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP13 PUSH32 0x2B4EF80A862EDC5616A4E61C11F4A368F33323FACA91FA7635D48B85C183E66A DUP14 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1316 SWAP3 SWAP2 SWAP1 PUSH2 0x3CA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1341 JUMPI PUSH2 0x1341 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1351 JUMPI PUSH2 0x1351 PUSH2 0x3B75 JUMP JUMPDEST ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1361 SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x2 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x137F JUMPI PUSH2 0x137F PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x138F JUMPI PUSH2 0x138F PUSH2 0x3B75 JUMP JUMPDEST ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x139F SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP3 PUSH1 0x2 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13BD JUMPI PUSH2 0x13BD PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x13CD JUMPI PUSH2 0x13CD PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD LT PUSH2 0x149B JUMPI DUP2 PUSH1 0x2 ADD DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13EA JUMPI PUSH2 0x13EA PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x13FA JUMPI PUSH2 0x13FA PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD DUP3 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x140F SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP1 POP DUP3 DUP2 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x142C JUMPI PUSH2 0x142C PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x143C JUMPI PUSH2 0x143C PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x146D JUMPI PUSH2 0x146D PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 SWAP1 DUP14 SWAP1 PUSH32 0xB5681F036910F38D8C2FA06F2CBEDC227ECF03D7C4A358EE9096197B15FF8FD0 SWAP1 PUSH1 0x0 SWAP1 LOG4 JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x14BE JUMPI POP PUSH1 0x1 DUP3 ADD SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1592 JUMPI PUSH1 0x1 DUP1 DUP10 ADD DUP1 SLOAD SWAP1 SWAP2 ADD DUP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 DUP4 ADD DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x14E8 SWAP1 DUP5 SWAP1 PUSH2 0x3B62 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP8 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x49912F88 SWAP1 DUP9 SWAP1 DUP15 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x1541 JUMPI PUSH2 0x1541 PUSH2 0x3B75 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155F SWAP3 SWAP2 SWAP1 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x158C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x159E DUP3 CALLVALUE PUSH2 0x3B62 JUMP JUMPDEST GT ISZERO PUSH2 0x15CA JUMPI CALLER PUSH2 0x8FC PUSH2 0x15B2 DUP4 CALLVALUE PUSH2 0x3B62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL POP POP POP POP POP JUMPDEST DUP2 PUSH1 0x1 ADD DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15E0 JUMPI PUSH2 0x15E0 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x15F0 JUMPI PUSH2 0x15F0 PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND SWAP9 POP POP POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xF23F16E6 SWAP2 DUP7 SWAP2 PUSH1 0x8 SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 LT PUSH2 0x167A JUMPI PUSH2 0x167A PUSH2 0x3B75 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1698 SWAP3 SWAP2 SWAP1 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16D9 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100 DUP2 GT ISZERO PUSH2 0x1774 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652074617820726174652063616E206F6E6C7920626520696E6372656173 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642062792061206D6178696D756D206F662032352500000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x5100AB374784A62034356F9AF3B71EA723C1E89BEB5627C6C1DACEA1117250B8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x17DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP3 SWAP1 SWAP2 PUSH2 0x17FF SWAP2 PUSH2 0x3B62 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x180F JUMPI PUSH2 0x180F PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x6 SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SLOAD SWAP1 SWAP3 POP PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x183D JUMPI POP PUSH1 0x1 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1853 JUMPI POP PUSH1 0x2 JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1868 JUMPI PUSH2 0x1868 PUSH2 0x36DF JUMP JUMPDEST SUB PUSH2 0x1884 JUMPI DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x187F JUMPI PUSH2 0x187F PUSH2 0x36DF JUMP JUMPDEST PUSH2 0x1886 JUMP JUMPDEST DUP2 JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 DUP6 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18C8 JUMPI PUSH2 0x18C8 PUSH2 0x36DF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP DUP4 SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1903 JUMPI PUSH2 0x1903 PUSH2 0x36DF JUMP JUMPDEST SUB PUSH2 0x19BB JUMPI DUP1 SLOAD PUSH32 0xFF00000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 SSTORE PUSH1 0x40 MLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH1 0x20 SWAP1 DUP2 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND SWAP2 PUSH32 0x8271992F9B3A3F30DC2A464982DC4A136E7357403462443A171A0FB0C6CCC265 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL POP POP POP POP POP POP JUMPDEST DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE DUP6 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xB0 SHL OR DUP7 SSTORE PUSH1 0x40 MLOAD DUP9 SWAP1 CALLER SWAP1 PUSH32 0x394027A5FA6E098A1191094D1719D6929B9ABC535FCC0C8F448D6A4E75622276 SWAP1 PUSH2 0x1A2B SWAP1 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xF7434EA9 SWAP2 PUSH1 0x8 SWAP2 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 LT PUSH2 0x1AAC JUMPI PUSH2 0x1AAC PUSH2 0x3B75 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AC9 SWAP2 SWAP1 PUSH2 0x3CC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B0A SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0x400 SWAP2 PUSH2 0x1B39 SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x20 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0x1B43 SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST SWAP1 POP PUSH2 0x1B4F DUP2 DUP4 PUSH2 0x3B4F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F722063616E20696E63726561736520626F756E747920 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6620616E2061727469636C652E000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST DUP1 SLOAD CALLVALUE PUSH1 0x20 SHR SWAP1 DUP3 SWAP1 PUSH1 0x18 SWAP1 PUSH2 0x1C18 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0x3CD4 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH7 0xFFFFFFFFFFFFFF DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE POP DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF DUP6 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP3 DIV PUSH1 0x20 SWAP1 DUP2 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND SWAP1 DUP4 ADD MSTORE PUSH32 0xDF5FC410D3381CC7F0A7FE3AF72F4E3CF53EF5787F20554AF69035A950E1B2E3 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1CAF SWAP1 PUSH1 0xFF AND PUSH1 0x1 PUSH2 0x3CF3 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x0 SUB PUSH2 0x1D01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207370616365206C65667420666F722061206E65772063617465676F7279 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x61606860EB6C87306811E2695215385101DAAB53BD6AB4E9F9049AEAD9363C7D SWAP1 PUSH2 0x1D3A SWAP1 DUP6 SWAP1 PUSH2 0x36CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x7 SLOAD DUP2 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x1D5D JUMPI PUSH2 0x1D5D PUSH2 0x3B75 JUMP JUMPDEST ADD SWAP1 PUSH2 0x1D69 SWAP1 DUP3 PUSH2 0x3D58 JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH2 0x1D7D DUP4 PUSH2 0x3E17 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 PUSH1 0x40 DUP2 LT PUSH2 0x1DAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x1DB9 SWAP1 PUSH2 0x3B8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DE5 SWAP1 PUSH2 0x3B8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E32 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E07 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E32 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E15 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAFE15CFB DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ECE SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x400 PUSH1 0x2 SLOAD DUP5 DUP5 PUSH2 0x1EE6 SWAP2 SWAP1 PUSH2 0x3B62 JUMP JUMPDEST PUSH2 0x1EF0 SWAP2 SWAP1 PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0x1EFA SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST PUSH2 0x1F04 SWAP1 DUP5 PUSH2 0x3B4F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F1A JUMPI PUSH2 0x1F1A PUSH2 0x36DF JUMP JUMPDEST PUSH2 0x1F23 DUP10 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F34 JUMPI PUSH2 0x1F34 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F45 JUMPI PUSH2 0x1F45 PUSH2 0x36DF JUMP JUMPDEST EQ SWAP1 POP DUP1 PUSH2 0x1F54 JUMPI DUP4 DUP3 PUSH2 0x1F57 JUMP JUMPDEST DUP4 DUP4 JUMPDEST SWAP6 POP SWAP6 POP POP POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2010 JUMPI PUSH1 0x0 JUMPDEST DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1F87 JUMPI PUSH2 0x1F87 PUSH2 0x3B75 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1F99 SWAP2 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x2007 JUMPI PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x1FB6 JUMPI PUSH2 0x1FB6 PUSH2 0x3B75 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1FC8 SWAP2 SWAP1 PUSH2 0x3E36 JUMP JUMPDEST DUP4 DUP2 DUP2 LT PUSH2 0x1FD8 JUMPI PUSH2 0x1FD8 PUSH2 0x3B75 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT ISZERO PUSH2 0x1FFF JUMPI PUSH2 0x1FFD DUP7 DUP7 DUP5 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x940 JUMPI PUSH2 0x940 PUSH2 0x36DF JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1F75 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1F6A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x204A JUMPI PUSH2 0x2041 DUP7 DUP7 DUP4 DUP8 PUSH2 0x2D2E JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x202D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C3DB16D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x1C3DB16D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1611 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST PUSH2 0x20E6 PUSH2 0x3498 JUMP JUMPDEST PUSH2 0x20EE PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x2114 JUMPI PUSH2 0x2114 PUSH2 0x3B75 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD DUP2 PUSH1 0x2 ADD DUP3 PUSH1 0x5 ADD SLOAD DUP3 PUSH1 0x3 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0x2189 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 SLOAD PUSH2 0x100 DUP4 SWAP1 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 PUSH1 0x1 SWAP3 DUP4 ADD DUP2 DUP2 DIV SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP4 SUB SWAP1 SWAP3 MUL SWAP2 ADD DUP1 DUP5 GT PUSH2 0x2158 JUMPI SWAP1 POP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP5 SWAP8 POP DUP7 SWAP4 POP PUSH1 0x3 SWAP3 POP SWAP1 POP DUP3 DUP5 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x21A6 JUMPI POP POP POP POP POP SWAP2 POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x21EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xC2515F25186DF02132AD46F01E062C3B8982C8DE57FA2B1B0A280D8E810F39B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x505F3BF1E426C82F14F7C9CFB2D31EF5B7BB76428E16BD90DABEC113E3D4A2BC SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x22B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x207E19E347BECB468EF02D25790188E4D5DA0FE37176D3BBB7940168EC5D6136 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP4 SWAP2 PUSH2 0x2306 SWAP2 PUSH2 0x3B62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x231F JUMPI PUSH2 0x231F PUSH2 0x3B75 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2343 JUMPI PUSH2 0x2343 PUSH2 0x36DF JUMP JUMPDEST PUSH2 0x234C DUP9 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x235D JUMPI PUSH2 0x235D PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x236E JUMPI PUSH2 0x236E PUSH2 0x36DF JUMP JUMPDEST EQ SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x2380 JUMPI PUSH1 0x5 SLOAD PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 ADD DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x239E JUMPI PUSH2 0x239E PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x23AE JUMPI PUSH2 0x23AE PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD DUP7 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF23F16E6 SWAP1 DUP13 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x2408 JUMPI PUSH2 0x2408 PUSH2 0x3B75 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2426 SWAP3 SWAP2 SWAP1 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2443 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2467 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x400 PUSH2 0x2478 DUP6 DUP5 PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0x2482 SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST PUSH2 0x248C SWAP1 DUP4 PUSH2 0x3B4F JUMP JUMPDEST SWAP1 POP PUSH2 0x2498 DUP4 DUP3 PUSH2 0x3B62 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDCCF2F8B2CC26EAFCD61905CBA744CFF4B81D14740725F6376390DC6298A6A3C DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x250D SWAP3 SWAP2 SWAP1 PUSH2 0x3EA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2599 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F722063616E20776974686472617720616E2061727469 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x31B63297 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 SUB PUSH2 0x261D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E65656420746F20696E697469617465207769746864726177616C20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x66697273742E0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST DUP1 SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x26A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E65656420746F207761697420666F722074696D656C6F636B206F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207761697420756E74696C20746865206368616C6C656E676520656E64732E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST DUP1 SLOAD PUSH32 0xFF0000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH1 0x20 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND SWAP1 CALLER SWAP1 PUSH2 0x8FC DUP4 ISZERO MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x270F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF DUP5 AND DUP2 MSTORE PUSH32 0x70B41D8CCA762CEEC66D93F536DBB31F5CABBF1901F862508B9438DE54FCE4EB SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x276F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x8DF75282265171690A1298CF028F5E3C7D8D42313394A4F25D4AEEA6C1EA62CF SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x27CE JUMPI PUSH1 0x0 SWAP3 POP POP PUSH2 0x1F60 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F8 JUMPI PUSH2 0x27F8 PUSH2 0x3565 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x282B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2816 JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2976 JUMPI PUSH2 0x2845 PUSH1 0x2 PUSH1 0x1 PUSH2 0x3B4F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x285D JUMPI PUSH2 0x285D PUSH2 0x3565 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2886 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2899 JUMPI PUSH2 0x2899 PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP5 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x28BB JUMPI PUSH2 0x28BB PUSH2 0x3B75 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 GT PUSH2 0x296C JUMPI PUSH1 0x0 PUSH2 0x28F5 DUP4 DUP12 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x28EF JUMPI PUSH2 0x28EF PUSH2 0x36DF JUMP JUMPDEST DUP9 PUSH2 0x327A JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2959 JUMPI PUSH2 0x2914 DUP4 DUP12 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x28EF JUMPI PUSH2 0x28EF PUSH2 0x36DF JUMP JUMPDEST PUSH2 0x291E SWAP1 DUP11 PUSH2 0x3B4F JUMP JUMPDEST SWAP9 POP DUP1 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2933 JUMPI PUSH2 0x2933 PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x294C JUMPI PUSH2 0x294C PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP DUP1 PUSH2 0x2964 DUP2 PUSH2 0x3EBD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x28CE JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x2831 JUMP JUMPDEST POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x299D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x8A3509A4057C89A5993A4A3140C2EBF7E829D325D8998EAA6C48ADCFF98B2CEF SWAP2 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2A0F JUMPI PUSH2 0x2A0F PUSH2 0x36DF JUMP JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2A21 JUMPI PUSH2 0x2A21 PUSH2 0x36DF JUMP JUMPDEST EQ SWAP1 POP PUSH2 0x3E8 PUSH1 0x0 DUP3 PUSH2 0x2A36 JUMPI PUSH1 0x5 SLOAD PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST SWAP1 POP PUSH2 0x2A48 PUSH2 0x400 DUP3 PUSH2 0x3B4F JUMP JUMPDEST DUP3 PUSH2 0x400 PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH2 0x2A5C SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST PUSH2 0x2A66 SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST PUSH2 0x2A70 SWAP2 SWAP1 PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0x2A7A SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP1 SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x8FC DUP5 ISZERO MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL POP POP PUSH1 0x40 MLOAD DUP5 SWAP4 POP PUSH32 0xB315332B30DC40D1E51DEF214CE42D93A73BD0C17B08DB04B34F10736BB2F06F SWAP3 POP PUSH1 0x0 SWAP2 POP LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2B05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP1 SWAP2 AND ISZERO OR SWAP1 SSTORE JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2B98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F722063616E20776974686472617720616E2061727469 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x31B63297 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x2C1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20616C726561647920696E69746961746564206F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74686572652069732061206368616C6C656E67652E0000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2C27 SWAP1 TIMESTAMP PUSH2 0x3B4F JUMP JUMPDEST DUP2 SLOAD PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH32 0x416C1AD2B96C356F3BBD35431F86CCE449DDBB4F8C3755EA9D2776B04C2E9C8F SWAP1 PUSH1 0x20 ADD PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2010 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 GT PUSH2 0x2CD6 JUMPI PUSH2 0x2CC3 DUP7 DUP7 DUP5 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x940 JUMPI PUSH2 0x940 PUSH2 0x36DF JUMP JUMPDEST POP DUP1 PUSH2 0x2CCE DUP2 PUSH2 0x3EBD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2CA3 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2C98 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2CFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xBF39FAA024D2F97599A0095E84098EE2171B6681738416C0030F442BA956D52B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206973206E6F2072756C696E67207965742E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x2DAB JUMPI PUSH2 0x2DAB PUSH2 0x3B75 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP PUSH2 0x2DD8 DUP2 DUP8 DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x327A JUMP JUMPDEST SWAP3 POP DUP3 ISZERO PUSH2 0x2E88 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2E0A JUMPI PUSH2 0x2E0A PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2E1A JUMPI PUSH2 0x2E1A PUSH2 0x3B75 JUMP JUMPDEST ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP9 PUSH32 0xFF2B7C936D6023FEA901B3455CEFC23B124C1CA5997DC5B48C461FD20984289D DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2E7F SWAP3 SWAP2 SWAP1 PUSH2 0x3CA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x48 PUSH1 0x0 DUP5 PUSH2 0x2EA4 DUP2 PUSH2 0x3ED6 JUMP JUMPDEST SWAP6 POP PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH9 0xFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF AND PUSH1 0x0 SUB PUSH2 0x2E96 JUMPI PUSH2 0x2EFF PUSH1 0x1 DUP5 PUSH2 0x3EFC JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F722063616E207472616E73666572206F776E65727368 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x69702E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD PUSH32 0xDFC39691AEC87DC6AA51FF70C0E592F260C54D2ED6C64E8C4C2306DA0EEC872B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF SWAP1 DUP2 AND SWAP1 DUP4 AND LT PUSH2 0x3063 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732063617465676F727920646F6573206E6F7420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x48 PUSH1 0x0 DUP4 PUSH2 0x3074 DUP2 PUSH2 0x3ED6 JUMP JUMPDEST SWAP5 POP PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH9 0xFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF AND PUSH1 0x0 SUB PUSH2 0x3066 JUMPI DUP1 SLOAD PUSH32 0xFF00000000000000FFFFFFFF0000000000000000000000000000000000000000 AND CALLER PUSH32 0xFF00000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND OR PUSH1 0x1 PUSH1 0xC0 SHL CALLVALUE PUSH1 0x20 SHR PUSH7 0xFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xF8 SHL PUSH1 0xFF DUP8 AND MUL OR DUP1 DUP5 SSTORE DIV AND PUSH2 0x31C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E277420696E697469616C697A6520616E2061727469636C6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x776974686F75742070757474696E67206120626F756E74792E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31D6 PUSH1 0x1 DUP5 PUSH2 0x3EFC JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH32 0x4F9A2B734331C583FAF3F19D1FEB5F08B742E016A56FB61379950BEAF3E22341 DUP7 DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3218 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP3 DIV PUSH1 0x20 SWAP1 DUP2 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND SWAP1 DUP4 ADD MSTORE PUSH32 0xDF5FC410D3381CC7F0A7FE3AF72F4E3CF53EF5787F20554AF69035A950E1B2E3 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 DUP7 ADD DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3293 JUMPI PUSH2 0x3293 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x32A3 JUMPI PUSH2 0x32A3 PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND PUSH2 0x3300 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x32E7 JUMPI PUSH2 0x32E7 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x32F7 JUMPI PUSH2 0x32F7 PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD SWAP2 POP PUSH2 0x348F JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3312 JUMPI PUSH2 0x3312 PUSH2 0x36DF JUMP JUMPDEST DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3324 JUMPI PUSH2 0x3324 PUSH2 0x36DF JUMP JUMPDEST SUB PUSH2 0x33E3 JUMPI PUSH1 0x0 DUP7 PUSH1 0x2 ADD DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3341 JUMPI PUSH2 0x3341 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3351 JUMPI PUSH2 0x3351 PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD GT PUSH2 0x335F JUMPI PUSH1 0x0 PUSH2 0x33DC JUMP JUMPDEST DUP6 PUSH1 0x2 ADD DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3375 JUMPI PUSH2 0x3375 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3385 JUMPI PUSH2 0x3385 PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP10 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33B6 JUMPI PUSH2 0x33B6 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x33C6 JUMPI PUSH2 0x33C6 PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD PUSH2 0x33D2 SWAP2 SWAP1 PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0x33DC SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST SWAP2 POP PUSH2 0x348F JUMP JUMPDEST DUP6 PUSH1 0x1 ADD DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33F9 JUMPI PUSH2 0x33F9 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3409 JUMPI PUSH2 0x3409 PUSH2 0x3B75 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND PUSH2 0x348F JUMPI PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x3 DUP8 ADD SLOAD PUSH2 0x3437 SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP10 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3466 JUMPI PUSH2 0x3466 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3476 JUMPI PUSH2 0x3476 PUSH2 0x3B75 JUMP JUMPDEST ADD SLOAD PUSH2 0x3482 SWAP2 SWAP1 PUSH2 0x3B16 JUMP JUMPDEST PUSH2 0x348C SWAP2 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x34CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D9 DUP3 PUSH2 0x34B6 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x34CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x3521 PUSH1 0x20 DUP5 ADD PUSH2 0x34EF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x353C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x3596 JUMPI PUSH2 0x3596 PUSH2 0x3565 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x35C5 JUMPI PUSH2 0x35C5 PUSH2 0x3565 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x35DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x361F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x3630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x363F DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x357B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x365C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x366D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x367C DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x357B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x36AC JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x3690 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16D9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3686 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3713 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 DUP2 ADD PUSH2 0x3734 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0xFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x34CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x378B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x379B PUSH1 0x20 DUP7 ADD PUSH2 0x375E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x37C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x37F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x3827 PUSH1 0x20 DUP6 ADD PUSH2 0x375E JUMP JUMPDEST SWAP2 POP PUSH2 0x3835 PUSH1 0x40 DUP6 ADD PUSH2 0x34EF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD DUP2 DUP6 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3868 JUMPI DUP2 MLOAD ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3847 JUMP JUMPDEST POP POP POP PUSH1 0x60 DUP3 ADD DUP5 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3892 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3873 JUMP JUMPDEST POP POP POP DUP3 PUSH1 0xC0 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D9 DUP3 PUSH2 0x375E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x38D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1F60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3915 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x393F DUP7 DUP3 DUP8 ADD PUSH2 0x38BE JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x395F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x3521 PUSH1 0x20 DUP5 ADD PUSH2 0x375E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD DUP5 DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE DUP1 DUP5 MLOAD DUP1 DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP7 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39F8 JUMPI DUP7 DUP6 SUB PUSH1 0x5F NOT ADD DUP5 MSTORE DUP2 MLOAD DUP1 MLOAD DUP1 DUP8 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP8 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39DF JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x39C1 JUMP JUMPDEST POP SWAP1 SWAP7 POP POP POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x399D JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A21 DUP4 PUSH2 0x34EF JUMP JUMPDEST SWAP2 POP PUSH2 0x3521 PUSH1 0x20 DUP5 ADD PUSH2 0x34EF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x3A55 PUSH1 0x20 DUP7 ADD PUSH2 0x375E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3A6A PUSH1 0x60 DUP7 ADD PUSH2 0x34EF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A91 DUP4 PUSH2 0x34B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3521 PUSH1 0x20 DUP5 ADD PUSH2 0x375E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3AB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3ACC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AD8 DUP8 DUP3 DUP9 ADD PUSH2 0x38BE JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3AF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH2 0x3A6A PUSH1 0x40 DUP7 ADD PUSH2 0x34B6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1611 JUMPI PUSH2 0x1611 PUSH2 0x3B00 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3B4A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1611 JUMPI PUSH2 0x1611 PUSH2 0x3B00 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1611 JUMPI PUSH2 0x1611 PUSH2 0x3B00 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3B9F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3BBF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3BD2 DUP2 PUSH2 0x3B8B JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x1 DUP3 AND DUP1 ISZERO PUSH2 0x3BEC JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3C08 JUMPI PUSH2 0x3C3F JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x20 DUP3 ISZERO ISZERO PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP PUSH2 0x3C3F JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C36 JUMPI DUP2 SLOAD PUSH1 0x20 DUP3 DUP11 ADD ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3C14 JUMP JUMPDEST DUP8 ADD PUSH1 0x20 ADD SWAP5 POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3C61 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3BC5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x3CB4 DUP3 DUP6 PUSH2 0x36F5 JUMP JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16D9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3BC5 JUMP JUMPDEST PUSH7 0xFFFFFFFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x1611 JUMPI PUSH2 0x1611 PUSH2 0x3B00 JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x1611 JUMPI PUSH2 0x1611 PUSH2 0x3B00 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3D53 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3D33 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2010 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3D3F JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D72 JUMPI PUSH2 0x3D72 PUSH2 0x3565 JUMP JUMPDEST PUSH2 0x3D86 DUP2 PUSH2 0x3D80 DUP5 SLOAD PUSH2 0x3B8B JUMP JUMPDEST DUP5 PUSH2 0x3D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3DBA JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x3DA2 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3DEA JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3DCA JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x3E08 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x3E2D JUMPI PUSH2 0x3E2D PUSH2 0x3B00 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x3E4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3E68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP PUSH1 0x5 DUP2 SWAP1 SHL CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x1F60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3C61 PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x3E80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x3ECF JUMPI PUSH2 0x3ECF PUSH2 0x3B00 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH9 0xFFFFFFFFFFFFFFFFFF DUP3 AND PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 SUB PUSH2 0x3E2D JUMPI PUSH2 0x3E2D PUSH2 0x3B00 JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x1611 JUMPI PUSH2 0x1611 PUSH2 0x3B00 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3F31 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x3E80 JUMP JUMPDEST PUSH1 0xFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 ADD MSTORE SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0xEB 0xEB 0xBC COINBASE DELEGATECALL DUP16 0xC1 PUSH25 0x9AF0980443B9FC46E3F37029FBCCD21E86AEF900428E366473 PUSH16 0x6C634300081A00330000000000000000 ","sourceMap":"1105:26127:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1364:32;;;;;;;;;;-1:-1:-1;1364:32:5;;;;;;;;;;;186:4:7;174:17;;;156:36;;144:2;129:18;1364:32:5;;;;;;;;6717:1433;;;;;;:::i;:::-;;:::i;:::-;;8187:3417;;;;;;:::i;:::-;;:::i;:::-;;;1227:14:7;;1220:22;1202:41;;1190:2;1175:18;8187:3417:5;1062:187:7;20876:278:5;;;;;;;;;;-1:-1:-1;20876:278:5;;;;;:::i;:::-;;:::i;:::-;;;1631:25:7;;;1619:2;1604:18;20876:278:5;1485:177:7;16347:300:5;;;;;;;;;;-1:-1:-1;16347:300:5;;;;;:::i;:::-;;:::i;691:31:4:-;;;;;;;;;;-1:-1:-1;691:31:4;;;;;;;-1:-1:-1;;;;;691:31:4;;;;;;-1:-1:-1;;;;;1847:55:7;;;1829:74;;1817:2;1802:18;691:31:4;1667:242:7;11797:1638:5;;;;;;;;;;-1:-1:-1;11797:1638:5;;;;;:::i;:::-;;:::i;728:30:4:-;;;;;;;;;;;;;;;;20341:498:5;;;;;;;;;;-1:-1:-1;20341:498:5;;;;;:::i;:::-;;:::i;2627:48::-;;;;;;;;;;-1:-1:-1;2627:48:5;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2627:48:5;;;-1:-1:-1;;;2627:48:5;;;;;-1:-1:-1;;;2627:48:5;;;;;-1:-1:-1;;;2627:48:5;;;;;;;;;;-1:-1:-1;;;;;2522:55:7;;;2504:74;;2626:10;2614:23;;;2609:2;2594:18;;2587:51;2686:16;2674:29;;;2654:18;;;2647:57;;;;2752:4;2740:17;2735:2;2720:18;;2713:45;2491:3;2476:19;2627:48:5;2265:499:7;4638:552:5;;;;;;:::i;:::-;;:::i;19562:358::-;;;;;;;;;;-1:-1:-1;19562:358:5;;;;;:::i;:::-;;:::i;2574:46::-;;;;;;;;;;-1:-1:-1;2574:46:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2802:47::-;;;;;;;;;;-1:-1:-1;2802:47:5;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2802:47:5;;;;-1:-1:-1;;;2802:47:5;;;;;-1:-1:-1;;;2802:47:5;;;;;-1:-1:-1;;;2802:47:5;;;;;-1:-1:-1;;;2802:47:5;;;;;;;;;;;;;;;;;:::i;25152:624::-;;;;;;;;;;-1:-1:-1;25152:624:5;;;;;:::i;:::-;;:::i;:::-;;;;6390:25:7;;;6446:2;6431:18;;6424:34;;;;6363:18;25152:624:5;6216:248:7;14569:598:5;;;;;;;;;;-1:-1:-1;14569:598:5;;;;;:::i;:::-;;:::i;14073:459::-;;;;;;;;;;-1:-1:-1;14073:459:5;;;;;:::i;:::-;;:::i;1168:39::-;;;;;;;;;;;;;;;764:52:4;;;;;;;;;;;;815:1;764:52;;24968:147:5;;;;;;;;;;-1:-1:-1;24968:147:5;;;;;:::i;:::-;;:::i;24447:484::-;;;;;;;;;;-1:-1:-1;24447:484:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;17641:138::-;;;;;;;;;;-1:-1:-1;17641:138:5;;;;;:::i;:::-;;:::i;18486:231::-;;;;;;;;;;-1:-1:-1;18486:231:5;;;;;:::i;:::-;;:::i;19065:261::-;;;;;;;;;;-1:-1:-1;19065:261:5;;;;;:::i;:::-;;:::i;26378:852::-;;;;;;;;;;-1:-1:-1;26378:852:5;;;;;:::i;:::-;;:::i;4429:172::-;;;;;;;;;;-1:-1:-1;4429:172:5;;;;;:::i;:::-;;:::i;5768:912::-;;;;;;;;;;-1:-1:-1;5768:912:5;;;;;:::i;:::-;;:::i;18212:237::-;;;;;;;;;;-1:-1:-1;18212:237:5;;;;;:::i;:::-;;:::i;21529:1296::-;;;;;;;;;;-1:-1:-1;21529:1296:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;18019:156::-;;;;;;;;;;-1:-1:-1;18019:156:5;;;;;:::i;:::-;;:::i;1418:37:4:-;;;;;;;;;;;;;;;;25813:528:5;;;;;;;;;;-1:-1:-1;25813:528:5;;;;;:::i;:::-;;:::i;17054:197::-;;;;;;;;;;;;;:::i;17288:117::-;;;;;;;;;;;;;:::i;5227:504::-;;;;;;;;;;-1:-1:-1;5227:504:5;;;;;:::i;:::-;;:::i;913:51:4:-;;;;;;;;;;;;;;;;13472:564:5;;;;;;;;;;-1:-1:-1;13472:564:5;;;;;:::i;:::-;;:::i;18754:274::-;;;;;;;;;;-1:-1:-1;18754:274:5;;;;;:::i;:::-;;:::i;1162:42:4:-;;;;;;;;;;;;;;;;1213:71:5;;;;;;;;;;;;1282:2;1213:71;;15204:787;;;;;;;;;;-1:-1:-1;15204:787:5;;;;;:::i;:::-;;:::i;21191:301::-;;;;;;;;;;-1:-1:-1;21191:301:5;;;;;:::i;:::-;;:::i;1267:38:4:-;;;;;;;;;;;;;;;;19957:347:5;;;;;;;;;;-1:-1:-1;19957:347:5;;;;;:::i;:::-;;:::i;1403:50::-;;;;;;;;;;-1:-1:-1;1403:50:5;;;;;;;-1:-1:-1;;;;;1403:50:5;;;3429:963;;;;;;:::i;:::-;;:::i;1567:36:4:-;;;;;;;;;;;;;;;;822:53;;;;;;;;;;;;871:4;822:53;;519:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6717:1433:5;6829:38;;;6803:23;6829:38;;;:14;:38;;;;;6885:20;;-1:-1:-1;;;6885:20:5;;;;6877:58;;;;-1:-1:-1;;;6877:58:5;;14089:2:7;6877:58:5;;;14071:21:7;14128:2;14108:18;;;14101:30;14167:23;14147:18;;;14140:51;14208:18;;6877:58:5;;;;;;;;;6953:29;;-1:-1:-1;;;;;6953:29:5;;;6986:16;6953:29;:49;6945:92;;;;-1:-1:-1;;;6945:92:5;;14439:2:7;6945:92:5;;;14421:21:7;14478:2;14458:18;;;14451:30;14517:32;14497:18;;;14490:60;14567:18;;6945:92:5;14237:354:7;6945:92:5;7047:48;;-1:-1:-1;;;;7047:48:5;;;;;7158:36;7171:22;7158:12;:36::i;:::-;7145:9;:49;;7137:94;;;;-1:-1:-1;;;7137:94:5;;14798:2:7;7137:94:5;;;14780:21:7;;;14817:18;;;14810:30;14876:34;14856:18;;;14849:62;14928:18;;7137:94:5;14596:356:7;7137:94:5;7354:16;;7271:20;;7242:17;;871:4:4;;7263:107:5;;7354:16;-1:-1:-1;;;7271:20:5;;1282:2;7264:74;;;7263:107;:::i;:::-;7262:134;;;;:::i;:::-;7242:154;;7425:9;7406:15;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;7445:17:5;;-1:-1:-1;;;;;;7465:10:5;:24;;7497:21;7509:9;7497;:21;:::i;:::-;7601:16;;815:1:4;;7571:29:5;;-1:-1:-1;;;7601:16:5;;;;7571:47;;;;;;;:::i;:::-;;7465:163;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7639:19;;;;:8;:19;;;;;;;;;:52;;;7701:26;;;:33;;;;;;;7744:74;;7680:10;7744:74;;;-1:-1:-1;;;7744:74:5;;;;;;;;7866:16;;7828:54;;;;-1:-1:-1;;;7866:16:5;;;;;;;;-1:-1:-1;;;7828:54:5;;;;;;;;7973:16;;7942:59;;7973:16;;;;;;18065:36:7;;18117:18;;;18110:34;;;7639:19:5;;-1:-1:-1;7639:19:5;;-1:-1:-1;;;;;7950:10:5;7942:59;;;;18038:18:7;7942:59:5;;;;;;;8087:56;;;8121:10;18329:74:7;;18434:2;18419:18;;18412:34;;;8087:56:5;;;;;;18302:18:7;8087:56:5;;;;;;;6793:1357;;;6717:1433;:::o;8187:3417::-;8326:16;8388:20;;;:8;:20;;;;;;8463:36;;-1:-1:-1;;;8463:36:5;;;;;1631:25:7;;;8326:16:5;;8463:10;-1:-1:-1;;;;;8463:24:5;;;;1604:18:7;;8463:36:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8449:51;;;;;;;;:::i;:::-;8419:81;;8510:17;8537;8579:25;8606:23;8633:10;-1:-1:-1;;;;;8633:23:5;;8657:10;8633:35;;;;;;;;;;;;;1631:25:7;;1619:2;1604:18;;1485:177;8633:35:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8578:90;;;;8683:18;8740:13;8720:33;;;;;;;;:::i;:::-;:16;:33;;;;;;;;:::i;:::-;;8716:663;;8799:15;8781;:33;8773:92;;;;-1:-1:-1;;;8773:92:5;;19007:2:7;8773:92:5;;;18989:21:7;19046:2;19026:18;;;19019:30;19085:34;19065:18;;;19058:62;19156:16;19136:18;;;19129:44;19190:19;;8773:92:5;18805:410:7;8773:92:5;-1:-1:-1;8897:23:5;;8716:663;;;9121:30;;871:4:4;;9082:35:5;9100:17;9082:15;:35;:::i;:::-;9081:70;;;;:::i;:::-;9080:129;;;;:::i;:::-;9031:179;;:17;:179;:::i;:::-;8988:15;:223;8959:351;;;;-1:-1:-1;;;8959:351:5;;19422:2:7;8959:351:5;;;19404:21:7;19461:2;19441:18;;;19434:30;19500:34;19480:18;;;19473:62;19571:27;19551:18;;;19544:55;19616:19;;8959:351:5;19220:421:7;8959:351:5;-1:-1:-1;9342:22:5;;8716:663;9469:23;;9405:10;-1:-1:-1;;;;;9405:21:5;;;;9427:10;;9439:29;;-1:-1:-1;;;9469:23:5;;;;9439:54;;;;;;;:::i;:::-;;9405:89;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9393:101;-1:-1:-1;871:4:4;9534:24:5;9547:10;9393:101;9534:24;:::i;:::-;9533:51;;;;:::i;:::-;9520:65;;:9;:65;:::i;:::-;9736:1;9712:14;;;:21;9508:77;;-1:-1:-1;9659:16:5;;-1:-1:-1;9606:36:5;;-1:-1:-1;9712:25:5;;-1:-1:-1;9736:1:5;9712:25;:::i;:::-;9687:50;;9747:23;9773:7;:14;;9788;9773:30;;;;;;;;:::i;:::-;;;;;;;;;;;9747:56;;9822:9;:17;;9848:22;9840:31;;;;;;;;:::i;:::-;9822:50;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;9821:51;9813:97;;;;-1:-1:-1;;;9813:97:5;;19848:2:7;9813:97:5;;;19830:21:7;19887:2;19867:18;;;19860:30;19926:34;19906:18;;;19899:62;19997:3;19977:18;;;19970:31;20018:19;;9813:97:5;19646:397:7;9813:97:5;9921:20;9965:17;9985:9;:24;;10018:22;10010:31;;;;;;;;:::i;:::-;9985:57;;;;;;;:::i;:::-;;;9965:77;;10074:9;10061;:22;10057:293;;10118:1;10103:16;;10057:293;;;10290:9;10266:21;10278:9;10266;:21;:::i;:::-;:33;:69;;10314:21;10326:9;10314;:21;:::i;:::-;10266:69;;;10302:9;10266:69;10251:84;;10057:293;9951:409;10434:10;-1:-1:-1;;;;;10375:84:5;10400:14;10388:10;10375:84;10416:16;10446:12;10375:84;;;;;;;:::i;:::-;;;;;;;;10494:10;10470:23;:35;;;;;;;;;;10542:12;;10514:22;10506:31;;;;;;;;:::i;:::-;10470:68;;;;;;;:::i;:::-;;;:84;;;;;;;:::i;:::-;;;;;;;;10625:12;10564:9;:24;;10597:22;10589:31;;;;;;;;:::i;:::-;10564:57;;;;;;;:::i;:::-;;;:73;;;;;;;:::i;:::-;;;;;;;;10713:9;10652;:24;;10685:22;10677:31;;;;;;;;:::i;:::-;10652:57;;;;;;;:::i;:::-;;;:70;10648:347;;10779:9;:24;;10812:22;10804:31;;;;;;;;:::i;:::-;10779:57;;;;;;;:::i;:::-;;;10738:9;:37;;;:98;;;;;;;:::i;:::-;;;;-1:-1:-1;10903:4:5;;-1:-1:-1;10850:17:5;;;10876:22;10868:31;;;;;;;;:::i;:::-;10850:50;;;;;;;:::i;:::-;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;10967:16;10926:58;;;;;;;;:::i;:::-;;;10951:14;;10939:10;;10926:58;;;;;10648:347;11022:17;;;:57;;;;;;:123;;;;-1:-1:-1;11095:17:5;;;:50;;;;;;11022:123;11005:378;;;11170:14;;;;:21;;;;;;;-1:-1:-1;11170:21:5;;;11205:37;;;:50;;11246:9;;-1:-1:-1;11205:50:5;;11246:9;;11205:50;:::i;:::-;;;;-1:-1:-1;;11347:23:5;;11269:10;-1:-1:-1;;;;;11269:17:5;;;;11294:9;;11305:10;;11317:29;;-1:-1:-1;;;11347:23:5;;;;11317:54;;;;;;;:::i;:::-;;11269:103;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11005:378;11476:1;11449:24;11461:12;11449:9;:24;:::i;:::-;:28;11445:84;;;11487:10;11479:50;11504:24;11516:12;11504:9;:24;:::i;:::-;11479:50;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11445:84:5;11547:9;:17;;11573:22;11565:31;;;;;;;;:::i;:::-;11547:50;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;8187:3417:5;;;;;:::o;20876:278::-;20947:22;21011:20;;;:8;:20;;;;;;21122:23;;21011:20;;21058:10;-1:-1:-1;;;;;21058:21:5;;;;21011:20;;21092:29;;-1:-1:-1;;;21122:23:5;;;;;;21092:54;;;;;;:::i;:::-;;21058:89;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21041:106;20876:278;-1:-1:-1;;;20876:278:5:o;16347:300::-;1513:5;;;;;-1:-1:-1;;;;;1513:5:5;1499:10;:19;1491:28;;;;;;16470:3:::1;16446:20;:27;;16438:94;;;::::0;-1:-1:-1;;;16438:94:5;;20541:2:7;16438:94:5::1;::::0;::::1;20523:21:7::0;20580:2;20560:18;;;20553:30;20619:34;20599:18;;;20592:62;20690:24;20670:18;;;20663:52;20732:19;;16438:94:5::1;20339:418:7::0;16438:94:5::1;16542:16;:39:::0;;;16596:44:::1;::::0;16561:20;;16596:44:::1;::::0;;;::::1;16347:300:::0;:::o;11797:1638::-;11896:10;-1:-1:-1;;;;;11911:10:5;11884:37;;11876:46;;;;;;11933:27;11963:20;;;:8;:20;;;;;12019:14;;;;12034:21;;11963:20;;11933:27;12019:14;;12034:25;;;:::i;:::-;12019:41;;;;;;;;:::i;:::-;;;;;;;;12278:17;12019:41;;;;;;12278:17;;;:57;12019:41;;-1:-1:-1;12278:57:5;;;;;12274:263;;;-1:-1:-1;12366:29:5;12274:263;;;12416:17;;;:57;;;;;;12412:125;;;-1:-1:-1;12504:22:5;12412:125;12547:26;;12576:12;:34;;;;;;;;:::i;:::-;;:74;;12642:7;12628:22;;;;;;;;:::i;:::-;12576:74;;;12613:12;12576:74;12660:30;;12547:103;;-1:-1:-1;12547:103:5;;12660:7;;:30;;-1:-1:-1;;;12547:103:5;12660:30;;;;;;;;:::i;:::-;;;;;-1:-1:-1;12732:29:5;;-1:-1:-1;;;12732:29:5;;;;12701:28;12798:37;;;:14;:37;;;;;12866:22;12850:12;:38;;;;;;;;:::i;:::-;;12846:363;;12928:20;;13009:24;;;;;13053:31;;20937:20:7;20925:33;;20907:52;;-1:-1:-1;;;12928:20:5;;;1282:2;12921:74;;;;;;13053:31;;20880:18:7;13053:31:5;;;;;;;13098:20;;;;:8;:20;;;;;;:31;:44;;-1:-1:-1;;;;;13098:31:5;;;;:44;;;;;13135:6;;13098:44;:20;:44;13135:6;13098:31;:44;;-1:-1:-1;;;;;;12846:363:5;13261:33;;-1:-1:-1;;;;13261:33:5;;;13337:23;;;;-1:-1:-1;;;13337:23:5;;;13376:52;;13408:10;;13395;;13376:52;;;;13420:7;1631:25:7;;1619:2;1604:18;;1485:177;13376:52:5;;;;;;;;11866:1569;;;;;;11797:1638;;:::o;20341:498::-;20469:38;;;20424:7;20469:38;;;:14;:38;;;;;;20600:16;;20469:38;;20424:7;;20543:10;-1:-1:-1;;;;;20543:26:5;;;;20570:29;;-1:-1:-1;;;20600:16:5;;;;;;20570:47;;;;;;:::i;:::-;;20543:75;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20743:16;;20660:20;;20518:100;;-1:-1:-1;20628:20:5;;871:4:4;;20652:107:5;;-1:-1:-1;;;20660:20:5;;1282:2;20653:74;;;20652:107;:::i;:::-;20651:134;;;;:::i;:::-;20628:157;-1:-1:-1;20803:29:5;20628:157;20803:14;:29;:::i;:::-;20796:36;20341:498;-1:-1:-1;;;;;20341:498:5:o;4638:552::-;4755:38;;;4729:23;4755:38;;;:14;:38;;;;;4825:13;;-1:-1:-1;;;;;4825:13:5;4811:10;:27;4803:86;;;;-1:-1:-1;;;4803:86:5;;21399:2:7;4803:86:5;;;21381:21:7;21438:2;21418:18;;;21411:30;21477:34;21457:18;;;21450:62;21548:16;21528:18;;;21521:44;21582:19;;4803:86:5;21197:410:7;4803:86:5;4932:87;;4963:9;1282:2;4963:55;;4932:87;;:20;;:87;;4963:55;;-1:-1:-1;;;4932:87:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5106:20:5;;5035:148;;;22005:20:7;21993:33;;21975:52;;-1:-1:-1;;;5106:20:5;;;1282:2;5098:75;;;;;22043:18:7;;;22036:34;5035:148:5;;21948:18:7;5035:148:5;;;;;;;;4719:471;4638:552;:::o;19562:358::-;19679:15;;:19;;:15;;;:19;:::i;:::-;:24;;19702:1;19679:24;19671:69;;;;-1:-1:-1;;;19671:69:5;;22436:2:7;19671:69:5;;;22418:21:7;;;22455:18;;;22448:30;22514:34;22494:18;;;22487:62;22566:18;;19671:69:5;22234:356:7;19671:69:5;19768:15;;19755:51;;19768:15;;;;;19755:51;;;;19785:20;;19755:51;:::i;:::-;;;;;;;;19846:15;;19865:20;;19816:29;;19846:15;;19816:46;;;;;;;:::i;:::-;;;:69;;:46;:69;:::i;:::-;-1:-1:-1;19896:15:5;:17;;;;;:15;:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;19562:358;;:::o;2574:46::-;;;;;;;;;;;;;;;;;-1:-1:-1;2574:46:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;25152:624::-;25284:7;25293;25317:25;25344:23;25371:10;-1:-1:-1;;;;;25371:23:5;;25395:10;25371:35;;;;;;;;;;;;;1631:25:7;;1619:2;1604:18;;1485:177;25371:35:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25316:90;;;;25416:28;871:4:4;25521:30:5;;25500:17;25482:15;:35;;;;:::i;:::-;25481:70;;;;:::i;:::-;25480:97;;;;:::i;:::-;25447:131;;:17;:131;:::i;:::-;25416:162;;25589:13;25654:7;25605:56;;;;;;;;:::i;:::-;25619:30;25638:10;25619:18;:30::i;:::-;25605:45;;;;;;;;:::i;:::-;:56;;;;;;;;:::i;:::-;;25589:72;;25678:8;:91;;25729:17;25748:20;25678:91;;;25690:17;25709:15;25678:91;25671:98;;;;;;;;25152:624;;;;;;:::o;14569:598::-;14763:19;14758:403;14788:30;;;14758:403;;;14854:20;14849:302;14895:9;;14905:11;14895:22;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;14880:12;:44;14849:302;;;15003:1;14964:9;;14974:11;14964:22;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;14987:12;14964:36;;;;;;;:::i;:::-;;;;;;;:40;14960:177;;;15028:90;15051:10;15063:12;15077:11;15104:12;15090:27;;;;;;;;:::i;15028:90::-;;14960:177;14926:14;;14849:302;;;-1:-1:-1;14820:13:5;;14758:403;;;;14569:598;;;;:::o;14073:459::-;14248:27;14278:20;;;:8;:20;;;;;14329:14;;;:21;14278:20;;14360:166;14404:10;14390:11;:24;14360:166;;;14445:70;14468:10;14480:12;14494:11;14507:7;14445:22;:70::i;:::-;-1:-1:-1;14416:13:5;;14360:166;;;;14238:294;;14073:459;;;:::o;24968:147::-;25072:36;;-1:-1:-1;;;25072:36:5;;;;;1631:25:7;;;25046:7:5;;25072:10;-1:-1:-1;;;;;25072:24:5;;;;1604:18:7;;25072:36:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;24447:484::-;24582:49;;:::i;:::-;24645:59;;:::i;:::-;24718:35;24800:20;;;:8;:20;;;;;:27;;:35;;24718;;24800:27;24828:6;;24800:35;;;;;;:::i;:::-;;;;;;;;;;;24778:57;;24853:5;:13;;24868:5;:20;;24890:5;:33;;;24845:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24845:79:5;;;;;;;;;;;;-1:-1:-1;24845:79:5;;-1:-1:-1;24845:79:5;;-1:-1:-1;24845:79:5;-1:-1:-1;24845:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24447:484;;;;;:::o;17641:138::-;1513:5;;;;;-1:-1:-1;;;;;1513:5:5;1499:10;:19;1491:28;;;;;;17718:5:::1;:17:::0;;-1:-1:-1;;17718:17:5::1;;-1:-1:-1::0;;;;;17718:17:5;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;17750:22:::1;::::0;::::1;::::0;-1:-1:-1;;17750:22:5::1;17641:138:::0;:::o;18486:231::-;1513:5;;;;;-1:-1:-1;;;;;1513:5:5;1499:10;:19;1491:28;;;;;;18594:22:::1;:49:::0;;;18658:52:::1;::::0;18619:24;;18658:52:::1;::::0;;;::::1;18486:231:::0;:::o;19065:261::-;1513:5;;;;;-1:-1:-1;;;;;1513:5:5;1499:10;:19;1491:28;;;;;;19183:27:::1;:59:::0;;;19257:62:::1;::::0;19213:29;;19257:62:::1;::::0;;;::::1;19065:261:::0;:::o;26378:852::-;26521:7;26574:20;;;:8;:20;;;;;26653:1;26629:14;;;:21;26521:7;;26629:25;;;:::i;:::-;26604:50;;26664:23;26690:7;:14;;26705;26690:30;;;;;;;;:::i;:::-;;;;;;;;;;;26664:56;;26731:13;26796:7;26747:56;;;;;;;;:::i;:::-;26761:30;26780:10;26761:18;:30::i;:::-;26747:45;;;;;;;;:::i;:::-;:56;;;;;;;;:::i;:::-;;26731:72;;26813:18;26834:8;:59;;26871:22;;26834:59;;;26845:23;;26834:59;26813:80;;26904:19;26926:9;:24;;26959:7;26951:16;;;;;;;;:::i;:::-;26926:42;;;;;;;:::i;:::-;;;27062:23;;26926:42;;-1:-1:-1;26978:17:5;;26998:10;-1:-1:-1;;;;;26998:21:5;;;;27020:10;;27032:29;;-1:-1:-1;;;27062:23:5;;;;27032:54;;;;;;;:::i;:::-;;26998:89;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26978:109;-1:-1:-1;27097:17:5;871:4:4;27131:24:5;27144:10;26978:109;27131:24;:::i;:::-;27130:51;;;;:::i;:::-;27117:65;;:9;:65;:::i;:::-;27097:85;-1:-1:-1;27200:23:5;27212:11;27097:85;27200:23;:::i;:::-;27193:30;26378:852;-1:-1:-1;;;;;;;;;;;26378:852:5:o;4429:172::-;4569:10;-1:-1:-1;;;;;4536:58:5;4557:10;4545;-1:-1:-1;;;;;4536:58:5;;4581:12;;4536:58;;;;;;;:::i;:::-;;;;;;;;4429:172;;;:::o;5768:912::-;5871:38;;;5845:23;5871:38;;;:14;:38;;;;;5942:13;;-1:-1:-1;;;;;5942:13:5;5928:10;:27;5920:76;;;;-1:-1:-1;;;5920:76:5;;26044:2:7;5920:76:5;;;26026:21:7;26083:2;26063:18;;;26056:30;26122:34;26102:18;;;26095:62;-1:-1:-1;;;26173:18:7;;;26166:34;26217:19;;5920:76:5;25842:400:7;5920:76:5;6014:29;;-1:-1:-1;;;6014:29:5;;;;;:34;6006:85;;;;-1:-1:-1;;;6006:85:5;;26449:2:7;6006:85:5;;;26431:21:7;26488:2;26468:18;;;26461:30;26527:34;26507:18;;;26500:62;26598:8;26578:18;;;26571:36;26624:19;;6006:85:5;26247:402:7;6006:85:5;6122:29;;6155:15;-1:-1:-1;;;6122:29:5;;;;;:48;;6101:158;;;;-1:-1:-1;;;6101:158:5;;26856:2:7;6101:158:5;;;26838:21:7;26895:2;26875:18;;;26868:30;26934:34;26914:18;;;26907:62;27005:33;26985:18;;;26978:61;27056:19;;6101:158:5;26654:427:7;6101:158:5;6298:20;;6447:33;;;;;6578:40;;-1:-1:-1;;;6298:20:5;;;1282:2;6291:74;;;;6586:10;;6578:40;;;;;6291:74;;-1:-1:-1;6578:40:5;-1:-1:-1;6578:40:5;6291:74;6586:10;6578:40;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6633:40:5;;20937:20:7;20925:33;;20907:52;;6633:40:5;;20895:2:7;20880:18;6633:40:5;;;;;;;5835:845;;5768:912;:::o;18212:237::-;1513:5;;;;;-1:-1:-1;;;;;1513:5:5;1499:10;:19;1491:28;;;;;;18322:23:::1;:51:::0;;;18388:54:::1;::::0;18348:25;;18388:54:::1;::::0;;;::::1;18212:237:::0;:::o;21529:1296::-;21679:11;21764:20;;;:8;:20;;;;;21799:16;;21692:26;;21764:20;-1:-1:-1;;;21799:16:5;;;;21794:51;;21833:1;21817:28;;;;;21794:51;21876:14;;;:21;21935:15;;-1:-1:-1;;;21935:15:5;;;;21876:21;21971:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21961:37;;22013:19;22008:811;22052:10;22038:11;:24;22008:811;;;22130:28;815:1:4;22157::5;22130:28;:::i;:::-;22116:43;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22116:43:5;;22093:7;22101:11;22093:20;;;;;;;;:::i;:::-;;;;;;:66;;;;22174:19;22196:7;:14;;22211:11;22196:27;;;;;;;;:::i;:::-;;;;;;;;;;;22174:49;;22242:20;22237:572;815:1:4;22268:12:5;:40;22237:572;;22344:21;22368:182;22411:5;22438:12;22486;22472:27;;;;;;;;:::i;:::-;22521:11;22368:21;:182::i;:::-;22344:206;-1:-1:-1;22572:17:5;;22568:227;;22620:84;22642:5;22649:12;22677;22663:27;;;;;;;;:::i;22620:84::-;22613:91;;;;:::i;:::-;;;22763:13;22726:7;22734:11;22726:20;;;;;;;;:::i;:::-;;;;;;;22747:12;22726:34;;;;;;;;:::i;:::-;;;;;;:50;;;;;22568:227;-1:-1:-1;22310:14:5;;;;:::i;:::-;;;;22237:572;;;-1:-1:-1;;22064:13:5;;22008:811;;;;21724:1101;;;21529:1296;;;;;:::o;18019:156::-;1513:5;;;;;-1:-1:-1;;;;;1513:5:5;1499:10;:19;1491:28;;;;;;18102:8:::1;:23:::0;;-1:-1:-1;;18102:23:5::1;;-1:-1:-1::0;;;;;18102:23:5;::::1;::::0;;::::1;::::0;;;::::1;::::0;;18140:28:::1;::::0;18102:23;;18140:28:::1;::::0;::::1;18019:156:::0;:::o;25813:528::-;25968:7;25991:13;26027:7;26007:27;;;;;;;;:::i;:::-;:16;:27;;;;;;;;:::i;:::-;;;-1:-1:-1;26072:4:5;26044:25;26007:27;26107:59;;26144:22;;26107:59;;;26118:23;;26107:59;26086:80;-1:-1:-1;26297:35:5;871:4:4;26086:80:5;26297:35;:::i;:::-;26263:17;871:4:4;26212:22:5;;26186:23;;:48;;;;:::i;:::-;:73;;;;:::i;:::-;26185:95;;;;:::i;:::-;26184:149;;;;:::i;:::-;26176:158;25813:528;-1:-1:-1;;;;;;25813:528:5:o;17054:197::-;17125:15;;;17108:14;17150:19;;;;17179:8;;:21;;17125:15;;17179:8;;;;-1:-1:-1;;;;;17179:8:5;;:21;;;;;17125:15;;17179:21;;17108:14;17179:21;17125:15;17179:8;:21;;-1:-1:-1;;17215:29:5;;17237:6;;-1:-1:-1;17215:29:5;;-1:-1:-1;17215:29:5;;-1:-1:-1;17215:29:5;17098:153;17054:197::o;17288:117::-;1513:5;;;;;-1:-1:-1;;;;;1513:5:5;1499:10;:19;1491:28;;;;;;17379:19:::1;::::0;;-1:-1:-1;;17356:42:5;::::1;17379:19;::::0;;::::1;17378:20;17356:42;::::0;;17288:117::o;5227:504::-;5340:38;;;5314:23;5340:38;;;:14;:38;;;;;5410:13;;-1:-1:-1;;;;;5410:13:5;5396:10;:27;5388:76;;;;-1:-1:-1;;;5388:76:5;;26044:2:7;5388:76:5;;;26026:21:7;26083:2;26063:18;;;26056:30;26122:34;26102:18;;;26095:62;-1:-1:-1;;;26173:18:7;;;26166:34;26217:19;;5388:76:5;25842:400:7;5388:76:5;5482:29;;-1:-1:-1;;;5482:29:5;;;;:34;5474:100;;;;-1:-1:-1;;;5474:100:5;;27428:2:7;5474:100:5;;;27410:21:7;27467:2;27447:18;;;27440:30;27506:34;27486:18;;;27479:62;27577:23;27557:18;;;27550:51;27618:19;;5474:100:5;27226:417:7;5474:100:5;5642:27;;5624:45;;:15;:45;:::i;:::-;5585:85;;;;;;;-1:-1:-1;;;5585:85:5;-1:-1:-1;;;;5585:85:5;;;;;;5685:39;;20937:20:7;20925:33;;20907:52;;5685:39:5;;20895:2:7;20880:18;5685:39:5;20762:203:7;13472:564:5;13627:27;13657:20;;;:8;:20;;;;;13708:14;;;:21;13657:20;;13739:291;13783:10;13769:11;:24;13739:291;;;13829:20;13824:195;815:1:4;13855:12:5;:40;13824:195;;13929:90;13952:10;13964:12;13978:11;14005:12;13991:27;;;;;;;;:::i;13929:90::-;-1:-1:-1;13897:14:5;;;;:::i;:::-;;;;13824:195;;;-1:-1:-1;13795:13:5;;13739:291;;18754:274;1513:5;;;;;-1:-1:-1;;;;;1513:5:5;1499:10;:19;1491:28;;;;;;18876:30:::1;:64:::0;;;18955:66:::1;::::0;18909:31;;18955:66:::1;::::0;;;::::1;18754:274:::0;:::o;15204:787::-;15394:14;15450:20;;;:8;:20;;;;;15488:16;;-1:-1:-1;;;15488:16:5;;;;15480:52;;;;-1:-1:-1;;;15480:52:5;;27850:2:7;15480:52:5;;;27832:21:7;27889:2;27869:18;;;27862:30;27928:25;27908:18;;;27901:53;27971:18;;15480:52:5;27648:347:7;15480:52:5;15543:19;15565:7;:14;;15580:12;15565:28;;;;;;;;:::i;:::-;;;;;;;;;;;15543:50;;15613:68;15635:5;15642:12;15656:7;15665;:15;;;;;;;;;;;;15613:21;:68::i;:::-;15604:77;-1:-1:-1;15696:11:5;;15692:293;;-1:-1:-1;;;;;15723:33:5;;15792:1;15723:33;;;;;;;;;;15779:7;15757:31;;;;;;;;:::i;:::-;15723:66;;;;;;;:::i;:::-;;:70;15807:25;;-1:-1:-1;;;;;15807:17:5;;;:25;;;;;15825:6;;15807:25;;;;15825:6;15807:17;:25;;;;;;;;15953:12;-1:-1:-1;;;;;15907:67:5;15930:12;15918:10;15907:67;15944:7;15967:6;15907:67;;;;;;;:::i;:::-;;;;;;;;15692:293;15410:581;;15204:787;;;;;;:::o;21191:301::-;21277:23;21312;21345:105;21372:14;:32;21387:16;;;;:::i;:::-;;;21372:32;;;;;;;;;;;;;;;21362:42;;21423:7;:20;;;;;;;;;;;;:25;;21447:1;21423:25;21345:105;;21467:18;21484:1;21467:14;:18;:::i;:::-;21460:25;;;21191:301;-1:-1:-1;;;21191:301:5:o;19957:347::-;20096:38;;;20070:23;20096:38;;;:14;:38;;;;;20166:13;;-1:-1:-1;;;;;20166:13:5;20152:10;:27;20144:75;;;;-1:-1:-1;;;20144:75:5;;28620:2:7;20144:75:5;;;28602:21:7;28659:2;28639:18;;;28632:30;28698:34;28678:18;;;28671:62;28769:5;28749:18;;;28742:33;28792:19;;20144:75:5;28418:399:7;20144:75:5;20229:25;;;;-1:-1:-1;;;;;20229:25:5;;;;;;;20269:28;;;;-1:-1:-1;;20269:28:5;20060:244;19957:347;;:::o;3429:963::-;3610:15;;;;;;3598:27;;;;3590:68;;;;-1:-1:-1;;;3590:68:5;;29024:2:7;3590:68:5;;;29006:21:7;29063:2;29043:18;;;29036:30;29102;29082:18;;;29075:58;29150:18;;3590:68:5;28822:352:7;3590:68:5;3669:23;3702:105;3729:14;:32;3744:16;;;;:::i;:::-;;;3729:32;;;;;;;;;;;;;;;3719:42;;3780:7;:20;;;;;;;;;;;;:25;;3804:1;3780:25;3702:105;;3817:35;;3862:86;;3841:10;3862:86;;;-1:-1:-1;;;3892:9:5;1282:2;3892:55;3862:86;;;;;;;;;;3958:28;;-1:-1:-1;;;3958:28:5;;;;;;;;4005:20;;3997:94;;;;-1:-1:-1;;;3997:94:5;;29381:2:7;3997:94:5;;;29363:21:7;29420:2;29400:18;;;29393:30;29459:34;29439:18;;;29432:62;29530:27;29510:18;;;29503:55;29575:19;;3997:94:5;29179:421:7;3997:94:5;4102:29;4134:18;4151:1;4134:14;:18;:::i;:::-;4102:50;;;;4167:56;4178:10;;4190:9;4201:21;4167:56;;;;;;;;;:::i;:::-;;;;;;;;4308:20;;4238:147;;;6390:25:7;;;-1:-1:-1;;;4308:20:5;;;1282:2;4300:75;;;;;6431:18:7;;;6424:34;4238:147:5;;6363:18:7;4238:147:5;;;;;;;3580:812;;3429:963;;;;:::o;22897:1513::-;23084:14;23152:7;23176:14;;;23152:7;23191:20;;;;;;;;:::i;:::-;23176:36;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;23171:1233;;-1:-1:-1;;;;;23323:34:5;;:20;:34;;;;;;;;;;23366:11;23358:20;;;;;;;;:::i;:::-;23323:56;;;;;;;:::i;:::-;;;23314:65;;23171:1233;;;23487:12;23476:23;;;;;;;;:::i;:::-;:7;:23;;;;;;;;:::i;:::-;;23472:922;;23636:1;23590:6;:21;;23620:11;23612:20;;;;;;;;:::i;:::-;23590:43;;;;;;;:::i;:::-;;;:47;:259;;23848:1;23590:259;;;23782:6;:21;;23812:11;23804:20;;;;;;;;:::i;:::-;23782:43;;;;;;;:::i;:::-;;;23720:34;;;;-1:-1:-1;;;;;23661:34:5;;:20;:34;;;;;;;;;;23704:11;23696:20;;;;;;;;:::i;:::-;23661:56;;;;;;;:::i;:::-;;;:93;;;;:::i;:::-;23660:165;;;;:::i;:::-;23581:268;;23472:922;;;23875:6;:14;;23912:12;23890:36;;;;;;;;:::i;:::-;23875:52;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;23870:524;;24324:54;;;;24236:61;;;;:142;;24324:54;24236:142;:::i;:::-;24177:34;;;;-1:-1:-1;;;;;24118:34:5;;:20;:34;;;;;;;;;;24161:11;24153:20;;;;;;;;:::i;:::-;24118:56;;;;;;;:::i;:::-;;;:93;;;;:::i;:::-;24117:262;;;;:::i;:::-;24088:291;;23870:524;23100:1310;22897:1513;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;203:173:7:-;270:20;;330;319:32;;309:43;;299:71;;366:1;363;356:12;299:71;203:173;;;:::o;381:184::-;439:6;492:2;480:9;471:7;467:23;463:32;460:52;;;508:1;505;498:12;460:52;531:28;549:9;531:28;:::i;570:154::-;649:20;;698:1;688:12;;678:40;;714:1;711;704:12;729:328;814:6;822;875:2;863:9;854:7;850:23;846:32;843:52;;;891:1;888;881:12;843:52;936:23;;;-1:-1:-1;1002:49:7;1047:2;1032:18;;1002:49;:::i;:::-;992:59;;729:328;;;;;:::o;1254:226::-;1313:6;1366:2;1354:9;1345:7;1341:23;1337:32;1334:52;;;1382:1;1379;1372:12;1334:52;-1:-1:-1;1427:23:7;;1254:226;-1:-1:-1;1254:226:7:o;1914:346::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;-1:-1:-1;;2104:23:7;;;2224:2;2209:18;;;2196:32;;-1:-1:-1;1914:346:7:o;2769:184::-;-1:-1:-1;;;2818:1:7;2811:88;2918:4;2915:1;2908:15;2942:4;2939:1;2932:15;2958:716;3023:5;3055:1;3079:18;3071:6;3068:30;3065:56;;;3101:18;;:::i;:::-;-1:-1:-1;3256:2:7;3250:9;-1:-1:-1;;3169:2:7;3148:15;;3144:29;;3314:2;3302:15;3298:29;3286:42;;3379:22;;;3358:18;3343:34;;3340:62;3337:88;;;3405:18;;:::i;:::-;3441:2;3434:22;3489;;;3474:6;-1:-1:-1;3474:6:7;3526:16;;;3523:25;-1:-1:-1;3520:45:7;;;3561:1;3558;3551:12;3520:45;3611:6;3606:3;3599:4;3591:6;3587:17;3574:44;3666:1;3659:4;3650:6;3642;3638:19;3634:30;3627:41;;2958:716;;;;;:::o;3679:801::-;3766:6;3774;3827:2;3815:9;3806:7;3802:23;3798:32;3795:52;;;3843:1;3840;3833:12;3795:52;3883:9;3870:23;3916:18;3908:6;3905:30;3902:50;;;3948:1;3945;3938:12;3902:50;3971:22;;4024:4;4016:13;;4012:27;-1:-1:-1;4002:55:7;;4053:1;4050;4043:12;4002:55;4076:76;4144:7;4139:2;4126:16;4119:4;4115:2;4111:13;4076:76;:::i;:::-;4066:86;;;4205:4;4194:9;4190:20;4177:34;4236:18;4226:8;4223:32;4220:52;;;4268:1;4265;4258:12;4220:52;4291:24;;4346:4;4338:13;;4334:27;-1:-1:-1;4324:55:7;;4375:1;4372;4365:12;4324:55;4398:76;4466:7;4461:2;4448:16;4441:4;4437:2;4433:13;4398:76;:::i;:::-;4388:86;;;3679:801;;;;;:::o;4485:399::-;4526:3;4564:5;4558:12;4591:6;4586:3;4579:19;4616:1;4626:139;4640:6;4637:1;4634:13;4626:139;;;4748:4;4733:13;;;4729:24;;4723:31;4703:11;;;4699:22;;4692:63;4655:12;4626:139;;;4630:3;4810:1;4803:4;4794:6;4789:3;4785:16;4781:27;4774:38;4873:4;4866:2;4862:7;4857:2;4849:6;4845:15;4841:29;4836:3;4832:39;4828:50;4821:57;;;4485:399;;;;:::o;4889:217::-;5036:2;5025:9;5018:21;4999:4;5056:44;5096:2;5085:9;5081:18;5073:6;5056:44;:::i;5111:184::-;-1:-1:-1;;;5160:1:7;5153:88;5260:4;5257:1;5250:15;5284:4;5281:1;5274:15;5300:298;5385:1;5378:5;5375:12;5365:200;;-1:-1:-1;;;5418:1:7;5411:88;5522:4;5519:1;5512:15;5550:4;5547:1;5540:15;5365:200;5574:18;;5300:298::o;5603:608::-;-1:-1:-1;;;;;5899:55:7;;5881:74;;5868:3;5853:19;;5964:57;6017:2;6002:18;;5994:6;5964:57;:::i;:::-;6069:4;6057:17;;;;6052:2;6037:18;;6030:45;6118:14;;6111:22;6106:2;6091:18;;6084:50;6183:20;6171:33;6165:3;6150:19;;;6143:62;5603:608;;-1:-1:-1;;5603:608:7:o;6469:204::-;6545:20;;-1:-1:-1;;;;;6594:54:7;;6584:65;;6574:93;;6663:1;6660;6653:12;6678:841;6817:6;6825;6833;6841;6894:2;6882:9;6873:7;6869:23;6865:32;6862:52;;;6910:1;6907;6900:12;6862:52;6955:23;;;-1:-1:-1;7021:46:7;7063:2;7048:18;;7021:46;:::i;:::-;7011:56;;7118:2;7107:9;7103:18;7090:32;7145:18;7137:6;7134:30;7131:50;;;7177:1;7174;7167:12;7131:50;7200:22;;7253:4;7245:13;;7241:27;-1:-1:-1;7231:55:7;;7282:1;7279;7272:12;7231:55;7322:2;7309:16;7348:18;7340:6;7337:30;7334:50;;;7380:1;7377;7370:12;7334:50;7433:7;7428:2;7418:6;7415:1;7411:14;7407:2;7403:23;7399:32;7396:45;7393:65;;;7454:1;7451;7444:12;7393:65;6678:841;;;;-1:-1:-1;7485:2:7;7477:11;;-1:-1:-1;;;6678:841:7:o;7524:418::-;7626:6;7634;7642;7695:2;7683:9;7674:7;7670:23;7666:32;7663:52;;;7711:1;7708;7701:12;7663:52;7756:23;;;-1:-1:-1;7822:46:7;7864:2;7849:18;;7822:46;:::i;:::-;7812:56;;7887:49;7932:2;7921:9;7917:18;7887:49;:::i;:::-;7877:59;;7524:418;;;;;:::o;8197:941::-;8473:3;8458:19;;8462:9;8554:6;8431:4;8588:187;8602:4;8599:1;8596:11;8588:187;;;8675:13;;8668:21;8661:29;8649:42;;8720:4;8711:14;;;;8748:17;;;;8622:1;8615:9;8588:187;;;8592:3;;;8812:2;8801:9;8797:18;8863:6;8889:1;8899:189;8915:4;8910:3;8907:13;8899:189;;;8980:15;;8966:30;;9029:4;9018:16;;;;9059:19;;;;8939:1;8930:11;8899:189;;;8903:3;;;9125:6;9119:3;9108:9;9104:19;9097:35;8197:941;;;;;;:::o;9143:202::-;9210:6;9263:2;9251:9;9242:7;9238:23;9234:32;9231:52;;;9279:1;9276;9269:12;9231:52;9302:37;9329:9;9302:37;:::i;9350:348::-;9402:8;9412:6;9466:3;9459:4;9451:6;9447:17;9443:27;9433:55;;9484:1;9481;9474:12;9433:55;-1:-1:-1;9507:20:7;;9550:18;9539:30;;9536:50;;;9582:1;9579;9572:12;9536:50;9619:4;9611:6;9607:17;9595:29;;9671:3;9664:4;9655:6;9647;9643:19;9639:30;9636:39;9633:59;;;9688:1;9685;9678:12;9703:525;9783:6;9791;9799;9852:2;9840:9;9831:7;9827:23;9823:32;9820:52;;;9868:1;9865;9858:12;9820:52;9913:23;;;-1:-1:-1;10011:2:7;9996:18;;9983:32;10038:18;10027:30;;10024:50;;;10070:1;10067;10060:12;10024:50;10109:59;10160:7;10151:6;10140:9;10136:22;10109:59;:::i;:::-;9703:525;;10187:8;;-1:-1:-1;10083:85:7;;-1:-1:-1;;;;9703:525:7:o;10233:316::-;10309:6;10317;10370:2;10358:9;10349:7;10345:23;10341:32;10338:52;;;10386:1;10383;10376:12;10338:52;10431:23;;;-1:-1:-1;10497:46:7;10539:2;10524:18;;10497:46;:::i;10554:1315::-;10774:4;10822:2;10811:9;10807:18;10852:6;10841:9;10834:25;10895:2;10890;10879:9;10875:18;10868:30;10918:6;10953;10947:13;10984:6;10976;10969:22;11022:2;11011:9;11007:18;11000:25;;11084:2;11074:6;11071:1;11067:14;11056:9;11052:30;11048:39;11034:53;;11122:2;11114:6;11110:15;11143:1;11153:687;11167:6;11164:1;11161:13;11153:687;;;11232:22;;;-1:-1:-1;;11228:36:7;11216:49;;11288:13;;11362:9;;11384:24;;;11442:2;11474:11;;;;11430:15;;;11509:1;11523:209;11539:8;11534:3;11531:17;11523:209;;;11616:15;;11602:30;;11669:2;11701:17;;;;11658:14;;;;11567:1;11558:11;11523:209;;;-1:-1:-1;11755:5:7;;-1:-1:-1;;;11795:2:7;11818:12;;;;11783:15;;;;;11189:1;11182:9;11153:687;;;-1:-1:-1;11857:6:7;;10554:1315;-1:-1:-1;;;;;;;10554:1315:7:o;11874:316::-;11976:6;11984;12037:2;12025:9;12016:7;12012:23;12008:32;12005:52;;;12053:1;12050;12043:12;12005:52;12076:40;12106:9;12076:40;:::i;:::-;12066:50;;12135:49;12180:2;12169:9;12165:18;12135:49;:::i;12195:539::-;12306:6;12314;12322;12330;12383:3;12371:9;12362:7;12358:23;12354:33;12351:53;;;12400:1;12397;12390:12;12351:53;12445:23;;;-1:-1:-1;12511:46:7;12553:2;12538:18;;12511:46;:::i;:::-;12501:56;-1:-1:-1;12630:2:7;12615:18;;12602:32;;-1:-1:-1;12679:49:7;12724:2;12709:18;;12679:49;:::i;:::-;12669:59;;12195:539;;;;;;;:::o;12739:274::-;12814:6;12822;12875:2;12863:9;12854:7;12850:23;12846:32;12843:52;;;12891:1;12888;12881:12;12843:52;12914:28;12932:9;12914:28;:::i;:::-;12904:38;;12961:46;13003:2;12992:9;12988:18;12961:46;:::i;13018:640::-;13104:6;13112;13120;13128;13181:2;13169:9;13160:7;13156:23;13152:32;13149:52;;;13197:1;13194;13187:12;13149:52;13237:9;13224:23;13270:18;13262:6;13259:30;13256:50;;;13302:1;13299;13292:12;13256:50;13341:59;13392:7;13383:6;13372:9;13368:22;13341:59;:::i;:::-;13419:8;;-1:-1:-1;13315:85:7;-1:-1:-1;;13504:2:7;13489:18;;13476:32;13548:4;13537:16;;13527:27;;13517:55;;13568:1;13565;13558:12;13517:55;13591:5;-1:-1:-1;13615:37:7;13648:2;13633:18;;13615:37;:::i;14957:184::-;-1:-1:-1;;;15006:1:7;14999:88;15106:4;15103:1;15096:15;15130:4;15127:1;15120:15;15146:168;15219:9;;;15250;;15267:15;;;15261:22;;15247:37;15237:71;;15288:18;;:::i;15319:274::-;15359:1;15385;15375:189;;-1:-1:-1;;;15417:1:7;15410:88;15521:4;15518:1;15511:15;15549:4;15546:1;15539:15;15375:189;-1:-1:-1;15578:9:7;;15319:274::o;15598:125::-;15663:9;;;15684:10;;;15681:36;;;15697:18;;:::i;15728:128::-;15795:9;;;15816:11;;;15813:37;;;15830:18;;:::i;15861:184::-;-1:-1:-1;;;15910:1:7;15903:88;16010:4;16007:1;16000:15;16034:4;16031:1;16024:15;16050:437;16129:1;16125:12;;;;16172;;;16193:61;;16247:4;16239:6;16235:17;16225:27;;16193:61;16300:2;16292:6;16289:14;16269:18;16266:38;16263:218;;-1:-1:-1;;;16334:1:7;16327:88;16438:4;16435:1;16428:15;16466:4;16463:1;16456:15;16263:218;;16050:437;;;:::o;16617:738::-;16666:3;16707:5;16701:12;16736:36;16762:9;16736:36;:::i;:::-;16781:19;;;16831:1;16816:17;;16842:150;;;;17006:1;17001:348;;;;16809:540;;16842:150;16905:3;16901:8;16890:9;16886:24;16879:4;16874:3;16870:14;16863:48;16977:4;16965:6;16958:14;16951:22;16948:1;16944:30;16939:3;16935:40;16931:51;16924:58;;16842:150;;17001:348;17032:5;17029:1;17022:16;17079:4;17076:1;17066:18;17106:1;17120:177;17134:6;17131:1;17128:13;17120:177;;;17231:7;17225:14;17218:4;17214:1;17209:3;17205:11;17201:22;17194:46;17281:1;17272:7;17268:15;17257:26;;17156:4;17153:1;17149:12;17144:17;;17120:177;;;17321:11;;17334:4;17317:22;;-1:-1:-1;;16809:540:7;;;;16617:738;;;;:::o;17360:293::-;17532:6;17521:9;17514:25;17575:2;17570;17559:9;17555:18;17548:30;17495:4;17595:52;17643:2;17632:9;17628:18;17620:6;17595:52;:::i;:::-;17587:60;17360:293;-1:-1:-1;;;;17360:293:7:o;17658:230::-;17728:6;17781:2;17769:9;17760:7;17756:23;17752:32;17749:52;;;17797:1;17794;17787:12;17749:52;-1:-1:-1;17842:16:7;;17658:230;-1:-1:-1;17658:230:7:o;18457:343::-;18536:6;18544;18597:2;18585:9;18576:7;18572:23;18568:32;18565:52;;;18613:1;18610;18603:12;18565:52;-1:-1:-1;;18658:16:7;;18764:2;18749:18;;;18743:25;18658:16;;18743:25;;-1:-1:-1;18457:343:7:o;20048:286::-;20225:2;20210:18;;20237:48;20214:9;20267:6;20237:48;:::i;:::-;20321:6;20316:2;20305:9;20301:18;20294:34;20048:286;;;;;:::o;20970:222::-;21114:2;21103:9;21096:21;21077:4;21134:52;21182:2;21171:9;21167:18;21159:6;21134:52;:::i;21612:185::-;21713:16;21680:24;;;21706;;;21676:55;;21743:25;;21740:51;;;21771:18;;:::i;22081:148::-;22169:4;22148:12;;;22162;;;22144:31;;22187:13;;22184:39;;;22203:18;;:::i;22595:517::-;22696:2;22691:3;22688:11;22685:421;;;22732:5;22729:1;22722:16;22776:4;22773:1;22763:18;22846:2;22834:10;22830:19;22827:1;22823:27;22817:4;22813:38;22882:4;22870:10;22867:20;22864:47;;;-1:-1:-1;22905:4:7;22864:47;22960:2;22955:3;22951:12;22948:1;22944:20;22938:4;22934:31;22924:41;;23015:81;23033:2;23026:5;23023:13;23015:81;;;23092:1;23078:16;;23059:1;23048:13;23015:81;;22685:421;22595:517;;;:::o;23288:1295::-;23412:3;23406:10;23439:18;23431:6;23428:30;23425:56;;;23461:18;;:::i;:::-;23490:96;23579:6;23539:38;23571:4;23565:11;23539:38;:::i;:::-;23533:4;23490:96;:::i;:::-;23635:4;23666:2;23655:14;;23683:1;23678:648;;;;24370:1;24387:6;24384:89;;;-1:-1:-1;24439:19:7;;;24433:26;24384:89;-1:-1:-1;;23245:1:7;23241:11;;;23237:24;23233:29;23223:40;23269:1;23265:11;;;23220:57;24486:81;;23648:929;;23678:648;16564:1;16557:14;;;16601:4;16588:18;;-1:-1:-1;;23714:20:7;;;23831:222;23845:7;23842:1;23839:14;23831:222;;;23927:19;;;23921:26;23906:42;;24034:4;24019:20;;;;23987:1;23975:14;;;;23861:12;23831:222;;;23835:3;24081:6;24072:7;24069:19;24066:201;;;24142:19;;;24136:26;-1:-1:-1;;24225:1:7;24221:14;;;24237:3;24217:24;24213:37;24209:42;24194:58;24179:74;;24066:201;-1:-1:-1;;;;24313:1:7;24297:14;;;24293:22;24280:36;;-1:-1:-1;23288:1295:7:o;24588:175::-;24625:3;24669:4;24662:5;24658:16;24698:4;24689:7;24686:17;24683:43;;24706:18;;:::i;:::-;24755:1;24742:15;;24588:175;-1:-1:-1;;24588:175:7:o;24768:545::-;24861:4;24867:6;24927:11;24914:25;25021:2;25017:7;25006:8;24990:14;24986:29;24982:43;24962:18;24958:68;24948:96;;25040:1;25037;25030:12;24948:96;25067:33;;25119:20;;;-1:-1:-1;25162:18:7;25151:30;;25148:50;;;25194:1;25191;25184:12;25148:50;25227:4;25215:17;;-1:-1:-1;25278:1:7;25274:14;;;25258;25254:35;25244:46;;25241:66;;;25303:1;25300;25293:12;25318:267;25407:6;25402:3;25395:19;25459:6;25452:5;25445:4;25440:3;25436:14;25423:43;-1:-1:-1;25511:1:7;25486:16;;;25504:4;25482:27;;;25475:38;;;;25567:2;25546:15;;;-1:-1:-1;;25542:29:7;25533:39;;;25529:50;;25318:267::o;25590:247::-;25749:2;25738:9;25731:21;25712:4;25769:62;25827:2;25816:9;25812:18;25804:6;25796;25769:62;:::i;27086:135::-;27125:3;27146:17;;;27143:43;;27166:18;;:::i;:::-;-1:-1:-1;27213:1:7;27202:13;;27086:135::o;28000:208::-;28038:3;28082:20;28075:5;28071:32;28127:20;28118:7;28115:33;28112:59;;28151:18;;:::i;28213:200::-;28320:20;28313:28;;;28283;;;28279:63;;28354:30;;28351:56;;;28387:18;;:::i;29605:396::-;29816:2;29805:9;29798:21;29779:4;29836:62;29894:2;29883:9;29879:18;29871:6;29863;29836:62;:::i;:::-;29946:4;29934:17;;;;29929:2;29914:18;;29907:45;-1:-1:-1;29983:2:7;29968:18;29961:34;29828:70;29605:396;-1:-1:-1;;29605:396:7:o"},"gasEstimates":{"creation":{"codeDepositCost":"3250600","executionCost":"infinite","totalCost":"infinite"},"external":{"ARBITRATOR()":"infinite","ARTICLE_WITHDRAWAL_TIMELOCK()":"2407","LOSER_APPEAL_PERIOD_MULTIPLIER()":"2406","LOSER_STAKE_MULTIPLIER()":"2363","MULTIPLIER_DENOMINATOR()":"305","NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE()":"262","NUMBER_OF_RULING_OPTIONS()":"263","TREASURY()":"2461","VERSION()":"infinite","WINNER_STAKE_MULTIPLIER()":"2362","admin()":"2459","appealFee(uint256)":"infinite","articleStorage(uint72)":"2782","categoryCounter()":"2372","categoryToArbitratorExtraData(uint256)":"infinite","challenge(uint72)":"infinite","challengeFee(uint72)":"infinite","challengeTaxRate()":"2383","changeAdmin(address)":"27933","changeArticleWithdrawalTimelock(uint256)":"25743","changeLoserAppealPeriodMultiplier(uint256)":"25722","changeLoserStakeMultiplier(uint256)":"25721","changeTreasury(address)":"27975","changeWinnerStakeMultiplier(uint256)":"25700","disputes(uint256)":"2864","findVacantStorageSlot(uint72)":"infinite","fundAppeal(uint256,uint8)":"infinite","getAmountRemainsToBeRaised(uint256,uint8)":"infinite","getAppealPeriod(uint256,uint8)":"infinite","getLastRoundWinner(uint256)":"infinite","getReturnOfInvestmentRatio(uint8,uint8)":"infinite","getRoundInfo(uint256,uint256)":"infinite","getTotalWithdrawableAmount(uint256,address)":"infinite","increaseBounty(uint72)":"32631","initializeArticle(string,uint8,uint72)":"infinite","initiateWithdrawal(uint72)":"32255","newCategory(string,bytes)":"infinite","rule(uint256,uint256)":"infinite","submitEvidence(uint256,string)":"infinite","switchPublishingLock()":"26601","transferBalanceToTreasury()":"infinite","transferOwnership(uint72,address)":"infinite","treasuryBalance()":"2386","updateChallengeTaxRate(uint256)":"25749","withdraw(uint72)":"infinite","withdrawFeesAndRewards(uint256,address,uint256,uint8)":"infinite","withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)":"infinite","withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)":"infinite","withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])":"infinite"},"internal":{"getWithdrawableAmount(struct TruthPost.Round storage pointer,address,enum ITruthPost.RulingOptions,enum ITruthPost.RulingOptions)":"12818"}},"methodIdentifiers":{"ARBITRATOR()":"68871c9c","ARTICLE_WITHDRAWAL_TIMELOCK()":"d3b476b1","LOSER_APPEAL_PERIOD_MULTIPLIER()":"be467604","LOSER_STAKE_MULTIPLIER()":"b34bfaa8","MULTIPLIER_DENOMINATOR()":"fe6ca782","NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE()":"d970d18c","NUMBER_OF_RULING_OPTIONS()":"7597b3cb","TREASURY()":"2d2c5565","VERSION()":"ffa1ad74","WINNER_STAKE_MULTIPLIER()":"e349ad30","admin()":"f851a440","appealFee(uint256)":"1e26de34","articleStorage(uint72)":"3e556162","categoryCounter()":"03624fc0","categoryToArbitratorExtraData(uint256)":"4de12db0","challenge(uint72)":"12a145e1","challengeFee(uint72)":"37641483","challengeTaxRate()":"fc0ac672","changeAdmin(address)":"8f283970","changeArticleWithdrawalTimelock(uint256)":"92e25925","changeLoserAppealPeriodMultiplier(uint256)":"c94828f0","changeLoserStakeMultiplier(uint256)":"92239dff","changeTreasury(address)":"b14f2a39","changeWinnerStakeMultiplier(uint256)":"adc7faba","disputes(uint256)":"564a565d","findVacantStorageSlot(uint72)":"e165720c","fundAppeal(uint256,uint8)":"12b3a2c0","getAmountRemainsToBeRaised(uint256,uint8)":"a509efeb","getAppealPeriod(uint256,uint8)":"638af3da","getLastRoundWinner(uint256)":"7f67bd6c","getReturnOfInvestmentRatio(uint8,uint8)":"b4c70581","getRoundInfo(uint256,uint256)":"8a9bb02a","getTotalWithdrawableAmount(uint256,address)":"af4a9144","increaseBounty(uint72)":"44b9ad06","initializeArticle(string,uint8,uint72)":"faa0ba9d","initiateWithdrawal(uint72)":"ba4c8f8f","newCategory(string,bytes)":"4c55c000","rule(uint256,uint256)":"311a6c56","submitEvidence(uint256,string)":"a6a7f0eb","switchPublishingLock()":"ba0ec60b","transferBalanceToTreasury()":"b7bddc72","transferOwnership(uint72,address)":"ec4adca9","treasuryBalance()":"313dab20","updateChallengeTaxRate(uint256)":"26804bef","withdraw(uint72)":"a92c4707","withdrawFeesAndRewards(uint256,address,uint256,uint8)":"dc227fc2","withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)":"6760aeb0","withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)":"c9330c0f","withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])":"67284f21"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_arbitratorExtraData\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_metaevidenceIpfsUri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_articleWithdrawalTimelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_winnerStakeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loserStakeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"AdminUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newWithdrawalTimelock\",\"type\":\"uint256\"}],\"name\":\"ArticleWithdrawalTimelockUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"}],\"name\":\"ArticleWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotal\",\"type\":\"uint256\"}],\"name\":\"BalanceUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"challanger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"disputeID\",\"type\":\"uint256\"}],\"name\":\"Challenge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newTaxRate\",\"type\":\"uint256\"}],\"name\":\"ChallengeTaxRateUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"ruling\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"}],\"name\":\"Debunked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"}],\"name\":\"Dispute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_party\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"Evidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newLoserAppealPeriodMultiplier\",\"type\":\"uint256\"}],\"name\":\"LoserAppealPeriodMultiplierUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newLoserStakeMultiplier\",\"type\":\"uint256\"}],\"name\":\"LoserStakeMultiplierUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"MetaEvidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"articleID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"}],\"name\":\"NewArticle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"Ruling\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"ruling\",\"type\":\"uint8\"}],\"name\":\"RulingFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"}],\"name\":\"TimelockStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_byAmount\",\"type\":\"uint256\"}],\"name\":\"TreasuryBalanceUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newWinnerStakeMultiplier\",\"type\":\"uint256\"}],\"name\":\"WinnerStakeMultiplierUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"ruling\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ARBITRATOR\",\"outputs\":[{\"internalType\":\"contract IArbitrator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ARTICLE_WITHDRAWAL_TIMELOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOSER_APPEAL_PERIOD_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOSER_STAKE_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MULTIPLIER_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NUMBER_OF_RULING_OPTIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WINNER_STAKE_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"appealFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"arbitrationFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"\",\"type\":\"uint72\"}],\"name\":\"articleStorage\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalPermittedAt\",\"type\":\"uint32\"},{\"internalType\":\"uint56\",\"name\":\"bountyAmount\",\"type\":\"uint56\"},{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"categoryCounter\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"categoryToArbitratorExtraData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"_articleStorageAddress\",\"type\":\"uint72\"}],\"name\":\"challenge\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"_articleStorageAddress\",\"type\":\"uint72\"}],\"name\":\"challengeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"challengeTaxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newArticleWithdrawalTimelock\",\"type\":\"uint256\"}],\"name\":\"changeArticleWithdrawalTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newLoserAppealPeriodMultiplier\",\"type\":\"uint256\"}],\"name\":\"changeLoserAppealPeriodMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newLoserStakeMultiplier\",\"type\":\"uint256\"}],\"name\":\"changeLoserStakeMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newTreasury\",\"type\":\"address\"}],\"name\":\"changeTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newWinnerStakeMultiplier\",\"type\":\"uint256\"}],\"name\":\"changeWinnerStakeMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputes\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"challenger\",\"type\":\"address\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"outcome\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"articleCategory\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"},{\"internalType\":\"uint72\",\"name\":\"articleStorageAddress\",\"type\":\"uint72\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"_searchPointer\",\"type\":\"uint72\"}],\"name\":\"findVacantStorageSlot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vacantSlotIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_supportedRuling\",\"type\":\"uint8\"}],\"name\":\"fundAppeal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fullyFunded\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"getAmountRemainsToBeRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"getAppealPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"getLastRoundWinner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_lastRoundWinner\",\"type\":\"uint8\"}],\"name\":\"getReturnOfInvestmentRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"getRoundInfo\",\"outputs\":[{\"internalType\":\"bool[3]\",\"name\":\"hasPaid\",\"type\":\"bool[3]\"},{\"internalType\":\"uint256[3]\",\"name\":\"totalPerRuling\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimableAfterExpenses\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"getTotalWithdrawableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"},{\"internalType\":\"uint256[][]\",\"name\":\"amounts\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"_articleStorageAddress\",\"type\":\"uint72\"}],\"name\":\"increaseBounty\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_articleID\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_category\",\"type\":\"uint8\"},{\"internalType\":\"uint72\",\"name\":\"_searchPointer\",\"type\":\"uint72\"}],\"name\":\"initializeArticle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"_articleStorageAddress\",\"type\":\"uint72\"}],\"name\":\"initiateWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_metaevidenceIpfsUri\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_arbitratorExtraData\",\"type\":\"bytes\"}],\"name\":\"newCategory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"rule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_evidenceURI\",\"type\":\"string\"}],\"name\":\"submitEvidence\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"switchPublishingLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferBalanceToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"_articleStorageAddress\",\"type\":\"uint72\"},{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newChallengeTaxRate\",\"type\":\"uint256\"}],\"name\":\"updateChallengeTaxRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"_articleStorageAddress\",\"type\":\"uint72\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_roundNumber\",\"type\":\"uint256\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"withdrawFeesAndRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"withdrawFeesAndRewardsForAllRounds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"withdrawFeesAndRewardsForAllRoundsAndAllRulings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256[][]\",\"name\":\"positions\",\"type\":\"uint256[][]\"}],\"name\":\"withdrawFeesAndRewardsForGivenPositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"https://github.com/proveuswrong<0xferit, gratestas>\",\"custom:approvals\":\"0xferit, gratestas\",\"details\":\"You should target ITruthPost interface contract for building on top. Otherwise you risk incompatibility across versions.         Articles are not addressed with their identifiers. That enables us to reuse same storage address for another article later.///         Arbitrator is fixed, but subcourts, jury size and metaevidence are not.         We prevent articles to get withdrawn immediately. This is to prevent submitter to escape punishment in case someone discovers an argument to debunk the article.         Bounty amounts are compressed with a lossy compression method to save on storage cost.\",\"events\":{\"Dispute(address,uint256,uint256,uint256)\":{\"details\":\"To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.\",\"params\":{\"_arbitrator\":\"The arbitrator of the contract.\",\"_disputeID\":\"ID of the dispute in the Arbitrator contract.\",\"_evidenceGroupID\":\"Unique identifier of the evidence group that is linked to this dispute.\",\"_metaEvidenceID\":\"Unique identifier of meta-evidence.\"}},\"Evidence(address,uint256,address,string)\":{\"details\":\"To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).\",\"params\":{\"_arbitrator\":\"The arbitrator of the contract.\",\"_evidence\":\"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\",\"_evidenceGroupID\":\"Unique identifier of the evidence group the evidence belongs to.\",\"_party\":\"The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\"}},\"MetaEvidence(uint256,string)\":{\"details\":\"To be emitted when meta-evidence is submitted.\",\"params\":{\"_evidence\":\"IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'\",\"_metaEvidenceID\":\"Unique identifier of meta-evidence.\"}},\"Ruling(address,uint256,uint256)\":{\"details\":\"To be raised when a ruling is given.\",\"params\":{\"_arbitrator\":\"The arbitrator giving the ruling.\",\"_disputeID\":\"ID of the dispute in the Arbitrator contract.\",\"_ruling\":\"The ruling which was given.\"}}},\"kind\":\"dev\",\"methods\":{\"appealFee(uint256)\":{\"details\":\"Returns the total amount needs to be paid to appeal a dispute, including fees and stake deposit.\",\"params\":{\"_disputeID\":\"ID of the dispute as in arbitrator.\"}},\"challenge(uint72)\":{\"details\":\"Challenges the article at the given storage address. Emits Challenge.\",\"params\":{\"_articleStorageAddress\":\"The address of the article in the storage.\"}},\"challengeFee(uint72)\":{\"details\":\"Returns the total amount needs to be paid to challenge an article, including taxes if any.\",\"params\":{\"_articleStorageAddress\":\"The address of article in the storage.\"}},\"changeAdmin(address)\":{\"details\":\"Only the current administrator can call this function. Emits AdminUpdate.\",\"params\":{\"_newAdmin\":\"The address of the new administrator.\"}},\"changeArticleWithdrawalTimelock(uint256)\":{\"details\":\"Sets the timelock before an author can initiate the withdrawal of an article to a new value.      Emits ArticleWithdrawalTimelockUpdate.\",\"params\":{\"_newArticleWithdrawalTimelock\":\"The new value of ARTICLE_WITHDRAWAL_TIMELOCK.\"}},\"changeLoserAppealPeriodMultiplier(uint256)\":{\"details\":\"Sets the multiplier of the appeal window for the loser to a new value. Emits LoserAppealPeriodMultiplierUpdate.\",\"params\":{\"_newLoserAppealPeriodMultiplier\":\"The new value of LOSER_APPEAL_PERIOD_MULTIPLIER.\"}},\"changeLoserStakeMultiplier(uint256)\":{\"details\":\"Sets the multiplier of the arbitration cost that the loser has to pay as fee stake to a new value.      Emits LoserStakeMultiplierUpdate.\",\"params\":{\"_newLoserStakeMultiplier\":\"The new value of LOSER_STAKE_MULTIPLIER.\"}},\"changeTreasury(address)\":{\"details\":\"Only the current administrator can call this function. Emits TreasuryUpdate.\",\"params\":{\"_newTreasury\":\"The address of the new treasury.\"}},\"changeWinnerStakeMultiplier(uint256)\":{\"details\":\"Sets the multiplier of the arbitration cost that the winner has to pay as fee stake to a new value.      Emits WinnerStakeMultiplierUpdate.\",\"params\":{\"_newWinnerStakeMultiplier\":\"The new value of WINNER_STAKE_MULTIPLIER.\"}},\"findVacantStorageSlot(uint72)\":{\"details\":\"Helper function to find a vacant slot for article. Use this function before calling initialize to minimize your gas cost.\",\"params\":{\"_searchPointer\":\"Starting point of the search. If you do not have a guess, just pass 0.\"}},\"fundAppeal(uint256,uint8)\":{\"details\":\"Lets user to contribute funding of an appeal round. Emits Contribution. If fully funded, emits RulingFunded.\",\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"The ruling option to which the caller wants to contribute.\"},\"returns\":{\"fullyFunded\":\"True if the ruling option got fully funded as a result of this contribution.\"}},\"getAmountRemainsToBeRaised(uint256,uint8)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"The ruling option to query.\"},\"returns\":{\"_0\":\"Amount needs to be raised\"}},\"getAppealPeriod(uint256,uint8)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"The ruling option to query.\"},\"returns\":{\"_0\":\"Start\",\"_1\":\"End\"}},\"getLastRoundWinner(uint256)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\"},\"returns\":{\"_0\":\"Winning ruling option.\"}},\"getReturnOfInvestmentRatio(uint8,uint8)\":{\"details\":\"Purely depends on whether given ruling option is winner and stake multipliers.\",\"params\":{\"_lastRoundWinner\":\"Winner of the last round.\",\"_ruling\":\"The ruling option to query.\"},\"returns\":{\"_0\":\"Return of investment ratio, denominated by MULTIPLIER_DENOMINATOR.\"}},\"getRoundInfo(uint256,uint256)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_round\":\"Round ID.\"},\"returns\":{\"hasPaid\":\"Whether given ruling option was fully funded.\",\"totalClaimableAfterExpenses\":\"Total amount will be distributed back to winners, after deducting expenses.\",\"totalPerRuling\":\"The total raised per ruling option.\"}},\"getTotalWithdrawableAmount(uint256,address)\":{\"details\":\"Returns the sum of withdrawable amount and 2D array of positions[round][ruling].\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\"},\"returns\":{\"sum\":\"The total amount available to withdraw.\"}},\"increaseBounty(uint72)\":{\"details\":\"Lets author to increase a bounty of a live article. Emits BalanceUpdate.\",\"params\":{\"_articleStorageAddress\":\"The address of the article in the storage.\"}},\"initializeArticle(string,uint8,uint72)\":{\"details\":\"Do not confuse articleID with articleAddress. Emits NewArticle.\",\"params\":{\"_articleID\":\"Unique identifier of an article in IPFS content identifier format.\",\"_category\":\"The category code of this new article.\",\"_searchPointer\":\"Starting point of the search. Find a vacant storage slot before calling this function to minimize gas cost.\"}},\"initiateWithdrawal(uint72)\":{\"details\":\"Lets an author to start unpublishing process. Emits TimelockStarted.\",\"params\":{\"_articleStorageAddress\":\"The address of the article in the storage.\"}},\"newCategory(string,bytes)\":{\"params\":{\"_arbitratorExtraData\":\"Extra data of Kleros arbitrator, signaling subcourt and jury size selection.\",\"_metaevidenceIpfsUri\":\"IPFS content identifier for metaevidence.\"}},\"rule(uint256,uint256)\":{\"details\":\"This is only for arbitrator to use.\",\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"Winning ruling option.\"}},\"submitEvidence(uint256,string)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_evidenceURI\":\"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\"}},\"switchPublishingLock()\":{\"details\":\"Useful when it's no longer safe or secure to use this contract.         Prevents new articles to be published. Only intended for privileges users.\"},\"transferBalanceToTreasury()\":{\"details\":\"Allows the contract to send its entire balance to the treasury address.         It is important to ensure that the treasury address is set correctly.         If the transfer fails, an exception will be raised, and the funds will remain in the contract.         Emits TreasuryBalanceUpdate.\"},\"transferOwnership(uint72,address)\":{\"details\":\"Lets you to transfer ownership of an article.      This is useful when you want to change owner account without withdrawing and resubmitting.      Emits OwnershipTransfer.\",\"params\":{\"_articleStorageAddress\":\"The address of article in the storage.\",\"_newOwner\":\"The new owner of the article which resides in the storage address, provided by the previous parameter.\"}},\"updateChallengeTaxRate(uint256)\":{\"details\":\"The new challenge tax rate must be at most 25% based on MULTIPLIER_DENOMINATOR.         Only the current administrator can call this function. Emits ChallengeTaxRateUpdate.\",\"params\":{\"_newChallengeTaxRate\":\"The new challenge tax rate to be set.\"}},\"withdraw(uint72)\":{\"details\":\"Executes unpublishing of an article. Emits Withdrew.\",\"params\":{\"_articleStorageAddress\":\"The address of the article in the storage.\"}},\"withdrawFeesAndRewards(uint256,address,uint256,uint8)\":{\"details\":\"Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_round\":\"Number of the round that caller wants to execute withdraw on.\",\"_ruling\":\"A ruling option that caller wants to execute withdraw on.\"},\"returns\":{\"amount\":\"The amount that is going to be transferred to contributor as a result of this function call.\"}},\"withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)\":{\"details\":\"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"Ruling option that caller wants to execute withdraw on.\"}},\"withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)\":{\"details\":\"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds and all rulings at once.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\"}},\"withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])\":{\"details\":\"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for given positions at once.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\",\"positions\":\"[rounds][rulings].\"}}},\"title\":\"The Trust Post\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"appealFee(uint256)\":{\"notice\":\"Get required appeal fee and deposit.\"},\"challenge(uint72)\":{\"notice\":\"Challenge article.\"},\"challengeFee(uint72)\":{\"notice\":\"Get required challenge fee.\"},\"changeAdmin(address)\":{\"notice\":\"Changes the administrator of the contract to a new address.\"},\"changeArticleWithdrawalTimelock(uint256)\":{\"notice\":\"Update the timelock for the article withdtrawal.\"},\"changeLoserAppealPeriodMultiplier(uint256)\":{\"notice\":\"Update the appeal window for the loser.\"},\"changeLoserStakeMultiplier(uint256)\":{\"notice\":\"Update the arbitration cost for the loser.\"},\"changeTreasury(address)\":{\"notice\":\"Changes the treasury address of the contract to a new address.\"},\"changeWinnerStakeMultiplier(uint256)\":{\"notice\":\"Update the arbitration cost for the winner.\"},\"findVacantStorageSlot(uint72)\":{\"notice\":\"Find a vacant storage slot for an article.\"},\"fundAppeal(uint256,uint8)\":{\"notice\":\"Fund a crowdfunding appeal.\"},\"getAmountRemainsToBeRaised(uint256,uint8)\":{\"notice\":\"Learn about how much more needs to be raised for given ruling option.\"},\"getAppealPeriod(uint256,uint8)\":{\"notice\":\"Get appeal time window.\"},\"getLastRoundWinner(uint256)\":{\"notice\":\"Get last round's winner.\"},\"getReturnOfInvestmentRatio(uint8,uint8)\":{\"notice\":\"Get return of investment ratio.\"},\"getRoundInfo(uint256,uint256)\":{\"notice\":\"Learn about given dispute round.\"},\"getTotalWithdrawableAmount(uint256,address)\":{\"notice\":\"Learn the total amount of appeal crowdfunding balance available.\"},\"increaseBounty(uint72)\":{\"notice\":\"Increase bounty.\"},\"initializeArticle(string,uint8,uint72)\":{\"notice\":\"Publish an article.\"},\"initiateWithdrawal(uint72)\":{\"notice\":\"Initiate unpublishing process.\"},\"newCategory(string,bytes)\":{\"notice\":\"Initialize a category.\"},\"rule(uint256,uint256)\":{\"notice\":\"Execute a ruling\"},\"submitEvidence(uint256,string)\":{\"notice\":\"Submit an evidence.\"},\"switchPublishingLock()\":{\"notice\":\"Switches publishing lock.\"},\"transferBalanceToTreasury()\":{\"notice\":\"Transfers the balance of the contract to the treasury.\"},\"transferOwnership(uint72,address)\":{\"notice\":\"Transfer ownership of an article.\"},\"updateChallengeTaxRate(uint256)\":{\"notice\":\"Updates the challenge tax rate of the contract to a new value.\"},\"withdraw(uint72)\":{\"notice\":\"Execute unpublishing.\"},\"withdrawFeesAndRewards(uint256,address,uint256,uint8)\":{\"notice\":\"Withdraw appeal crowdfunding balance.\"},\"withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)\":{\"notice\":\"Withdraw appeal crowdfunding balance for given ruling option for all rounds.\"},\"withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)\":{\"notice\":\"Withdraw appeal crowdfunding balance for all ruling options and all rounds.\"},\"withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])\":{\"notice\":\"Withdraw appeal crowdfunding balance for given ruling option and for given rounds.\"}},\"notice\":\"Smart contract for a type of curation, where submitted items are on hold until they are withdrawn and the amount of security deposits are determined by submitters.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TruthPost.sol\":\"TruthPost\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/**\\n *  @authors: [@ferittuncer]\\n *  @reviewers: [@mtsalenc*, @hbarcelos*, @unknownunknown1, @MerlinEgalite, @fnanni-0*, @shalzz]\\n *  @auditors: []\\n *  @bounties: []\\n *  @deployments: []\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@kleros/erc-792/contracts/IArbitrable.sol\\\";\\nimport \\\"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\\\";\\nimport \\\"@kleros/erc-792/contracts/IArbitrator.sol\\\";\\n\\n/**\\n *  @title This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet.\\n    This interface is used in Dispute Resolver (resolve.kleros.io).\\n */\\nabstract contract IDisputeResolver is IArbitrable, IEvidence {\\n    string public constant VERSION = \\\"2.0.0\\\"; // Can be used to distinguish between multiple deployed versions, if necessary.\\n\\n    /** @dev Raised when a contribution is made, inside fundAppeal function.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _round The round number the contribution was made to.\\n     *  @param ruling Indicates the ruling option which got the contribution.\\n     *  @param _contributor Caller of fundAppeal function.\\n     *  @param _amount Contribution amount.\\n     */\\n    event Contribution(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 ruling, address indexed _contributor, uint256 _amount);\\n\\n    /** @dev Raised when a contributor withdraws non-zero value.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _round The round number the withdrawal was made from.\\n     *  @param _ruling Indicates the ruling option which contributor gets rewards from.\\n     *  @param _contributor The beneficiary of withdrawal.\\n     *  @param _reward Total amount of withdrawal, consists of reimbursed deposits plus rewards.\\n     */\\n    event Withdrawal(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 _ruling, address indexed _contributor, uint256 _reward);\\n\\n    /** @dev To be raised when a ruling option is fully funded for appeal.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _round Number of the round this ruling option was fully funded in.\\n     *  @param _ruling The ruling option which just got fully funded.\\n     */\\n    event RulingFunded(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 indexed _ruling);\\n\\n    /** @dev Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\\n     *  @param _externalDisputeID Dispute id as in arbitrator contract.\\n     *  @return localDisputeID Dispute id as in arbitrable contract.\\n     */\\n    function externalIDtoLocalID(uint256 _externalDisputeID) external virtual returns (uint256 localDisputeID);\\n\\n    /** @dev Returns number of possible ruling options. Valid rulings are [0, return value].\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @return count The number of ruling options.\\n     */\\n    function numberOfRulingOptions(uint256 _localDisputeID) external view virtual returns (uint256 count);\\n\\n    /** @dev Allows to submit evidence for a given dispute.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\\n     */\\n    function submitEvidence(uint256 _localDisputeID, string calldata _evidenceURI) external virtual;\\n\\n    /** @dev Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _ruling The ruling option to which the caller wants to contribute.\\n     *  @return fullyFunded True if the ruling option got fully funded as a result of this contribution.\\n     */\\n    function fundAppeal(uint256 _localDisputeID, uint256 _ruling) external payable virtual returns (bool fullyFunded);\\n\\n    /** @dev Returns appeal multipliers.\\n     *  @return winnerStakeMultiplier Winners stake multiplier.\\n     *  @return loserStakeMultiplier Losers stake multiplier.\\n     *  @return loserAppealPeriodMultiplier Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\\n     *  @return denominator Multiplier denominator in basis points.\\n     */\\n    function getMultipliers()\\n        external\\n        view\\n        virtual\\n        returns (\\n            uint256 winnerStakeMultiplier,\\n            uint256 loserStakeMultiplier,\\n            uint256 loserAppealPeriodMultiplier,\\n            uint256 denominator\\n        );\\n\\n    /** @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _contributor Beneficiary of withdraw operation.\\n     *  @param _round Number of the round that caller wants to execute withdraw on.\\n     *  @param _ruling A ruling option that caller wants to execute withdraw on.\\n     *  @return sum The amount that is going to be transferred to contributor as a result of this function call.\\n     */\\n    function withdrawFeesAndRewards(\\n        uint256 _localDisputeID,\\n        address payable _contributor,\\n        uint256 _round,\\n        uint256 _ruling\\n    ) external virtual returns (uint256 sum);\\n\\n    /** @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _contributor Beneficiary of withdraw operation.\\n     *  @param _ruling Ruling option that caller wants to execute withdraw on.\\n     */\\n    function withdrawFeesAndRewardsForAllRounds(\\n        uint256 _localDisputeID,\\n        address payable _contributor,\\n        uint256 _ruling\\n    ) external virtual;\\n\\n    /** @dev Returns the sum of withdrawable amount.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _contributor Beneficiary of withdraw operation.\\n     *  @param _ruling Ruling option that caller wants to get withdrawable amount from.\\n     *  @return sum The total amount available to withdraw.\\n     */\\n    function getTotalWithdrawableAmount(\\n        uint256 _localDisputeID,\\n        address payable _contributor,\\n        uint256 _ruling\\n    ) external view virtual returns (uint256 sum);\\n}\\n\",\"keccak256\":\"0x9174a37ba69e682381a3ae6e14582a17d69f29be879ff27433fce2b971f871ae\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/IArbitrable.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrator.sol\\\";\\n\\n/**\\n * @title IArbitrable\\n * Arbitrable interface.\\n * When developing arbitrable contracts, we need to:\\n * - Define the action taken when a ruling is received by the contract.\\n * - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);\\n */\\ninterface IArbitrable {\\n    /**\\n     * @dev To be raised when a ruling is given.\\n     * @param _arbitrator The arbitrator giving the ruling.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling The ruling which was given.\\n     */\\n    event Ruling(IArbitrator indexed _arbitrator, uint256 indexed _disputeID, uint256 _ruling);\\n\\n    /**\\n     * @dev Give a ruling for a dispute. Must be called by the arbitrator.\\n     * The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\\n     */\\n    function rule(uint256 _disputeID, uint256 _ruling) external;\\n}\\n\",\"keccak256\":\"0xf1a2c2d7ec1237ef8d3c5f580ac73f56ed58fe4d023817a188363885b3eeb9f2\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/IArbitrator.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrable.sol\\\";\\n\\n/**\\n * @title Arbitrator\\n * Arbitrator abstract contract.\\n * When developing arbitrator contracts we need to:\\n * - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\\n * - Define the functions for cost display (arbitrationCost and appealCost).\\n * - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\\n */\\ninterface IArbitrator {\\n    enum DisputeStatus {\\n        Waiting,\\n        Appealable,\\n        Solved\\n    }\\n\\n    /**\\n     * @dev To be emitted when a dispute is created.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event DisputeCreation(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when a dispute can be appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealPossible(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when the current ruling is appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealDecision(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev Create a dispute. Must be called by the arbitrable contract.\\n     * Must be paid at least arbitrationCost(_extraData).\\n     * @param _choices Amount of choices the arbitrator can make in this dispute.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return disputeID ID of the dispute created.\\n     */\\n    function createDispute(uint256 _choices, bytes calldata _extraData) external payable returns (uint256 disputeID);\\n\\n    /**\\n     * @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function arbitrationCost(bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give extra info on the appeal.\\n     */\\n    function appeal(uint256 _disputeID, bytes calldata _extraData) external payable;\\n\\n    /**\\n     * @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function appealCost(uint256 _disputeID, bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\\n     * @param _disputeID ID of the dispute.\\n     * @return start The start of the period.\\n     * @return end The end of the period.\\n     */\\n    function appealPeriod(uint256 _disputeID) external view returns (uint256 start, uint256 end);\\n\\n    /**\\n     * @dev Return the status of a dispute.\\n     * @param _disputeID ID of the dispute to rule.\\n     * @return status The status of the dispute.\\n     */\\n    function disputeStatus(uint256 _disputeID) external view returns (DisputeStatus status);\\n\\n    /**\\n     * @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\\n     * @param _disputeID ID of the dispute.\\n     * @return ruling The ruling which has been given or the one which will be given if there is no appeal.\\n     */\\n    function currentRuling(uint256 _disputeID) external view returns (uint256 ruling);\\n}\\n\",\"keccak256\":\"0xfd19582446ef635cfb02a035a18efae3bc242ccf1472bb9949cad3d291306333\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: []\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IArbitrator.sol\\\";\\n\\n/** @title IEvidence\\n *  ERC-1497: Evidence Standard\\n */\\ninterface IEvidence {\\n    /**\\n     * @dev To be emitted when meta-evidence is submitted.\\n     * @param _metaEvidenceID Unique identifier of meta-evidence.\\n     * @param _evidence IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'\\n     */\\n    event MetaEvidence(uint256 indexed _metaEvidenceID, string _evidence);\\n\\n    /**\\n     * @dev To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).\\n     * @param _arbitrator The arbitrator of the contract.\\n     * @param _evidenceGroupID Unique identifier of the evidence group the evidence belongs to.\\n     * @param _party The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\\n     * @param _evidence IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\\n     */\\n    event Evidence(\\n        IArbitrator indexed _arbitrator,\\n        uint256 indexed _evidenceGroupID,\\n        address indexed _party,\\n        string _evidence\\n    );\\n\\n    /**\\n     * @dev To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.\\n     * @param _arbitrator The arbitrator of the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _metaEvidenceID Unique identifier of meta-evidence.\\n     * @param _evidenceGroupID Unique identifier of the evidence group that is linked to this dispute.\\n     */\\n    event Dispute(\\n        IArbitrator indexed _arbitrator,\\n        uint256 indexed _disputeID,\\n        uint256 _metaEvidenceID,\\n        uint256 _evidenceGroupID\\n    );\\n}\\n\",\"keccak256\":\"0xf9f105a2cbf5e34cdc5ce71d877cded1b502437f1cd6d28173898f88542418af\",\"license\":\"MIT\"},\"contracts/ITruthPost.sol\":{\"content\":\"/// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.10;\\n\\n/// @title  The Truth Post: Accurate and Relevant News\\n/// @author https://github.com/proveuswrong<0xferit, gratestas>\\n/// @dev    This contract serves as a standard interface among multiple deployments of the Truth Post contracts.\\n///         You should target this interface contract for interactions, not the concrete contract; otherwise you risk incompatibility across versions.\\n/// @custom:approvals 0xferit, gratestas\\nabstract contract ITruthPost {\\n    string public constant VERSION = \\\"1.2.0\\\";\\n\\n    enum RulingOptions {\\n        Tied,\\n        ChallengeFailed,\\n        Debunked\\n    }\\n\\n    bool isPublishingEnabled = true;\\n    address payable public TREASURY;\\n    uint256 public treasuryBalance;\\n    uint256 public constant NUMBER_OF_RULING_OPTIONS = 2;\\n    uint256 public constant MULTIPLIER_DENOMINATOR = 1024; // Denominator for multipliers.\\n    uint256 public LOSER_APPEAL_PERIOD_MULTIPLIER = 512; // Multiplier of the appeal period for losers (any other ruling options) in basis points. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\\n    uint256 public ARTICLE_WITHDRAWAL_TIMELOCK; // To prevent authors to act fast and escape punishment.\\n    uint256 public WINNER_STAKE_MULTIPLIER; // Multiplier of the arbitration cost that the winner has to pay as fee stake for a round in basis points.\\n    uint256 public LOSER_STAKE_MULTIPLIER; // Multiplier of the arbitration cost that the loser has to pay as fee stake for a round in basis points.\\n    uint256 public challengeTaxRate = 16;\\n\\n    constructor(\\n        uint256 _articleWithdrawalTimelock,\\n        uint256 _winnerStakeMultiplier,\\n        uint256 _loserStakeMultiplier,\\n        address payable _treasury\\n    ) {\\n        ARTICLE_WITHDRAWAL_TIMELOCK = _articleWithdrawalTimelock;\\n        WINNER_STAKE_MULTIPLIER = _winnerStakeMultiplier;\\n        LOSER_STAKE_MULTIPLIER = _loserStakeMultiplier;\\n        TREASURY = _treasury;\\n    }\\n\\n    event NewArticle(string articleID, uint8 category, uint256 articleAddress);\\n    event Debunked(uint256 articleAddress);\\n    event ArticleWithdrawn(uint256 articleAddress);\\n    event BalanceUpdate(uint256 articleAddress, uint256 newTotal);\\n    event TimelockStarted(uint256 articleAddress);\\n    event Challenge(uint256 indexed articleAddress, address challanger, uint256 disputeID);\\n    event Contribution(\\n        uint256 indexed disputeId,\\n        uint256 indexed round,\\n        RulingOptions ruling,\\n        address indexed contributor,\\n        uint256 amount\\n    );\\n    event Withdrawal(\\n        uint256 indexed disputeId,\\n        uint256 indexed round,\\n        RulingOptions ruling,\\n        address indexed contributor,\\n        uint256 reward\\n    );\\n    event RulingFunded(uint256 indexed disputeId, uint256 indexed round, RulingOptions indexed ruling);\\n    event OwnershipTransfer(address indexed _newOwner);\\n    event AdminUpdate(address indexed _newAdmin);\\n    event WinnerStakeMultiplierUpdate(uint256 indexed _newWinnerStakeMultiplier);\\n    event LoserStakeMultiplierUpdate(uint256 indexed _newLoserStakeMultiplier);\\n    event LoserAppealPeriodMultiplierUpdate(uint256 indexed _newLoserAppealPeriodMultiplier);\\n    event ArticleWithdrawalTimelockUpdate(uint256 indexed _newWithdrawalTimelock);\\n    event ChallengeTaxRateUpdate(uint256 indexed _newTaxRate);\\n    event TreasuryUpdate(address indexed _newTreasury);\\n    event TreasuryBalanceUpdate(uint256 indexed _byAmount);\\n\\n    /// @notice Submit an evidence.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\\n    function submitEvidence(uint256 _disputeID, string calldata _evidenceURI) external virtual;\\n\\n    /// @notice Fund a crowdfunding appeal.\\n    /// @dev Lets user to contribute funding of an appeal round. Emits Contribution. If fully funded, emits RulingFunded.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _ruling The ruling option to which the caller wants to contribute.\\n    /// @return fullyFunded True if the ruling option got fully funded as a result of this contribution.\\n    function fundAppeal(uint256 _disputeID, RulingOptions _ruling) external payable virtual returns (bool fullyFunded);\\n\\n    /// @notice Publish an article.\\n    /// @dev    Do not confuse articleID with articleAddress. Emits NewArticle.\\n    /// @param _articleID Unique identifier of an article in IPFS content identifier format.\\n    /// @param _category The category code of this new article.\\n    /// @param _searchPointer Starting point of the search. Find a vacant storage slot before calling this function to minimize gas cost.\\n    function initializeArticle(\\n        string calldata _articleID,\\n        uint8 _category,\\n        uint72 _searchPointer\\n    ) external payable virtual;\\n\\n    /// @notice Increase bounty.\\n    /// @dev Lets author to increase a bounty of a live article. Emits BalanceUpdate.\\n    /// @param _articleStorageAddress The address of the article in the storage.\\n    function increaseBounty(uint72 _articleStorageAddress) external payable virtual;\\n\\n    /// @notice Initiate unpublishing process.\\n    /// @dev Lets an author to start unpublishing process. Emits TimelockStarted.\\n    /// @param _articleStorageAddress The address of the article in the storage.\\n    function initiateWithdrawal(uint72 _articleStorageAddress) external virtual;\\n\\n    /// @notice Execute unpublishing.\\n    /// @dev Executes unpublishing of an article. Emits Withdrew.\\n    /// @param _articleStorageAddress The address of the article in the storage.\\n    function withdraw(uint72 _articleStorageAddress) external virtual;\\n\\n    /// @notice Challenge article.\\n    /// @dev Challenges the article at the given storage address. Emits Challenge.\\n    /// @param _articleStorageAddress The address of the article in the storage.\\n    function challenge(uint72 _articleStorageAddress) external payable virtual;\\n\\n    /// @notice Transfer ownership of an article.\\n    /// @dev Lets you to transfer ownership of an article.\\n    ///      This is useful when you want to change owner account without withdrawing and resubmitting.\\n    ///      Emits OwnershipTransfer.\\n    /// @param _articleStorageAddress The address of article in the storage.\\n    /// @param _newOwner The new owner of the article which resides in the storage address, provided by the previous parameter.\\n    function transferOwnership(uint72 _articleStorageAddress, address payable _newOwner) external virtual;\\n\\n    /// @notice Update the arbitration cost for the winner.\\n    /// @dev Sets the multiplier of the arbitration cost that the winner has to pay as fee stake to a new value.\\n    ///      Emits WinnerStakeMultiplierUpdate.\\n    /// @param _newWinnerStakeMultiplier The new value of WINNER_STAKE_MULTIPLIER.\\n    function changeWinnerStakeMultiplier(uint256 _newWinnerStakeMultiplier) external virtual;\\n\\n    /// @notice Update the arbitration cost for the loser.\\n    /// @dev Sets the multiplier of the arbitration cost that the loser has to pay as fee stake to a new value.\\n    ///      Emits LoserStakeMultiplierUpdate.\\n    /// @param _newLoserStakeMultiplier The new value of LOSER_STAKE_MULTIPLIER.\\n\\n    function changeLoserStakeMultiplier(uint256 _newLoserStakeMultiplier) external virtual;\\n\\n    /// @notice Update the appeal window for the loser.\\n    /// @dev Sets the multiplier of the appeal window for the loser to a new value. Emits LoserAppealPeriodMultiplierUpdate.\\n    /// @param _newLoserAppealPeriodMultiplier The new value of LOSER_APPEAL_PERIOD_MULTIPLIER.\\n    function changeLoserAppealPeriodMultiplier(uint256 _newLoserAppealPeriodMultiplier) external virtual;\\n\\n    /// @notice Update the timelock for the article withdtrawal.\\n    /// @dev Sets the timelock before an author can initiate the withdrawal of an article to a new value.\\n    ///      Emits ArticleWithdrawalTimelockUpdate.\\n    /// @param _newArticleWithdrawalTimelock The new value of ARTICLE_WITHDRAWAL_TIMELOCK.\\n    function changeArticleWithdrawalTimelock(uint256 _newArticleWithdrawalTimelock) external virtual;\\n\\n    /// @notice Find a vacant storage slot for an article.\\n    /// @dev Helper function to find a vacant slot for article. Use this function before calling initialize to minimize your gas cost.\\n    /// @param _searchPointer Starting point of the search. If you do not have a guess, just pass 0.\\n    function findVacantStorageSlot(uint72 _searchPointer) external view virtual returns (uint256 vacantSlotIndex);\\n\\n    /// @notice Get required challenge fee.\\n    /// @dev Returns the total amount needs to be paid to challenge an article, including taxes if any.\\n    /// @param _articleStorageAddress The address of article in the storage.\\n    function challengeFee(uint72 _articleStorageAddress) public view virtual returns (uint256 challengeFee);\\n\\n    /// @notice Get required appeal fee and deposit.\\n    /// @dev Returns the total amount needs to be paid to appeal a dispute, including fees and stake deposit.\\n    /// @param _disputeID ID of the dispute as in arbitrator.\\n    function appealFee(uint256 _disputeID) external view virtual returns (uint256 arbitrationFee);\\n\\n    /// @notice Withdraw appeal crowdfunding balance.\\n    /// @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    /// @param _round Number of the round that caller wants to execute withdraw on.\\n    /// @param _ruling A ruling option that caller wants to execute withdraw on.\\n    /// @return sum The amount that is going to be transferred to contributor as a result of this function call.\\n    function withdrawFeesAndRewards(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        uint256 _round,\\n        RulingOptions _ruling\\n    ) external virtual returns (uint256 sum);\\n\\n    /// @notice Withdraw appeal crowdfunding balance for given ruling option for all rounds.\\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    /// @param _ruling Ruling option that caller wants to execute withdraw on.\\n    function withdrawFeesAndRewardsForAllRounds(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        RulingOptions _ruling\\n    ) external virtual;\\n\\n    /// @notice Withdraw appeal crowdfunding balance for given ruling option and for given rounds.\\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for given positions at once.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    /// @param positions [rounds][rulings].\\n    function withdrawFeesAndRewardsForGivenPositions(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        uint256[][] calldata positions\\n    ) external virtual;\\n\\n    /// @notice Withdraw appeal crowdfunding balance for all ruling options and all rounds.\\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds and all rulings at once.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    function withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256 _disputeID, address payable _contributor)\\n        external\\n        virtual;\\n\\n    /// @notice Learn the total amount of appeal crowdfunding balance available.\\n    /// @dev Returns the sum of withdrawable amount and 2D array of positions[round][ruling].\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    /// @return sum The total amount available to withdraw.\\n    function getTotalWithdrawableAmount(uint256 _disputeID, address payable _contributor)\\n        external\\n        view\\n        virtual\\n        returns (uint256 sum, uint256[][] memory positions);\\n\\n    /// @notice Learn about given dispute round.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _round Round ID.\\n    /// @return hasPaid Whether given ruling option was fully funded.\\n    /// @return totalPerRuling The total raised per ruling option.\\n    /// @return totalClaimableAfterExpenses Total amount will be distributed back to winners, after deducting expenses.\\n    function getRoundInfo(uint256 _disputeID, uint256 _round)\\n        external\\n        view\\n        virtual\\n        returns (\\n            bool[NUMBER_OF_RULING_OPTIONS + 1] memory hasPaid,\\n            uint256[NUMBER_OF_RULING_OPTIONS + 1] memory totalPerRuling,\\n            uint256 totalClaimableAfterExpenses\\n        );\\n\\n    /// @notice Learn about how much more needs to be raised for given ruling option.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _ruling The ruling option to query.\\n    /// @return Amount needs to be raised\\n    function getAmountRemainsToBeRaised(uint256 _disputeID, RulingOptions _ruling)\\n        external\\n        view\\n        virtual\\n        returns (uint256);\\n\\n    /// @notice Get return of investment ratio.\\n    /// @dev Purely depends on whether given ruling option is winner and stake multipliers.\\n    /// @param _ruling The ruling option to query.\\n    /// @param _lastRoundWinner Winner of the last round.\\n    /// @return Return of investment ratio, denominated by MULTIPLIER_DENOMINATOR.\\n    function getReturnOfInvestmentRatio(RulingOptions _ruling, RulingOptions _lastRoundWinner)\\n        external\\n        view\\n        virtual\\n        returns (uint256);\\n\\n    /// @notice Get appeal time window.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _ruling The ruling option to query.\\n    /// @return Start\\n    /// @return End\\n    function getAppealPeriod(uint256 _disputeID, RulingOptions _ruling)\\n        external\\n        view\\n        virtual\\n        returns (uint256, uint256);\\n\\n    /// @notice Get last round's winner.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @return Winning ruling option.\\n    function getLastRoundWinner(uint256 _disputeID) public view virtual returns (uint256);\\n\\n    /// @notice Switches publishing lock.\\n    /// @dev    Useful when it's no longer safe or secure to use this contract.\\n    ///         Prevents new articles to be published. Only intended for privileges users.\\n    function switchPublishingLock() public virtual;\\n}\\n\",\"keccak256\":\"0x32907cf609115c99cd9bf0af76bd2295af8e3f84560e9b74b9775ab06b914900\",\"license\":\"MIT\"},\"contracts/TruthPost.sol\":{\"content\":\"/// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.10;\\n\\nimport \\\"@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol\\\";\\nimport \\\"./ITruthPost.sol\\\";\\n\\n/// @title  The Trust Post\\n/// @author https://github.com/proveuswrong<0xferit, gratestas>\\n/// @notice Smart contract for a type of curation, where submitted items are on hold until they are withdrawn and the amount of security deposits are determined by submitters.\\n/// @dev    You should target ITruthPost interface contract for building on top. Otherwise you risk incompatibility across versions.\\n///         Articles are not addressed with their identifiers. That enables us to reuse same storage address for another article later.///         Arbitrator is fixed, but subcourts, jury size and metaevidence are not.\\n///         We prevent articles to get withdrawn immediately. This is to prevent submitter to escape punishment in case someone discovers an argument to debunk the article.\\n///         Bounty amounts are compressed with a lossy compression method to save on storage cost.\\n/// @custom:approvals 0xferit, gratestas\\ncontract TruthPost is ITruthPost, IArbitrable, IEvidence {\\n    IArbitrator public immutable ARBITRATOR;\\n    uint256 public constant NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE = 32; // To compress bounty amount to gain space in struct. Lossy compression.\\n\\n    uint8 public categoryCounter = 0;\\n\\n    address payable public admin = payable(msg.sender);\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin);\\n        _;\\n    }\\n\\n    struct DisputeData {\\n        address payable challenger;\\n        RulingOptions outcome;\\n        uint8 articleCategory;\\n        bool resolved; // To remove dependency to disputeStatus function of arbitrator. This function is likely to be removed in Kleros v2.\\n        uint72 articleStorageAddress; // 2^16 is sufficient. Just using extra available space.\\n        Round[] rounds; // Tracks each appeal round of a dispute.\\n    }\\n\\n    struct Round {\\n        mapping(address => uint256[NUMBER_OF_RULING_OPTIONS + 1]) contributions;\\n        bool[NUMBER_OF_RULING_OPTIONS + 1] hasPaid; // True if the fees for this particular answer has been fully paid in the form hasPaid[rulingOutcome].\\n        uint256[NUMBER_OF_RULING_OPTIONS + 1] totalPerRuling;\\n        uint256 totalClaimableAfterExpenses;\\n    }\\n\\n    struct Article {\\n        address payable owner;\\n        uint32 withdrawalPermittedAt; // Overflows in year 2106.\\n        uint56 bountyAmount; // 32-bits compression. Decompressed size is 88 bits.\\n        uint8 category;\\n    }\\n\\n    bytes[64] public categoryToArbitratorExtraData;\\n\\n    mapping(uint72 => Article) public articleStorage; // Key: Storage address of article. Articles are not addressed with their identifiers, to enable reusing a storage slot.\\n    mapping(uint256 => DisputeData) public disputes; // Key: Dispute ID as in arbitrator.\\n\\n    constructor(\\n        IArbitrator _arbitrator,\\n        bytes memory _arbitratorExtraData,\\n        string memory _metaevidenceIpfsUri,\\n        uint256 _articleWithdrawalTimelock,\\n        uint256 _winnerStakeMultiplier,\\n        uint256 _loserStakeMultiplier,\\n        address payable _treasury\\n    ) ITruthPost(_articleWithdrawalTimelock, _winnerStakeMultiplier, _loserStakeMultiplier, _treasury) {\\n        ARBITRATOR = _arbitrator;\\n        newCategory(_metaevidenceIpfsUri, _arbitratorExtraData);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function initializeArticle(\\n        string calldata _articleID,\\n        uint8 _category,\\n        uint72 _searchPointer\\n    ) external payable override {\\n        require(_category < categoryCounter, \\\"This category does not exist\\\");\\n\\n        Article storage article;\\n        do {\\n            article = articleStorage[_searchPointer++];\\n        } while (article.bountyAmount != 0);\\n\\n        article.owner = payable(msg.sender);\\n        article.bountyAmount = uint56(msg.value >> NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE);\\n        article.category = _category;\\n\\n        require(article.bountyAmount > 0, \\\"You can't initialize an article without putting a bounty.\\\");\\n\\n        uint256 articleStorageAddress = _searchPointer - 1;\\n        emit NewArticle(_articleID, _category, articleStorageAddress);\\n        emit BalanceUpdate(\\n            articleStorageAddress,\\n            uint256(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE\\n        );\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function submitEvidence(uint256 _disputeID, string calldata _evidenceURI) external override {\\n        emit Evidence(ARBITRATOR, _disputeID, msg.sender, _evidenceURI);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function increaseBounty(uint72 _articleStorageAddress) external payable override {\\n        Article storage article = articleStorage[_articleStorageAddress];\\n        require(msg.sender == article.owner, \\\"Only author can increase bounty of an article.\\\");\\n        // To prevent mistakes.\\n\\n        article.bountyAmount += uint56(msg.value >> NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE);\\n\\n        emit BalanceUpdate(\\n            _articleStorageAddress,\\n            uint256(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE\\n        );\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function initiateWithdrawal(uint72 _articleStorageAddress) external override {\\n        Article storage article = articleStorage[_articleStorageAddress];\\n        require(msg.sender == article.owner, \\\"Only author can withdraw an article.\\\");\\n        require(article.withdrawalPermittedAt == 0, \\\"Withdrawal already initiated or there is a challenge.\\\");\\n\\n        article.withdrawalPermittedAt = uint32(block.timestamp + ARTICLE_WITHDRAWAL_TIMELOCK);\\n        emit TimelockStarted(_articleStorageAddress);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function withdraw(uint72 _articleStorageAddress) external override {\\n        Article storage article = articleStorage[_articleStorageAddress];\\n\\n        require(msg.sender == article.owner, \\\"Only author can withdraw an article.\\\");\\n        require(article.withdrawalPermittedAt != 0, \\\"You need to initiate withdrawal first.\\\");\\n        require(\\n            article.withdrawalPermittedAt <= block.timestamp,\\n            \\\"You need to wait for timelock or wait until the challenge ends.\\\"\\n        );\\n\\n        uint256 withdrawal = uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE;\\n        article.bountyAmount = 0;\\n        // This is critical to reset.\\n        article.withdrawalPermittedAt = 0;\\n        // This too, otherwise new article inside the same slot can withdraw instantly.\\n        payable(msg.sender).transfer(withdrawal);\\n        emit ArticleWithdrawn(_articleStorageAddress);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function challenge(uint72 _articleStorageAddress) external payable override {\\n        Article storage article = articleStorage[_articleStorageAddress];\\n        require(article.bountyAmount > 0, \\\"Nothing to challenge.\\\");\\n        require(article.withdrawalPermittedAt != type(uint32).max, \\\"There is an ongoing challenge.\\\");\\n        article.withdrawalPermittedAt = type(uint32).max;\\n        // Mark as challenged.\\n\\n        require(msg.value >= challengeFee(_articleStorageAddress), \\\"Insufficient funds to challenge.\\\");\\n\\n        uint256 taxAmount = ((uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE) *\\n            challengeTaxRate) / MULTIPLIER_DENOMINATOR;\\n        treasuryBalance += taxAmount;\\n\\n        uint256 disputeID = ARBITRATOR.createDispute{value: msg.value - taxAmount}(\\n            NUMBER_OF_RULING_OPTIONS,\\n            categoryToArbitratorExtraData[article.category]\\n        );\\n\\n        disputes[disputeID].challenger = payable(msg.sender);\\n        disputes[disputeID].rounds.push();\\n        disputes[disputeID].articleStorageAddress = uint72(_articleStorageAddress);\\n        disputes[disputeID].articleCategory = article.category;\\n\\n        // Evidence group ID is dispute ID.\\n        emit Dispute(ARBITRATOR, disputeID, article.category, disputeID);\\n        // This event links the dispute to an article storage address.\\n        emit Challenge(_articleStorageAddress, msg.sender, disputeID);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function fundAppeal(uint256 _disputeID, RulingOptions _supportedRuling)\\n        external\\n        payable\\n        override\\n        returns (bool fullyFunded)\\n    {\\n        DisputeData storage dispute = disputes[_disputeID];\\n\\n        RulingOptions currentRuling = RulingOptions(ARBITRATOR.currentRuling(_disputeID));\\n        uint256 basicCost;\\n        uint256 totalCost;\\n        {\\n            (uint256 appealWindowStart, uint256 appealWindowEnd) = ARBITRATOR.appealPeriod(_disputeID);\\n\\n            uint256 multiplier;\\n\\n            if (_supportedRuling == currentRuling) {\\n                require(block.timestamp < appealWindowEnd, \\\"Funding must be made within the appeal period.\\\");\\n\\n                multiplier = WINNER_STAKE_MULTIPLIER;\\n            } else {\\n                require(\\n                    block.timestamp <\\n                        (appealWindowStart +\\n                            (((appealWindowEnd - appealWindowStart) * LOSER_APPEAL_PERIOD_MULTIPLIER) /\\n                                MULTIPLIER_DENOMINATOR)),\\n                    \\\"Funding must be made within the first half appeal period.\\\"\\n                );\\n\\n                multiplier = LOSER_STAKE_MULTIPLIER;\\n            }\\n\\n            basicCost = ARBITRATOR.appealCost(_disputeID, categoryToArbitratorExtraData[dispute.articleCategory]);\\n            totalCost = basicCost + ((basicCost * (multiplier)) / MULTIPLIER_DENOMINATOR);\\n        }\\n\\n        RulingOptions supportedRulingOutcome = RulingOptions(_supportedRuling);\\n\\n        uint256 lastRoundIndex = dispute.rounds.length - 1;\\n        Round storage lastRound = dispute.rounds[lastRoundIndex];\\n        require(!lastRound.hasPaid[uint256(supportedRulingOutcome)], \\\"Appeal fee has already been paid.\\\");\\n\\n        uint256 contribution;\\n        {\\n            uint256 paidSoFar = lastRound.totalPerRuling[uint256(supportedRulingOutcome)];\\n\\n            if (paidSoFar >= totalCost) {\\n                contribution = 0;\\n                // This can happen if arbitration fee gets lowered in between contributions.\\n            } else {\\n                contribution = totalCost - paidSoFar > msg.value ? msg.value : totalCost - paidSoFar;\\n            }\\n        }\\n\\n        emit Contribution(_disputeID, lastRoundIndex, _supportedRuling, msg.sender, contribution);\\n\\n        lastRound.contributions[msg.sender][uint256(supportedRulingOutcome)] += contribution;\\n        lastRound.totalPerRuling[uint256(supportedRulingOutcome)] += contribution;\\n\\n        if (lastRound.totalPerRuling[uint256(supportedRulingOutcome)] >= totalCost) {\\n            lastRound.totalClaimableAfterExpenses += lastRound.totalPerRuling[uint256(supportedRulingOutcome)];\\n            lastRound.hasPaid[uint256(supportedRulingOutcome)] = true;\\n            emit RulingFunded(_disputeID, lastRoundIndex, _supportedRuling);\\n        }\\n\\n        if (\\n            lastRound.hasPaid[uint256(RulingOptions.ChallengeFailed)] &&\\n            lastRound.hasPaid[uint256(RulingOptions.Debunked)]\\n        ) {\\n            dispute.rounds.push();\\n            lastRound.totalClaimableAfterExpenses -= basicCost;\\n            ARBITRATOR.appeal{value: basicCost}(_disputeID, categoryToArbitratorExtraData[dispute.articleCategory]);\\n        }\\n\\n        // Ignoring failure condition deliberately.\\n        if (msg.value - contribution > 0) payable(msg.sender).send(msg.value - contribution);\\n\\n        return lastRound.hasPaid[uint256(supportedRulingOutcome)];\\n    }\\n\\n    /// @notice Execute a ruling\\n    /// @dev This is only for arbitrator to use.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _ruling Winning ruling option.\\n    function rule(uint256 _disputeID, uint256 _ruling) external override {\\n        require(IArbitrator(msg.sender) == ARBITRATOR);\\n\\n        DisputeData storage dispute = disputes[_disputeID];\\n        Round storage lastRound = dispute.rounds[dispute.rounds.length - 1];\\n\\n        // Appeal overrides arbitrator ruling. If a ruling option was not fully funded and the counter ruling option was funded, funded ruling option wins by default.\\n        RulingOptions wonByDefault;\\n        if (lastRound.hasPaid[uint256(RulingOptions.ChallengeFailed)]) {\\n            wonByDefault = RulingOptions.ChallengeFailed;\\n        } else if (lastRound.hasPaid[uint256(RulingOptions.ChallengeFailed)]) {\\n            wonByDefault = RulingOptions.Debunked;\\n        }\\n\\n        RulingOptions actualRuling = wonByDefault != RulingOptions.Tied ? wonByDefault : RulingOptions(_ruling);\\n        dispute.outcome = actualRuling;\\n\\n        uint72 articleStorageAddress = dispute.articleStorageAddress;\\n\\n        Article storage article = articleStorage[articleStorageAddress];\\n\\n        if (actualRuling == RulingOptions.Debunked) {\\n            uint256 bounty = uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE;\\n            article.bountyAmount = 0;\\n\\n            emit Debunked(articleStorageAddress);\\n            disputes[_disputeID].challenger.send(bounty);\\n            // Ignoring failure condition deliberately.\\n        }\\n        // In case of tie, article stands.\\n        article.withdrawalPermittedAt = 0;\\n        // Unmark as challenged.\\n        dispute.resolved = true;\\n\\n        emit Ruling(IArbitrator(msg.sender), _disputeID, _ruling);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256 _disputeID, address payable _contributor)\\n        external\\n        override\\n    {\\n        DisputeData storage dispute = disputes[_disputeID];\\n        uint256 noOfRounds = dispute.rounds.length;\\n        for (uint256 roundNumber = 0; roundNumber < noOfRounds; roundNumber++) {\\n            for (uint256 rulingOption = 0; rulingOption <= NUMBER_OF_RULING_OPTIONS; rulingOption++)\\n                withdrawFeesAndRewards(_disputeID, _contributor, roundNumber, RulingOptions(rulingOption));\\n        }\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function withdrawFeesAndRewardsForAllRounds(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        RulingOptions _ruling\\n    ) external override {\\n        DisputeData storage dispute = disputes[_disputeID];\\n        uint256 noOfRounds = dispute.rounds.length;\\n        for (uint256 roundNumber = 0; roundNumber < noOfRounds; roundNumber++) {\\n            withdrawFeesAndRewards(_disputeID, _contributor, roundNumber, _ruling);\\n        }\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function withdrawFeesAndRewardsForGivenPositions(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        uint256[][] calldata positions\\n    ) external override {\\n        for (uint256 roundNumber = 0; roundNumber < positions.length; roundNumber++) {\\n            for (uint256 rulingOption = 0; rulingOption < positions[roundNumber].length; rulingOption++) {\\n                if (positions[roundNumber][rulingOption] > 0) {\\n                    withdrawFeesAndRewards(_disputeID, _contributor, roundNumber, RulingOptions(rulingOption));\\n                }\\n            }\\n        }\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function withdrawFeesAndRewards(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        uint256 _roundNumber,\\n        RulingOptions _ruling\\n    ) public override returns (uint256 amount) {\\n        DisputeData storage dispute = disputes[_disputeID];\\n        require(dispute.resolved, \\\"There is no ruling yet.\\\");\\n\\n        Round storage round = dispute.rounds[_roundNumber];\\n\\n        amount = getWithdrawableAmount(round, _contributor, _ruling, dispute.outcome);\\n\\n        if (amount != 0) {\\n            round.contributions[_contributor][uint256(RulingOptions(_ruling))] = 0;\\n            _contributor.send(amount);\\n            // Ignoring failure condition deliberately.\\n            emit Withdrawal(_disputeID, _roundNumber, _ruling, _contributor, amount);\\n        }\\n    }\\n\\n    /// @notice Updates the challenge tax rate of the contract to a new value.\\n    /// @dev    The new challenge tax rate must be at most 25% based on MULTIPLIER_DENOMINATOR.\\n    ///         Only the current administrator can call this function. Emits ChallengeTaxRateUpdate.\\n    /// @param _newChallengeTaxRate The new challenge tax rate to be set.\\n    function updateChallengeTaxRate(uint256 _newChallengeTaxRate) external onlyAdmin {\\n        require(_newChallengeTaxRate <= 256, \\\"The tax rate can only be increased by a maximum of 25%\\\");\\n        challengeTaxRate = _newChallengeTaxRate;\\n        emit ChallengeTaxRateUpdate(_newChallengeTaxRate);\\n    }\\n\\n    /// @notice Transfers the balance of the contract to the treasury.\\n    /// @dev    Allows the contract to send its entire balance to the treasury address.\\n    ///         It is important to ensure that the treasury address is set correctly.\\n    ///         If the transfer fails, an exception will be raised, and the funds will remain in the contract.\\n    ///         Emits TreasuryBalanceUpdate.\\n    function transferBalanceToTreasury() public {\\n        uint256 amount = treasuryBalance;\\n        treasuryBalance = 0;\\n        TREASURY.send(amount);\\n        emit TreasuryBalanceUpdate(amount);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function switchPublishingLock() public override onlyAdmin {\\n        isPublishingEnabled = !isPublishingEnabled;\\n    }\\n\\n    /// @notice Changes the administrator of the contract to a new address.\\n    /// @dev    Only the current administrator can call this function. Emits AdminUpdate.\\n    /// @param  _newAdmin The address of the new administrator.\\n    function changeAdmin(address payable _newAdmin) external onlyAdmin {\\n        admin = _newAdmin;\\n        emit AdminUpdate(_newAdmin);\\n    }\\n\\n    /// @notice Changes the treasury address of the contract to a new address.\\n    /// @dev    Only the current administrator can call this function. Emits TreasuryUpdate.\\n    /// @param  _newTreasury The address of the new treasury.\\n    function changeTreasury(address payable _newTreasury) external onlyAdmin {\\n        TREASURY = _newTreasury;\\n        emit TreasuryUpdate(_newTreasury);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function changeWinnerStakeMultiplier(uint256 _newWinnerStakeMultiplier) external override onlyAdmin {\\n        WINNER_STAKE_MULTIPLIER = _newWinnerStakeMultiplier;\\n        emit WinnerStakeMultiplierUpdate(_newWinnerStakeMultiplier);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function changeLoserStakeMultiplier(uint256 _newLoserStakeMultiplier) external override onlyAdmin {\\n        LOSER_STAKE_MULTIPLIER = _newLoserStakeMultiplier;\\n        emit LoserStakeMultiplierUpdate(_newLoserStakeMultiplier);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function changeLoserAppealPeriodMultiplier(uint256 _newLoserAppealPeriodMultiplier) external override onlyAdmin {\\n        LOSER_APPEAL_PERIOD_MULTIPLIER = _newLoserAppealPeriodMultiplier;\\n        emit LoserAppealPeriodMultiplierUpdate(_newLoserAppealPeriodMultiplier);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function changeArticleWithdrawalTimelock(uint256 _newArticleWithdrawalTimelock) external override onlyAdmin {\\n        ARTICLE_WITHDRAWAL_TIMELOCK = _newArticleWithdrawalTimelock;\\n        emit ArticleWithdrawalTimelockUpdate(_newArticleWithdrawalTimelock);\\n    }\\n\\n    /// @notice Initialize a category.\\n    /// @param _metaevidenceIpfsUri IPFS content identifier for metaevidence.\\n    /// @param _arbitratorExtraData Extra data of Kleros arbitrator, signaling subcourt and jury size selection.\\n    function newCategory(string memory _metaevidenceIpfsUri, bytes memory _arbitratorExtraData) public {\\n        require(categoryCounter + 1 != 0, \\\"No space left for a new category\\\");\\n        emit MetaEvidence(categoryCounter, _metaevidenceIpfsUri);\\n        categoryToArbitratorExtraData[categoryCounter] = _arbitratorExtraData;\\n\\n        categoryCounter++;\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function transferOwnership(uint72 _articleStorageAddress, address payable _newOwner) external override {\\n        Article storage article = articleStorage[_articleStorageAddress];\\n        require(msg.sender == article.owner, \\\"Only author can transfer ownership.\\\");\\n        article.owner = _newOwner;\\n        emit OwnershipTransfer(_newOwner);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function challengeFee(uint72 _articleStorageAddress) public view override returns (uint256) {\\n        Article storage article = articleStorage[_articleStorageAddress];\\n\\n        uint256 arbitrationFee = ARBITRATOR.arbitrationCost(categoryToArbitratorExtraData[article.category]);\\n        uint256 challengeTax = ((uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE) *\\n            challengeTaxRate) / MULTIPLIER_DENOMINATOR;\\n\\n        return arbitrationFee + challengeTax;\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function appealFee(uint256 _disputeID) external view override returns (uint256 arbitrationFee) {\\n        DisputeData storage dispute = disputes[_disputeID];\\n        arbitrationFee = ARBITRATOR.appealCost(_disputeID, categoryToArbitratorExtraData[dispute.articleCategory]);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function findVacantStorageSlot(uint72 _searchPointer) external view override returns (uint256 vacantSlotIndex) {\\n        Article storage article;\\n        do {\\n            article = articleStorage[_searchPointer++];\\n        } while (article.bountyAmount != 0);\\n\\n        return _searchPointer - 1;\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function getTotalWithdrawableAmount(uint256 _disputeID, address payable _contributor)\\n        external\\n        view\\n        override\\n        returns (uint256 sum, uint256[][] memory amounts)\\n    {\\n        DisputeData storage dispute = disputes[_disputeID];\\n        if (!dispute.resolved) return (uint256(0), amounts);\\n        uint256 noOfRounds = dispute.rounds.length;\\n        RulingOptions finalRuling = dispute.outcome;\\n\\n        amounts = new uint256[][](noOfRounds);\\n        for (uint256 roundNumber = 0; roundNumber < noOfRounds; roundNumber++) {\\n            amounts[roundNumber] = new uint256[](NUMBER_OF_RULING_OPTIONS + 1);\\n\\n            Round storage round = dispute.rounds[roundNumber];\\n            for (uint256 rulingOption = 0; rulingOption <= NUMBER_OF_RULING_OPTIONS; rulingOption++) {\\n                uint256 currentAmount = getWithdrawableAmount(\\n                    round,\\n                    _contributor,\\n                    RulingOptions(rulingOption),\\n                    finalRuling\\n                );\\n                if (currentAmount > 0) {\\n                    sum += getWithdrawableAmount(round, _contributor, RulingOptions(rulingOption), finalRuling);\\n                    amounts[roundNumber][rulingOption] = currentAmount;\\n                }\\n            }\\n        }\\n    }\\n\\n    /// @notice Returns withdrawable amount for given parameters.\\n    function getWithdrawableAmount(\\n        Round storage _round,\\n        address _contributor,\\n        RulingOptions _ruling,\\n        RulingOptions _finalRuling\\n    ) internal view returns (uint256 amount) {\\n        RulingOptions givenRuling = RulingOptions(_ruling);\\n\\n        if (!_round.hasPaid[uint256(givenRuling)]) {\\n            // Allow to reimburse if funding was unsuccessful for this ruling option.\\n            amount = _round.contributions[_contributor][uint256(givenRuling)];\\n        } else {\\n            // Funding was successful for this ruling option.\\n            if (_ruling == _finalRuling) {\\n                // This ruling option is the ultimate winner.\\n                amount = _round.totalPerRuling[uint256(givenRuling)] > 0\\n                    ? (_round.contributions[_contributor][uint256(givenRuling)] * _round.totalClaimableAfterExpenses) /\\n                        _round.totalPerRuling[uint256(givenRuling)]\\n                    : 0;\\n            } else if (!_round.hasPaid[uint256(RulingOptions(_finalRuling))]) {\\n                // The ultimate winner was not funded in this round. Contributions discounting the appeal fee are reimbursed proportionally.\\n                amount =\\n                    (_round.contributions[_contributor][uint256(givenRuling)] * _round.totalClaimableAfterExpenses) /\\n                    (_round.totalPerRuling[uint256(RulingOptions.ChallengeFailed)] +\\n                        _round.totalPerRuling[uint256(RulingOptions.Debunked)]);\\n            }\\n        }\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function getRoundInfo(uint256 _disputeID, uint256 _round)\\n        external\\n        view\\n        override\\n        returns (\\n            bool[NUMBER_OF_RULING_OPTIONS + 1] memory hasPaid,\\n            uint256[NUMBER_OF_RULING_OPTIONS + 1] memory totalPerRuling,\\n            uint256 totalClaimableAfterExpenses\\n        )\\n    {\\n        Round storage round = disputes[_disputeID].rounds[_round];\\n        return (round.hasPaid, round.totalPerRuling, round.totalClaimableAfterExpenses);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function getLastRoundWinner(uint256 _disputeID) public view override returns (uint256) {\\n        return ARBITRATOR.currentRuling(_disputeID);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function getAppealPeriod(uint256 _disputeID, RulingOptions _ruling)\\n        external\\n        view\\n        override\\n        returns (uint256, uint256)\\n    {\\n        (uint256 appealWindowStart, uint256 appealWindowEnd) = ARBITRATOR.appealPeriod(_disputeID);\\n        uint256 loserAppealWindowEnd = appealWindowStart +\\n            (((appealWindowEnd - appealWindowStart) * LOSER_APPEAL_PERIOD_MULTIPLIER) / MULTIPLIER_DENOMINATOR);\\n\\n        bool isWinner = RulingOptions(getLastRoundWinner(_disputeID)) == _ruling;\\n        return isWinner ? (appealWindowStart, appealWindowEnd) : (appealWindowStart, loserAppealWindowEnd);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function getReturnOfInvestmentRatio(RulingOptions _ruling, RulingOptions _lastRoundWinner)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        bool isWinner = _lastRoundWinner == _ruling;\\n        uint256 DECIMAL_PRECISION = 1000;\\n        uint256 multiplier = isWinner ? WINNER_STAKE_MULTIPLIER : LOSER_STAKE_MULTIPLIER;\\n        return (((WINNER_STAKE_MULTIPLIER + LOSER_STAKE_MULTIPLIER + MULTIPLIER_DENOMINATOR) * DECIMAL_PRECISION) /\\n            (multiplier + MULTIPLIER_DENOMINATOR));\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function getAmountRemainsToBeRaised(uint256 _disputeID, RulingOptions _ruling)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        DisputeData storage dispute = disputes[_disputeID];\\n        uint256 lastRoundIndex = dispute.rounds.length - 1;\\n        Round storage lastRound = dispute.rounds[lastRoundIndex];\\n\\n        bool isWinner = RulingOptions(getLastRoundWinner(_disputeID)) == _ruling;\\n        uint256 multiplier = isWinner ? WINNER_STAKE_MULTIPLIER : LOSER_STAKE_MULTIPLIER;\\n\\n        uint256 raisedSoFar = lastRound.totalPerRuling[uint256(_ruling)];\\n        uint256 basicCost = ARBITRATOR.appealCost(_disputeID, categoryToArbitratorExtraData[dispute.articleCategory]);\\n        uint256 totalCost = basicCost + ((basicCost * (multiplier)) / MULTIPLIER_DENOMINATOR);\\n\\n        return totalCost - raisedSoFar;\\n    }\\n}\\n\",\"keccak256\":\"0xcfc1ca2cc409c1371262147a9e4983005ebb9a3021c2f0f477038f9691b79af6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":298,"contract":"contracts/TruthPost.sol:TruthPost","label":"isPublishingEnabled","offset":0,"slot":"0","type":"t_bool"},{"astId":300,"contract":"contracts/TruthPost.sol:TruthPost","label":"TREASURY","offset":1,"slot":"0","type":"t_address_payable"},{"astId":302,"contract":"contracts/TruthPost.sol:TruthPost","label":"treasuryBalance","offset":0,"slot":"1","type":"t_uint256"},{"astId":311,"contract":"contracts/TruthPost.sol:TruthPost","label":"LOSER_APPEAL_PERIOD_MULTIPLIER","offset":0,"slot":"2","type":"t_uint256"},{"astId":313,"contract":"contracts/TruthPost.sol:TruthPost","label":"ARTICLE_WITHDRAWAL_TIMELOCK","offset":0,"slot":"3","type":"t_uint256"},{"astId":315,"contract":"contracts/TruthPost.sol:TruthPost","label":"WINNER_STAKE_MULTIPLIER","offset":0,"slot":"4","type":"t_uint256"},{"astId":317,"contract":"contracts/TruthPost.sol:TruthPost","label":"LOSER_STAKE_MULTIPLIER","offset":0,"slot":"5","type":"t_uint256"},{"astId":320,"contract":"contracts/TruthPost.sol:TruthPost","label":"challengeTaxRate","offset":0,"slot":"6","type":"t_uint256"},{"astId":713,"contract":"contracts/TruthPost.sol:TruthPost","label":"categoryCounter","offset":0,"slot":"7","type":"t_uint8"},{"astId":720,"contract":"contracts/TruthPost.sol:TruthPost","label":"admin","offset":1,"slot":"7","type":"t_address_payable"},{"astId":783,"contract":"contracts/TruthPost.sol:TruthPost","label":"categoryToArbitratorExtraData","offset":0,"slot":"8","type":"t_array(t_bytes_storage)64_storage"},{"astId":788,"contract":"contracts/TruthPost.sol:TruthPost","label":"articleStorage","offset":0,"slot":"72","type":"t_mapping(t_uint72,t_struct(Article)779_storage)"},{"astId":793,"contract":"contracts/TruthPost.sol:TruthPost","label":"disputes","offset":0,"slot":"73","type":"t_mapping(t_uint256,t_struct(DisputeData)747_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_bool)3_storage":{"base":"t_bool","encoding":"inplace","label":"bool[3]","numberOfBytes":"32"},"t_array(t_bytes_storage)64_storage":{"base":"t_bytes_storage","encoding":"inplace","label":"bytes[64]","numberOfBytes":"2048"},"t_array(t_struct(Round)770_storage)dyn_storage":{"base":"t_struct(Round)770_storage","encoding":"dynamic_array","label":"struct TruthPost.Round[]","numberOfBytes":"32"},"t_array(t_uint256)3_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[3]","numberOfBytes":"96"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_enum(RulingOptions)295":{"encoding":"inplace","label":"enum ITruthPost.RulingOptions","numberOfBytes":"1"},"t_mapping(t_address,t_array(t_uint256)3_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[3])","numberOfBytes":"32","value":"t_array(t_uint256)3_storage"},"t_mapping(t_uint256,t_struct(DisputeData)747_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct TruthPost.DisputeData)","numberOfBytes":"32","value":"t_struct(DisputeData)747_storage"},"t_mapping(t_uint72,t_struct(Article)779_storage)":{"encoding":"mapping","key":"t_uint72","label":"mapping(uint72 => struct TruthPost.Article)","numberOfBytes":"32","value":"t_struct(Article)779_storage"},"t_struct(Article)779_storage":{"encoding":"inplace","label":"struct TruthPost.Article","members":[{"astId":772,"contract":"contracts/TruthPost.sol:TruthPost","label":"owner","offset":0,"slot":"0","type":"t_address_payable"},{"astId":774,"contract":"contracts/TruthPost.sol:TruthPost","label":"withdrawalPermittedAt","offset":20,"slot":"0","type":"t_uint32"},{"astId":776,"contract":"contracts/TruthPost.sol:TruthPost","label":"bountyAmount","offset":24,"slot":"0","type":"t_uint56"},{"astId":778,"contract":"contracts/TruthPost.sol:TruthPost","label":"category","offset":31,"slot":"0","type":"t_uint8"}],"numberOfBytes":"32"},"t_struct(DisputeData)747_storage":{"encoding":"inplace","label":"struct TruthPost.DisputeData","members":[{"astId":733,"contract":"contracts/TruthPost.sol:TruthPost","label":"challenger","offset":0,"slot":"0","type":"t_address_payable"},{"astId":736,"contract":"contracts/TruthPost.sol:TruthPost","label":"outcome","offset":20,"slot":"0","type":"t_enum(RulingOptions)295"},{"astId":738,"contract":"contracts/TruthPost.sol:TruthPost","label":"articleCategory","offset":21,"slot":"0","type":"t_uint8"},{"astId":740,"contract":"contracts/TruthPost.sol:TruthPost","label":"resolved","offset":22,"slot":"0","type":"t_bool"},{"astId":742,"contract":"contracts/TruthPost.sol:TruthPost","label":"articleStorageAddress","offset":23,"slot":"0","type":"t_uint72"},{"astId":746,"contract":"contracts/TruthPost.sol:TruthPost","label":"rounds","offset":0,"slot":"1","type":"t_array(t_struct(Round)770_storage)dyn_storage"}],"numberOfBytes":"64"},"t_struct(Round)770_storage":{"encoding":"inplace","label":"struct TruthPost.Round","members":[{"astId":755,"contract":"contracts/TruthPost.sol:TruthPost","label":"contributions","offset":0,"slot":"0","type":"t_mapping(t_address,t_array(t_uint256)3_storage)"},{"astId":761,"contract":"contracts/TruthPost.sol:TruthPost","label":"hasPaid","offset":0,"slot":"1","type":"t_array(t_bool)3_storage"},{"astId":767,"contract":"contracts/TruthPost.sol:TruthPost","label":"totalPerRuling","offset":0,"slot":"2","type":"t_array(t_uint256)3_storage"},{"astId":769,"contract":"contracts/TruthPost.sol:TruthPost","label":"totalClaimableAfterExpenses","offset":0,"slot":"5","type":"t_uint256"}],"numberOfBytes":"192"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint56":{"encoding":"inplace","label":"uint56","numberOfBytes":"7"},"t_uint72":{"encoding":"inplace","label":"uint72","numberOfBytes":"9"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"appealFee(uint256)":{"notice":"Get required appeal fee and deposit."},"challenge(uint72)":{"notice":"Challenge article."},"challengeFee(uint72)":{"notice":"Get required challenge fee."},"changeAdmin(address)":{"notice":"Changes the administrator of the contract to a new address."},"changeArticleWithdrawalTimelock(uint256)":{"notice":"Update the timelock for the article withdtrawal."},"changeLoserAppealPeriodMultiplier(uint256)":{"notice":"Update the appeal window for the loser."},"changeLoserStakeMultiplier(uint256)":{"notice":"Update the arbitration cost for the loser."},"changeTreasury(address)":{"notice":"Changes the treasury address of the contract to a new address."},"changeWinnerStakeMultiplier(uint256)":{"notice":"Update the arbitration cost for the winner."},"findVacantStorageSlot(uint72)":{"notice":"Find a vacant storage slot for an article."},"fundAppeal(uint256,uint8)":{"notice":"Fund a crowdfunding appeal."},"getAmountRemainsToBeRaised(uint256,uint8)":{"notice":"Learn about how much more needs to be raised for given ruling option."},"getAppealPeriod(uint256,uint8)":{"notice":"Get appeal time window."},"getLastRoundWinner(uint256)":{"notice":"Get last round's winner."},"getReturnOfInvestmentRatio(uint8,uint8)":{"notice":"Get return of investment ratio."},"getRoundInfo(uint256,uint256)":{"notice":"Learn about given dispute round."},"getTotalWithdrawableAmount(uint256,address)":{"notice":"Learn the total amount of appeal crowdfunding balance available."},"increaseBounty(uint72)":{"notice":"Increase bounty."},"initializeArticle(string,uint8,uint72)":{"notice":"Publish an article."},"initiateWithdrawal(uint72)":{"notice":"Initiate unpublishing process."},"newCategory(string,bytes)":{"notice":"Initialize a category."},"rule(uint256,uint256)":{"notice":"Execute a ruling"},"submitEvidence(uint256,string)":{"notice":"Submit an evidence."},"switchPublishingLock()":{"notice":"Switches publishing lock."},"transferBalanceToTreasury()":{"notice":"Transfers the balance of the contract to the treasury."},"transferOwnership(uint72,address)":{"notice":"Transfer ownership of an article."},"updateChallengeTaxRate(uint256)":{"notice":"Updates the challenge tax rate of the contract to a new value."},"withdraw(uint72)":{"notice":"Execute unpublishing."},"withdrawFeesAndRewards(uint256,address,uint256,uint8)":{"notice":"Withdraw appeal crowdfunding balance."},"withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)":{"notice":"Withdraw appeal crowdfunding balance for given ruling option for all rounds."},"withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)":{"notice":"Withdraw appeal crowdfunding balance for all ruling options and all rounds."},"withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])":{"notice":"Withdraw appeal crowdfunding balance for given ruling option and for given rounds."}},"notice":"Smart contract for a type of curation, where submitted items are on hold until they are withdrawn and the amount of security deposits are determined by submitters.","version":1}}},"contracts/for-testing-purposes/Arbitrator.sol":{"Arbitrator":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"},{"indexed":true,"internalType":"contract IArbitrable","name":"_arbitrable","type":"address"}],"name":"AppealDecision","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"},{"indexed":true,"internalType":"contract IArbitrable","name":"_arbitrable","type":"address"}],"name":"AppealPossible","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"},{"indexed":true,"internalType":"contract IArbitrable","name":"_arbitrable","type":"address"}],"name":"DisputeCreation","type":"event"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"appeal","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"appealCost","outputs":[{"internalType":"uint256","name":"fee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"}],"name":"appealPeriod","outputs":[{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"arbitrationCost","outputs":[{"internalType":"uint256","name":"fee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_choices","type":"uint256"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"createDispute","outputs":[{"internalType":"uint256","name":"disputeID","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"}],"name":"currentRuling","outputs":[{"internalType":"uint256","name":"ruling","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"}],"name":"disputeStatus","outputs":[{"internalType":"enum IArbitrator.DisputeStatus","name":"status","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"disputes","outputs":[{"internalType":"contract IArbitrable","name":"arbitrated","type":"address"},{"internalType":"uint256","name":"appealDeadline","type":"uint256"},{"internalType":"uint256","name":"numberOfRulingOptions","type":"uint256"},{"internalType":"uint256","name":"ruling","type":"uint256"},{"internalType":"enum IArbitrator.DisputeStatus","name":"status","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"}],"name":"executeRuling","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"uint256","name":"_ruling","type":"uint256"},{"internalType":"uint256","name":"_appealWindow","type":"uint256"}],"name":"giveRuling","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"governor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_arbitrationPrice","type":"uint256"}],"name":"setArbitrationPrice","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"DON'T USE ON PRODUCTION.","events":{"AppealDecision(uint256,address)":{"details":"To be emitted when the current ruling is appealed.","params":{"_arbitrable":"The contract which created the dispute.","_disputeID":"ID of the dispute."}},"AppealPossible(uint256,address)":{"details":"To be emitted when a dispute can be appealed.","params":{"_arbitrable":"The contract which created the dispute.","_disputeID":"ID of the dispute."}},"DisputeCreation(uint256,address)":{"details":"To be emitted when a dispute is created.","params":{"_arbitrable":"The contract which created the dispute.","_disputeID":"ID of the dispute."}}},"kind":"dev","methods":{"appeal(uint256,bytes)":{"details":"Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.","params":{"_disputeID":"ID of the dispute to be appealed.","_extraData":"Can be used to give extra info on the appeal."}},"appealPeriod(uint256)":{"details":"Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).","params":{"_disputeID":"ID of the dispute."},"returns":{"end":"The end of the period.","start":"The start of the period."}},"createDispute(uint256,bytes)":{"details":"Create a dispute. Must be called by the arbitrable contract. Must be paid at least arbitrationCost(_extraData).","params":{"_choices":"Amount of choices the arbitrator can make in this dispute.","_extraData":"Can be used to give additional info on the dispute to be created."},"returns":{"disputeID":"ID of the dispute created."}},"currentRuling(uint256)":{"details":"Return the current ruling of a dispute. This is useful for parties to know if they should appeal.","params":{"_disputeID":"ID of the dispute."},"returns":{"ruling":"The ruling which has been given or the one which will be given if there is no appeal."}},"disputeStatus(uint256)":{"details":"Return the status of a dispute.","params":{"_disputeID":"ID of the dispute to rule."},"returns":{"status":"The status of the dispute."}}},"title":"An IArbitrator implemetation for testing purposes.","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052600080546001600160a01b03191633179055670de0b6b3a7640000600155348015602d57600080fd5b50610e1e8061003d6000396000f3fe6080604052600436106100c75760003560e01c8063afe15cfb11610074578063f23f16e61161004e578063f23f16e614610232578063f7434ea914610252578063ffb43c481461027457600080fd5b8063afe15cfb146101ca578063bc97d0f3146101ff578063c13517e11461021f57600080fd5b806349912f88116100a557806349912f8814610164578063564a565d146101795780638bb04875146101aa57600080fd5b80630c340a24146100cc57806310f169e8146101095780631c3db16d14610136575b600080fd5b3480156100d857600080fd5b506000546100ec906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011557600080fd5b50610129610124366004610ba5565b610294565b6040516101009190610bf6565b34801561014257600080fd5b50610156610151366004610ba5565b610349565b604051908152602001610100565b610177610172366004610ca9565b610377565b005b34801561018557600080fd5b50610199610194366004610ba5565b61054c565b604051610100959493929190610cf0565b3480156101b657600080fd5b506101776101c5366004610ba5565b61059a565b3480156101d657600080fd5b506101ea6101e5366004610ba5565b610734565b60408051928352602083019190915201610100565b34801561020b57600080fd5b5061017761021a366004610d2d565b61076c565b61015661022d366004610ca9565b61093d565b34801561023e57600080fd5b5061015661024d366004610ca9565b610aef565b34801561025e57600080fd5b5061015661026d366004610d59565b5060015490565b34801561028057600080fd5b5061017761028f366004610ba5565b610b3a565b600080600283815481106102aa576102aa610d96565b6000918252602090912060059091020190506001600284815481106102d1576102d1610d96565b600091825260209091206004600590920201015460ff1660028111156102f9576102f9610bbe565b14801561030a575080600101544210155b156103185750600292915050565b6002838154811061032b5761032b610d96565b600091825260209091206004600590920201015460ff169392505050565b60006002828154811061035e5761035e610d96565b9060005260206000209060050201600301549050919050565b60006002838154811061038c5761038c610d96565b9060005260206000209060050201905060006103a88484610aef565b90506001600483015460ff1660028111156103c5576103c5610bbe565b146104175760405162461bcd60e51b815260206004820152601f60248201527f5468652064697370757465206d7573742062652061707065616c61626c652e0060448201526064015b60405180910390fd5b816001015442106104905760405162461bcd60e51b815260206004820152603a60248201527f5468652061707065616c206d757374206f63637572206265666f72652074686560448201527f20656e64206f66207468652061707065616c20706572696f642e000000000000606482015260840161040e565b803410156105065760405162461bcd60e51b815260206004820152602660248201527f56616c7565206973206c657373207468616e207265717569726564206170706560448201527f616c206665650000000000000000000000000000000000000000000000000000606482015260840161040e565b60006001830181905560048301805460ff19169055604051339186917f9c9b64db9e130f48381bf697abf638e73117dbfbfd7a4484f2da3ba188f4187d9190a350505050565b6002818154811061055c57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909160ff1685565b6000600282815481106105af576105af610d96565b6000918252602090912060059091020190506001600482015460ff1660028111156105dc576105dc610bbe565b146106295760405162461bcd60e51b815260206004820152601f60248201527f5468652064697370757465206d7573742062652061707065616c61626c652e00604482015260640161040e565b80600101544210156106a35760405162461bcd60e51b815260206004820152603f60248201527f5468652064697370757465206d7573742062652065786563757465642061667460448201527f6572206974732061707065616c20706572696f642068617320656e6465642e00606482015260840161040e565b6004818101805460ff19166002179055815460038301546040517f311a6c5600000000000000000000000000000000000000000000000000000000815292830185905260248301526001600160a01b03169063311a6c5690604401600060405180830381600087803b15801561071857600080fd5b505af115801561072c573d6000803e3d6000fd5b505050505050565b60008060006002848154811061074c5761074c610d96565b906000526020600020906005020190504281600101549250925050915091565b6000546001600160a01b031633146107d25760405162461bcd60e51b815260206004820152602360248201527f43616e206f6e6c792062652063616c6c65642062792074686520676f7665726e60448201526237b91760e91b606482015260840161040e565b6000600284815481106107e7576107e7610d96565b90600052602060002090600502019050806002015483111561084b5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c69642072756c696e672e0000000000000000000000000000000000604482015260640161040e565b6000600482015460ff16600281111561086657610866610bbe565b146108d95760405162461bcd60e51b815260206004820152602c60248201527f5468652064697370757465206d7573742062652077616974696e6720666f722060448201527f6172626974726174696f6e2e0000000000000000000000000000000000000000606482015260840161040e565b6003810183905560048101805460ff191660011790556108f98242610dc2565b600182015580546040516001600160a01b039091169085907fa5d41b970d849372be1da1481ffd78d162bfe57a7aa2fe4e5fb73481fa5ac24f90600090a350505050565b60008061094960015490565b9050803410156109c15760405162461bcd60e51b815260206004820152602c60248201527f56616c7565206973206c657373207468616e207265717569726564206172626960448201527f74726174696f6e206665652e0000000000000000000000000000000000000000606482015260840161040e565b60026040518060a00160405280336001600160a01b03168152602001600081526020018681526020016000815260200160006002811115610a0457610a04610bbe565b90528154600180820184556000938452602093849020835160059093020180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0390931692909217825592820151818401556040820151600280830191909155606083015160038301556080830151600483018054949593949193909260ff19909216918490811115610aa257610aa2610bbe565b021790555050600254610ab89150600190610dd5565b604051909250339083907f141dfc18aa6a56fc816f44f0e9e2f1ebc92b15ab167770e17db5b084c10ed99590600090a35092915050565b6000610b316040518060400160405280600681526020017f554e5553454400000000000000000000000000000000000000000000000000008152505060015490565b90505b92915050565b6000546001600160a01b03163314610ba05760405162461bcd60e51b815260206004820152602360248201527f43616e206f6e6c792062652063616c6c65642062792074686520676f7665726e60448201526237b91760e91b606482015260840161040e565b600155565b600060208284031215610bb757600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60038110610bf257634e487b7160e01b600052602160045260246000fd5b9052565b60208101610b348284610bd4565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c2b57600080fd5b813567ffffffffffffffff811115610c4557610c45610c04565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610c7457610c74610c04565b604052818152838201602001851015610c8c57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610cbc57600080fd5b82359150602083013567ffffffffffffffff811115610cda57600080fd5b610ce685828601610c1a565b9150509250929050565b600060a0820190506001600160a01b0387168252856020830152846040830152836060830152610d236080830184610bd4565b9695505050505050565b600080600060608486031215610d4257600080fd5b505081359360208301359350604090920135919050565b600060208284031215610d6b57600080fd5b813567ffffffffffffffff811115610d8257600080fd5b610d8e84828501610c1a565b949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610b3457610b34610dac565b81810381811115610b3457610b34610dac56fea26469706673582212200ebbcde5eb6e4f436e2f0b1874b98a4ae32806d1f9300b13065d162ae553a5a564736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1E DUP1 PUSH2 0x3D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFE15CFB GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xF23F16E6 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xF23F16E6 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xF7434EA9 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xFFB43C48 EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAFE15CFB EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xBC97D0F3 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xC13517E1 EQ PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x49912F88 GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0x49912F88 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x564A565D EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x8BB04875 EQ PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC340A24 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x10F169E8 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x1C3DB16D EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xEC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xBF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0xD2D JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH2 0x156 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0xAEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0xD59 JUMP JUMPDEST POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH2 0x2AA PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2D1 JUMPI PUSH2 0x2D1 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2F9 JUMPI PUSH2 0x2F9 PUSH2 0xBBE JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x30A JUMPI POP DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x318 JUMPI POP PUSH1 0x2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x32B JUMPI PUSH2 0x32B PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x35E JUMPI PUSH2 0x35E PUSH2 0xD96 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x38C JUMPI PUSH2 0x38C PUSH2 0xD96 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0x3A8 DUP5 DUP5 PUSH2 0xAEF JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3C5 JUMPI PUSH2 0x3C5 PUSH2 0xBBE JUMP JUMPDEST EQ PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652064697370757465206D7573742062652061707065616C61626C652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP LT PUSH2 0x490 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652061707065616C206D757374206F63637572206265666F726520746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20656E64206F66207468652061707065616C20706572696F642E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0x506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C7565206973206C657373207468616E2072657175697265642061707065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C206665650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 DUP7 SWAP2 PUSH32 0x9C9B64DB9E130F48381BF697ABF638E73117DBFBFD7A4484F2DA3BA188F4187D SWAP2 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5AF JUMPI PUSH2 0x5AF PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5DC JUMPI PUSH2 0x5DC PUSH2 0xBBE JUMP JUMPDEST EQ PUSH2 0x629 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652064697370757465206D7573742062652061707065616C61626C652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652064697370757465206D75737420626520657865637574656420616674 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572206974732061707065616C20706572696F642068617320656E6465642E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE DUP2 SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x311A6C5600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP3 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x311A6C56 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x72C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x74C JUMPI PUSH2 0x74C PUSH2 0xD96 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP TIMESTAMP DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792062652063616C6C65642062792074686520676F7665726E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x37B917 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x7E7 JUMPI PUSH2 0x7E7 PUSH2 0xD96 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD DUP4 GT ISZERO PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642072756C696E672E0000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x866 JUMPI PUSH2 0x866 PUSH2 0xBBE JUMP JUMPDEST EQ PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652064697370757465206D7573742062652077616974696E6720666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6172626974726174696F6E2E0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x8F9 DUP3 TIMESTAMP PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH32 0xA5D41B970D849372BE1DA1481FFD78D162BFE57A7AA2FE4E5FB73481FA5AC24F SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x949 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C7565206973206C657373207468616E2072657175697265642061726269 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74726174696F6E206665652E0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA04 JUMPI PUSH2 0xA04 PUSH2 0xBBE JUMP JUMPDEST SWAP1 MSTORE DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP1 SWAP4 MUL ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE SWAP3 DUP3 ADD MLOAD DUP2 DUP5 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD DUP1 SLOAD SWAP5 SWAP6 SWAP4 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0xAA2 JUMPI PUSH2 0xAA2 PUSH2 0xBBE JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH1 0x2 SLOAD PUSH2 0xAB8 SWAP2 POP PUSH1 0x1 SWAP1 PUSH2 0xDD5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP3 POP CALLER SWAP1 DUP4 SWAP1 PUSH32 0x141DFC18AA6A56FC816F44F0E9E2F1EBC92B15AB167770E17DB5B084C10ED995 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB31 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x554E555345440000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792062652063616C6C65642062792074686520676F7665726E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x37B917 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xBF2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xB34 DUP3 DUP5 PUSH2 0xBD4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC45 JUMPI PUSH2 0xC45 PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC74 JUMPI PUSH2 0xC74 PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0xC8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE6 DUP6 DUP3 DUP7 ADD PUSH2 0xC1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xD23 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xBD4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD8E DUP5 DUP3 DUP6 ADD PUSH2 0xC1A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xB34 JUMPI PUSH2 0xB34 PUSH2 0xDAC JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xB34 JUMPI PUSH2 0xB34 PUSH2 0xDAC JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xBB 0xCD 0xE5 0xEB PUSH15 0x4F436E2F0B1874B98A4AE32806D1F9 ADDRESS SIGNEXTEND SGT MOD TSTORE AND 0x2A 0xE5 MSTORE8 0xA5 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"265:3837:6:-:0;;;304:36;;;-1:-1:-1;;;;;;304:36:6;330:10;304:36;;;380:25;304:36;344:61;265:3837;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@appealCost_2931":{"entryPoint":2799,"id":2931,"parameterSlots":2,"returnSlots":1},"@appealPeriod_3246":{"entryPoint":1844,"id":3246,"parameterSlots":1,"returnSlots":2},"@appeal_3121":{"entryPoint":887,"id":3121,"parameterSlots":2,"returnSlots":0},"@arbitrationCost_2916":{"entryPoint":null,"id":2916,"parameterSlots":1,"returnSlots":1},"@createDispute_2987":{"entryPoint":2365,"id":2987,"parameterSlots":2,"returnSlots":1},"@currentRuling_3222":{"entryPoint":841,"id":3222,"parameterSlots":1,"returnSlots":1},"@disputeStatus_3208":{"entryPoint":660,"id":3208,"parameterSlots":1,"returnSlots":1},"@disputes_2893":{"entryPoint":1356,"id":2893,"parameterSlots":0,"returnSlots":0},"@executeRuling_3169":{"entryPoint":1434,"id":3169,"parameterSlots":1,"returnSlots":0},"@giveRuling_3051":{"entryPoint":1900,"id":3051,"parameterSlots":3,"returnSlots":0},"@governor_2861":{"entryPoint":null,"id":2861,"parameterSlots":0,"returnSlots":0},"@setArbitrationPrice_2905":{"entryPoint":2874,"id":2905,"parameterSlots":1,"returnSlots":0},"abi_decode_bytes":{"entryPoint":3098,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":3417,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2981,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_bytes_memory_ptr":{"entryPoint":3241,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_uint256":{"entryPoint":3373,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_enum_DisputeStatus":{"entryPoint":3028,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IArbitrable_$153_t_uint256_t_uint256_t_uint256_t_enum$_DisputeStatus_$161__to_t_address_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed":{"entryPoint":3312,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_enum$_DisputeStatus_$161__to_t_uint8__fromStack_reversed":{"entryPoint":3062,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0a67387a01b638629562ce413604ca06df839cc408aaf6c072640f1a5c4f2346__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4694def74d735a2c889563bbe682a7dedbe5ed436ba455a7b4f1b1153e6eb3c0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4ffb16c8c515bb19f47e2c39c4abe69591900df2f6712a42bdbaeaacd81aaa88__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_785e30534d9aba417fa2efee2cef6269679d346420799f1ee0b4c1d9e65f4259__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ed65b2f49f93967b3a006e2788127dd02ebf255edcbc59f8b4e80c9299e6eca3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3522,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3541,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3500,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":3006,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3478,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3076,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:8189:7","nodeType":"YulBlock","src":"0:8189:7","statements":[{"nativeSrc":"6:3:7","nodeType":"YulBlock","src":"6:3:7","statements":[]},{"body":{"nativeSrc":"115:125:7","nodeType":"YulBlock","src":"115:125:7","statements":[{"nativeSrc":"125:26:7","nodeType":"YulAssignment","src":"125:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"137:9:7","nodeType":"YulIdentifier","src":"137:9:7"},{"kind":"number","nativeSrc":"148:2:7","nodeType":"YulLiteral","src":"148:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"133:3:7","nodeType":"YulIdentifier","src":"133:3:7"},"nativeSrc":"133:18:7","nodeType":"YulFunctionCall","src":"133:18:7"},"variableNames":[{"name":"tail","nativeSrc":"125:4:7","nodeType":"YulIdentifier","src":"125:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"167:9:7","nodeType":"YulIdentifier","src":"167:9:7"},{"arguments":[{"name":"value0","nativeSrc":"182:6:7","nodeType":"YulIdentifier","src":"182:6:7"},{"kind":"number","nativeSrc":"190:42:7","nodeType":"YulLiteral","src":"190:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"178:3:7","nodeType":"YulIdentifier","src":"178:3:7"},"nativeSrc":"178:55:7","nodeType":"YulFunctionCall","src":"178:55:7"}],"functionName":{"name":"mstore","nativeSrc":"160:6:7","nodeType":"YulIdentifier","src":"160:6:7"},"nativeSrc":"160:74:7","nodeType":"YulFunctionCall","src":"160:74:7"},"nativeSrc":"160:74:7","nodeType":"YulExpressionStatement","src":"160:74:7"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"14:226:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"84:9:7","nodeType":"YulTypedName","src":"84:9:7","type":""},{"name":"value0","nativeSrc":"95:6:7","nodeType":"YulTypedName","src":"95:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"106:4:7","nodeType":"YulTypedName","src":"106:4:7","type":""}],"src":"14:226:7"},{"body":{"nativeSrc":"315:156:7","nodeType":"YulBlock","src":"315:156:7","statements":[{"body":{"nativeSrc":"361:16:7","nodeType":"YulBlock","src":"361:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"370:1:7","nodeType":"YulLiteral","src":"370:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"373:1:7","nodeType":"YulLiteral","src":"373:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"363:6:7","nodeType":"YulIdentifier","src":"363:6:7"},"nativeSrc":"363:12:7","nodeType":"YulFunctionCall","src":"363:12:7"},"nativeSrc":"363:12:7","nodeType":"YulExpressionStatement","src":"363:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"336:7:7","nodeType":"YulIdentifier","src":"336:7:7"},{"name":"headStart","nativeSrc":"345:9:7","nodeType":"YulIdentifier","src":"345:9:7"}],"functionName":{"name":"sub","nativeSrc":"332:3:7","nodeType":"YulIdentifier","src":"332:3:7"},"nativeSrc":"332:23:7","nodeType":"YulFunctionCall","src":"332:23:7"},{"kind":"number","nativeSrc":"357:2:7","nodeType":"YulLiteral","src":"357:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"328:3:7","nodeType":"YulIdentifier","src":"328:3:7"},"nativeSrc":"328:32:7","nodeType":"YulFunctionCall","src":"328:32:7"},"nativeSrc":"325:52:7","nodeType":"YulIf","src":"325:52:7"},{"nativeSrc":"386:14:7","nodeType":"YulVariableDeclaration","src":"386:14:7","value":{"kind":"number","nativeSrc":"399:1:7","nodeType":"YulLiteral","src":"399:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"390:5:7","nodeType":"YulTypedName","src":"390:5:7","type":""}]},{"nativeSrc":"409:32:7","nodeType":"YulAssignment","src":"409:32:7","value":{"arguments":[{"name":"headStart","nativeSrc":"431:9:7","nodeType":"YulIdentifier","src":"431:9:7"}],"functionName":{"name":"calldataload","nativeSrc":"418:12:7","nodeType":"YulIdentifier","src":"418:12:7"},"nativeSrc":"418:23:7","nodeType":"YulFunctionCall","src":"418:23:7"},"variableNames":[{"name":"value","nativeSrc":"409:5:7","nodeType":"YulIdentifier","src":"409:5:7"}]},{"nativeSrc":"450:15:7","nodeType":"YulAssignment","src":"450:15:7","value":{"name":"value","nativeSrc":"460:5:7","nodeType":"YulIdentifier","src":"460:5:7"},"variableNames":[{"name":"value0","nativeSrc":"450:6:7","nodeType":"YulIdentifier","src":"450:6:7"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"245:226:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"281:9:7","nodeType":"YulTypedName","src":"281:9:7","type":""},{"name":"dataEnd","nativeSrc":"292:7:7","nodeType":"YulTypedName","src":"292:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"304:6:7","nodeType":"YulTypedName","src":"304:6:7","type":""}],"src":"245:226:7"},{"body":{"nativeSrc":"508:152:7","nodeType":"YulBlock","src":"508:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"525:1:7","nodeType":"YulLiteral","src":"525:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"528:77:7","nodeType":"YulLiteral","src":"528:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"518:6:7","nodeType":"YulIdentifier","src":"518:6:7"},"nativeSrc":"518:88:7","nodeType":"YulFunctionCall","src":"518:88:7"},"nativeSrc":"518:88:7","nodeType":"YulExpressionStatement","src":"518:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"622:1:7","nodeType":"YulLiteral","src":"622:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"625:4:7","nodeType":"YulLiteral","src":"625:4:7","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"615:6:7","nodeType":"YulIdentifier","src":"615:6:7"},"nativeSrc":"615:15:7","nodeType":"YulFunctionCall","src":"615:15:7"},"nativeSrc":"615:15:7","nodeType":"YulExpressionStatement","src":"615:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"646:1:7","nodeType":"YulLiteral","src":"646:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"649:4:7","nodeType":"YulLiteral","src":"649:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"639:6:7","nodeType":"YulIdentifier","src":"639:6:7"},"nativeSrc":"639:15:7","nodeType":"YulFunctionCall","src":"639:15:7"},"nativeSrc":"639:15:7","nodeType":"YulExpressionStatement","src":"639:15:7"}]},"name":"panic_error_0x21","nativeSrc":"476:184:7","nodeType":"YulFunctionDefinition","src":"476:184:7"},{"body":{"nativeSrc":"720:243:7","nodeType":"YulBlock","src":"720:243:7","statements":[{"body":{"nativeSrc":"762:168:7","nodeType":"YulBlock","src":"762:168:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"783:1:7","nodeType":"YulLiteral","src":"783:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"786:77:7","nodeType":"YulLiteral","src":"786:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"776:6:7","nodeType":"YulIdentifier","src":"776:6:7"},"nativeSrc":"776:88:7","nodeType":"YulFunctionCall","src":"776:88:7"},"nativeSrc":"776:88:7","nodeType":"YulExpressionStatement","src":"776:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"884:1:7","nodeType":"YulLiteral","src":"884:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"887:4:7","nodeType":"YulLiteral","src":"887:4:7","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"877:6:7","nodeType":"YulIdentifier","src":"877:6:7"},"nativeSrc":"877:15:7","nodeType":"YulFunctionCall","src":"877:15:7"},"nativeSrc":"877:15:7","nodeType":"YulExpressionStatement","src":"877:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"912:1:7","nodeType":"YulLiteral","src":"912:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"915:4:7","nodeType":"YulLiteral","src":"915:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"905:6:7","nodeType":"YulIdentifier","src":"905:6:7"},"nativeSrc":"905:15:7","nodeType":"YulFunctionCall","src":"905:15:7"},"nativeSrc":"905:15:7","nodeType":"YulExpressionStatement","src":"905:15:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"743:5:7","nodeType":"YulIdentifier","src":"743:5:7"},{"kind":"number","nativeSrc":"750:1:7","nodeType":"YulLiteral","src":"750:1:7","type":"","value":"3"}],"functionName":{"name":"lt","nativeSrc":"740:2:7","nodeType":"YulIdentifier","src":"740:2:7"},"nativeSrc":"740:12:7","nodeType":"YulFunctionCall","src":"740:12:7"}],"functionName":{"name":"iszero","nativeSrc":"733:6:7","nodeType":"YulIdentifier","src":"733:6:7"},"nativeSrc":"733:20:7","nodeType":"YulFunctionCall","src":"733:20:7"},"nativeSrc":"730:200:7","nodeType":"YulIf","src":"730:200:7"},{"expression":{"arguments":[{"name":"pos","nativeSrc":"946:3:7","nodeType":"YulIdentifier","src":"946:3:7"},{"name":"value","nativeSrc":"951:5:7","nodeType":"YulIdentifier","src":"951:5:7"}],"functionName":{"name":"mstore","nativeSrc":"939:6:7","nodeType":"YulIdentifier","src":"939:6:7"},"nativeSrc":"939:18:7","nodeType":"YulFunctionCall","src":"939:18:7"},"nativeSrc":"939:18:7","nodeType":"YulExpressionStatement","src":"939:18:7"}]},"name":"abi_encode_enum_DisputeStatus","nativeSrc":"665:298:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"704:5:7","nodeType":"YulTypedName","src":"704:5:7","type":""},{"name":"pos","nativeSrc":"711:3:7","nodeType":"YulTypedName","src":"711:3:7","type":""}],"src":"665:298:7"},{"body":{"nativeSrc":"1084:99:7","nodeType":"YulBlock","src":"1084:99:7","statements":[{"nativeSrc":"1094:26:7","nodeType":"YulAssignment","src":"1094:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"1106:9:7","nodeType":"YulIdentifier","src":"1106:9:7"},{"kind":"number","nativeSrc":"1117:2:7","nodeType":"YulLiteral","src":"1117:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1102:3:7","nodeType":"YulIdentifier","src":"1102:3:7"},"nativeSrc":"1102:18:7","nodeType":"YulFunctionCall","src":"1102:18:7"},"variableNames":[{"name":"tail","nativeSrc":"1094:4:7","nodeType":"YulIdentifier","src":"1094:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1159:6:7","nodeType":"YulIdentifier","src":"1159:6:7"},{"name":"headStart","nativeSrc":"1167:9:7","nodeType":"YulIdentifier","src":"1167:9:7"}],"functionName":{"name":"abi_encode_enum_DisputeStatus","nativeSrc":"1129:29:7","nodeType":"YulIdentifier","src":"1129:29:7"},"nativeSrc":"1129:48:7","nodeType":"YulFunctionCall","src":"1129:48:7"},"nativeSrc":"1129:48:7","nodeType":"YulExpressionStatement","src":"1129:48:7"}]},"name":"abi_encode_tuple_t_enum$_DisputeStatus_$161__to_t_uint8__fromStack_reversed","nativeSrc":"968:215:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1053:9:7","nodeType":"YulTypedName","src":"1053:9:7","type":""},{"name":"value0","nativeSrc":"1064:6:7","nodeType":"YulTypedName","src":"1064:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1075:4:7","nodeType":"YulTypedName","src":"1075:4:7","type":""}],"src":"968:215:7"},{"body":{"nativeSrc":"1289:76:7","nodeType":"YulBlock","src":"1289:76:7","statements":[{"nativeSrc":"1299:26:7","nodeType":"YulAssignment","src":"1299:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"1311:9:7","nodeType":"YulIdentifier","src":"1311:9:7"},{"kind":"number","nativeSrc":"1322:2:7","nodeType":"YulLiteral","src":"1322:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1307:3:7","nodeType":"YulIdentifier","src":"1307:3:7"},"nativeSrc":"1307:18:7","nodeType":"YulFunctionCall","src":"1307:18:7"},"variableNames":[{"name":"tail","nativeSrc":"1299:4:7","nodeType":"YulIdentifier","src":"1299:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1341:9:7","nodeType":"YulIdentifier","src":"1341:9:7"},{"name":"value0","nativeSrc":"1352:6:7","nodeType":"YulIdentifier","src":"1352:6:7"}],"functionName":{"name":"mstore","nativeSrc":"1334:6:7","nodeType":"YulIdentifier","src":"1334:6:7"},"nativeSrc":"1334:25:7","nodeType":"YulFunctionCall","src":"1334:25:7"},"nativeSrc":"1334:25:7","nodeType":"YulExpressionStatement","src":"1334:25:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1188:177:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1258:9:7","nodeType":"YulTypedName","src":"1258:9:7","type":""},{"name":"value0","nativeSrc":"1269:6:7","nodeType":"YulTypedName","src":"1269:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1280:4:7","nodeType":"YulTypedName","src":"1280:4:7","type":""}],"src":"1188:177:7"},{"body":{"nativeSrc":"1402:152:7","nodeType":"YulBlock","src":"1402:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1419:1:7","nodeType":"YulLiteral","src":"1419:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1422:77:7","nodeType":"YulLiteral","src":"1422:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1412:6:7","nodeType":"YulIdentifier","src":"1412:6:7"},"nativeSrc":"1412:88:7","nodeType":"YulFunctionCall","src":"1412:88:7"},"nativeSrc":"1412:88:7","nodeType":"YulExpressionStatement","src":"1412:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1516:1:7","nodeType":"YulLiteral","src":"1516:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"1519:4:7","nodeType":"YulLiteral","src":"1519:4:7","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1509:6:7","nodeType":"YulIdentifier","src":"1509:6:7"},"nativeSrc":"1509:15:7","nodeType":"YulFunctionCall","src":"1509:15:7"},"nativeSrc":"1509:15:7","nodeType":"YulExpressionStatement","src":"1509:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1540:1:7","nodeType":"YulLiteral","src":"1540:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1543:4:7","nodeType":"YulLiteral","src":"1543:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1533:6:7","nodeType":"YulIdentifier","src":"1533:6:7"},"nativeSrc":"1533:15:7","nodeType":"YulFunctionCall","src":"1533:15:7"},"nativeSrc":"1533:15:7","nodeType":"YulExpressionStatement","src":"1533:15:7"}]},"name":"panic_error_0x41","nativeSrc":"1370:184:7","nodeType":"YulFunctionDefinition","src":"1370:184:7"},{"body":{"nativeSrc":"1611:673:7","nodeType":"YulBlock","src":"1611:673:7","statements":[{"body":{"nativeSrc":"1660:16:7","nodeType":"YulBlock","src":"1660:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1669:1:7","nodeType":"YulLiteral","src":"1669:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1672:1:7","nodeType":"YulLiteral","src":"1672:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1662:6:7","nodeType":"YulIdentifier","src":"1662:6:7"},"nativeSrc":"1662:12:7","nodeType":"YulFunctionCall","src":"1662:12:7"},"nativeSrc":"1662:12:7","nodeType":"YulExpressionStatement","src":"1662:12:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1639:6:7","nodeType":"YulIdentifier","src":"1639:6:7"},{"kind":"number","nativeSrc":"1647:4:7","nodeType":"YulLiteral","src":"1647:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1635:3:7","nodeType":"YulIdentifier","src":"1635:3:7"},"nativeSrc":"1635:17:7","nodeType":"YulFunctionCall","src":"1635:17:7"},{"name":"end","nativeSrc":"1654:3:7","nodeType":"YulIdentifier","src":"1654:3:7"}],"functionName":{"name":"slt","nativeSrc":"1631:3:7","nodeType":"YulIdentifier","src":"1631:3:7"},"nativeSrc":"1631:27:7","nodeType":"YulFunctionCall","src":"1631:27:7"}],"functionName":{"name":"iszero","nativeSrc":"1624:6:7","nodeType":"YulIdentifier","src":"1624:6:7"},"nativeSrc":"1624:35:7","nodeType":"YulFunctionCall","src":"1624:35:7"},"nativeSrc":"1621:55:7","nodeType":"YulIf","src":"1621:55:7"},{"nativeSrc":"1685:34:7","nodeType":"YulVariableDeclaration","src":"1685:34:7","value":{"arguments":[{"name":"offset","nativeSrc":"1712:6:7","nodeType":"YulIdentifier","src":"1712:6:7"}],"functionName":{"name":"calldataload","nativeSrc":"1699:12:7","nodeType":"YulIdentifier","src":"1699:12:7"},"nativeSrc":"1699:20:7","nodeType":"YulFunctionCall","src":"1699:20:7"},"variables":[{"name":"length","nativeSrc":"1689:6:7","nodeType":"YulTypedName","src":"1689:6:7","type":""}]},{"body":{"nativeSrc":"1762:22:7","nodeType":"YulBlock","src":"1762:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1764:16:7","nodeType":"YulIdentifier","src":"1764:16:7"},"nativeSrc":"1764:18:7","nodeType":"YulFunctionCall","src":"1764:18:7"},"nativeSrc":"1764:18:7","nodeType":"YulExpressionStatement","src":"1764:18:7"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1734:6:7","nodeType":"YulIdentifier","src":"1734:6:7"},{"kind":"number","nativeSrc":"1742:18:7","nodeType":"YulLiteral","src":"1742:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1731:2:7","nodeType":"YulIdentifier","src":"1731:2:7"},"nativeSrc":"1731:30:7","nodeType":"YulFunctionCall","src":"1731:30:7"},"nativeSrc":"1728:56:7","nodeType":"YulIf","src":"1728:56:7"},{"nativeSrc":"1793:23:7","nodeType":"YulVariableDeclaration","src":"1793:23:7","value":{"arguments":[{"kind":"number","nativeSrc":"1813:2:7","nodeType":"YulLiteral","src":"1813:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1807:5:7","nodeType":"YulIdentifier","src":"1807:5:7"},"nativeSrc":"1807:9:7","nodeType":"YulFunctionCall","src":"1807:9:7"},"variables":[{"name":"memPtr","nativeSrc":"1797:6:7","nodeType":"YulTypedName","src":"1797:6:7","type":""}]},{"nativeSrc":"1825:85:7","nodeType":"YulVariableDeclaration","src":"1825:85:7","value":{"arguments":[{"name":"memPtr","nativeSrc":"1847:6:7","nodeType":"YulIdentifier","src":"1847:6:7"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1871:6:7","nodeType":"YulIdentifier","src":"1871:6:7"},{"kind":"number","nativeSrc":"1879:4:7","nodeType":"YulLiteral","src":"1879:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1867:3:7","nodeType":"YulIdentifier","src":"1867:3:7"},"nativeSrc":"1867:17:7","nodeType":"YulFunctionCall","src":"1867:17:7"},{"arguments":[{"kind":"number","nativeSrc":"1890:2:7","nodeType":"YulLiteral","src":"1890:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1886:3:7","nodeType":"YulIdentifier","src":"1886:3:7"},"nativeSrc":"1886:7:7","nodeType":"YulFunctionCall","src":"1886:7:7"}],"functionName":{"name":"and","nativeSrc":"1863:3:7","nodeType":"YulIdentifier","src":"1863:3:7"},"nativeSrc":"1863:31:7","nodeType":"YulFunctionCall","src":"1863:31:7"},{"kind":"number","nativeSrc":"1896:2:7","nodeType":"YulLiteral","src":"1896:2:7","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"1859:3:7","nodeType":"YulIdentifier","src":"1859:3:7"},"nativeSrc":"1859:40:7","nodeType":"YulFunctionCall","src":"1859:40:7"},{"arguments":[{"kind":"number","nativeSrc":"1905:2:7","nodeType":"YulLiteral","src":"1905:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1901:3:7","nodeType":"YulIdentifier","src":"1901:3:7"},"nativeSrc":"1901:7:7","nodeType":"YulFunctionCall","src":"1901:7:7"}],"functionName":{"name":"and","nativeSrc":"1855:3:7","nodeType":"YulIdentifier","src":"1855:3:7"},"nativeSrc":"1855:54:7","nodeType":"YulFunctionCall","src":"1855:54:7"}],"functionName":{"name":"add","nativeSrc":"1843:3:7","nodeType":"YulIdentifier","src":"1843:3:7"},"nativeSrc":"1843:67:7","nodeType":"YulFunctionCall","src":"1843:67:7"},"variables":[{"name":"newFreePtr","nativeSrc":"1829:10:7","nodeType":"YulTypedName","src":"1829:10:7","type":""}]},{"body":{"nativeSrc":"1985:22:7","nodeType":"YulBlock","src":"1985:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1987:16:7","nodeType":"YulIdentifier","src":"1987:16:7"},"nativeSrc":"1987:18:7","nodeType":"YulFunctionCall","src":"1987:18:7"},"nativeSrc":"1987:18:7","nodeType":"YulExpressionStatement","src":"1987:18:7"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1928:10:7","nodeType":"YulIdentifier","src":"1928:10:7"},{"kind":"number","nativeSrc":"1940:18:7","nodeType":"YulLiteral","src":"1940:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1925:2:7","nodeType":"YulIdentifier","src":"1925:2:7"},"nativeSrc":"1925:34:7","nodeType":"YulFunctionCall","src":"1925:34:7"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1964:10:7","nodeType":"YulIdentifier","src":"1964:10:7"},{"name":"memPtr","nativeSrc":"1976:6:7","nodeType":"YulIdentifier","src":"1976:6:7"}],"functionName":{"name":"lt","nativeSrc":"1961:2:7","nodeType":"YulIdentifier","src":"1961:2:7"},"nativeSrc":"1961:22:7","nodeType":"YulFunctionCall","src":"1961:22:7"}],"functionName":{"name":"or","nativeSrc":"1922:2:7","nodeType":"YulIdentifier","src":"1922:2:7"},"nativeSrc":"1922:62:7","nodeType":"YulFunctionCall","src":"1922:62:7"},"nativeSrc":"1919:88:7","nodeType":"YulIf","src":"1919:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2023:2:7","nodeType":"YulLiteral","src":"2023:2:7","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2027:10:7","nodeType":"YulIdentifier","src":"2027:10:7"}],"functionName":{"name":"mstore","nativeSrc":"2016:6:7","nodeType":"YulIdentifier","src":"2016:6:7"},"nativeSrc":"2016:22:7","nodeType":"YulFunctionCall","src":"2016:22:7"},"nativeSrc":"2016:22:7","nodeType":"YulExpressionStatement","src":"2016:22:7"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"2054:6:7","nodeType":"YulIdentifier","src":"2054:6:7"},{"name":"length","nativeSrc":"2062:6:7","nodeType":"YulIdentifier","src":"2062:6:7"}],"functionName":{"name":"mstore","nativeSrc":"2047:6:7","nodeType":"YulIdentifier","src":"2047:6:7"},"nativeSrc":"2047:22:7","nodeType":"YulFunctionCall","src":"2047:22:7"},"nativeSrc":"2047:22:7","nodeType":"YulExpressionStatement","src":"2047:22:7"},{"body":{"nativeSrc":"2121:16:7","nodeType":"YulBlock","src":"2121:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2130:1:7","nodeType":"YulLiteral","src":"2130:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2133:1:7","nodeType":"YulLiteral","src":"2133:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2123:6:7","nodeType":"YulIdentifier","src":"2123:6:7"},"nativeSrc":"2123:12:7","nodeType":"YulFunctionCall","src":"2123:12:7"},"nativeSrc":"2123:12:7","nodeType":"YulExpressionStatement","src":"2123:12:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2092:6:7","nodeType":"YulIdentifier","src":"2092:6:7"},{"name":"length","nativeSrc":"2100:6:7","nodeType":"YulIdentifier","src":"2100:6:7"}],"functionName":{"name":"add","nativeSrc":"2088:3:7","nodeType":"YulIdentifier","src":"2088:3:7"},"nativeSrc":"2088:19:7","nodeType":"YulFunctionCall","src":"2088:19:7"},{"kind":"number","nativeSrc":"2109:4:7","nodeType":"YulLiteral","src":"2109:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2084:3:7","nodeType":"YulIdentifier","src":"2084:3:7"},"nativeSrc":"2084:30:7","nodeType":"YulFunctionCall","src":"2084:30:7"},{"name":"end","nativeSrc":"2116:3:7","nodeType":"YulIdentifier","src":"2116:3:7"}],"functionName":{"name":"gt","nativeSrc":"2081:2:7","nodeType":"YulIdentifier","src":"2081:2:7"},"nativeSrc":"2081:39:7","nodeType":"YulFunctionCall","src":"2081:39:7"},"nativeSrc":"2078:59:7","nodeType":"YulIf","src":"2078:59:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2163:6:7","nodeType":"YulIdentifier","src":"2163:6:7"},{"kind":"number","nativeSrc":"2171:4:7","nodeType":"YulLiteral","src":"2171:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2159:3:7","nodeType":"YulIdentifier","src":"2159:3:7"},"nativeSrc":"2159:17:7","nodeType":"YulFunctionCall","src":"2159:17:7"},{"arguments":[{"name":"offset","nativeSrc":"2182:6:7","nodeType":"YulIdentifier","src":"2182:6:7"},{"kind":"number","nativeSrc":"2190:4:7","nodeType":"YulLiteral","src":"2190:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2178:3:7","nodeType":"YulIdentifier","src":"2178:3:7"},"nativeSrc":"2178:17:7","nodeType":"YulFunctionCall","src":"2178:17:7"},{"name":"length","nativeSrc":"2197:6:7","nodeType":"YulIdentifier","src":"2197:6:7"}],"functionName":{"name":"calldatacopy","nativeSrc":"2146:12:7","nodeType":"YulIdentifier","src":"2146:12:7"},"nativeSrc":"2146:58:7","nodeType":"YulFunctionCall","src":"2146:58:7"},"nativeSrc":"2146:58:7","nodeType":"YulExpressionStatement","src":"2146:58:7"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2228:6:7","nodeType":"YulIdentifier","src":"2228:6:7"},{"name":"length","nativeSrc":"2236:6:7","nodeType":"YulIdentifier","src":"2236:6:7"}],"functionName":{"name":"add","nativeSrc":"2224:3:7","nodeType":"YulIdentifier","src":"2224:3:7"},"nativeSrc":"2224:19:7","nodeType":"YulFunctionCall","src":"2224:19:7"},{"kind":"number","nativeSrc":"2245:4:7","nodeType":"YulLiteral","src":"2245:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2220:3:7","nodeType":"YulIdentifier","src":"2220:3:7"},"nativeSrc":"2220:30:7","nodeType":"YulFunctionCall","src":"2220:30:7"},{"kind":"number","nativeSrc":"2252:1:7","nodeType":"YulLiteral","src":"2252:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2213:6:7","nodeType":"YulIdentifier","src":"2213:6:7"},"nativeSrc":"2213:41:7","nodeType":"YulFunctionCall","src":"2213:41:7"},"nativeSrc":"2213:41:7","nodeType":"YulExpressionStatement","src":"2213:41:7"},{"nativeSrc":"2263:15:7","nodeType":"YulAssignment","src":"2263:15:7","value":{"name":"memPtr","nativeSrc":"2272:6:7","nodeType":"YulIdentifier","src":"2272:6:7"},"variableNames":[{"name":"array","nativeSrc":"2263:5:7","nodeType":"YulIdentifier","src":"2263:5:7"}]}]},"name":"abi_decode_bytes","nativeSrc":"1559:725:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1585:6:7","nodeType":"YulTypedName","src":"1585:6:7","type":""},{"name":"end","nativeSrc":"1593:3:7","nodeType":"YulTypedName","src":"1593:3:7","type":""}],"returnVariables":[{"name":"array","nativeSrc":"1601:5:7","nodeType":"YulTypedName","src":"1601:5:7","type":""}],"src":"1559:725:7"},{"body":{"nativeSrc":"2385:338:7","nodeType":"YulBlock","src":"2385:338:7","statements":[{"body":{"nativeSrc":"2431:16:7","nodeType":"YulBlock","src":"2431:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2440:1:7","nodeType":"YulLiteral","src":"2440:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2443:1:7","nodeType":"YulLiteral","src":"2443:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2433:6:7","nodeType":"YulIdentifier","src":"2433:6:7"},"nativeSrc":"2433:12:7","nodeType":"YulFunctionCall","src":"2433:12:7"},"nativeSrc":"2433:12:7","nodeType":"YulExpressionStatement","src":"2433:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2406:7:7","nodeType":"YulIdentifier","src":"2406:7:7"},{"name":"headStart","nativeSrc":"2415:9:7","nodeType":"YulIdentifier","src":"2415:9:7"}],"functionName":{"name":"sub","nativeSrc":"2402:3:7","nodeType":"YulIdentifier","src":"2402:3:7"},"nativeSrc":"2402:23:7","nodeType":"YulFunctionCall","src":"2402:23:7"},{"kind":"number","nativeSrc":"2427:2:7","nodeType":"YulLiteral","src":"2427:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2398:3:7","nodeType":"YulIdentifier","src":"2398:3:7"},"nativeSrc":"2398:32:7","nodeType":"YulFunctionCall","src":"2398:32:7"},"nativeSrc":"2395:52:7","nodeType":"YulIf","src":"2395:52:7"},{"nativeSrc":"2456:14:7","nodeType":"YulVariableDeclaration","src":"2456:14:7","value":{"kind":"number","nativeSrc":"2469:1:7","nodeType":"YulLiteral","src":"2469:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2460:5:7","nodeType":"YulTypedName","src":"2460:5:7","type":""}]},{"nativeSrc":"2479:32:7","nodeType":"YulAssignment","src":"2479:32:7","value":{"arguments":[{"name":"headStart","nativeSrc":"2501:9:7","nodeType":"YulIdentifier","src":"2501:9:7"}],"functionName":{"name":"calldataload","nativeSrc":"2488:12:7","nodeType":"YulIdentifier","src":"2488:12:7"},"nativeSrc":"2488:23:7","nodeType":"YulFunctionCall","src":"2488:23:7"},"variableNames":[{"name":"value","nativeSrc":"2479:5:7","nodeType":"YulIdentifier","src":"2479:5:7"}]},{"nativeSrc":"2520:15:7","nodeType":"YulAssignment","src":"2520:15:7","value":{"name":"value","nativeSrc":"2530:5:7","nodeType":"YulIdentifier","src":"2530:5:7"},"variableNames":[{"name":"value0","nativeSrc":"2520:6:7","nodeType":"YulIdentifier","src":"2520:6:7"}]},{"nativeSrc":"2544:46:7","nodeType":"YulVariableDeclaration","src":"2544:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2575:9:7","nodeType":"YulIdentifier","src":"2575:9:7"},{"kind":"number","nativeSrc":"2586:2:7","nodeType":"YulLiteral","src":"2586:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2571:3:7","nodeType":"YulIdentifier","src":"2571:3:7"},"nativeSrc":"2571:18:7","nodeType":"YulFunctionCall","src":"2571:18:7"}],"functionName":{"name":"calldataload","nativeSrc":"2558:12:7","nodeType":"YulIdentifier","src":"2558:12:7"},"nativeSrc":"2558:32:7","nodeType":"YulFunctionCall","src":"2558:32:7"},"variables":[{"name":"offset","nativeSrc":"2548:6:7","nodeType":"YulTypedName","src":"2548:6:7","type":""}]},{"body":{"nativeSrc":"2633:16:7","nodeType":"YulBlock","src":"2633:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2642:1:7","nodeType":"YulLiteral","src":"2642:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2645:1:7","nodeType":"YulLiteral","src":"2645:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2635:6:7","nodeType":"YulIdentifier","src":"2635:6:7"},"nativeSrc":"2635:12:7","nodeType":"YulFunctionCall","src":"2635:12:7"},"nativeSrc":"2635:12:7","nodeType":"YulExpressionStatement","src":"2635:12:7"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2605:6:7","nodeType":"YulIdentifier","src":"2605:6:7"},{"kind":"number","nativeSrc":"2613:18:7","nodeType":"YulLiteral","src":"2613:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2602:2:7","nodeType":"YulIdentifier","src":"2602:2:7"},"nativeSrc":"2602:30:7","nodeType":"YulFunctionCall","src":"2602:30:7"},"nativeSrc":"2599:50:7","nodeType":"YulIf","src":"2599:50:7"},{"nativeSrc":"2658:59:7","nodeType":"YulAssignment","src":"2658:59:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2689:9:7","nodeType":"YulIdentifier","src":"2689:9:7"},{"name":"offset","nativeSrc":"2700:6:7","nodeType":"YulIdentifier","src":"2700:6:7"}],"functionName":{"name":"add","nativeSrc":"2685:3:7","nodeType":"YulIdentifier","src":"2685:3:7"},"nativeSrc":"2685:22:7","nodeType":"YulFunctionCall","src":"2685:22:7"},{"name":"dataEnd","nativeSrc":"2709:7:7","nodeType":"YulIdentifier","src":"2709:7:7"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"2668:16:7","nodeType":"YulIdentifier","src":"2668:16:7"},"nativeSrc":"2668:49:7","nodeType":"YulFunctionCall","src":"2668:49:7"},"variableNames":[{"name":"value1","nativeSrc":"2658:6:7","nodeType":"YulIdentifier","src":"2658:6:7"}]}]},"name":"abi_decode_tuple_t_uint256t_bytes_memory_ptr","nativeSrc":"2289:434:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2343:9:7","nodeType":"YulTypedName","src":"2343:9:7","type":""},{"name":"dataEnd","nativeSrc":"2354:7:7","nodeType":"YulTypedName","src":"2354:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2366:6:7","nodeType":"YulTypedName","src":"2366:6:7","type":""},{"name":"value1","nativeSrc":"2374:6:7","nodeType":"YulTypedName","src":"2374:6:7","type":""}],"src":"2289:434:7"},{"body":{"nativeSrc":"2975:322:7","nodeType":"YulBlock","src":"2975:322:7","statements":[{"nativeSrc":"2985:27:7","nodeType":"YulAssignment","src":"2985:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"2997:9:7","nodeType":"YulIdentifier","src":"2997:9:7"},{"kind":"number","nativeSrc":"3008:3:7","nodeType":"YulLiteral","src":"3008:3:7","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"2993:3:7","nodeType":"YulIdentifier","src":"2993:3:7"},"nativeSrc":"2993:19:7","nodeType":"YulFunctionCall","src":"2993:19:7"},"variableNames":[{"name":"tail","nativeSrc":"2985:4:7","nodeType":"YulIdentifier","src":"2985:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3028:9:7","nodeType":"YulIdentifier","src":"3028:9:7"},{"arguments":[{"name":"value0","nativeSrc":"3043:6:7","nodeType":"YulIdentifier","src":"3043:6:7"},{"kind":"number","nativeSrc":"3051:42:7","nodeType":"YulLiteral","src":"3051:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3039:3:7","nodeType":"YulIdentifier","src":"3039:3:7"},"nativeSrc":"3039:55:7","nodeType":"YulFunctionCall","src":"3039:55:7"}],"functionName":{"name":"mstore","nativeSrc":"3021:6:7","nodeType":"YulIdentifier","src":"3021:6:7"},"nativeSrc":"3021:74:7","nodeType":"YulFunctionCall","src":"3021:74:7"},"nativeSrc":"3021:74:7","nodeType":"YulExpressionStatement","src":"3021:74:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3115:9:7","nodeType":"YulIdentifier","src":"3115:9:7"},{"kind":"number","nativeSrc":"3126:2:7","nodeType":"YulLiteral","src":"3126:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3111:3:7","nodeType":"YulIdentifier","src":"3111:3:7"},"nativeSrc":"3111:18:7","nodeType":"YulFunctionCall","src":"3111:18:7"},{"name":"value1","nativeSrc":"3131:6:7","nodeType":"YulIdentifier","src":"3131:6:7"}],"functionName":{"name":"mstore","nativeSrc":"3104:6:7","nodeType":"YulIdentifier","src":"3104:6:7"},"nativeSrc":"3104:34:7","nodeType":"YulFunctionCall","src":"3104:34:7"},"nativeSrc":"3104:34:7","nodeType":"YulExpressionStatement","src":"3104:34:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3158:9:7","nodeType":"YulIdentifier","src":"3158:9:7"},{"kind":"number","nativeSrc":"3169:2:7","nodeType":"YulLiteral","src":"3169:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3154:3:7","nodeType":"YulIdentifier","src":"3154:3:7"},"nativeSrc":"3154:18:7","nodeType":"YulFunctionCall","src":"3154:18:7"},{"name":"value2","nativeSrc":"3174:6:7","nodeType":"YulIdentifier","src":"3174:6:7"}],"functionName":{"name":"mstore","nativeSrc":"3147:6:7","nodeType":"YulIdentifier","src":"3147:6:7"},"nativeSrc":"3147:34:7","nodeType":"YulFunctionCall","src":"3147:34:7"},"nativeSrc":"3147:34:7","nodeType":"YulExpressionStatement","src":"3147:34:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3201:9:7","nodeType":"YulIdentifier","src":"3201:9:7"},{"kind":"number","nativeSrc":"3212:2:7","nodeType":"YulLiteral","src":"3212:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3197:3:7","nodeType":"YulIdentifier","src":"3197:3:7"},"nativeSrc":"3197:18:7","nodeType":"YulFunctionCall","src":"3197:18:7"},{"name":"value3","nativeSrc":"3217:6:7","nodeType":"YulIdentifier","src":"3217:6:7"}],"functionName":{"name":"mstore","nativeSrc":"3190:6:7","nodeType":"YulIdentifier","src":"3190:6:7"},"nativeSrc":"3190:34:7","nodeType":"YulFunctionCall","src":"3190:34:7"},"nativeSrc":"3190:34:7","nodeType":"YulExpressionStatement","src":"3190:34:7"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"3263:6:7","nodeType":"YulIdentifier","src":"3263:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"3275:9:7","nodeType":"YulIdentifier","src":"3275:9:7"},{"kind":"number","nativeSrc":"3286:3:7","nodeType":"YulLiteral","src":"3286:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3271:3:7","nodeType":"YulIdentifier","src":"3271:3:7"},"nativeSrc":"3271:19:7","nodeType":"YulFunctionCall","src":"3271:19:7"}],"functionName":{"name":"abi_encode_enum_DisputeStatus","nativeSrc":"3233:29:7","nodeType":"YulIdentifier","src":"3233:29:7"},"nativeSrc":"3233:58:7","nodeType":"YulFunctionCall","src":"3233:58:7"},"nativeSrc":"3233:58:7","nodeType":"YulExpressionStatement","src":"3233:58:7"}]},"name":"abi_encode_tuple_t_contract$_IArbitrable_$153_t_uint256_t_uint256_t_uint256_t_enum$_DisputeStatus_$161__to_t_address_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed","nativeSrc":"2728:569:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2912:9:7","nodeType":"YulTypedName","src":"2912:9:7","type":""},{"name":"value4","nativeSrc":"2923:6:7","nodeType":"YulTypedName","src":"2923:6:7","type":""},{"name":"value3","nativeSrc":"2931:6:7","nodeType":"YulTypedName","src":"2931:6:7","type":""},{"name":"value2","nativeSrc":"2939:6:7","nodeType":"YulTypedName","src":"2939:6:7","type":""},{"name":"value1","nativeSrc":"2947:6:7","nodeType":"YulTypedName","src":"2947:6:7","type":""},{"name":"value0","nativeSrc":"2955:6:7","nodeType":"YulTypedName","src":"2955:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2966:4:7","nodeType":"YulTypedName","src":"2966:4:7","type":""}],"src":"2728:569:7"},{"body":{"nativeSrc":"3431:119:7","nodeType":"YulBlock","src":"3431:119:7","statements":[{"nativeSrc":"3441:26:7","nodeType":"YulAssignment","src":"3441:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"3453:9:7","nodeType":"YulIdentifier","src":"3453:9:7"},{"kind":"number","nativeSrc":"3464:2:7","nodeType":"YulLiteral","src":"3464:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3449:3:7","nodeType":"YulIdentifier","src":"3449:3:7"},"nativeSrc":"3449:18:7","nodeType":"YulFunctionCall","src":"3449:18:7"},"variableNames":[{"name":"tail","nativeSrc":"3441:4:7","nodeType":"YulIdentifier","src":"3441:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3483:9:7","nodeType":"YulIdentifier","src":"3483:9:7"},{"name":"value0","nativeSrc":"3494:6:7","nodeType":"YulIdentifier","src":"3494:6:7"}],"functionName":{"name":"mstore","nativeSrc":"3476:6:7","nodeType":"YulIdentifier","src":"3476:6:7"},"nativeSrc":"3476:25:7","nodeType":"YulFunctionCall","src":"3476:25:7"},"nativeSrc":"3476:25:7","nodeType":"YulExpressionStatement","src":"3476:25:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3521:9:7","nodeType":"YulIdentifier","src":"3521:9:7"},{"kind":"number","nativeSrc":"3532:2:7","nodeType":"YulLiteral","src":"3532:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3517:3:7","nodeType":"YulIdentifier","src":"3517:3:7"},"nativeSrc":"3517:18:7","nodeType":"YulFunctionCall","src":"3517:18:7"},{"name":"value1","nativeSrc":"3537:6:7","nodeType":"YulIdentifier","src":"3537:6:7"}],"functionName":{"name":"mstore","nativeSrc":"3510:6:7","nodeType":"YulIdentifier","src":"3510:6:7"},"nativeSrc":"3510:34:7","nodeType":"YulFunctionCall","src":"3510:34:7"},"nativeSrc":"3510:34:7","nodeType":"YulExpressionStatement","src":"3510:34:7"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"3302:248:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3392:9:7","nodeType":"YulTypedName","src":"3392:9:7","type":""},{"name":"value1","nativeSrc":"3403:6:7","nodeType":"YulTypedName","src":"3403:6:7","type":""},{"name":"value0","nativeSrc":"3411:6:7","nodeType":"YulTypedName","src":"3411:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3422:4:7","nodeType":"YulTypedName","src":"3422:4:7","type":""}],"src":"3302:248:7"},{"body":{"nativeSrc":"3659:362:7","nodeType":"YulBlock","src":"3659:362:7","statements":[{"body":{"nativeSrc":"3705:16:7","nodeType":"YulBlock","src":"3705:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3714:1:7","nodeType":"YulLiteral","src":"3714:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"3717:1:7","nodeType":"YulLiteral","src":"3717:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3707:6:7","nodeType":"YulIdentifier","src":"3707:6:7"},"nativeSrc":"3707:12:7","nodeType":"YulFunctionCall","src":"3707:12:7"},"nativeSrc":"3707:12:7","nodeType":"YulExpressionStatement","src":"3707:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3680:7:7","nodeType":"YulIdentifier","src":"3680:7:7"},{"name":"headStart","nativeSrc":"3689:9:7","nodeType":"YulIdentifier","src":"3689:9:7"}],"functionName":{"name":"sub","nativeSrc":"3676:3:7","nodeType":"YulIdentifier","src":"3676:3:7"},"nativeSrc":"3676:23:7","nodeType":"YulFunctionCall","src":"3676:23:7"},{"kind":"number","nativeSrc":"3701:2:7","nodeType":"YulLiteral","src":"3701:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3672:3:7","nodeType":"YulIdentifier","src":"3672:3:7"},"nativeSrc":"3672:32:7","nodeType":"YulFunctionCall","src":"3672:32:7"},"nativeSrc":"3669:52:7","nodeType":"YulIf","src":"3669:52:7"},{"nativeSrc":"3730:14:7","nodeType":"YulVariableDeclaration","src":"3730:14:7","value":{"kind":"number","nativeSrc":"3743:1:7","nodeType":"YulLiteral","src":"3743:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3734:5:7","nodeType":"YulTypedName","src":"3734:5:7","type":""}]},{"nativeSrc":"3753:32:7","nodeType":"YulAssignment","src":"3753:32:7","value":{"arguments":[{"name":"headStart","nativeSrc":"3775:9:7","nodeType":"YulIdentifier","src":"3775:9:7"}],"functionName":{"name":"calldataload","nativeSrc":"3762:12:7","nodeType":"YulIdentifier","src":"3762:12:7"},"nativeSrc":"3762:23:7","nodeType":"YulFunctionCall","src":"3762:23:7"},"variableNames":[{"name":"value","nativeSrc":"3753:5:7","nodeType":"YulIdentifier","src":"3753:5:7"}]},{"nativeSrc":"3794:15:7","nodeType":"YulAssignment","src":"3794:15:7","value":{"name":"value","nativeSrc":"3804:5:7","nodeType":"YulIdentifier","src":"3804:5:7"},"variableNames":[{"name":"value0","nativeSrc":"3794:6:7","nodeType":"YulIdentifier","src":"3794:6:7"}]},{"nativeSrc":"3818:16:7","nodeType":"YulVariableDeclaration","src":"3818:16:7","value":{"kind":"number","nativeSrc":"3833:1:7","nodeType":"YulLiteral","src":"3833:1:7","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"3822:7:7","nodeType":"YulTypedName","src":"3822:7:7","type":""}]},{"nativeSrc":"3843:43:7","nodeType":"YulAssignment","src":"3843:43:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3871:9:7","nodeType":"YulIdentifier","src":"3871:9:7"},{"kind":"number","nativeSrc":"3882:2:7","nodeType":"YulLiteral","src":"3882:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3867:3:7","nodeType":"YulIdentifier","src":"3867:3:7"},"nativeSrc":"3867:18:7","nodeType":"YulFunctionCall","src":"3867:18:7"}],"functionName":{"name":"calldataload","nativeSrc":"3854:12:7","nodeType":"YulIdentifier","src":"3854:12:7"},"nativeSrc":"3854:32:7","nodeType":"YulFunctionCall","src":"3854:32:7"},"variableNames":[{"name":"value_1","nativeSrc":"3843:7:7","nodeType":"YulIdentifier","src":"3843:7:7"}]},{"nativeSrc":"3895:17:7","nodeType":"YulAssignment","src":"3895:17:7","value":{"name":"value_1","nativeSrc":"3905:7:7","nodeType":"YulIdentifier","src":"3905:7:7"},"variableNames":[{"name":"value1","nativeSrc":"3895:6:7","nodeType":"YulIdentifier","src":"3895:6:7"}]},{"nativeSrc":"3921:16:7","nodeType":"YulVariableDeclaration","src":"3921:16:7","value":{"kind":"number","nativeSrc":"3936:1:7","nodeType":"YulLiteral","src":"3936:1:7","type":"","value":"0"},"variables":[{"name":"value_2","nativeSrc":"3925:7:7","nodeType":"YulTypedName","src":"3925:7:7","type":""}]},{"nativeSrc":"3946:43:7","nodeType":"YulAssignment","src":"3946:43:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3974:9:7","nodeType":"YulIdentifier","src":"3974:9:7"},{"kind":"number","nativeSrc":"3985:2:7","nodeType":"YulLiteral","src":"3985:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3970:3:7","nodeType":"YulIdentifier","src":"3970:3:7"},"nativeSrc":"3970:18:7","nodeType":"YulFunctionCall","src":"3970:18:7"}],"functionName":{"name":"calldataload","nativeSrc":"3957:12:7","nodeType":"YulIdentifier","src":"3957:12:7"},"nativeSrc":"3957:32:7","nodeType":"YulFunctionCall","src":"3957:32:7"},"variableNames":[{"name":"value_2","nativeSrc":"3946:7:7","nodeType":"YulIdentifier","src":"3946:7:7"}]},{"nativeSrc":"3998:17:7","nodeType":"YulAssignment","src":"3998:17:7","value":{"name":"value_2","nativeSrc":"4008:7:7","nodeType":"YulIdentifier","src":"4008:7:7"},"variableNames":[{"name":"value2","nativeSrc":"3998:6:7","nodeType":"YulIdentifier","src":"3998:6:7"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nativeSrc":"3555:466:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3609:9:7","nodeType":"YulTypedName","src":"3609:9:7","type":""},{"name":"dataEnd","nativeSrc":"3620:7:7","nodeType":"YulTypedName","src":"3620:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3632:6:7","nodeType":"YulTypedName","src":"3632:6:7","type":""},{"name":"value1","nativeSrc":"3640:6:7","nodeType":"YulTypedName","src":"3640:6:7","type":""},{"name":"value2","nativeSrc":"3648:6:7","nodeType":"YulTypedName","src":"3648:6:7","type":""}],"src":"3555:466:7"},{"body":{"nativeSrc":"4105:241:7","nodeType":"YulBlock","src":"4105:241:7","statements":[{"body":{"nativeSrc":"4151:16:7","nodeType":"YulBlock","src":"4151:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4160:1:7","nodeType":"YulLiteral","src":"4160:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"4163:1:7","nodeType":"YulLiteral","src":"4163:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4153:6:7","nodeType":"YulIdentifier","src":"4153:6:7"},"nativeSrc":"4153:12:7","nodeType":"YulFunctionCall","src":"4153:12:7"},"nativeSrc":"4153:12:7","nodeType":"YulExpressionStatement","src":"4153:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4126:7:7","nodeType":"YulIdentifier","src":"4126:7:7"},{"name":"headStart","nativeSrc":"4135:9:7","nodeType":"YulIdentifier","src":"4135:9:7"}],"functionName":{"name":"sub","nativeSrc":"4122:3:7","nodeType":"YulIdentifier","src":"4122:3:7"},"nativeSrc":"4122:23:7","nodeType":"YulFunctionCall","src":"4122:23:7"},{"kind":"number","nativeSrc":"4147:2:7","nodeType":"YulLiteral","src":"4147:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4118:3:7","nodeType":"YulIdentifier","src":"4118:3:7"},"nativeSrc":"4118:32:7","nodeType":"YulFunctionCall","src":"4118:32:7"},"nativeSrc":"4115:52:7","nodeType":"YulIf","src":"4115:52:7"},{"nativeSrc":"4176:37:7","nodeType":"YulVariableDeclaration","src":"4176:37:7","value":{"arguments":[{"name":"headStart","nativeSrc":"4203:9:7","nodeType":"YulIdentifier","src":"4203:9:7"}],"functionName":{"name":"calldataload","nativeSrc":"4190:12:7","nodeType":"YulIdentifier","src":"4190:12:7"},"nativeSrc":"4190:23:7","nodeType":"YulFunctionCall","src":"4190:23:7"},"variables":[{"name":"offset","nativeSrc":"4180:6:7","nodeType":"YulTypedName","src":"4180:6:7","type":""}]},{"body":{"nativeSrc":"4256:16:7","nodeType":"YulBlock","src":"4256:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4265:1:7","nodeType":"YulLiteral","src":"4265:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"4268:1:7","nodeType":"YulLiteral","src":"4268:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4258:6:7","nodeType":"YulIdentifier","src":"4258:6:7"},"nativeSrc":"4258:12:7","nodeType":"YulFunctionCall","src":"4258:12:7"},"nativeSrc":"4258:12:7","nodeType":"YulExpressionStatement","src":"4258:12:7"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4228:6:7","nodeType":"YulIdentifier","src":"4228:6:7"},{"kind":"number","nativeSrc":"4236:18:7","nodeType":"YulLiteral","src":"4236:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4225:2:7","nodeType":"YulIdentifier","src":"4225:2:7"},"nativeSrc":"4225:30:7","nodeType":"YulFunctionCall","src":"4225:30:7"},"nativeSrc":"4222:50:7","nodeType":"YulIf","src":"4222:50:7"},{"nativeSrc":"4281:59:7","nodeType":"YulAssignment","src":"4281:59:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4312:9:7","nodeType":"YulIdentifier","src":"4312:9:7"},{"name":"offset","nativeSrc":"4323:6:7","nodeType":"YulIdentifier","src":"4323:6:7"}],"functionName":{"name":"add","nativeSrc":"4308:3:7","nodeType":"YulIdentifier","src":"4308:3:7"},"nativeSrc":"4308:22:7","nodeType":"YulFunctionCall","src":"4308:22:7"},{"name":"dataEnd","nativeSrc":"4332:7:7","nodeType":"YulIdentifier","src":"4332:7:7"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"4291:16:7","nodeType":"YulIdentifier","src":"4291:16:7"},"nativeSrc":"4291:49:7","nodeType":"YulFunctionCall","src":"4291:49:7"},"variableNames":[{"name":"value0","nativeSrc":"4281:6:7","nodeType":"YulIdentifier","src":"4281:6:7"}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nativeSrc":"4026:320:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4071:9:7","nodeType":"YulTypedName","src":"4071:9:7","type":""},{"name":"dataEnd","nativeSrc":"4082:7:7","nodeType":"YulTypedName","src":"4082:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4094:6:7","nodeType":"YulTypedName","src":"4094:6:7","type":""}],"src":"4026:320:7"},{"body":{"nativeSrc":"4383:152:7","nodeType":"YulBlock","src":"4383:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4400:1:7","nodeType":"YulLiteral","src":"4400:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"4403:77:7","nodeType":"YulLiteral","src":"4403:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"4393:6:7","nodeType":"YulIdentifier","src":"4393:6:7"},"nativeSrc":"4393:88:7","nodeType":"YulFunctionCall","src":"4393:88:7"},"nativeSrc":"4393:88:7","nodeType":"YulExpressionStatement","src":"4393:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4497:1:7","nodeType":"YulLiteral","src":"4497:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"4500:4:7","nodeType":"YulLiteral","src":"4500:4:7","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"4490:6:7","nodeType":"YulIdentifier","src":"4490:6:7"},"nativeSrc":"4490:15:7","nodeType":"YulFunctionCall","src":"4490:15:7"},"nativeSrc":"4490:15:7","nodeType":"YulExpressionStatement","src":"4490:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4521:1:7","nodeType":"YulLiteral","src":"4521:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"4524:4:7","nodeType":"YulLiteral","src":"4524:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4514:6:7","nodeType":"YulIdentifier","src":"4514:6:7"},"nativeSrc":"4514:15:7","nodeType":"YulFunctionCall","src":"4514:15:7"},"nativeSrc":"4514:15:7","nodeType":"YulExpressionStatement","src":"4514:15:7"}]},"name":"panic_error_0x32","nativeSrc":"4351:184:7","nodeType":"YulFunctionDefinition","src":"4351:184:7"},{"body":{"nativeSrc":"4714:181:7","nodeType":"YulBlock","src":"4714:181:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4731:9:7","nodeType":"YulIdentifier","src":"4731:9:7"},{"kind":"number","nativeSrc":"4742:2:7","nodeType":"YulLiteral","src":"4742:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4724:6:7","nodeType":"YulIdentifier","src":"4724:6:7"},"nativeSrc":"4724:21:7","nodeType":"YulFunctionCall","src":"4724:21:7"},"nativeSrc":"4724:21:7","nodeType":"YulExpressionStatement","src":"4724:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4765:9:7","nodeType":"YulIdentifier","src":"4765:9:7"},{"kind":"number","nativeSrc":"4776:2:7","nodeType":"YulLiteral","src":"4776:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4761:3:7","nodeType":"YulIdentifier","src":"4761:3:7"},"nativeSrc":"4761:18:7","nodeType":"YulFunctionCall","src":"4761:18:7"},{"kind":"number","nativeSrc":"4781:2:7","nodeType":"YulLiteral","src":"4781:2:7","type":"","value":"31"}],"functionName":{"name":"mstore","nativeSrc":"4754:6:7","nodeType":"YulIdentifier","src":"4754:6:7"},"nativeSrc":"4754:30:7","nodeType":"YulFunctionCall","src":"4754:30:7"},"nativeSrc":"4754:30:7","nodeType":"YulExpressionStatement","src":"4754:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4804:9:7","nodeType":"YulIdentifier","src":"4804:9:7"},{"kind":"number","nativeSrc":"4815:2:7","nodeType":"YulLiteral","src":"4815:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4800:3:7","nodeType":"YulIdentifier","src":"4800:3:7"},"nativeSrc":"4800:18:7","nodeType":"YulFunctionCall","src":"4800:18:7"},{"hexValue":"5468652064697370757465206d7573742062652061707065616c61626c652e","kind":"string","nativeSrc":"4820:33:7","nodeType":"YulLiteral","src":"4820:33:7","type":"","value":"The dispute must be appealable."}],"functionName":{"name":"mstore","nativeSrc":"4793:6:7","nodeType":"YulIdentifier","src":"4793:6:7"},"nativeSrc":"4793:61:7","nodeType":"YulFunctionCall","src":"4793:61:7"},"nativeSrc":"4793:61:7","nodeType":"YulExpressionStatement","src":"4793:61:7"},{"nativeSrc":"4863:26:7","nodeType":"YulAssignment","src":"4863:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"4875:9:7","nodeType":"YulIdentifier","src":"4875:9:7"},{"kind":"number","nativeSrc":"4886:2:7","nodeType":"YulLiteral","src":"4886:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4871:3:7","nodeType":"YulIdentifier","src":"4871:3:7"},"nativeSrc":"4871:18:7","nodeType":"YulFunctionCall","src":"4871:18:7"},"variableNames":[{"name":"tail","nativeSrc":"4863:4:7","nodeType":"YulIdentifier","src":"4863:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4540:355:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4691:9:7","nodeType":"YulTypedName","src":"4691:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4705:4:7","nodeType":"YulTypedName","src":"4705:4:7","type":""}],"src":"4540:355:7"},{"body":{"nativeSrc":"5074:248:7","nodeType":"YulBlock","src":"5074:248:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5091:9:7","nodeType":"YulIdentifier","src":"5091:9:7"},{"kind":"number","nativeSrc":"5102:2:7","nodeType":"YulLiteral","src":"5102:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5084:6:7","nodeType":"YulIdentifier","src":"5084:6:7"},"nativeSrc":"5084:21:7","nodeType":"YulFunctionCall","src":"5084:21:7"},"nativeSrc":"5084:21:7","nodeType":"YulExpressionStatement","src":"5084:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5125:9:7","nodeType":"YulIdentifier","src":"5125:9:7"},{"kind":"number","nativeSrc":"5136:2:7","nodeType":"YulLiteral","src":"5136:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5121:3:7","nodeType":"YulIdentifier","src":"5121:3:7"},"nativeSrc":"5121:18:7","nodeType":"YulFunctionCall","src":"5121:18:7"},{"kind":"number","nativeSrc":"5141:2:7","nodeType":"YulLiteral","src":"5141:2:7","type":"","value":"58"}],"functionName":{"name":"mstore","nativeSrc":"5114:6:7","nodeType":"YulIdentifier","src":"5114:6:7"},"nativeSrc":"5114:30:7","nodeType":"YulFunctionCall","src":"5114:30:7"},"nativeSrc":"5114:30:7","nodeType":"YulExpressionStatement","src":"5114:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5164:9:7","nodeType":"YulIdentifier","src":"5164:9:7"},{"kind":"number","nativeSrc":"5175:2:7","nodeType":"YulLiteral","src":"5175:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5160:3:7","nodeType":"YulIdentifier","src":"5160:3:7"},"nativeSrc":"5160:18:7","nodeType":"YulFunctionCall","src":"5160:18:7"},{"hexValue":"5468652061707065616c206d757374206f63637572206265666f726520746865","kind":"string","nativeSrc":"5180:34:7","nodeType":"YulLiteral","src":"5180:34:7","type":"","value":"The appeal must occur before the"}],"functionName":{"name":"mstore","nativeSrc":"5153:6:7","nodeType":"YulIdentifier","src":"5153:6:7"},"nativeSrc":"5153:62:7","nodeType":"YulFunctionCall","src":"5153:62:7"},"nativeSrc":"5153:62:7","nodeType":"YulExpressionStatement","src":"5153:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5235:9:7","nodeType":"YulIdentifier","src":"5235:9:7"},{"kind":"number","nativeSrc":"5246:2:7","nodeType":"YulLiteral","src":"5246:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5231:3:7","nodeType":"YulIdentifier","src":"5231:3:7"},"nativeSrc":"5231:18:7","nodeType":"YulFunctionCall","src":"5231:18:7"},{"hexValue":"20656e64206f66207468652061707065616c20706572696f642e","kind":"string","nativeSrc":"5251:28:7","nodeType":"YulLiteral","src":"5251:28:7","type":"","value":" end of the appeal period."}],"functionName":{"name":"mstore","nativeSrc":"5224:6:7","nodeType":"YulIdentifier","src":"5224:6:7"},"nativeSrc":"5224:56:7","nodeType":"YulFunctionCall","src":"5224:56:7"},"nativeSrc":"5224:56:7","nodeType":"YulExpressionStatement","src":"5224:56:7"},{"nativeSrc":"5289:27:7","nodeType":"YulAssignment","src":"5289:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"5301:9:7","nodeType":"YulIdentifier","src":"5301:9:7"},{"kind":"number","nativeSrc":"5312:3:7","nodeType":"YulLiteral","src":"5312:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5297:3:7","nodeType":"YulIdentifier","src":"5297:3:7"},"nativeSrc":"5297:19:7","nodeType":"YulFunctionCall","src":"5297:19:7"},"variableNames":[{"name":"tail","nativeSrc":"5289:4:7","nodeType":"YulIdentifier","src":"5289:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_785e30534d9aba417fa2efee2cef6269679d346420799f1ee0b4c1d9e65f4259__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4900:422:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5051:9:7","nodeType":"YulTypedName","src":"5051:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5065:4:7","nodeType":"YulTypedName","src":"5065:4:7","type":""}],"src":"4900:422:7"},{"body":{"nativeSrc":"5501:228:7","nodeType":"YulBlock","src":"5501:228:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5518:9:7","nodeType":"YulIdentifier","src":"5518:9:7"},{"kind":"number","nativeSrc":"5529:2:7","nodeType":"YulLiteral","src":"5529:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5511:6:7","nodeType":"YulIdentifier","src":"5511:6:7"},"nativeSrc":"5511:21:7","nodeType":"YulFunctionCall","src":"5511:21:7"},"nativeSrc":"5511:21:7","nodeType":"YulExpressionStatement","src":"5511:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5552:9:7","nodeType":"YulIdentifier","src":"5552:9:7"},{"kind":"number","nativeSrc":"5563:2:7","nodeType":"YulLiteral","src":"5563:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5548:3:7","nodeType":"YulIdentifier","src":"5548:3:7"},"nativeSrc":"5548:18:7","nodeType":"YulFunctionCall","src":"5548:18:7"},{"kind":"number","nativeSrc":"5568:2:7","nodeType":"YulLiteral","src":"5568:2:7","type":"","value":"38"}],"functionName":{"name":"mstore","nativeSrc":"5541:6:7","nodeType":"YulIdentifier","src":"5541:6:7"},"nativeSrc":"5541:30:7","nodeType":"YulFunctionCall","src":"5541:30:7"},"nativeSrc":"5541:30:7","nodeType":"YulExpressionStatement","src":"5541:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5591:9:7","nodeType":"YulIdentifier","src":"5591:9:7"},{"kind":"number","nativeSrc":"5602:2:7","nodeType":"YulLiteral","src":"5602:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5587:3:7","nodeType":"YulIdentifier","src":"5587:3:7"},"nativeSrc":"5587:18:7","nodeType":"YulFunctionCall","src":"5587:18:7"},{"hexValue":"56616c7565206973206c657373207468616e2072657175697265642061707065","kind":"string","nativeSrc":"5607:34:7","nodeType":"YulLiteral","src":"5607:34:7","type":"","value":"Value is less than required appe"}],"functionName":{"name":"mstore","nativeSrc":"5580:6:7","nodeType":"YulIdentifier","src":"5580:6:7"},"nativeSrc":"5580:62:7","nodeType":"YulFunctionCall","src":"5580:62:7"},"nativeSrc":"5580:62:7","nodeType":"YulExpressionStatement","src":"5580:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5662:9:7","nodeType":"YulIdentifier","src":"5662:9:7"},{"kind":"number","nativeSrc":"5673:2:7","nodeType":"YulLiteral","src":"5673:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5658:3:7","nodeType":"YulIdentifier","src":"5658:3:7"},"nativeSrc":"5658:18:7","nodeType":"YulFunctionCall","src":"5658:18:7"},{"hexValue":"616c20666565","kind":"string","nativeSrc":"5678:8:7","nodeType":"YulLiteral","src":"5678:8:7","type":"","value":"al fee"}],"functionName":{"name":"mstore","nativeSrc":"5651:6:7","nodeType":"YulIdentifier","src":"5651:6:7"},"nativeSrc":"5651:36:7","nodeType":"YulFunctionCall","src":"5651:36:7"},"nativeSrc":"5651:36:7","nodeType":"YulExpressionStatement","src":"5651:36:7"},{"nativeSrc":"5696:27:7","nodeType":"YulAssignment","src":"5696:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"5708:9:7","nodeType":"YulIdentifier","src":"5708:9:7"},{"kind":"number","nativeSrc":"5719:3:7","nodeType":"YulLiteral","src":"5719:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5704:3:7","nodeType":"YulIdentifier","src":"5704:3:7"},"nativeSrc":"5704:19:7","nodeType":"YulFunctionCall","src":"5704:19:7"},"variableNames":[{"name":"tail","nativeSrc":"5696:4:7","nodeType":"YulIdentifier","src":"5696:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_4694def74d735a2c889563bbe682a7dedbe5ed436ba455a7b4f1b1153e6eb3c0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5327:402:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5478:9:7","nodeType":"YulTypedName","src":"5478:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5492:4:7","nodeType":"YulTypedName","src":"5492:4:7","type":""}],"src":"5327:402:7"},{"body":{"nativeSrc":"5908:253:7","nodeType":"YulBlock","src":"5908:253:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5925:9:7","nodeType":"YulIdentifier","src":"5925:9:7"},{"kind":"number","nativeSrc":"5936:2:7","nodeType":"YulLiteral","src":"5936:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5918:6:7","nodeType":"YulIdentifier","src":"5918:6:7"},"nativeSrc":"5918:21:7","nodeType":"YulFunctionCall","src":"5918:21:7"},"nativeSrc":"5918:21:7","nodeType":"YulExpressionStatement","src":"5918:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5959:9:7","nodeType":"YulIdentifier","src":"5959:9:7"},{"kind":"number","nativeSrc":"5970:2:7","nodeType":"YulLiteral","src":"5970:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5955:3:7","nodeType":"YulIdentifier","src":"5955:3:7"},"nativeSrc":"5955:18:7","nodeType":"YulFunctionCall","src":"5955:18:7"},{"kind":"number","nativeSrc":"5975:2:7","nodeType":"YulLiteral","src":"5975:2:7","type":"","value":"63"}],"functionName":{"name":"mstore","nativeSrc":"5948:6:7","nodeType":"YulIdentifier","src":"5948:6:7"},"nativeSrc":"5948:30:7","nodeType":"YulFunctionCall","src":"5948:30:7"},"nativeSrc":"5948:30:7","nodeType":"YulExpressionStatement","src":"5948:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5998:9:7","nodeType":"YulIdentifier","src":"5998:9:7"},{"kind":"number","nativeSrc":"6009:2:7","nodeType":"YulLiteral","src":"6009:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5994:3:7","nodeType":"YulIdentifier","src":"5994:3:7"},"nativeSrc":"5994:18:7","nodeType":"YulFunctionCall","src":"5994:18:7"},{"hexValue":"5468652064697370757465206d75737420626520657865637574656420616674","kind":"string","nativeSrc":"6014:34:7","nodeType":"YulLiteral","src":"6014:34:7","type":"","value":"The dispute must be executed aft"}],"functionName":{"name":"mstore","nativeSrc":"5987:6:7","nodeType":"YulIdentifier","src":"5987:6:7"},"nativeSrc":"5987:62:7","nodeType":"YulFunctionCall","src":"5987:62:7"},"nativeSrc":"5987:62:7","nodeType":"YulExpressionStatement","src":"5987:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6069:9:7","nodeType":"YulIdentifier","src":"6069:9:7"},{"kind":"number","nativeSrc":"6080:2:7","nodeType":"YulLiteral","src":"6080:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6065:3:7","nodeType":"YulIdentifier","src":"6065:3:7"},"nativeSrc":"6065:18:7","nodeType":"YulFunctionCall","src":"6065:18:7"},{"hexValue":"6572206974732061707065616c20706572696f642068617320656e6465642e","kind":"string","nativeSrc":"6085:33:7","nodeType":"YulLiteral","src":"6085:33:7","type":"","value":"er its appeal period has ended."}],"functionName":{"name":"mstore","nativeSrc":"6058:6:7","nodeType":"YulIdentifier","src":"6058:6:7"},"nativeSrc":"6058:61:7","nodeType":"YulFunctionCall","src":"6058:61:7"},"nativeSrc":"6058:61:7","nodeType":"YulExpressionStatement","src":"6058:61:7"},{"nativeSrc":"6128:27:7","nodeType":"YulAssignment","src":"6128:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"6140:9:7","nodeType":"YulIdentifier","src":"6140:9:7"},{"kind":"number","nativeSrc":"6151:3:7","nodeType":"YulLiteral","src":"6151:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6136:3:7","nodeType":"YulIdentifier","src":"6136:3:7"},"nativeSrc":"6136:19:7","nodeType":"YulFunctionCall","src":"6136:19:7"},"variableNames":[{"name":"tail","nativeSrc":"6128:4:7","nodeType":"YulIdentifier","src":"6128:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_4ffb16c8c515bb19f47e2c39c4abe69591900df2f6712a42bdbaeaacd81aaa88__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5734:427:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5885:9:7","nodeType":"YulTypedName","src":"5885:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5899:4:7","nodeType":"YulTypedName","src":"5899:4:7","type":""}],"src":"5734:427:7"},{"body":{"nativeSrc":"6340:225:7","nodeType":"YulBlock","src":"6340:225:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6357:9:7","nodeType":"YulIdentifier","src":"6357:9:7"},{"kind":"number","nativeSrc":"6368:2:7","nodeType":"YulLiteral","src":"6368:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6350:6:7","nodeType":"YulIdentifier","src":"6350:6:7"},"nativeSrc":"6350:21:7","nodeType":"YulFunctionCall","src":"6350:21:7"},"nativeSrc":"6350:21:7","nodeType":"YulExpressionStatement","src":"6350:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6391:9:7","nodeType":"YulIdentifier","src":"6391:9:7"},{"kind":"number","nativeSrc":"6402:2:7","nodeType":"YulLiteral","src":"6402:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6387:3:7","nodeType":"YulIdentifier","src":"6387:3:7"},"nativeSrc":"6387:18:7","nodeType":"YulFunctionCall","src":"6387:18:7"},{"kind":"number","nativeSrc":"6407:2:7","nodeType":"YulLiteral","src":"6407:2:7","type":"","value":"35"}],"functionName":{"name":"mstore","nativeSrc":"6380:6:7","nodeType":"YulIdentifier","src":"6380:6:7"},"nativeSrc":"6380:30:7","nodeType":"YulFunctionCall","src":"6380:30:7"},"nativeSrc":"6380:30:7","nodeType":"YulExpressionStatement","src":"6380:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6430:9:7","nodeType":"YulIdentifier","src":"6430:9:7"},{"kind":"number","nativeSrc":"6441:2:7","nodeType":"YulLiteral","src":"6441:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6426:3:7","nodeType":"YulIdentifier","src":"6426:3:7"},"nativeSrc":"6426:18:7","nodeType":"YulFunctionCall","src":"6426:18:7"},{"hexValue":"43616e206f6e6c792062652063616c6c65642062792074686520676f7665726e","kind":"string","nativeSrc":"6446:34:7","nodeType":"YulLiteral","src":"6446:34:7","type":"","value":"Can only be called by the govern"}],"functionName":{"name":"mstore","nativeSrc":"6419:6:7","nodeType":"YulIdentifier","src":"6419:6:7"},"nativeSrc":"6419:62:7","nodeType":"YulFunctionCall","src":"6419:62:7"},"nativeSrc":"6419:62:7","nodeType":"YulExpressionStatement","src":"6419:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6501:9:7","nodeType":"YulIdentifier","src":"6501:9:7"},{"kind":"number","nativeSrc":"6512:2:7","nodeType":"YulLiteral","src":"6512:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6497:3:7","nodeType":"YulIdentifier","src":"6497:3:7"},"nativeSrc":"6497:18:7","nodeType":"YulFunctionCall","src":"6497:18:7"},{"hexValue":"6f722e","kind":"string","nativeSrc":"6517:5:7","nodeType":"YulLiteral","src":"6517:5:7","type":"","value":"or."}],"functionName":{"name":"mstore","nativeSrc":"6490:6:7","nodeType":"YulIdentifier","src":"6490:6:7"},"nativeSrc":"6490:33:7","nodeType":"YulFunctionCall","src":"6490:33:7"},"nativeSrc":"6490:33:7","nodeType":"YulExpressionStatement","src":"6490:33:7"},{"nativeSrc":"6532:27:7","nodeType":"YulAssignment","src":"6532:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"6544:9:7","nodeType":"YulIdentifier","src":"6544:9:7"},{"kind":"number","nativeSrc":"6555:3:7","nodeType":"YulLiteral","src":"6555:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6540:3:7","nodeType":"YulIdentifier","src":"6540:3:7"},"nativeSrc":"6540:19:7","nodeType":"YulFunctionCall","src":"6540:19:7"},"variableNames":[{"name":"tail","nativeSrc":"6532:4:7","nodeType":"YulIdentifier","src":"6532:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_0a67387a01b638629562ce413604ca06df839cc408aaf6c072640f1a5c4f2346__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6166:399:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6317:9:7","nodeType":"YulTypedName","src":"6317:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6331:4:7","nodeType":"YulTypedName","src":"6331:4:7","type":""}],"src":"6166:399:7"},{"body":{"nativeSrc":"6744:165:7","nodeType":"YulBlock","src":"6744:165:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6761:9:7","nodeType":"YulIdentifier","src":"6761:9:7"},{"kind":"number","nativeSrc":"6772:2:7","nodeType":"YulLiteral","src":"6772:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6754:6:7","nodeType":"YulIdentifier","src":"6754:6:7"},"nativeSrc":"6754:21:7","nodeType":"YulFunctionCall","src":"6754:21:7"},"nativeSrc":"6754:21:7","nodeType":"YulExpressionStatement","src":"6754:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6795:9:7","nodeType":"YulIdentifier","src":"6795:9:7"},{"kind":"number","nativeSrc":"6806:2:7","nodeType":"YulLiteral","src":"6806:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6791:3:7","nodeType":"YulIdentifier","src":"6791:3:7"},"nativeSrc":"6791:18:7","nodeType":"YulFunctionCall","src":"6791:18:7"},{"kind":"number","nativeSrc":"6811:2:7","nodeType":"YulLiteral","src":"6811:2:7","type":"","value":"15"}],"functionName":{"name":"mstore","nativeSrc":"6784:6:7","nodeType":"YulIdentifier","src":"6784:6:7"},"nativeSrc":"6784:30:7","nodeType":"YulFunctionCall","src":"6784:30:7"},"nativeSrc":"6784:30:7","nodeType":"YulExpressionStatement","src":"6784:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6834:9:7","nodeType":"YulIdentifier","src":"6834:9:7"},{"kind":"number","nativeSrc":"6845:2:7","nodeType":"YulLiteral","src":"6845:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6830:3:7","nodeType":"YulIdentifier","src":"6830:3:7"},"nativeSrc":"6830:18:7","nodeType":"YulFunctionCall","src":"6830:18:7"},{"hexValue":"496e76616c69642072756c696e672e","kind":"string","nativeSrc":"6850:17:7","nodeType":"YulLiteral","src":"6850:17:7","type":"","value":"Invalid ruling."}],"functionName":{"name":"mstore","nativeSrc":"6823:6:7","nodeType":"YulIdentifier","src":"6823:6:7"},"nativeSrc":"6823:45:7","nodeType":"YulFunctionCall","src":"6823:45:7"},"nativeSrc":"6823:45:7","nodeType":"YulExpressionStatement","src":"6823:45:7"},{"nativeSrc":"6877:26:7","nodeType":"YulAssignment","src":"6877:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"6889:9:7","nodeType":"YulIdentifier","src":"6889:9:7"},{"kind":"number","nativeSrc":"6900:2:7","nodeType":"YulLiteral","src":"6900:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6885:3:7","nodeType":"YulIdentifier","src":"6885:3:7"},"nativeSrc":"6885:18:7","nodeType":"YulFunctionCall","src":"6885:18:7"},"variableNames":[{"name":"tail","nativeSrc":"6877:4:7","nodeType":"YulIdentifier","src":"6877:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6570:339:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6721:9:7","nodeType":"YulTypedName","src":"6721:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6735:4:7","nodeType":"YulTypedName","src":"6735:4:7","type":""}],"src":"6570:339:7"},{"body":{"nativeSrc":"7088:234:7","nodeType":"YulBlock","src":"7088:234:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7105:9:7","nodeType":"YulIdentifier","src":"7105:9:7"},{"kind":"number","nativeSrc":"7116:2:7","nodeType":"YulLiteral","src":"7116:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7098:6:7","nodeType":"YulIdentifier","src":"7098:6:7"},"nativeSrc":"7098:21:7","nodeType":"YulFunctionCall","src":"7098:21:7"},"nativeSrc":"7098:21:7","nodeType":"YulExpressionStatement","src":"7098:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7139:9:7","nodeType":"YulIdentifier","src":"7139:9:7"},{"kind":"number","nativeSrc":"7150:2:7","nodeType":"YulLiteral","src":"7150:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7135:3:7","nodeType":"YulIdentifier","src":"7135:3:7"},"nativeSrc":"7135:18:7","nodeType":"YulFunctionCall","src":"7135:18:7"},{"kind":"number","nativeSrc":"7155:2:7","nodeType":"YulLiteral","src":"7155:2:7","type":"","value":"44"}],"functionName":{"name":"mstore","nativeSrc":"7128:6:7","nodeType":"YulIdentifier","src":"7128:6:7"},"nativeSrc":"7128:30:7","nodeType":"YulFunctionCall","src":"7128:30:7"},"nativeSrc":"7128:30:7","nodeType":"YulExpressionStatement","src":"7128:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7178:9:7","nodeType":"YulIdentifier","src":"7178:9:7"},{"kind":"number","nativeSrc":"7189:2:7","nodeType":"YulLiteral","src":"7189:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7174:3:7","nodeType":"YulIdentifier","src":"7174:3:7"},"nativeSrc":"7174:18:7","nodeType":"YulFunctionCall","src":"7174:18:7"},{"hexValue":"5468652064697370757465206d7573742062652077616974696e6720666f7220","kind":"string","nativeSrc":"7194:34:7","nodeType":"YulLiteral","src":"7194:34:7","type":"","value":"The dispute must be waiting for "}],"functionName":{"name":"mstore","nativeSrc":"7167:6:7","nodeType":"YulIdentifier","src":"7167:6:7"},"nativeSrc":"7167:62:7","nodeType":"YulFunctionCall","src":"7167:62:7"},"nativeSrc":"7167:62:7","nodeType":"YulExpressionStatement","src":"7167:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7249:9:7","nodeType":"YulIdentifier","src":"7249:9:7"},{"kind":"number","nativeSrc":"7260:2:7","nodeType":"YulLiteral","src":"7260:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7245:3:7","nodeType":"YulIdentifier","src":"7245:3:7"},"nativeSrc":"7245:18:7","nodeType":"YulFunctionCall","src":"7245:18:7"},{"hexValue":"6172626974726174696f6e2e","kind":"string","nativeSrc":"7265:14:7","nodeType":"YulLiteral","src":"7265:14:7","type":"","value":"arbitration."}],"functionName":{"name":"mstore","nativeSrc":"7238:6:7","nodeType":"YulIdentifier","src":"7238:6:7"},"nativeSrc":"7238:42:7","nodeType":"YulFunctionCall","src":"7238:42:7"},"nativeSrc":"7238:42:7","nodeType":"YulExpressionStatement","src":"7238:42:7"},{"nativeSrc":"7289:27:7","nodeType":"YulAssignment","src":"7289:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"7301:9:7","nodeType":"YulIdentifier","src":"7301:9:7"},{"kind":"number","nativeSrc":"7312:3:7","nodeType":"YulLiteral","src":"7312:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7297:3:7","nodeType":"YulIdentifier","src":"7297:3:7"},"nativeSrc":"7297:19:7","nodeType":"YulFunctionCall","src":"7297:19:7"},"variableNames":[{"name":"tail","nativeSrc":"7289:4:7","nodeType":"YulIdentifier","src":"7289:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6914:408:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7065:9:7","nodeType":"YulTypedName","src":"7065:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7079:4:7","nodeType":"YulTypedName","src":"7079:4:7","type":""}],"src":"6914:408:7"},{"body":{"nativeSrc":"7359:152:7","nodeType":"YulBlock","src":"7359:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7376:1:7","nodeType":"YulLiteral","src":"7376:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7379:77:7","nodeType":"YulLiteral","src":"7379:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7369:6:7","nodeType":"YulIdentifier","src":"7369:6:7"},"nativeSrc":"7369:88:7","nodeType":"YulFunctionCall","src":"7369:88:7"},"nativeSrc":"7369:88:7","nodeType":"YulExpressionStatement","src":"7369:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7473:1:7","nodeType":"YulLiteral","src":"7473:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"7476:4:7","nodeType":"YulLiteral","src":"7476:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7466:6:7","nodeType":"YulIdentifier","src":"7466:6:7"},"nativeSrc":"7466:15:7","nodeType":"YulFunctionCall","src":"7466:15:7"},"nativeSrc":"7466:15:7","nodeType":"YulExpressionStatement","src":"7466:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7497:1:7","nodeType":"YulLiteral","src":"7497:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7500:4:7","nodeType":"YulLiteral","src":"7500:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7490:6:7","nodeType":"YulIdentifier","src":"7490:6:7"},"nativeSrc":"7490:15:7","nodeType":"YulFunctionCall","src":"7490:15:7"},"nativeSrc":"7490:15:7","nodeType":"YulExpressionStatement","src":"7490:15:7"}]},"name":"panic_error_0x11","nativeSrc":"7327:184:7","nodeType":"YulFunctionDefinition","src":"7327:184:7"},{"body":{"nativeSrc":"7564:77:7","nodeType":"YulBlock","src":"7564:77:7","statements":[{"nativeSrc":"7574:16:7","nodeType":"YulAssignment","src":"7574:16:7","value":{"arguments":[{"name":"x","nativeSrc":"7585:1:7","nodeType":"YulIdentifier","src":"7585:1:7"},{"name":"y","nativeSrc":"7588:1:7","nodeType":"YulIdentifier","src":"7588:1:7"}],"functionName":{"name":"add","nativeSrc":"7581:3:7","nodeType":"YulIdentifier","src":"7581:3:7"},"nativeSrc":"7581:9:7","nodeType":"YulFunctionCall","src":"7581:9:7"},"variableNames":[{"name":"sum","nativeSrc":"7574:3:7","nodeType":"YulIdentifier","src":"7574:3:7"}]},{"body":{"nativeSrc":"7613:22:7","nodeType":"YulBlock","src":"7613:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7615:16:7","nodeType":"YulIdentifier","src":"7615:16:7"},"nativeSrc":"7615:18:7","nodeType":"YulFunctionCall","src":"7615:18:7"},"nativeSrc":"7615:18:7","nodeType":"YulExpressionStatement","src":"7615:18:7"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7605:1:7","nodeType":"YulIdentifier","src":"7605:1:7"},{"name":"sum","nativeSrc":"7608:3:7","nodeType":"YulIdentifier","src":"7608:3:7"}],"functionName":{"name":"gt","nativeSrc":"7602:2:7","nodeType":"YulIdentifier","src":"7602:2:7"},"nativeSrc":"7602:10:7","nodeType":"YulFunctionCall","src":"7602:10:7"},"nativeSrc":"7599:36:7","nodeType":"YulIf","src":"7599:36:7"}]},"name":"checked_add_t_uint256","nativeSrc":"7516:125:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7547:1:7","nodeType":"YulTypedName","src":"7547:1:7","type":""},{"name":"y","nativeSrc":"7550:1:7","nodeType":"YulTypedName","src":"7550:1:7","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7556:3:7","nodeType":"YulTypedName","src":"7556:3:7","type":""}],"src":"7516:125:7"},{"body":{"nativeSrc":"7820:234:7","nodeType":"YulBlock","src":"7820:234:7","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7837:9:7","nodeType":"YulIdentifier","src":"7837:9:7"},{"kind":"number","nativeSrc":"7848:2:7","nodeType":"YulLiteral","src":"7848:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7830:6:7","nodeType":"YulIdentifier","src":"7830:6:7"},"nativeSrc":"7830:21:7","nodeType":"YulFunctionCall","src":"7830:21:7"},"nativeSrc":"7830:21:7","nodeType":"YulExpressionStatement","src":"7830:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7871:9:7","nodeType":"YulIdentifier","src":"7871:9:7"},{"kind":"number","nativeSrc":"7882:2:7","nodeType":"YulLiteral","src":"7882:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7867:3:7","nodeType":"YulIdentifier","src":"7867:3:7"},"nativeSrc":"7867:18:7","nodeType":"YulFunctionCall","src":"7867:18:7"},{"kind":"number","nativeSrc":"7887:2:7","nodeType":"YulLiteral","src":"7887:2:7","type":"","value":"44"}],"functionName":{"name":"mstore","nativeSrc":"7860:6:7","nodeType":"YulIdentifier","src":"7860:6:7"},"nativeSrc":"7860:30:7","nodeType":"YulFunctionCall","src":"7860:30:7"},"nativeSrc":"7860:30:7","nodeType":"YulExpressionStatement","src":"7860:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7910:9:7","nodeType":"YulIdentifier","src":"7910:9:7"},{"kind":"number","nativeSrc":"7921:2:7","nodeType":"YulLiteral","src":"7921:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7906:3:7","nodeType":"YulIdentifier","src":"7906:3:7"},"nativeSrc":"7906:18:7","nodeType":"YulFunctionCall","src":"7906:18:7"},{"hexValue":"56616c7565206973206c657373207468616e2072657175697265642061726269","kind":"string","nativeSrc":"7926:34:7","nodeType":"YulLiteral","src":"7926:34:7","type":"","value":"Value is less than required arbi"}],"functionName":{"name":"mstore","nativeSrc":"7899:6:7","nodeType":"YulIdentifier","src":"7899:6:7"},"nativeSrc":"7899:62:7","nodeType":"YulFunctionCall","src":"7899:62:7"},"nativeSrc":"7899:62:7","nodeType":"YulExpressionStatement","src":"7899:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7981:9:7","nodeType":"YulIdentifier","src":"7981:9:7"},{"kind":"number","nativeSrc":"7992:2:7","nodeType":"YulLiteral","src":"7992:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7977:3:7","nodeType":"YulIdentifier","src":"7977:3:7"},"nativeSrc":"7977:18:7","nodeType":"YulFunctionCall","src":"7977:18:7"},{"hexValue":"74726174696f6e206665652e","kind":"string","nativeSrc":"7997:14:7","nodeType":"YulLiteral","src":"7997:14:7","type":"","value":"tration fee."}],"functionName":{"name":"mstore","nativeSrc":"7970:6:7","nodeType":"YulIdentifier","src":"7970:6:7"},"nativeSrc":"7970:42:7","nodeType":"YulFunctionCall","src":"7970:42:7"},"nativeSrc":"7970:42:7","nodeType":"YulExpressionStatement","src":"7970:42:7"},{"nativeSrc":"8021:27:7","nodeType":"YulAssignment","src":"8021:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"8033:9:7","nodeType":"YulIdentifier","src":"8033:9:7"},{"kind":"number","nativeSrc":"8044:3:7","nodeType":"YulLiteral","src":"8044:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8029:3:7","nodeType":"YulIdentifier","src":"8029:3:7"},"nativeSrc":"8029:19:7","nodeType":"YulFunctionCall","src":"8029:19:7"},"variableNames":[{"name":"tail","nativeSrc":"8021:4:7","nodeType":"YulIdentifier","src":"8021:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_ed65b2f49f93967b3a006e2788127dd02ebf255edcbc59f8b4e80c9299e6eca3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7646:408:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7797:9:7","nodeType":"YulTypedName","src":"7797:9:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7811:4:7","nodeType":"YulTypedName","src":"7811:4:7","type":""}],"src":"7646:408:7"},{"body":{"nativeSrc":"8108:79:7","nodeType":"YulBlock","src":"8108:79:7","statements":[{"nativeSrc":"8118:17:7","nodeType":"YulAssignment","src":"8118:17:7","value":{"arguments":[{"name":"x","nativeSrc":"8130:1:7","nodeType":"YulIdentifier","src":"8130:1:7"},{"name":"y","nativeSrc":"8133:1:7","nodeType":"YulIdentifier","src":"8133:1:7"}],"functionName":{"name":"sub","nativeSrc":"8126:3:7","nodeType":"YulIdentifier","src":"8126:3:7"},"nativeSrc":"8126:9:7","nodeType":"YulFunctionCall","src":"8126:9:7"},"variableNames":[{"name":"diff","nativeSrc":"8118:4:7","nodeType":"YulIdentifier","src":"8118:4:7"}]},{"body":{"nativeSrc":"8159:22:7","nodeType":"YulBlock","src":"8159:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8161:16:7","nodeType":"YulIdentifier","src":"8161:16:7"},"nativeSrc":"8161:18:7","nodeType":"YulFunctionCall","src":"8161:18:7"},"nativeSrc":"8161:18:7","nodeType":"YulExpressionStatement","src":"8161:18:7"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"8150:4:7","nodeType":"YulIdentifier","src":"8150:4:7"},{"name":"x","nativeSrc":"8156:1:7","nodeType":"YulIdentifier","src":"8156:1:7"}],"functionName":{"name":"gt","nativeSrc":"8147:2:7","nodeType":"YulIdentifier","src":"8147:2:7"},"nativeSrc":"8147:11:7","nodeType":"YulFunctionCall","src":"8147:11:7"},"nativeSrc":"8144:37:7","nodeType":"YulIf","src":"8144:37:7"}]},"name":"checked_sub_t_uint256","nativeSrc":"8059:128:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"8090:1:7","nodeType":"YulTypedName","src":"8090:1:7","type":""},{"name":"y","nativeSrc":"8093:1:7","nodeType":"YulTypedName","src":"8093:1:7","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"8099:4:7","nodeType":"YulTypedName","src":"8099:4:7","type":""}],"src":"8059:128:7"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_DisputeStatus(value, pos)\n    {\n        if iszero(lt(value, 3))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_enum$_DisputeStatus_$161__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_DisputeStatus(value0, headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_contract$_IArbitrable_$153_t_uint256_t_uint256_t_uint256_t_enum$_DisputeStatus_$161__to_t_address_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        abi_encode_enum_DisputeStatus(value4, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"The dispute must be appealable.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_785e30534d9aba417fa2efee2cef6269679d346420799f1ee0b4c1d9e65f4259__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"The appeal must occur before the\")\n        mstore(add(headStart, 96), \" end of the appeal period.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4694def74d735a2c889563bbe682a7dedbe5ed436ba455a7b4f1b1153e6eb3c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Value is less than required appe\")\n        mstore(add(headStart, 96), \"al fee\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4ffb16c8c515bb19f47e2c39c4abe69591900df2f6712a42bdbaeaacd81aaa88__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"The dispute must be executed aft\")\n        mstore(add(headStart, 96), \"er its appeal period has ended.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0a67387a01b638629562ce413604ca06df839cc408aaf6c072640f1a5c4f2346__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Can only be called by the govern\")\n        mstore(add(headStart, 96), \"or.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid ruling.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"The dispute must be waiting for \")\n        mstore(add(headStart, 96), \"arbitration.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_ed65b2f49f93967b3a006e2788127dd02ebf255edcbc59f8b4e80c9299e6eca3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Value is less than required arbi\")\n        mstore(add(headStart, 96), \"tration fee.\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n}","id":7,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100c75760003560e01c8063afe15cfb11610074578063f23f16e61161004e578063f23f16e614610232578063f7434ea914610252578063ffb43c481461027457600080fd5b8063afe15cfb146101ca578063bc97d0f3146101ff578063c13517e11461021f57600080fd5b806349912f88116100a557806349912f8814610164578063564a565d146101795780638bb04875146101aa57600080fd5b80630c340a24146100cc57806310f169e8146101095780631c3db16d14610136575b600080fd5b3480156100d857600080fd5b506000546100ec906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011557600080fd5b50610129610124366004610ba5565b610294565b6040516101009190610bf6565b34801561014257600080fd5b50610156610151366004610ba5565b610349565b604051908152602001610100565b610177610172366004610ca9565b610377565b005b34801561018557600080fd5b50610199610194366004610ba5565b61054c565b604051610100959493929190610cf0565b3480156101b657600080fd5b506101776101c5366004610ba5565b61059a565b3480156101d657600080fd5b506101ea6101e5366004610ba5565b610734565b60408051928352602083019190915201610100565b34801561020b57600080fd5b5061017761021a366004610d2d565b61076c565b61015661022d366004610ca9565b61093d565b34801561023e57600080fd5b5061015661024d366004610ca9565b610aef565b34801561025e57600080fd5b5061015661026d366004610d59565b5060015490565b34801561028057600080fd5b5061017761028f366004610ba5565b610b3a565b600080600283815481106102aa576102aa610d96565b6000918252602090912060059091020190506001600284815481106102d1576102d1610d96565b600091825260209091206004600590920201015460ff1660028111156102f9576102f9610bbe565b14801561030a575080600101544210155b156103185750600292915050565b6002838154811061032b5761032b610d96565b600091825260209091206004600590920201015460ff169392505050565b60006002828154811061035e5761035e610d96565b9060005260206000209060050201600301549050919050565b60006002838154811061038c5761038c610d96565b9060005260206000209060050201905060006103a88484610aef565b90506001600483015460ff1660028111156103c5576103c5610bbe565b146104175760405162461bcd60e51b815260206004820152601f60248201527f5468652064697370757465206d7573742062652061707065616c61626c652e0060448201526064015b60405180910390fd5b816001015442106104905760405162461bcd60e51b815260206004820152603a60248201527f5468652061707065616c206d757374206f63637572206265666f72652074686560448201527f20656e64206f66207468652061707065616c20706572696f642e000000000000606482015260840161040e565b803410156105065760405162461bcd60e51b815260206004820152602660248201527f56616c7565206973206c657373207468616e207265717569726564206170706560448201527f616c206665650000000000000000000000000000000000000000000000000000606482015260840161040e565b60006001830181905560048301805460ff19169055604051339186917f9c9b64db9e130f48381bf697abf638e73117dbfbfd7a4484f2da3ba188f4187d9190a350505050565b6002818154811061055c57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909160ff1685565b6000600282815481106105af576105af610d96565b6000918252602090912060059091020190506001600482015460ff1660028111156105dc576105dc610bbe565b146106295760405162461bcd60e51b815260206004820152601f60248201527f5468652064697370757465206d7573742062652061707065616c61626c652e00604482015260640161040e565b80600101544210156106a35760405162461bcd60e51b815260206004820152603f60248201527f5468652064697370757465206d7573742062652065786563757465642061667460448201527f6572206974732061707065616c20706572696f642068617320656e6465642e00606482015260840161040e565b6004818101805460ff19166002179055815460038301546040517f311a6c5600000000000000000000000000000000000000000000000000000000815292830185905260248301526001600160a01b03169063311a6c5690604401600060405180830381600087803b15801561071857600080fd5b505af115801561072c573d6000803e3d6000fd5b505050505050565b60008060006002848154811061074c5761074c610d96565b906000526020600020906005020190504281600101549250925050915091565b6000546001600160a01b031633146107d25760405162461bcd60e51b815260206004820152602360248201527f43616e206f6e6c792062652063616c6c65642062792074686520676f7665726e60448201526237b91760e91b606482015260840161040e565b6000600284815481106107e7576107e7610d96565b90600052602060002090600502019050806002015483111561084b5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c69642072756c696e672e0000000000000000000000000000000000604482015260640161040e565b6000600482015460ff16600281111561086657610866610bbe565b146108d95760405162461bcd60e51b815260206004820152602c60248201527f5468652064697370757465206d7573742062652077616974696e6720666f722060448201527f6172626974726174696f6e2e0000000000000000000000000000000000000000606482015260840161040e565b6003810183905560048101805460ff191660011790556108f98242610dc2565b600182015580546040516001600160a01b039091169085907fa5d41b970d849372be1da1481ffd78d162bfe57a7aa2fe4e5fb73481fa5ac24f90600090a350505050565b60008061094960015490565b9050803410156109c15760405162461bcd60e51b815260206004820152602c60248201527f56616c7565206973206c657373207468616e207265717569726564206172626960448201527f74726174696f6e206665652e0000000000000000000000000000000000000000606482015260840161040e565b60026040518060a00160405280336001600160a01b03168152602001600081526020018681526020016000815260200160006002811115610a0457610a04610bbe565b90528154600180820184556000938452602093849020835160059093020180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0390931692909217825592820151818401556040820151600280830191909155606083015160038301556080830151600483018054949593949193909260ff19909216918490811115610aa257610aa2610bbe565b021790555050600254610ab89150600190610dd5565b604051909250339083907f141dfc18aa6a56fc816f44f0e9e2f1ebc92b15ab167770e17db5b084c10ed99590600090a35092915050565b6000610b316040518060400160405280600681526020017f554e5553454400000000000000000000000000000000000000000000000000008152505060015490565b90505b92915050565b6000546001600160a01b03163314610ba05760405162461bcd60e51b815260206004820152602360248201527f43616e206f6e6c792062652063616c6c65642062792074686520676f7665726e60448201526237b91760e91b606482015260840161040e565b600155565b600060208284031215610bb757600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60038110610bf257634e487b7160e01b600052602160045260246000fd5b9052565b60208101610b348284610bd4565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c2b57600080fd5b813567ffffffffffffffff811115610c4557610c45610c04565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610c7457610c74610c04565b604052818152838201602001851015610c8c57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610cbc57600080fd5b82359150602083013567ffffffffffffffff811115610cda57600080fd5b610ce685828601610c1a565b9150509250929050565b600060a0820190506001600160a01b0387168252856020830152846040830152836060830152610d236080830184610bd4565b9695505050505050565b600080600060608486031215610d4257600080fd5b505081359360208301359350604090920135919050565b600060208284031215610d6b57600080fd5b813567ffffffffffffffff811115610d8257600080fd5b610d8e84828501610c1a565b949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610b3457610b34610dac565b81810381811115610b3457610b34610dac56fea26469706673582212200ebbcde5eb6e4f436e2f0b1874b98a4ae32806d1f9300b13065d162ae553a5a564736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFE15CFB GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xF23F16E6 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xF23F16E6 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xF7434EA9 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xFFB43C48 EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAFE15CFB EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xBC97D0F3 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xC13517E1 EQ PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x49912F88 GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0x49912F88 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x564A565D EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x8BB04875 EQ PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC340A24 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x10F169E8 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x1C3DB16D EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xEC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xBF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0xD2D JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH2 0x156 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0xAEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0xD59 JUMP JUMPDEST POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH2 0x2AA PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2D1 JUMPI PUSH2 0x2D1 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2F9 JUMPI PUSH2 0x2F9 PUSH2 0xBBE JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x30A JUMPI POP DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x318 JUMPI POP PUSH1 0x2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x32B JUMPI PUSH2 0x32B PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x35E JUMPI PUSH2 0x35E PUSH2 0xD96 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x38C JUMPI PUSH2 0x38C PUSH2 0xD96 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0x3A8 DUP5 DUP5 PUSH2 0xAEF JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3C5 JUMPI PUSH2 0x3C5 PUSH2 0xBBE JUMP JUMPDEST EQ PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652064697370757465206D7573742062652061707065616C61626C652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP LT PUSH2 0x490 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652061707065616C206D757374206F63637572206265666F726520746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20656E64206F66207468652061707065616C20706572696F642E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0x506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C7565206973206C657373207468616E2072657175697265642061707065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C206665650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 DUP7 SWAP2 PUSH32 0x9C9B64DB9E130F48381BF697ABF638E73117DBFBFD7A4484F2DA3BA188F4187D SWAP2 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5AF JUMPI PUSH2 0x5AF PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5DC JUMPI PUSH2 0x5DC PUSH2 0xBBE JUMP JUMPDEST EQ PUSH2 0x629 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652064697370757465206D7573742062652061707065616C61626C652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652064697370757465206D75737420626520657865637574656420616674 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572206974732061707065616C20706572696F642068617320656E6465642E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE DUP2 SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x311A6C5600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP3 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x311A6C56 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x72C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x74C JUMPI PUSH2 0x74C PUSH2 0xD96 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP TIMESTAMP DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792062652063616C6C65642062792074686520676F7665726E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x37B917 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x7E7 JUMPI PUSH2 0x7E7 PUSH2 0xD96 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD DUP4 GT ISZERO PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642072756C696E672E0000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x866 JUMPI PUSH2 0x866 PUSH2 0xBBE JUMP JUMPDEST EQ PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652064697370757465206D7573742062652077616974696E6720666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6172626974726174696F6E2E0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x8F9 DUP3 TIMESTAMP PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH32 0xA5D41B970D849372BE1DA1481FFD78D162BFE57A7AA2FE4E5FB73481FA5AC24F SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x949 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C7565206973206C657373207468616E2072657175697265642061726269 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74726174696F6E206665652E0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA04 JUMPI PUSH2 0xA04 PUSH2 0xBBE JUMP JUMPDEST SWAP1 MSTORE DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP1 SWAP4 MUL ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE SWAP3 DUP3 ADD MLOAD DUP2 DUP5 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD DUP1 SLOAD SWAP5 SWAP6 SWAP4 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0xAA2 JUMPI PUSH2 0xAA2 PUSH2 0xBBE JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH1 0x2 SLOAD PUSH2 0xAB8 SWAP2 POP PUSH1 0x1 SWAP1 PUSH2 0xDD5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP3 POP CALLER SWAP1 DUP4 SWAP1 PUSH32 0x141DFC18AA6A56FC816F44F0E9E2F1EBC92B15AB167770E17DB5B084C10ED995 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB31 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x554E555345440000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792062652063616C6C65642062792074686520676F7665726E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x37B917 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xBF2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xB34 DUP3 DUP5 PUSH2 0xBD4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC45 JUMPI PUSH2 0xC45 PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC74 JUMPI PUSH2 0xC74 PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0xC8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE6 DUP6 DUP3 DUP7 ADD PUSH2 0xC1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xD23 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xBD4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD8E DUP5 DUP3 DUP6 ADD PUSH2 0xC1A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xB34 JUMPI PUSH2 0xB34 PUSH2 0xDAC JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xB34 JUMPI PUSH2 0xB34 PUSH2 0xDAC JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xBB 0xCD 0xE5 0xEB PUSH15 0x4F436E2F0B1874B98A4AE32806D1F9 ADDRESS SIGNEXTEND SGT MOD TSTORE AND 0x2A 0xE5 MSTORE8 0xA5 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"265:3837:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:36;;;;;;;;;;-1:-1:-1;304:36:6;;;;-1:-1:-1;;;;;304:36:6;;;;;;-1:-1:-1;;;;;178:55:7;;;160:74;;148:2;133:18;304:36:6;;;;;;;;3309:438;;;;;;;;;;-1:-1:-1;3309:438:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3751:134::-;;;;;;;;;;-1:-1:-1;3751:134:6;;;;;:::i;:::-;;:::i;:::-;;;1334:25:7;;;1322:2;1307:18;3751:134:6;1188:177:7;2247:629:6;;;;;;:::i;:::-;;:::i;:::-;;687:25;;;;;;;;;;-1:-1:-1;687:25:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;2880:425::-;;;;;;;;;;-1:-1:-1;2880:425:6;;;;;:::i;:::-;;:::i;3889:211::-;;;;;;;;;;-1:-1:-1;3889:211:6;;;;;:::i;:::-;;:::i;:::-;;;;3476:25:7;;;3532:2;3517:18;;3510:34;;;;3449:18;3889:211:6;3302:248:7;1694:549:6;;;;;;;;;;-1:-1:-1;1694:549:6;;;;;:::i;:::-;;:::i;1099:591::-;;;;;;:::i;:::-;;:::i;966:129::-;;;;;;;;;;-1:-1:-1;966:129:6;;;;;:::i;:::-;;:::i;846:116::-;;;;;;;;;;-1:-1:-1;846:116:6;;;;;:::i;:::-;-1:-1:-1;941:16:6;;;846:116;717:125;;;;;;;;;;-1:-1:-1;717:125:6;;;;;:::i;:::-;;:::i;3309:438::-;3382:20;3410:23;3436:8;3445:10;3436:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;3497:24:6;3466:8;3475:10;3466:20;;;;;;;;:::i;:::-;;;;;;;;;:27;:20;;;;;:27;;;;:55;;;;;;;;:::i;:::-;;:100;;;;;3544:7;:22;;;3525:15;:41;;3466:100;3462:280;;;-1:-1:-1;3677:20:6;;3309:438;-1:-1:-1;;3309:438:6:o;3462:280::-;3715:8;3724:10;3715:20;;;;;;;;:::i;:::-;;;;;;;;;:27;:20;;;;;:27;;;;;3309:438;-1:-1:-1;;;3309:438:6:o;3751:134::-;3824:14;3853:8;3862:10;3853:20;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;3846:34;;3751:134;;;:::o;2247:629::-;2338:23;2364:8;2373:10;2364:20;;;;;;;;:::i;:::-;;;;;;;;;;;2338:46;;2390:17;2410:34;2421:10;2433;2410;:34::i;:::-;2390:54;-1:-1:-1;2476:24:6;2458:14;;;;;;:42;;;;;;;;:::i;:::-;;2450:86;;;;-1:-1:-1;;;2450:86:6;;4742:2:7;2450:86:6;;;4724:21:7;4781:2;4761:18;;;4754:30;4820:33;4800:18;;;4793:61;4871:18;;2450:86:6;;;;;;;;;2568:7;:22;;;2550:15;:40;2542:111;;;;-1:-1:-1;;;2542:111:6;;5102:2:7;2542:111:6;;;5084:21:7;5141:2;5121:18;;;5114:30;5180:34;5160:18;;;5153:62;5251:28;5231:18;;;5224:56;5297:19;;2542:111:6;4900:422:7;2542:111:6;2680:9;2667;:22;;2659:73;;;;-1:-1:-1;;;2659:73:6;;5529:2:7;2659:73:6;;;5511:21:7;5568:2;5548:18;;;5541:30;5607:34;5587:18;;;5580:62;5678:8;5658:18;;;5651:36;5704:19;;2659:73:6;5327:402:7;2659:73:6;2764:1;2739:22;;;:26;;;2771:14;;;:38;;-1:-1:-1;;2771:38:6;;;2820:51;;2859:10;;2835;;2820:51;;2764:1;2820:51;2332:544;;2247:629;;:::o;687:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;687:25:6;;;;-1:-1:-1;687:25:6;;;;;;;:::o;2880:425::-;2938:23;2964:8;2973:10;2964:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;3016:24:6;2998:14;;;;;;:42;;;;;;;;:::i;:::-;;2990:86;;;;-1:-1:-1;;;2990:86:6;;4742:2:7;2990:86:6;;;4724:21:7;4781:2;4761:18;;;4754:30;4820:33;4800:18;;;4793:61;4871:18;;2990:86:6;4540:355:7;2990:86:6;3109:7;:22;;;3090:15;:41;;3082:117;;;;-1:-1:-1;;;3082:117:6;;5936:2:7;3082:117:6;;;5918:21:7;5975:2;5955:18;;;5948:30;6014:34;5994:18;;;5987:62;6085:33;6065:18;;;6058:61;6136:19;;3082:117:6;5734:427:7;3082:117:6;3206:14;;;;:37;;-1:-1:-1;;3206:37:6;3223:20;3206:37;;;3249:18;;3285:14;;;;3249:51;;;;;;;;3476:25:7;;;3517:18;;;3510:34;-1:-1:-1;;;;;3249:18:6;;:23;;3449:18:7;;3249:51:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2932:373;2880:425;:::o;3889:211::-;3961:13;3976:11;3995:23;4021:8;4030:10;4021:20;;;;;;;;:::i;:::-;;;;;;;;;;;3995:46;;4055:15;4072:7;:22;;;4047:48;;;;;3889:211;;;:::o;1694:549::-;623:8;;-1:-1:-1;;;;;623:8:6;609:10;:22;601:70;;;;-1:-1:-1;;;601:70:6;;6368:2:7;601:70:6;;;6350:21:7;6407:2;6387:18;;;6380:30;6446:34;6426:18;;;6419:62;-1:-1:-1;;;6497:18:7;;;6490:33;6540:19;;601:70:6;6166:399:7;601:70:6;1818:23:::1;1844:8;1853:10;1844:20;;;;;;;;:::i;:::-;;;;;;;;;;;1818:46;;1889:7;:29;;;1878:7;:40;;1870:68;;;::::0;-1:-1:-1;;;1870:68:6;;6772:2:7;1870:68:6::1;::::0;::::1;6754:21:7::0;6811:2;6791:18;;;6784:30;6850:17;6830:18;;;6823:45;6885:18;;1870:68:6::1;6570:339:7::0;1870:68:6::1;1970:21;1952:14;::::0;::::1;::::0;::::1;;:39;::::0;::::1;;;;;;:::i;:::-;;1944:96;;;::::0;-1:-1:-1;;;1944:96:6;;7116:2:7;1944:96:6::1;::::0;::::1;7098:21:7::0;7155:2;7135:18;;;7128:30;7194:34;7174:18;;;7167:62;7265:14;7245:18;;;7238:42;7297:19;;1944:96:6::1;6914:408:7::0;1944:96:6::1;2047:14;::::0;::::1;:24:::0;;;2077:14:::1;::::0;::::1;:41:::0;;-1:-1:-1;;2077:41:6::1;2094:24;2077:41;::::0;;2149:31:::1;2167:13:::0;2149:15:::1;:31;:::i;:::-;2124:22;::::0;::::1;:56:::0;2219:18;;2192:46:::1;::::0;-1:-1:-1;;;;;2219:18:6;;::::1;::::0;2207:10;;2192:46:::1;::::0;2219:18:::1;::::0;2192:46:::1;1812:431;1694:549:::0;;;:::o;1099:591::-;1198:17;1223:22;1248:27;941:16;;;846:116;1248:27;1223:52;;1302:14;1289:9;:27;;1281:84;;;;-1:-1:-1;;;1281:84:6;;7848:2:7;1281:84:6;;;7830:21:7;7887:2;7867:18;;;7860:30;7926:34;7906:18;;;7899:62;7997:14;7977:18;;;7970:42;8029:19;;1281:84:6;7646:408:7;1281:84:6;1371:8;1392:188;;;;;;;;1434:10;-1:-1:-1;;;;;1392:188:6;;;;;1570:1;1392:188;;;;1478:8;1392:188;;;;1504:1;1392:188;;;;1523:21;1392:188;;;;;;;;:::i;:::-;;;1371:215;;;;;;;;-1:-1:-1;1371:215:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1371:215:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1371:215:6;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;1604:8:6;:15;:19;;-1:-1:-1;1622:1:6;;1604:19;:::i;:::-;1634:51;;1592:31;;-1:-1:-1;1673:10:6;;1592:31;;1634:51;;;;;1217:473;1099:591;;;;:::o;966:129::-;1039:11;1065:25;;;;;;;;;;;;;;;;;;-1:-1:-1;941:16:6;;;846:116;1065:25;1058:32;;966:129;;;;;:::o;717:125::-;623:8;;-1:-1:-1;;;;;623:8:6;609:10;:22;601:70;;;;-1:-1:-1;;;601:70:6;;6368:2:7;601:70:6;;;6350:21:7;6407:2;6387:18;;;6380:30;6446:34;6426:18;;;6419:62;-1:-1:-1;;;6497:18:7;;;6490:33;6540:19;;601:70:6;6166:399:7;601:70:6;801:16:::1;:36:::0;717:125::o;245:226:7:-;304:6;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;-1:-1:-1;418:23:7;;245:226;-1:-1:-1;245:226:7:o;476:184::-;-1:-1:-1;;;525:1:7;518:88;625:4;622:1;615:15;649:4;646:1;639:15;665:298;750:1;743:5;740:12;730:200;;-1:-1:-1;;;783:1:7;776:88;887:4;884:1;877:15;915:4;912:1;905:15;730:200;939:18;;665:298::o;968:215::-;1117:2;1102:18;;1129:48;1106:9;1159:6;1129:48;:::i;1370:184::-;-1:-1:-1;;;1419:1:7;1412:88;1519:4;1516:1;1509:15;1543:4;1540:1;1533:15;1559:725;1601:5;1654:3;1647:4;1639:6;1635:17;1631:27;1621:55;;1672:1;1669;1662:12;1621:55;1712:6;1699:20;1742:18;1734:6;1731:30;1728:56;;;1764:18;;:::i;:::-;1813:2;1807:9;1905:2;1867:17;;-1:-1:-1;;1863:31:7;;;1896:2;1859:40;1855:54;1843:67;;1940:18;1925:34;;1961:22;;;1922:62;1919:88;;;1987:18;;:::i;:::-;2023:2;2016:22;2047;;;2088:19;;;2109:4;2084:30;2081:39;-1:-1:-1;2078:59:7;;;2133:1;2130;2123:12;2078:59;2197:6;2190:4;2182:6;2178:17;2171:4;2163:6;2159:17;2146:58;2252:1;2224:19;;;2245:4;2220:30;2213:41;;;;2228:6;1559:725;-1:-1:-1;;;1559:725:7:o;2289:434::-;2366:6;2374;2427:2;2415:9;2406:7;2402:23;2398:32;2395:52;;;2443:1;2440;2433:12;2395:52;2488:23;;;-1:-1:-1;2586:2:7;2571:18;;2558:32;2613:18;2602:30;;2599:50;;;2645:1;2642;2635:12;2599:50;2668:49;2709:7;2700:6;2689:9;2685:22;2668:49;:::i;:::-;2658:59;;;2289:434;;;;;:::o;2728:569::-;2966:4;3008:3;2997:9;2993:19;2985:27;;-1:-1:-1;;;;;3043:6:7;3039:55;3028:9;3021:74;3131:6;3126:2;3115:9;3111:18;3104:34;3174:6;3169:2;3158:9;3154:18;3147:34;3217:6;3212:2;3201:9;3197:18;3190:34;3233:58;3286:3;3275:9;3271:19;3263:6;3233:58;:::i;:::-;2728:569;;;;;;;;:::o;3555:466::-;3632:6;3640;3648;3701:2;3689:9;3680:7;3676:23;3672:32;3669:52;;;3717:1;3714;3707:12;3669:52;-1:-1:-1;;3762:23:7;;;3882:2;3867:18;;3854:32;;-1:-1:-1;3985:2:7;3970:18;;;3957:32;;3555:466;-1:-1:-1;3555:466:7:o;4026:320::-;4094:6;4147:2;4135:9;4126:7;4122:23;4118:32;4115:52;;;4163:1;4160;4153:12;4115:52;4203:9;4190:23;4236:18;4228:6;4225:30;4222:50;;;4268:1;4265;4258:12;4222:50;4291:49;4332:7;4323:6;4312:9;4308:22;4291:49;:::i;:::-;4281:59;4026:320;-1:-1:-1;;;;4026:320:7:o;4351:184::-;-1:-1:-1;;;4400:1:7;4393:88;4500:4;4497:1;4490:15;4524:4;4521:1;4514:15;7327:184;-1:-1:-1;;;7376:1:7;7369:88;7476:4;7473:1;7466:15;7500:4;7497:1;7490:15;7516:125;7581:9;;;7602:10;;;7599:36;;;7615:18;;:::i;8059:128::-;8126:9;;;8147:11;;;8144:37;;;8161:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"722800","executionCost":"47094","totalCost":"769894"},"external":{"appeal(uint256,bytes)":"infinite","appealCost(uint256,bytes)":"infinite","appealPeriod(uint256)":"4664","arbitrationCost(bytes)":"infinite","createDispute(uint256,bytes)":"infinite","currentRuling(uint256)":"4662","disputeStatus(uint256)":"13449","disputes(uint256)":"13317","executeRuling(uint256)":"infinite","giveRuling(uint256,uint256,uint256)":"81137","governor()":"2350","setArbitrationPrice(uint256)":"24530"}},"methodIdentifiers":{"appeal(uint256,bytes)":"49912f88","appealCost(uint256,bytes)":"f23f16e6","appealPeriod(uint256)":"afe15cfb","arbitrationCost(bytes)":"f7434ea9","createDispute(uint256,bytes)":"c13517e1","currentRuling(uint256)":"1c3db16d","disputeStatus(uint256)":"10f169e8","disputes(uint256)":"564a565d","executeRuling(uint256)":"8bb04875","giveRuling(uint256,uint256,uint256)":"bc97d0f3","governor()":"0c340a24","setArbitrationPrice(uint256)":"ffb43c48"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealDecision\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealPossible\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"DisputeCreation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"appeal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"appealCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"appealPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"arbitrationCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_choices\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"createDispute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeID\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"currentRuling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"disputeStatus\",\"outputs\":[{\"internalType\":\"enum IArbitrator.DisputeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputes\",\"outputs\":[{\"internalType\":\"contract IArbitrable\",\"name\":\"arbitrated\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"appealDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfRulingOptions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"},{\"internalType\":\"enum IArbitrator.DisputeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"executeRuling\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_appealWindow\",\"type\":\"uint256\"}],\"name\":\"giveRuling\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_arbitrationPrice\",\"type\":\"uint256\"}],\"name\":\"setArbitrationPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"DON'T USE ON PRODUCTION.\",\"events\":{\"AppealDecision(uint256,address)\":{\"details\":\"To be emitted when the current ruling is appealed.\",\"params\":{\"_arbitrable\":\"The contract which created the dispute.\",\"_disputeID\":\"ID of the dispute.\"}},\"AppealPossible(uint256,address)\":{\"details\":\"To be emitted when a dispute can be appealed.\",\"params\":{\"_arbitrable\":\"The contract which created the dispute.\",\"_disputeID\":\"ID of the dispute.\"}},\"DisputeCreation(uint256,address)\":{\"details\":\"To be emitted when a dispute is created.\",\"params\":{\"_arbitrable\":\"The contract which created the dispute.\",\"_disputeID\":\"ID of the dispute.\"}}},\"kind\":\"dev\",\"methods\":{\"appeal(uint256,bytes)\":{\"details\":\"Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\",\"params\":{\"_disputeID\":\"ID of the dispute to be appealed.\",\"_extraData\":\"Can be used to give extra info on the appeal.\"}},\"appealPeriod(uint256)\":{\"details\":\"Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\",\"params\":{\"_disputeID\":\"ID of the dispute.\"},\"returns\":{\"end\":\"The end of the period.\",\"start\":\"The start of the period.\"}},\"createDispute(uint256,bytes)\":{\"details\":\"Create a dispute. Must be called by the arbitrable contract. Must be paid at least arbitrationCost(_extraData).\",\"params\":{\"_choices\":\"Amount of choices the arbitrator can make in this dispute.\",\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"disputeID\":\"ID of the dispute created.\"}},\"currentRuling(uint256)\":{\"details\":\"Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\",\"params\":{\"_disputeID\":\"ID of the dispute.\"},\"returns\":{\"ruling\":\"The ruling which has been given or the one which will be given if there is no appeal.\"}},\"disputeStatus(uint256)\":{\"details\":\"Return the status of a dispute.\",\"params\":{\"_disputeID\":\"ID of the dispute to rule.\"},\"returns\":{\"status\":\"The status of the dispute.\"}}},\"title\":\"An IArbitrator implemetation for testing purposes.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/for-testing-purposes/Arbitrator.sol\":\"Arbitrator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@kleros/erc-792/contracts/IArbitrable.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrator.sol\\\";\\n\\n/**\\n * @title IArbitrable\\n * Arbitrable interface.\\n * When developing arbitrable contracts, we need to:\\n * - Define the action taken when a ruling is received by the contract.\\n * - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);\\n */\\ninterface IArbitrable {\\n    /**\\n     * @dev To be raised when a ruling is given.\\n     * @param _arbitrator The arbitrator giving the ruling.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling The ruling which was given.\\n     */\\n    event Ruling(IArbitrator indexed _arbitrator, uint256 indexed _disputeID, uint256 _ruling);\\n\\n    /**\\n     * @dev Give a ruling for a dispute. Must be called by the arbitrator.\\n     * The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\\n     */\\n    function rule(uint256 _disputeID, uint256 _ruling) external;\\n}\\n\",\"keccak256\":\"0xf1a2c2d7ec1237ef8d3c5f580ac73f56ed58fe4d023817a188363885b3eeb9f2\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/IArbitrator.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrable.sol\\\";\\n\\n/**\\n * @title Arbitrator\\n * Arbitrator abstract contract.\\n * When developing arbitrator contracts we need to:\\n * - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\\n * - Define the functions for cost display (arbitrationCost and appealCost).\\n * - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\\n */\\ninterface IArbitrator {\\n    enum DisputeStatus {\\n        Waiting,\\n        Appealable,\\n        Solved\\n    }\\n\\n    /**\\n     * @dev To be emitted when a dispute is created.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event DisputeCreation(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when a dispute can be appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealPossible(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when the current ruling is appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealDecision(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev Create a dispute. Must be called by the arbitrable contract.\\n     * Must be paid at least arbitrationCost(_extraData).\\n     * @param _choices Amount of choices the arbitrator can make in this dispute.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return disputeID ID of the dispute created.\\n     */\\n    function createDispute(uint256 _choices, bytes calldata _extraData) external payable returns (uint256 disputeID);\\n\\n    /**\\n     * @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function arbitrationCost(bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give extra info on the appeal.\\n     */\\n    function appeal(uint256 _disputeID, bytes calldata _extraData) external payable;\\n\\n    /**\\n     * @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function appealCost(uint256 _disputeID, bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\\n     * @param _disputeID ID of the dispute.\\n     * @return start The start of the period.\\n     * @return end The end of the period.\\n     */\\n    function appealPeriod(uint256 _disputeID) external view returns (uint256 start, uint256 end);\\n\\n    /**\\n     * @dev Return the status of a dispute.\\n     * @param _disputeID ID of the dispute to rule.\\n     * @return status The status of the dispute.\\n     */\\n    function disputeStatus(uint256 _disputeID) external view returns (DisputeStatus status);\\n\\n    /**\\n     * @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\\n     * @param _disputeID ID of the dispute.\\n     * @return ruling The ruling which has been given or the one which will be given if there is no appeal.\\n     */\\n    function currentRuling(uint256 _disputeID) external view returns (uint256 ruling);\\n}\\n\",\"keccak256\":\"0xfd19582446ef635cfb02a035a18efae3bc242ccf1472bb9949cad3d291306333\",\"license\":\"MIT\"},\"contracts/for-testing-purposes/Arbitrator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.10;\\n\\nimport \\\"@kleros/erc-792/contracts/IArbitrable.sol\\\";\\nimport \\\"@kleros/erc-792/contracts/IArbitrator.sol\\\";\\n\\n/** @title An IArbitrator implemetation for testing purposes.\\n *  @dev DON'T USE ON PRODUCTION.\\n */\\ncontract Arbitrator is IArbitrator {\\n  address public governor = msg.sender;\\n  uint256 internal arbitrationPrice = 1_000_000_000_000_000_000;\\n\\n  struct Dispute {\\n    IArbitrable arbitrated;\\n    uint256 appealDeadline;\\n    uint256 numberOfRulingOptions;\\n    uint256 ruling;\\n    DisputeStatus status;\\n  }\\n\\n  modifier onlyGovernor() {\\n    require(msg.sender == governor, \\\"Can only be called by the governor.\\\");\\n    _;\\n  }\\n\\n  Dispute[] public disputes;\\n\\n  function setArbitrationPrice(uint256 _arbitrationPrice) external onlyGovernor {\\n    arbitrationPrice = _arbitrationPrice;\\n  }\\n\\n  function arbitrationCost(bytes memory) public view override returns (uint256 fee) {\\n    return arbitrationPrice;\\n  }\\n\\n  function appealCost(uint256, bytes memory) public view override returns (uint256 fee) {\\n    return arbitrationCost(\\\"UNUSED\\\");\\n  }\\n\\n  function createDispute(uint256 _choices, bytes memory _extraData) public payable override returns (uint256 disputeID) {\\n    uint256 arbitrationFee = arbitrationCost(_extraData);\\n    require(msg.value >= arbitrationFee, \\\"Value is less than required arbitration fee.\\\");\\n    disputes.push(\\n      Dispute({\\n        arbitrated: IArbitrable(msg.sender),\\n        numberOfRulingOptions: _choices,\\n        ruling: 0,\\n        status: DisputeStatus.Waiting,\\n        appealDeadline: 0\\n      })\\n    );\\n    disputeID = disputes.length - 1;\\n    emit DisputeCreation(disputeID, IArbitrable(msg.sender));\\n  }\\n\\n  function giveRuling(\\n    uint256 _disputeID,\\n    uint256 _ruling,\\n    uint256 _appealWindow\\n  ) external onlyGovernor {\\n    Dispute storage dispute = disputes[_disputeID];\\n    require(_ruling <= dispute.numberOfRulingOptions, \\\"Invalid ruling.\\\");\\n    require(dispute.status == DisputeStatus.Waiting, \\\"The dispute must be waiting for arbitration.\\\");\\n\\n    dispute.ruling = _ruling;\\n    dispute.status = DisputeStatus.Appealable;\\n    dispute.appealDeadline = block.timestamp + _appealWindow;\\n\\n    emit AppealPossible(_disputeID, dispute.arbitrated);\\n  }\\n\\n  function appeal(uint256 _disputeID, bytes memory _extraData) public payable override {\\n    Dispute storage dispute = disputes[_disputeID];\\n    uint256 appealFee = appealCost(_disputeID, _extraData);\\n    require(dispute.status == DisputeStatus.Appealable, \\\"The dispute must be appealable.\\\");\\n    require(block.timestamp < dispute.appealDeadline, \\\"The appeal must occur before the end of the appeal period.\\\");\\n    require(msg.value >= appealFee, \\\"Value is less than required appeal fee\\\");\\n\\n    dispute.appealDeadline = 0;\\n    dispute.status = DisputeStatus.Waiting;\\n    emit AppealDecision(_disputeID, IArbitrable(msg.sender));\\n  }\\n\\n  function executeRuling(uint256 _disputeID) external {\\n    Dispute storage dispute = disputes[_disputeID];\\n    require(dispute.status == DisputeStatus.Appealable, \\\"The dispute must be appealable.\\\");\\n    require(block.timestamp >= dispute.appealDeadline, \\\"The dispute must be executed after its appeal period has ended.\\\");\\n\\n    dispute.status = DisputeStatus.Solved;\\n    dispute.arbitrated.rule(_disputeID, dispute.ruling);\\n  }\\n\\n  function disputeStatus(uint256 _disputeID) public view override returns (DisputeStatus status) {\\n    Dispute storage dispute = disputes[_disputeID];\\n    if (disputes[_disputeID].status == DisputeStatus.Appealable && block.timestamp >= dispute.appealDeadline)\\n      // If the appeal period is over, consider it solved even if rule has not been called yet.\\n      return DisputeStatus.Solved;\\n    else return disputes[_disputeID].status;\\n  }\\n\\n  function currentRuling(uint256 _disputeID) public view override returns (uint256 ruling) {\\n    return disputes[_disputeID].ruling;\\n  }\\n\\n  function appealPeriod(uint256 _disputeID) public view override returns (uint256 start, uint256 end) {\\n    Dispute storage dispute = disputes[_disputeID];\\n    return (block.timestamp, dispute.appealDeadline);\\n  }\\n}\\n\",\"keccak256\":\"0x3ea0c607683f4b7a0d7739c2c9fed6cf1e80cae993914d0d10dcbd605b1f192a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2861,"contract":"contracts/for-testing-purposes/Arbitrator.sol:Arbitrator","label":"governor","offset":0,"slot":"0","type":"t_address"},{"astId":2864,"contract":"contracts/for-testing-purposes/Arbitrator.sol:Arbitrator","label":"arbitrationPrice","offset":0,"slot":"1","type":"t_uint256"},{"astId":2893,"contract":"contracts/for-testing-purposes/Arbitrator.sol:Arbitrator","label":"disputes","offset":0,"slot":"2","type":"t_array(t_struct(Dispute)2877_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Dispute)2877_storage)dyn_storage":{"base":"t_struct(Dispute)2877_storage","encoding":"dynamic_array","label":"struct Arbitrator.Dispute[]","numberOfBytes":"32"},"t_contract(IArbitrable)153":{"encoding":"inplace","label":"contract IArbitrable","numberOfBytes":"20"},"t_enum(DisputeStatus)161":{"encoding":"inplace","label":"enum IArbitrator.DisputeStatus","numberOfBytes":"1"},"t_struct(Dispute)2877_storage":{"encoding":"inplace","label":"struct Arbitrator.Dispute","members":[{"astId":2867,"contract":"contracts/for-testing-purposes/Arbitrator.sol:Arbitrator","label":"arbitrated","offset":0,"slot":"0","type":"t_contract(IArbitrable)153"},{"astId":2869,"contract":"contracts/for-testing-purposes/Arbitrator.sol:Arbitrator","label":"appealDeadline","offset":0,"slot":"1","type":"t_uint256"},{"astId":2871,"contract":"contracts/for-testing-purposes/Arbitrator.sol:Arbitrator","label":"numberOfRulingOptions","offset":0,"slot":"2","type":"t_uint256"},{"astId":2873,"contract":"contracts/for-testing-purposes/Arbitrator.sol:Arbitrator","label":"ruling","offset":0,"slot":"3","type":"t_uint256"},{"astId":2876,"contract":"contracts/for-testing-purposes/Arbitrator.sol:Arbitrator","label":"status","offset":0,"slot":"4","type":"t_enum(DisputeStatus)161"}],"numberOfBytes":"160"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}