{
  "id": "42210c8f6ff26f1f3fc53ec8f01b8487",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.10",
  "solcLongVersion": "0.8.10+commit.fc410830",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/for-testing-purposes/Arbitrator.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.10;\n\nimport \"@kleros/erc-792/contracts/IArbitrable.sol\";\nimport \"@kleros/erc-792/contracts/IArbitrator.sol\";\n\n/** @title An IArbitrator implemetation for testing purposes.\n *  @dev DON'T USE ON PRODUCTION.\n */\ncontract Arbitrator is IArbitrator {\n  address public governor = msg.sender;\n  uint256 internal arbitrationPrice = 1_000_000_000_000_000_000;\n\n  struct Dispute {\n    IArbitrable arbitrated;\n    uint256 appealDeadline;\n    uint256 numberOfRulingOptions;\n    uint256 ruling;\n    DisputeStatus status;\n  }\n\n  modifier onlyGovernor() {\n    require(msg.sender == governor, \"Can only be called by the governor.\");\n    _;\n  }\n\n  Dispute[] public disputes;\n\n  function setArbitrationPrice(uint256 _arbitrationPrice) external onlyGovernor {\n    arbitrationPrice = _arbitrationPrice;\n  }\n\n  function arbitrationCost(bytes memory) public view override returns (uint256 fee) {\n    return arbitrationPrice;\n  }\n\n  function appealCost(uint256, bytes memory) public view override returns (uint256 fee) {\n    return arbitrationCost(\"UNUSED\");\n  }\n\n  function createDispute(uint256 _choices, bytes memory _extraData) public payable override returns (uint256 disputeID) {\n    uint256 arbitrationFee = arbitrationCost(_extraData);\n    require(msg.value >= arbitrationFee, \"Value is less than required arbitration fee.\");\n    disputes.push(\n      Dispute({\n        arbitrated: IArbitrable(msg.sender),\n        numberOfRulingOptions: _choices,\n        ruling: 0,\n        status: DisputeStatus.Waiting,\n        appealDeadline: 0\n      })\n    );\n    disputeID = disputes.length - 1;\n    emit DisputeCreation(disputeID, IArbitrable(msg.sender));\n  }\n\n  function giveRuling(\n    uint256 _disputeID,\n    uint256 _ruling,\n    uint256 _appealWindow\n  ) external onlyGovernor {\n    Dispute storage dispute = disputes[_disputeID];\n    require(_ruling <= dispute.numberOfRulingOptions, \"Invalid ruling.\");\n    require(dispute.status == DisputeStatus.Waiting, \"The dispute must be waiting for arbitration.\");\n\n    dispute.ruling = _ruling;\n    dispute.status = DisputeStatus.Appealable;\n    dispute.appealDeadline = block.timestamp + _appealWindow;\n\n    emit AppealPossible(_disputeID, dispute.arbitrated);\n  }\n\n  function appeal(uint256 _disputeID, bytes memory _extraData) public payable override {\n    Dispute storage dispute = disputes[_disputeID];\n    uint256 appealFee = appealCost(_disputeID, _extraData);\n    require(dispute.status == DisputeStatus.Appealable, \"The dispute must be appealable.\");\n    require(block.timestamp < dispute.appealDeadline, \"The appeal must occur before the end of the appeal period.\");\n    require(msg.value >= appealFee, \"Value is less than required appeal fee\");\n\n    dispute.appealDeadline = 0;\n    dispute.status = DisputeStatus.Waiting;\n    emit AppealDecision(_disputeID, IArbitrable(msg.sender));\n  }\n\n  function executeRuling(uint256 _disputeID) external {\n    Dispute storage dispute = disputes[_disputeID];\n    require(dispute.status == DisputeStatus.Appealable, \"The dispute must be appealable.\");\n    require(block.timestamp >= dispute.appealDeadline, \"The dispute must be executed after its appeal period has ended.\");\n\n    dispute.status = DisputeStatus.Solved;\n    dispute.arbitrated.rule(_disputeID, dispute.ruling);\n  }\n\n  function disputeStatus(uint256 _disputeID) public view override returns (DisputeStatus status) {\n    Dispute storage dispute = disputes[_disputeID];\n    if (disputes[_disputeID].status == DisputeStatus.Appealable && block.timestamp >= dispute.appealDeadline)\n      // If the appeal period is over, consider it solved even if rule has not been called yet.\n      return DisputeStatus.Solved;\n    else return disputes[_disputeID].status;\n  }\n\n  function currentRuling(uint256 _disputeID) public view override returns (uint256 ruling) {\n    return disputes[_disputeID].ruling;\n  }\n\n  function appealPeriod(uint256 _disputeID) public view override returns (uint256 start, uint256 end) {\n    Dispute storage dispute = disputes[_disputeID];\n    return (block.timestamp, dispute.appealDeadline);\n  }\n}\n"
      },
      "@kleros/erc-792/contracts/IArbitrable.sol": {
        "content": "/**\n * @authors: [@ferittuncer, @hbarcelos]\n * @reviewers: [@remedcu]\n * @auditors: []\n * @bounties: []\n * @deployments: []\n * SPDX-License-Identifier: MIT\n */\npragma solidity ^0.8.0;\n\nimport \"./IArbitrator.sol\";\n\n/**\n * @title IArbitrable\n * Arbitrable interface.\n * When developing arbitrable contracts, we need to:\n * - Define the action taken when a ruling is received by the contract.\n * - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);\n */\ninterface IArbitrable {\n    /**\n     * @dev To be raised when a ruling is given.\n     * @param _arbitrator The arbitrator giving the ruling.\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\n     * @param _ruling The ruling which was given.\n     */\n    event Ruling(IArbitrator indexed _arbitrator, uint256 indexed _disputeID, uint256 _ruling);\n\n    /**\n     * @dev Give a ruling for a dispute. Must be called by the arbitrator.\n     * The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\n     * @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\n     */\n    function rule(uint256 _disputeID, uint256 _ruling) external;\n}\n"
      },
      "@kleros/erc-792/contracts/IArbitrator.sol": {
        "content": "/**\n * @authors: [@ferittuncer, @hbarcelos]\n * @reviewers: [@remedcu]\n * @auditors: []\n * @bounties: []\n * @deployments: []\n * SPDX-License-Identifier: MIT\n */\n\npragma solidity ^0.8.0;\n\nimport \"./IArbitrable.sol\";\n\n/**\n * @title Arbitrator\n * Arbitrator abstract contract.\n * When developing arbitrator contracts we need to:\n * - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\n * - Define the functions for cost display (arbitrationCost and appealCost).\n * - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\n */\ninterface IArbitrator {\n    enum DisputeStatus {\n        Waiting,\n        Appealable,\n        Solved\n    }\n\n    /**\n     * @dev To be emitted when a dispute is created.\n     * @param _disputeID ID of the dispute.\n     * @param _arbitrable The contract which created the dispute.\n     */\n    event DisputeCreation(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\n\n    /**\n     * @dev To be emitted when a dispute can be appealed.\n     * @param _disputeID ID of the dispute.\n     * @param _arbitrable The contract which created the dispute.\n     */\n    event AppealPossible(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\n\n    /**\n     * @dev To be emitted when the current ruling is appealed.\n     * @param _disputeID ID of the dispute.\n     * @param _arbitrable The contract which created the dispute.\n     */\n    event AppealDecision(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\n\n    /**\n     * @dev Create a dispute. Must be called by the arbitrable contract.\n     * Must be paid at least arbitrationCost(_extraData).\n     * @param _choices Amount of choices the arbitrator can make in this dispute.\n     * @param _extraData Can be used to give additional info on the dispute to be created.\n     * @return disputeID ID of the dispute created.\n     */\n    function createDispute(uint256 _choices, bytes calldata _extraData) external payable returns (uint256 disputeID);\n\n    /**\n     * @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n     * @param _extraData Can be used to give additional info on the dispute to be created.\n     * @return cost Amount to be paid.\n     */\n    function arbitrationCost(bytes calldata _extraData) external view returns (uint256 cost);\n\n    /**\n     * @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\n     * @param _disputeID ID of the dispute to be appealed.\n     * @param _extraData Can be used to give extra info on the appeal.\n     */\n    function appeal(uint256 _disputeID, bytes calldata _extraData) external payable;\n\n    /**\n     * @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n     * @param _disputeID ID of the dispute to be appealed.\n     * @param _extraData Can be used to give additional info on the dispute to be created.\n     * @return cost Amount to be paid.\n     */\n    function appealCost(uint256 _disputeID, bytes calldata _extraData) external view returns (uint256 cost);\n\n    /**\n     * @dev Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\n     * @param _disputeID ID of the dispute.\n     * @return start The start of the period.\n     * @return end The end of the period.\n     */\n    function appealPeriod(uint256 _disputeID) external view returns (uint256 start, uint256 end);\n\n    /**\n     * @dev Return the status of a dispute.\n     * @param _disputeID ID of the dispute to rule.\n     * @return status The status of the dispute.\n     */\n    function disputeStatus(uint256 _disputeID) external view returns (DisputeStatus status);\n\n    /**\n     * @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\n     * @param _disputeID ID of the dispute.\n     * @return ruling The ruling which has been given or the one which will be given if there is no appeal.\n     */\n    function currentRuling(uint256 _disputeID) external view returns (uint256 ruling);\n}\n"
      },
      "@kleros/erc-792/contracts/erc-1497/IEvidence.sol": {
        "content": "/**\n * @authors: [@ferittuncer, @hbarcelos]\n * @reviewers: []\n * @auditors: []\n * @bounties: []\n * @deployments: []\n * SPDX-License-Identifier: MIT\n */\npragma solidity ^0.8.0;\n\nimport \"../IArbitrator.sol\";\n\n/** @title IEvidence\n *  ERC-1497: Evidence Standard\n */\ninterface IEvidence {\n    /**\n     * @dev To be emitted when meta-evidence is submitted.\n     * @param _metaEvidenceID Unique identifier of meta-evidence.\n     * @param _evidence IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'\n     */\n    event MetaEvidence(uint256 indexed _metaEvidenceID, string _evidence);\n\n    /**\n     * @dev To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).\n     * @param _arbitrator The arbitrator of the contract.\n     * @param _evidenceGroupID Unique identifier of the evidence group the evidence belongs to.\n     * @param _party The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\n     * @param _evidence IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\n     */\n    event Evidence(\n        IArbitrator indexed _arbitrator,\n        uint256 indexed _evidenceGroupID,\n        address indexed _party,\n        string _evidence\n    );\n\n    /**\n     * @dev To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.\n     * @param _arbitrator The arbitrator of the contract.\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\n     * @param _metaEvidenceID Unique identifier of meta-evidence.\n     * @param _evidenceGroupID Unique identifier of the evidence group that is linked to this dispute.\n     */\n    event Dispute(\n        IArbitrator indexed _arbitrator,\n        uint256 indexed _disputeID,\n        uint256 _metaEvidenceID,\n        uint256 _evidenceGroupID\n    );\n}\n"
      },
      "@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\n/**\n *  @authors: [@ferittuncer]\n *  @reviewers: [@mtsalenc*, @hbarcelos*, @unknownunknown1, @MerlinEgalite, @fnanni-0*, @shalzz]\n *  @auditors: []\n *  @bounties: []\n *  @deployments: []\n */\n\npragma solidity ^0.8.0;\n\nimport \"@kleros/erc-792/contracts/IArbitrable.sol\";\nimport \"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\";\nimport \"@kleros/erc-792/contracts/IArbitrator.sol\";\n\n/**\n *  @title This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet.\n    This interface is used in Dispute Resolver (resolve.kleros.io).\n */\nabstract contract IDisputeResolver is IArbitrable, IEvidence {\n    string public constant VERSION = \"2.0.0\"; // Can be used to distinguish between multiple deployed versions, if necessary.\n\n    /** @dev Raised when a contribution is made, inside fundAppeal function.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _round The round number the contribution was made to.\n     *  @param ruling Indicates the ruling option which got the contribution.\n     *  @param _contributor Caller of fundAppeal function.\n     *  @param _amount Contribution amount.\n     */\n    event Contribution(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 ruling, address indexed _contributor, uint256 _amount);\n\n    /** @dev Raised when a contributor withdraws non-zero value.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _round The round number the withdrawal was made from.\n     *  @param _ruling Indicates the ruling option which contributor gets rewards from.\n     *  @param _contributor The beneficiary of withdrawal.\n     *  @param _reward Total amount of withdrawal, consists of reimbursed deposits plus rewards.\n     */\n    event Withdrawal(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 _ruling, address indexed _contributor, uint256 _reward);\n\n    /** @dev To be raised when a ruling option is fully funded for appeal.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _round Number of the round this ruling option was fully funded in.\n     *  @param _ruling The ruling option which just got fully funded.\n     */\n    event RulingFunded(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 indexed _ruling);\n\n    /** @dev Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\n     *  @param _externalDisputeID Dispute id as in arbitrator contract.\n     *  @return localDisputeID Dispute id as in arbitrable contract.\n     */\n    function externalIDtoLocalID(uint256 _externalDisputeID) external virtual returns (uint256 localDisputeID);\n\n    /** @dev Returns number of possible ruling options. Valid rulings are [0, return value].\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @return count The number of ruling options.\n     */\n    function numberOfRulingOptions(uint256 _localDisputeID) external view virtual returns (uint256 count);\n\n    /** @dev Allows to submit evidence for a given dispute.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\n     */\n    function submitEvidence(uint256 _localDisputeID, string calldata _evidenceURI) external virtual;\n\n    /** @dev Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _ruling The ruling option to which the caller wants to contribute.\n     *  @return fullyFunded True if the ruling option got fully funded as a result of this contribution.\n     */\n    function fundAppeal(uint256 _localDisputeID, uint256 _ruling) external payable virtual returns (bool fullyFunded);\n\n    /** @dev Returns appeal multipliers.\n     *  @return winnerStakeMultiplier Winners stake multiplier.\n     *  @return loserStakeMultiplier Losers stake multiplier.\n     *  @return loserAppealPeriodMultiplier Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\n     *  @return denominator Multiplier denominator in basis points.\n     */\n    function getMultipliers()\n        external\n        view\n        virtual\n        returns (\n            uint256 winnerStakeMultiplier,\n            uint256 loserStakeMultiplier,\n            uint256 loserAppealPeriodMultiplier,\n            uint256 denominator\n        );\n\n    /** @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _contributor Beneficiary of withdraw operation.\n     *  @param _round Number of the round that caller wants to execute withdraw on.\n     *  @param _ruling A ruling option that caller wants to execute withdraw on.\n     *  @return sum The amount that is going to be transferred to contributor as a result of this function call.\n     */\n    function withdrawFeesAndRewards(\n        uint256 _localDisputeID,\n        address payable _contributor,\n        uint256 _round,\n        uint256 _ruling\n    ) external virtual returns (uint256 sum);\n\n    /** @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _contributor Beneficiary of withdraw operation.\n     *  @param _ruling Ruling option that caller wants to execute withdraw on.\n     */\n    function withdrawFeesAndRewardsForAllRounds(\n        uint256 _localDisputeID,\n        address payable _contributor,\n        uint256 _ruling\n    ) external virtual;\n\n    /** @dev Returns the sum of withdrawable amount.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _contributor Beneficiary of withdraw operation.\n     *  @param _ruling Ruling option that caller wants to get withdrawable amount from.\n     *  @return sum The total amount available to withdraw.\n     */\n    function getTotalWithdrawableAmount(\n        uint256 _localDisputeID,\n        address payable _contributor,\n        uint256 _ruling\n    ) external view virtual returns (uint256 sum);\n}\n"
      },
      "contracts/TruthPost.sol": {
        "content": "/// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\nimport \"@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol\";\nimport \"./ITruthPost.sol\";\n\n/// @title  The Trust Post\n/// @author https://github.com/proveuswrong<0xferit, gratestas>\n/// @notice Smart contract for a type of curation, where submitted items are on hold until they are withdrawn and the amount of security deposits are determined by submitters.\n/// @dev    You should target ITruthPost interface contract for building on top. Otherwise you risk incompatibility across versions.\n///         Articles are not addressed with their identifiers. That enables us to reuse same storage address for another article later.///         Arbitrator is fixed, but subcourts, jury size and metaevidence are not.\n///         We prevent articles to get withdrawn immediately. This is to prevent submitter to escape punishment in case someone discovers an argument to debunk the article.\n///         Bounty amounts are compressed with a lossy compression method to save on storage cost.\n/// @custom:approvals 0xferit, gratestas\ncontract TruthPost is ITruthPost, IArbitrable, IEvidence {\n    IArbitrator public immutable ARBITRATOR;\n    uint256 public constant NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE = 32; // To compress bounty amount to gain space in struct. Lossy compression.\n\n    uint8 public categoryCounter = 0;\n\n    address payable public admin = payable(msg.sender);\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin);\n        _;\n    }\n\n    struct DisputeData {\n        address payable challenger;\n        RulingOptions outcome;\n        uint8 articleCategory;\n        bool resolved; // To remove dependency to disputeStatus function of arbitrator. This function is likely to be removed in Kleros v2.\n        uint80 articleStorageAddress; // 2^16 is sufficient. Just using extra available space.\n        Round[] rounds; // Tracks each appeal round of a dispute.\n    }\n\n    struct Round {\n        mapping(address => uint256[NUMBER_OF_RULING_OPTIONS + 1]) contributions;\n        bool[NUMBER_OF_RULING_OPTIONS + 1] hasPaid; // True if the fees for this particular answer has been fully paid in the form hasPaid[rulingOutcome].\n        uint256[NUMBER_OF_RULING_OPTIONS + 1] totalPerRuling;\n        uint256 totalClaimableAfterExpenses;\n    }\n\n    struct Article {\n        address payable owner;\n        uint32 withdrawalPermittedAt; // Overflows in year 2106.\n        uint56 bountyAmount; // 32-bits compression. Decompressed size is 88 bits.\n        uint8 category;\n    }\n\n    bytes[64] public categoryToArbitratorExtraData;\n\n    mapping(uint80 => Article) public articleStorage; // Key: Storage address of article. Articles are not addressed with their identifiers, to enable reusing a storage slot.\n    mapping(uint256 => DisputeData) public disputes; // Key: Dispute ID as in arbitrator.\n\n    constructor(\n        IArbitrator _arbitrator,\n        bytes memory _arbitratorExtraData,\n        string memory _metaevidenceIpfsUri,\n        uint256 _articleWithdrawalTimelock,\n        uint256 _winnerStakeMultiplier,\n        uint256 _loserStakeMultiplier,\n        address payable _treasury\n    ) ITruthPost(_articleWithdrawalTimelock, _winnerStakeMultiplier, _loserStakeMultiplier, _treasury) {\n        ARBITRATOR = _arbitrator;\n        newCategory(_metaevidenceIpfsUri, _arbitratorExtraData);\n    }\n\n    /// @inheritdoc ITruthPost\n    function initializeArticle(\n        string calldata _articleID,\n        uint8 _category,\n        uint80 _searchPointer\n    ) external payable override {\n        require(_category < categoryCounter, \"This category does not exist\");\n\n        Article storage article;\n        do {\n            article = articleStorage[_searchPointer++];\n        } while (article.bountyAmount != 0);\n\n        article.owner = payable(msg.sender);\n        article.bountyAmount = uint56(msg.value >> NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE);\n        article.category = _category;\n\n        require(article.bountyAmount > 0, \"You can't initialize an article without putting a bounty.\");\n\n        uint256 articleStorageAddress = _searchPointer - 1;\n        emit NewArticle(_articleID, _category, articleStorageAddress);\n        emit BalanceUpdate(\n            articleStorageAddress,\n            uint256(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE\n        );\n    }\n\n    /// @inheritdoc ITruthPost\n    function submitEvidence(uint256 _disputeID, string calldata _evidenceURI) external override {\n        emit Evidence(ARBITRATOR, _disputeID, msg.sender, _evidenceURI);\n    }\n\n    /// @inheritdoc ITruthPost\n    function increaseBounty(uint80 _articleStorageAddress) external payable override {\n        Article storage article = articleStorage[_articleStorageAddress];\n        require(msg.sender == article.owner, \"Only author can increase bounty of an article.\");\n        // To prevent mistakes.\n\n        article.bountyAmount += uint56(msg.value >> NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE);\n\n        emit BalanceUpdate(\n            _articleStorageAddress,\n            uint256(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE\n        );\n    }\n\n    /// @inheritdoc ITruthPost\n    function initiateWithdrawal(uint80 _articleStorageAddress) external override {\n        Article storage article = articleStorage[_articleStorageAddress];\n        require(msg.sender == article.owner, \"Only author can withdraw an article.\");\n        require(article.withdrawalPermittedAt == 0, \"Withdrawal already initiated or there is a challenge.\");\n\n        article.withdrawalPermittedAt = uint32(block.timestamp + ARTICLE_WITHDRAWAL_TIMELOCK);\n        emit TimelockStarted(_articleStorageAddress);\n    }\n\n    /// @inheritdoc ITruthPost\n    function withdraw(uint80 _articleStorageAddress) external override {\n        Article storage article = articleStorage[_articleStorageAddress];\n\n        require(msg.sender == article.owner, \"Only author can withdraw an article.\");\n        require(article.withdrawalPermittedAt != 0, \"You need to initiate withdrawal first.\");\n        require(\n            article.withdrawalPermittedAt <= block.timestamp,\n            \"You need to wait for timelock or wait until the challenge ends.\"\n        );\n\n        uint256 withdrawal = uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE;\n        article.bountyAmount = 0;\n        // This is critical to reset.\n        article.withdrawalPermittedAt = 0;\n        // This too, otherwise new article inside the same slot can withdraw instantly.\n        payable(msg.sender).transfer(withdrawal);\n        emit ArticleWithdrawn(_articleStorageAddress);\n    }\n\n    /// @inheritdoc ITruthPost\n    function challenge(uint80 _articleStorageAddress) external payable override {\n        Article storage article = articleStorage[_articleStorageAddress];\n        require(article.bountyAmount > 0, \"Nothing to challenge.\");\n        require(article.withdrawalPermittedAt != type(uint32).max, \"There is an ongoing challenge.\");\n        article.withdrawalPermittedAt = type(uint32).max;\n        // Mark as challenged.\n\n        require(msg.value >= challengeFee(_articleStorageAddress), \"Insufficient funds to challenge.\");\n\n        uint256 taxAmount = ((uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE) *\n            challengeTaxRate) / MULTIPLIER_DENOMINATOR;\n        treasuryBalance += taxAmount;\n\n        uint256 disputeID = ARBITRATOR.createDispute{value: msg.value - taxAmount}(\n            NUMBER_OF_RULING_OPTIONS,\n            categoryToArbitratorExtraData[article.category]\n        );\n\n        disputes[disputeID].challenger = payable(msg.sender);\n        disputes[disputeID].rounds.push();\n        disputes[disputeID].articleStorageAddress = uint80(_articleStorageAddress);\n        disputes[disputeID].articleCategory = article.category;\n\n        // Evidence group ID is dispute ID.\n        emit Dispute(ARBITRATOR, disputeID, article.category, disputeID);\n        // This event links the dispute to an article storage address.\n        emit Challenge(_articleStorageAddress, msg.sender, disputeID);\n    }\n\n    /// @inheritdoc ITruthPost\n    function fundAppeal(uint256 _disputeID, RulingOptions _supportedRuling)\n        external\n        payable\n        override\n        returns (bool fullyFunded)\n    {\n        DisputeData storage dispute = disputes[_disputeID];\n\n        RulingOptions currentRuling = RulingOptions(ARBITRATOR.currentRuling(_disputeID));\n        uint256 basicCost;\n        uint256 totalCost;\n        {\n            (uint256 appealWindowStart, uint256 appealWindowEnd) = ARBITRATOR.appealPeriod(_disputeID);\n\n            uint256 multiplier;\n\n            if (_supportedRuling == currentRuling) {\n                require(block.timestamp < appealWindowEnd, \"Funding must be made within the appeal period.\");\n\n                multiplier = WINNER_STAKE_MULTIPLIER;\n            } else {\n                require(\n                    block.timestamp <\n                        (appealWindowStart +\n                            (((appealWindowEnd - appealWindowStart) * LOSER_APPEAL_PERIOD_MULTIPLIER) /\n                                MULTIPLIER_DENOMINATOR)),\n                    \"Funding must be made within the first half appeal period.\"\n                );\n\n                multiplier = LOSER_STAKE_MULTIPLIER;\n            }\n\n            basicCost = ARBITRATOR.appealCost(_disputeID, categoryToArbitratorExtraData[dispute.articleCategory]);\n            totalCost = basicCost + ((basicCost * (multiplier)) / MULTIPLIER_DENOMINATOR);\n        }\n\n        RulingOptions supportedRulingOutcome = RulingOptions(_supportedRuling);\n\n        uint256 lastRoundIndex = dispute.rounds.length - 1;\n        Round storage lastRound = dispute.rounds[lastRoundIndex];\n        require(!lastRound.hasPaid[uint256(supportedRulingOutcome)], \"Appeal fee has already been paid.\");\n\n        uint256 contribution;\n        {\n            uint256 paidSoFar = lastRound.totalPerRuling[uint256(supportedRulingOutcome)];\n\n            if (paidSoFar >= totalCost) {\n                contribution = 0;\n                // This can happen if arbitration fee gets lowered in between contributions.\n            } else {\n                contribution = totalCost - paidSoFar > msg.value ? msg.value : totalCost - paidSoFar;\n            }\n        }\n\n        emit Contribution(_disputeID, lastRoundIndex, _supportedRuling, msg.sender, contribution);\n\n        lastRound.contributions[msg.sender][uint256(supportedRulingOutcome)] += contribution;\n        lastRound.totalPerRuling[uint256(supportedRulingOutcome)] += contribution;\n\n        if (lastRound.totalPerRuling[uint256(supportedRulingOutcome)] >= totalCost) {\n            lastRound.totalClaimableAfterExpenses += lastRound.totalPerRuling[uint256(supportedRulingOutcome)];\n            lastRound.hasPaid[uint256(supportedRulingOutcome)] = true;\n            emit RulingFunded(_disputeID, lastRoundIndex, _supportedRuling);\n        }\n\n        if (\n            lastRound.hasPaid[uint256(RulingOptions.ChallengeFailed)] &&\n            lastRound.hasPaid[uint256(RulingOptions.Debunked)]\n        ) {\n            dispute.rounds.push();\n            lastRound.totalClaimableAfterExpenses -= basicCost;\n            ARBITRATOR.appeal{value: basicCost}(_disputeID, categoryToArbitratorExtraData[dispute.articleCategory]);\n        }\n\n        // Ignoring failure condition deliberately.\n        if (msg.value - contribution > 0) payable(msg.sender).send(msg.value - contribution);\n\n        return lastRound.hasPaid[uint256(supportedRulingOutcome)];\n    }\n\n    /// @notice Execute a ruling\n    /// @dev This is only for arbitrator to use.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _ruling Winning ruling option.\n    function rule(uint256 _disputeID, uint256 _ruling) external override {\n        require(IArbitrator(msg.sender) == ARBITRATOR);\n\n        DisputeData storage dispute = disputes[_disputeID];\n        Round storage lastRound = dispute.rounds[dispute.rounds.length - 1];\n\n        // Appeal overrides arbitrator ruling. If a ruling option was not fully funded and the counter ruling option was funded, funded ruling option wins by default.\n        RulingOptions wonByDefault;\n        if (lastRound.hasPaid[uint256(RulingOptions.ChallengeFailed)]) {\n            wonByDefault = RulingOptions.ChallengeFailed;\n        } else if (lastRound.hasPaid[uint256(RulingOptions.ChallengeFailed)]) {\n            wonByDefault = RulingOptions.Debunked;\n        }\n\n        RulingOptions actualRuling = wonByDefault != RulingOptions.Tied ? wonByDefault : RulingOptions(_ruling);\n        dispute.outcome = actualRuling;\n\n        uint80 articleStorageAddress = dispute.articleStorageAddress;\n\n        Article storage article = articleStorage[articleStorageAddress];\n\n        if (actualRuling == RulingOptions.Debunked) {\n            uint256 bounty = uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE;\n            article.bountyAmount = 0;\n\n            emit Debunked(articleStorageAddress);\n            disputes[_disputeID].challenger.send(bounty);\n            // Ignoring failure condition deliberately.\n        }\n        // In case of tie, article stands.\n        article.withdrawalPermittedAt = 0;\n        // Unmark as challenged.\n        dispute.resolved = true;\n\n        emit Ruling(IArbitrator(msg.sender), _disputeID, _ruling);\n    }\n\n    /// @inheritdoc ITruthPost\n    function withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256 _disputeID, address payable _contributor)\n        external\n        override\n    {\n        DisputeData storage dispute = disputes[_disputeID];\n        uint256 noOfRounds = dispute.rounds.length;\n        for (uint256 roundNumber = 0; roundNumber < noOfRounds; roundNumber++) {\n            for (uint256 rulingOption = 0; rulingOption <= NUMBER_OF_RULING_OPTIONS; rulingOption++)\n                withdrawFeesAndRewards(_disputeID, _contributor, roundNumber, RulingOptions(rulingOption));\n        }\n    }\n\n    /// @inheritdoc ITruthPost\n    function withdrawFeesAndRewardsForAllRounds(\n        uint256 _disputeID,\n        address payable _contributor,\n        RulingOptions _ruling\n    ) external override {\n        DisputeData storage dispute = disputes[_disputeID];\n        uint256 noOfRounds = dispute.rounds.length;\n        for (uint256 roundNumber = 0; roundNumber < noOfRounds; roundNumber++) {\n            withdrawFeesAndRewards(_disputeID, _contributor, roundNumber, _ruling);\n        }\n    }\n\n    /// @inheritdoc ITruthPost\n    function withdrawFeesAndRewardsForGivenPositions(\n        uint256 _disputeID,\n        address payable _contributor,\n        uint256[][] calldata positions\n    ) external override {\n        for (uint256 roundNumber = 0; roundNumber < positions.length; roundNumber++) {\n            for (uint256 rulingOption = 0; rulingOption < positions[roundNumber].length; rulingOption++) {\n                if (positions[roundNumber][rulingOption] > 0) {\n                    withdrawFeesAndRewards(_disputeID, _contributor, roundNumber, RulingOptions(rulingOption));\n                }\n            }\n        }\n    }\n\n    /// @inheritdoc ITruthPost\n    function withdrawFeesAndRewards(\n        uint256 _disputeID,\n        address payable _contributor,\n        uint256 _roundNumber,\n        RulingOptions _ruling\n    ) public override returns (uint256 amount) {\n        DisputeData storage dispute = disputes[_disputeID];\n        require(dispute.resolved, \"There is no ruling yet.\");\n\n        Round storage round = dispute.rounds[_roundNumber];\n\n        amount = getWithdrawableAmount(round, _contributor, _ruling, dispute.outcome);\n\n        if (amount != 0) {\n            round.contributions[_contributor][uint256(RulingOptions(_ruling))] = 0;\n            _contributor.send(amount);\n            // Ignoring failure condition deliberately.\n            emit Withdrawal(_disputeID, _roundNumber, _ruling, _contributor, amount);\n        }\n    }\n\n    /// @notice Updates the challenge tax rate of the contract to a new value.\n    /// @dev    The new challenge tax rate must be at most 25% based on MULTIPLIER_DENOMINATOR.\n    ///         Only the current administrator can call this function. Emits ChallengeTaxRateUpdate.\n    /// @param _newChallengeTaxRate The new challenge tax rate to be set.\n    function updateChallengeTaxRate(uint256 _newChallengeTaxRate) external onlyAdmin {\n        require(_newChallengeTaxRate <= 256, \"The tax rate can only be increased by a maximum of 25%\");\n        challengeTaxRate = _newChallengeTaxRate;\n        emit ChallengeTaxRateUpdate(_newChallengeTaxRate);\n    }\n\n    /// @notice Transfers the balance of the contract to the treasury.\n    /// @dev    Allows the contract to send its entire balance to the treasury address.\n    ///         It is important to ensure that the treasury address is set correctly.\n    ///         If the transfer fails, an exception will be raised, and the funds will remain in the contract.\n    ///         Emits TreasuryBalanceUpdate.\n    function transferBalanceToTreasury() public {\n        uint256 amount = treasuryBalance;\n        treasuryBalance = 0;\n        TREASURY.send(amount);\n        emit TreasuryBalanceUpdate(amount);\n    }\n\n    /// @inheritdoc ITruthPost\n    function switchPublishingLock() public override onlyAdmin {\n        isPublishingEnabled = !isPublishingEnabled;\n    }\n\n    /// @notice Changes the administrator of the contract to a new address.\n    /// @dev    Only the current administrator can call this function. Emits AdminUpdate.\n    /// @param  _newAdmin The address of the new administrator.\n    function changeAdmin(address payable _newAdmin) external onlyAdmin {\n        admin = _newAdmin;\n        emit AdminUpdate(_newAdmin);\n    }\n\n    /// @notice Changes the treasury address of the contract to a new address.\n    /// @dev    Only the current administrator can call this function. Emits TreasuryUpdate.\n    /// @param  _newTreasury The address of the new treasury.\n    function changeTreasury(address payable _newTreasury) external onlyAdmin {\n        TREASURY = _newTreasury;\n        emit TreasuryUpdate(_newTreasury);\n    }\n\n    /// @inheritdoc ITruthPost\n    function changeWinnerStakeMultiplier(uint256 _newWinnerStakeMultiplier) external override onlyAdmin {\n        WINNER_STAKE_MULTIPLIER = _newWinnerStakeMultiplier;\n        emit WinnerStakeMultiplierUpdate(_newWinnerStakeMultiplier);\n    }\n\n    /// @inheritdoc ITruthPost\n    function changeLoserStakeMultiplier(uint256 _newLoserStakeMultiplier) external override onlyAdmin {\n        LOSER_STAKE_MULTIPLIER = _newLoserStakeMultiplier;\n        emit LoserStakeMultiplierUpdate(_newLoserStakeMultiplier);\n    }\n\n    /// @inheritdoc ITruthPost\n    function changeLoserAppealPeriodMultiplier(uint256 _newLoserAppealPeriodMultiplier) external override onlyAdmin {\n        LOSER_APPEAL_PERIOD_MULTIPLIER = _newLoserAppealPeriodMultiplier;\n        emit LoserAppealPeriodMultiplierUpdate(_newLoserAppealPeriodMultiplier);\n    }\n    \n    /// @inheritdoc ITruthPost\n    function changeArticleWithdrawalTimelock(uint256 _newArticleWithdrawalTimelock) external override onlyAdmin {\n        ARTICLE_WITHDRAWAL_TIMELOCK = _newArticleWithdrawalTimelock;\n        emit ArticleWithdrawalTimelockUpdate(_newArticleWithdrawalTimelock);\n    }\n\n\n    /// @notice Initialize a category.\n    /// @param _metaevidenceIpfsUri IPFS content identifier for metaevidence.\n    /// @param _arbitratorExtraData Extra data of Kleros arbitrator, signaling subcourt and jury size selection.\n    function newCategory(string memory _metaevidenceIpfsUri, bytes memory _arbitratorExtraData) public {\n        require(categoryCounter + 1 != 0, \"No space left for a new category\");\n        emit MetaEvidence(categoryCounter, _metaevidenceIpfsUri);\n        categoryToArbitratorExtraData[categoryCounter] = _arbitratorExtraData;\n\n        categoryCounter++;\n    }\n\n    /// @inheritdoc ITruthPost\n    function transferOwnership(uint80 _articleStorageAddress, address payable _newOwner) external override {\n        Article storage article = articleStorage[_articleStorageAddress];\n        require(msg.sender == article.owner, \"Only author can transfer ownership.\");\n        article.owner = _newOwner;\n        emit OwnershipTransfer(_newOwner);\n    }\n\n    /// @inheritdoc ITruthPost\n    function challengeFee(uint80 _articleStorageAddress) public view override returns (uint256) {\n        Article storage article = articleStorage[_articleStorageAddress];\n\n        uint256 arbitrationFee = ARBITRATOR.arbitrationCost(categoryToArbitratorExtraData[article.category]);\n        uint256 challengeTax = ((uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE) *\n            challengeTaxRate) / MULTIPLIER_DENOMINATOR;\n\n        return arbitrationFee + challengeTax;\n    }\n\n    /// @inheritdoc ITruthPost\n    function appealFee(uint256 _disputeID) external view override returns (uint256 arbitrationFee) {\n        DisputeData storage dispute = disputes[_disputeID];\n        arbitrationFee = ARBITRATOR.appealCost(_disputeID, categoryToArbitratorExtraData[dispute.articleCategory]);\n    }\n\n    /// @inheritdoc ITruthPost\n    function findVacantStorageSlot(uint80 _searchPointer) external view override returns (uint256 vacantSlotIndex) {\n        Article storage article;\n        do {\n            article = articleStorage[_searchPointer++];\n        } while (article.bountyAmount != 0);\n\n        return _searchPointer - 1;\n    }\n\n    /// @inheritdoc ITruthPost\n    function getTotalWithdrawableAmount(uint256 _disputeID, address payable _contributor)\n        external\n        view\n        override\n        returns (uint256 sum, uint256[][] memory amounts)\n    {\n        DisputeData storage dispute = disputes[_disputeID];\n        if (!dispute.resolved) return (uint256(0), amounts);\n        uint256 noOfRounds = dispute.rounds.length;\n        RulingOptions finalRuling = dispute.outcome;\n\n        amounts = new uint256[][](noOfRounds);\n        for (uint256 roundNumber = 0; roundNumber < noOfRounds; roundNumber++) {\n            amounts[roundNumber] = new uint256[](NUMBER_OF_RULING_OPTIONS + 1);\n\n            Round storage round = dispute.rounds[roundNumber];\n            for (uint256 rulingOption = 0; rulingOption <= NUMBER_OF_RULING_OPTIONS; rulingOption++) {\n                uint256 currentAmount = getWithdrawableAmount(\n                    round,\n                    _contributor,\n                    RulingOptions(rulingOption),\n                    finalRuling\n                );\n                if (currentAmount > 0) {\n                    sum += getWithdrawableAmount(round, _contributor, RulingOptions(rulingOption), finalRuling);\n                    amounts[roundNumber][rulingOption] = currentAmount;\n                }\n            }\n        }\n    }\n\n    /// @notice Returns withdrawable amount for given parameters.\n    function getWithdrawableAmount(\n        Round storage _round,\n        address _contributor,\n        RulingOptions _ruling,\n        RulingOptions _finalRuling\n    ) internal view returns (uint256 amount) {\n        RulingOptions givenRuling = RulingOptions(_ruling);\n\n        if (!_round.hasPaid[uint256(givenRuling)]) {\n            // Allow to reimburse if funding was unsuccessful for this ruling option.\n            amount = _round.contributions[_contributor][uint256(givenRuling)];\n        } else {\n            // Funding was successful for this ruling option.\n            if (_ruling == _finalRuling) {\n                // This ruling option is the ultimate winner.\n                amount = _round.totalPerRuling[uint256(givenRuling)] > 0\n                    ? (_round.contributions[_contributor][uint256(givenRuling)] * _round.totalClaimableAfterExpenses) /\n                        _round.totalPerRuling[uint256(givenRuling)]\n                    : 0;\n            } else if (!_round.hasPaid[uint256(RulingOptions(_finalRuling))]) {\n                // The ultimate winner was not funded in this round. Contributions discounting the appeal fee are reimbursed proportionally.\n                amount =\n                    (_round.contributions[_contributor][uint256(givenRuling)] * _round.totalClaimableAfterExpenses) /\n                    (_round.totalPerRuling[uint256(RulingOptions.ChallengeFailed)] +\n                        _round.totalPerRuling[uint256(RulingOptions.Debunked)]);\n            }\n        }\n    }\n\n    /// @inheritdoc ITruthPost\n    function getRoundInfo(uint256 _disputeID, uint256 _round)\n        external\n        view\n        override\n        returns (\n            bool[NUMBER_OF_RULING_OPTIONS + 1] memory hasPaid,\n            uint256[NUMBER_OF_RULING_OPTIONS + 1] memory totalPerRuling,\n            uint256 totalClaimableAfterExpenses\n        )\n    {\n        Round storage round = disputes[_disputeID].rounds[_round];\n        return (round.hasPaid, round.totalPerRuling, round.totalClaimableAfterExpenses);\n    }\n\n    /// @inheritdoc ITruthPost\n    function getLastRoundWinner(uint256 _disputeID) public view override returns (uint256) {\n        return ARBITRATOR.currentRuling(_disputeID);\n    }\n\n    /// @inheritdoc ITruthPost\n    function getAppealPeriod(uint256 _disputeID, RulingOptions _ruling)\n        external\n        view\n        override\n        returns (uint256, uint256)\n    {\n        (uint256 appealWindowStart, uint256 appealWindowEnd) = ARBITRATOR.appealPeriod(_disputeID);\n        uint256 loserAppealWindowEnd = appealWindowStart +\n            (((appealWindowEnd - appealWindowStart) * LOSER_APPEAL_PERIOD_MULTIPLIER) / MULTIPLIER_DENOMINATOR);\n\n        bool isWinner = RulingOptions(getLastRoundWinner(_disputeID)) == _ruling;\n        return isWinner ? (appealWindowStart, appealWindowEnd) : (appealWindowStart, loserAppealWindowEnd);\n    }\n\n    /// @inheritdoc ITruthPost\n    function getReturnOfInvestmentRatio(RulingOptions _ruling, RulingOptions _lastRoundWinner)\n        external\n        view\n        override\n        returns (uint256)\n    {\n        bool isWinner = _lastRoundWinner == _ruling;\n        uint256 DECIMAL_PRECISION = 1000;\n        uint256 multiplier = isWinner ? WINNER_STAKE_MULTIPLIER : LOSER_STAKE_MULTIPLIER;\n        return (((WINNER_STAKE_MULTIPLIER + LOSER_STAKE_MULTIPLIER + MULTIPLIER_DENOMINATOR) * DECIMAL_PRECISION) /\n            (multiplier + MULTIPLIER_DENOMINATOR));\n    }\n\n    /// @inheritdoc ITruthPost\n    function getAmountRemainsToBeRaised(uint256 _disputeID, RulingOptions _ruling)\n        external\n        view\n        override\n        returns (uint256)\n    {\n        DisputeData storage dispute = disputes[_disputeID];\n        uint256 lastRoundIndex = dispute.rounds.length - 1;\n        Round storage lastRound = dispute.rounds[lastRoundIndex];\n\n        bool isWinner = RulingOptions(getLastRoundWinner(_disputeID)) == _ruling;\n        uint256 multiplier = isWinner ? WINNER_STAKE_MULTIPLIER : LOSER_STAKE_MULTIPLIER;\n\n        uint256 raisedSoFar = lastRound.totalPerRuling[uint256(_ruling)];\n        uint256 basicCost = ARBITRATOR.appealCost(_disputeID, categoryToArbitratorExtraData[dispute.articleCategory]);\n        uint256 totalCost = basicCost + ((basicCost * (multiplier)) / MULTIPLIER_DENOMINATOR);\n\n        return totalCost - raisedSoFar;\n    }\n\n}\n"
      },
      "contracts/ITruthPost.sol": {
        "content": "/// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\n/// @title  The Truth Post: Accurate and Relevant News\n/// @author https://github.com/proveuswrong<0xferit, gratestas>\n/// @dev    This contract serves as a standard interface among multiple deployments of the Truth Post contracts.\n///         You should target this interface contract for interactions, not the concrete contract; otherwise you risk incompatibility across versions.\n/// @custom:approvals 0xferit, gratestas\nabstract contract ITruthPost {\n    string public constant VERSION = \"1.2.0\";\n\n    enum RulingOptions {\n        Tied,\n        ChallengeFailed,\n        Debunked\n    }\n\n    bool isPublishingEnabled = true;\n    address payable public TREASURY;\n    uint256 public treasuryBalance;\n    uint256 public constant NUMBER_OF_RULING_OPTIONS = 2;\n    uint256 public constant MULTIPLIER_DENOMINATOR = 1024; // Denominator for multipliers.\n    uint256 public LOSER_APPEAL_PERIOD_MULTIPLIER = 512; // Multiplier of the appeal period for losers (any other ruling options) in basis points. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\n    uint256 public ARTICLE_WITHDRAWAL_TIMELOCK; // To prevent authors to act fast and escape punishment.\n    uint256 public WINNER_STAKE_MULTIPLIER; // Multiplier of the arbitration cost that the winner has to pay as fee stake for a round in basis points.\n    uint256 public LOSER_STAKE_MULTIPLIER; // Multiplier of the arbitration cost that the loser has to pay as fee stake for a round in basis points.\n    uint256 public challengeTaxRate = 16;\n\n    constructor(\n        uint256 _articleWithdrawalTimelock,\n        uint256 _winnerStakeMultiplier,\n        uint256 _loserStakeMultiplier,\n        address payable _treasury\n    ) {\n        ARTICLE_WITHDRAWAL_TIMELOCK = _articleWithdrawalTimelock;\n        WINNER_STAKE_MULTIPLIER = _winnerStakeMultiplier;\n        LOSER_STAKE_MULTIPLIER = _loserStakeMultiplier;\n        TREASURY = _treasury;\n    }\n\n    event NewArticle(string articleID, uint8 category, uint256 articleAddress);\n    event Debunked(uint256 articleAddress);\n    event ArticleWithdrawn(uint256 articleAddress);\n    event BalanceUpdate(uint256 articleAddress, uint256 newTotal);\n    event TimelockStarted(uint256 articleAddress);\n    event Challenge(uint256 indexed articleAddress, address challanger, uint256 disputeID);\n    event Contribution(\n        uint256 indexed disputeId,\n        uint256 indexed round,\n        RulingOptions ruling,\n        address indexed contributor,\n        uint256 amount\n    );\n    event Withdrawal(\n        uint256 indexed disputeId,\n        uint256 indexed round,\n        RulingOptions ruling,\n        address indexed contributor,\n        uint256 reward\n    );\n    event RulingFunded(uint256 indexed disputeId, uint256 indexed round, RulingOptions indexed ruling);\n    event OwnershipTransfer(address indexed _newOwner);\n    event AdminUpdate(address indexed _newAdmin);\n    event WinnerStakeMultiplierUpdate(uint256 indexed _newWinnerStakeMultiplier);\n    event LoserStakeMultiplierUpdate(uint256 indexed _newLoserStakeMultiplier);\n    event LoserAppealPeriodMultiplierUpdate(uint256 indexed _newLoserAppealPeriodMultiplier);\n    event ArticleWithdrawalTimelockUpdate(uint256 indexed _newWithdrawalTimelock);\n    event ChallengeTaxRateUpdate(uint256 indexed _newTaxRate);\n    event TreasuryUpdate(address indexed _newTreasury);\n    event TreasuryBalanceUpdate(uint256 indexed _byAmount);\n\n\n    /// @notice Submit an evidence.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\n    function submitEvidence(uint256 _disputeID, string calldata _evidenceURI) external virtual;\n\n    /// @notice Fund a crowdfunding appeal.\n    /// @dev Lets user to contribute funding of an appeal round. Emits Contribution. If fully funded, emits RulingFunded.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _ruling The ruling option to which the caller wants to contribute.\n    /// @return fullyFunded True if the ruling option got fully funded as a result of this contribution.\n    function fundAppeal(uint256 _disputeID, RulingOptions _ruling) external payable virtual returns (bool fullyFunded);\n\n    /// @notice Publish an article.\n    /// @dev    Do not confuse articleID with articleAddress. Emits NewArticle.\n    /// @param _articleID Unique identifier of an article in IPFS content identifier format.\n    /// @param _category The category code of this new article.\n    /// @param _searchPointer Starting point of the search. Find a vacant storage slot before calling this function to minimize gas cost.\n    function initializeArticle(\n        string calldata _articleID,\n        uint8 _category,\n        uint80 _searchPointer\n    ) external payable virtual;\n\n    /// @notice Increase bounty.\n    /// @dev Lets author to increase a bounty of a live article. Emits BalanceUpdate.\n    /// @param _articleStorageAddress The address of the article in the storage.\n    function increaseBounty(uint80 _articleStorageAddress) external payable virtual;\n\n    /// @notice Initiate unpublishing process.\n    /// @dev Lets an author to start unpublishing process. Emits TimelockStarted.\n    /// @param _articleStorageAddress The address of the article in the storage.\n    function initiateWithdrawal(uint80 _articleStorageAddress) external virtual;\n\n    /// @notice Execute unpublishing.\n    /// @dev Executes unpublishing of an article. Emits Withdrew.\n    /// @param _articleStorageAddress The address of the article in the storage.\n    function withdraw(uint80 _articleStorageAddress) external virtual;\n\n    /// @notice Challenge article.\n    /// @dev Challenges the article at the given storage address. Emits Challenge.\n    /// @param _articleStorageAddress The address of the article in the storage.\n    function challenge(uint80 _articleStorageAddress) external payable virtual;\n\n    /// @notice Transfer ownership of an article.\n    /// @dev Lets you to transfer ownership of an article. \n    ///      This is useful when you want to change owner account without withdrawing and resubmitting. \n    ///      Emits OwnershipTransfer.\n    /// @param _articleStorageAddress The address of article in the storage.\n    /// @param _newOwner The new owner of the article which resides in the storage address, provided by the previous parameter.\n    function transferOwnership(uint80 _articleStorageAddress, address payable _newOwner) external virtual;\n\n    /// @notice Update the arbitration cost for the winner.\n    /// @dev Sets the multiplier of the arbitration cost that the winner has to pay as fee stake to a new value. \n    ///      Emits WinnerStakeMultiplierUpdate.\n    /// @param _newWinnerStakeMultiplier The new value of WINNER_STAKE_MULTIPLIER.\n    function changeWinnerStakeMultiplier(uint256 _newWinnerStakeMultiplier) external virtual;\n\n    /// @notice Update the arbitration cost for the loser.\n    /// @dev Sets the multiplier of the arbitration cost that the loser has to pay as fee stake to a new value. \n    ///      Emits LoserStakeMultiplierUpdate.\n    /// @param _newLoserStakeMultiplier The new value of LOSER_STAKE_MULTIPLIER.\n    \n    function changeLoserStakeMultiplier(uint256 _newLoserStakeMultiplier) external virtual;\n\n    /// @notice Update the appeal window for the loser.\n    /// @dev Sets the multiplier of the appeal window for the loser to a new value. Emits LoserAppealPeriodMultiplierUpdate.\n    /// @param _newLoserAppealPeriodMultiplier The new value of LOSER_APPEAL_PERIOD_MULTIPLIER.\n    function changeLoserAppealPeriodMultiplier(uint256 _newLoserAppealPeriodMultiplier) external virtual;\n\n    /// @notice Update the timelock for the article withdtrawal.\n    /// @dev Sets the timelock before an author can initiate the withdrawal of an article to a new value. \n    ///      Emits ArticleWithdrawalTimelockUpdate.\n    /// @param _newArticleWithdrawalTimelock The new value of ARTICLE_WITHDRAWAL_TIMELOCK.\n    function changeArticleWithdrawalTimelock(uint256 _newArticleWithdrawalTimelock) external virtual;\n\n    /// @notice Find a vacant storage slot for an article.\n    /// @dev Helper function to find a vacant slot for article. Use this function before calling initialize to minimize your gas cost.\n    /// @param _searchPointer Starting point of the search. If you do not have a guess, just pass 0.\n    function findVacantStorageSlot(uint80 _searchPointer) external view virtual returns (uint256 vacantSlotIndex);\n\n    /// @notice Get required challenge fee.\n    /// @dev Returns the total amount needs to be paid to challenge an article, including taxes if any.\n    /// @param _articleStorageAddress The address of article in the storage.\n    function challengeFee(uint80 _articleStorageAddress) public view virtual returns (uint256 challengeFee);\n\n    /// @notice Get required appeal fee and deposit.\n    /// @dev Returns the total amount needs to be paid to appeal a dispute, including fees and stake deposit.\n    /// @param _disputeID ID of the dispute as in arbitrator.\n    function appealFee(uint256 _disputeID) external view virtual returns (uint256 arbitrationFee);\n\n    /// @notice Withdraw appeal crowdfunding balance.\n    /// @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _contributor Beneficiary of withdraw operation.\n    /// @param _round Number of the round that caller wants to execute withdraw on.\n    /// @param _ruling A ruling option that caller wants to execute withdraw on.\n    /// @return sum The amount that is going to be transferred to contributor as a result of this function call.\n    function withdrawFeesAndRewards(\n        uint256 _disputeID,\n        address payable _contributor,\n        uint256 _round,\n        RulingOptions _ruling\n    ) external virtual returns (uint256 sum);\n\n    /// @notice Withdraw appeal crowdfunding balance for given ruling option for all rounds.\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _contributor Beneficiary of withdraw operation.\n    /// @param _ruling Ruling option that caller wants to execute withdraw on.\n    function withdrawFeesAndRewardsForAllRounds(\n        uint256 _disputeID,\n        address payable _contributor,\n        RulingOptions _ruling\n    ) external virtual;\n\n    /// @notice Withdraw appeal crowdfunding balance for given ruling option and for given rounds.\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for given positions at once.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _contributor Beneficiary of withdraw operation.\n    /// @param positions [rounds][rulings].\n    function withdrawFeesAndRewardsForGivenPositions(\n        uint256 _disputeID,\n        address payable _contributor,\n        uint256[][] calldata positions\n    ) external virtual;\n\n    /// @notice Withdraw appeal crowdfunding balance for all ruling options and all rounds.\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds and all rulings at once.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _contributor Beneficiary of withdraw operation.\n    function withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256 _disputeID, address payable _contributor)\n        external\n        virtual;\n\n    /// @notice Learn the total amount of appeal crowdfunding balance available.\n    /// @dev Returns the sum of withdrawable amount and 2D array of positions[round][ruling].\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _contributor Beneficiary of withdraw operation.\n    /// @return sum The total amount available to withdraw.\n    function getTotalWithdrawableAmount(uint256 _disputeID, address payable _contributor)\n        external\n        view\n        virtual\n        returns (uint256 sum, uint256[][] memory positions);\n\n    /// @notice Learn about given dispute round.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _round Round ID.\n    /// @return hasPaid Whether given ruling option was fully funded.\n    /// @return totalPerRuling The total raised per ruling option.\n    /// @return totalClaimableAfterExpenses Total amount will be distributed back to winners, after deducting expenses.\n    function getRoundInfo(uint256 _disputeID, uint256 _round)\n        external\n        view\n        virtual\n        returns (\n            bool[NUMBER_OF_RULING_OPTIONS + 1] memory hasPaid,\n            uint256[NUMBER_OF_RULING_OPTIONS + 1] memory totalPerRuling,\n            uint256 totalClaimableAfterExpenses\n        );\n\n    /// @notice Learn about how much more needs to be raised for given ruling option.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _ruling The ruling option to query.\n    /// @return Amount needs to be raised\n    function getAmountRemainsToBeRaised(uint256 _disputeID, RulingOptions _ruling)\n        external\n        view\n        virtual\n        returns (uint256);\n\n    /// @notice Get return of investment ratio.\n    /// @dev Purely depends on whether given ruling option is winner and stake multipliers.\n    /// @param _ruling The ruling option to query.\n    /// @param _lastRoundWinner Winner of the last round.\n    /// @return Return of investment ratio, denominated by MULTIPLIER_DENOMINATOR.\n    function getReturnOfInvestmentRatio(RulingOptions _ruling, RulingOptions _lastRoundWinner)\n        external\n        view\n        virtual\n        returns (uint256);\n\n    /// @notice Get appeal time window.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @param _ruling The ruling option to query.\n    /// @return Start\n    /// @return End\n    function getAppealPeriod(uint256 _disputeID, RulingOptions _ruling)\n        external\n        view\n        virtual\n        returns (uint256, uint256);\n\n    /// @notice Get last round's winner.\n    /// @param _disputeID The dispute ID as in arbitrator.\n    /// @return Winning ruling option.\n    function getLastRoundWinner(uint256 _disputeID) public view virtual returns (uint256);\n\n    /// @notice Switches publishing lock.\n    /// @dev    Useful when it's no longer safe or secure to use this contract.\n    ///         Prevents new articles to be published. Only intended for privileges users.\n    function switchPublishingLock() public virtual;\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol": {
        "IDisputeResolver": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_localDisputeID",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_round",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "ruling",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_contributor",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "Contribution",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IArbitrator",
                  "name": "_arbitrator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_metaEvidenceID",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_evidenceGroupID",
                  "type": "uint256"
                }
              ],
              "name": "Dispute",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IArbitrator",
                  "name": "_arbitrator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_evidenceGroupID",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_party",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "_evidence",
                  "type": "string"
                }
              ],
              "name": "Evidence",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_metaEvidenceID",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "_evidence",
                  "type": "string"
                }
              ],
              "name": "MetaEvidence",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IArbitrator",
                  "name": "_arbitrator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_ruling",
                  "type": "uint256"
                }
              ],
              "name": "Ruling",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_localDisputeID",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_round",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_ruling",
                  "type": "uint256"
                }
              ],
              "name": "RulingFunded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_localDisputeID",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_round",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_ruling",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_contributor",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_reward",
                  "type": "uint256"
                }
              ],
              "name": "Withdrawal",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "VERSION",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_externalDisputeID",
                  "type": "uint256"
                }
              ],
              "name": "externalIDtoLocalID",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "localDisputeID",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_localDisputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_ruling",
                  "type": "uint256"
                }
              ],
              "name": "fundAppeal",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "fullyFunded",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getMultipliers",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "winnerStakeMultiplier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "loserStakeMultiplier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "loserAppealPeriodMultiplier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "denominator",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_localDisputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "_contributor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_ruling",
                  "type": "uint256"
                }
              ],
              "name": "getTotalWithdrawableAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "sum",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_localDisputeID",
                  "type": "uint256"
                }
              ],
              "name": "numberOfRulingOptions",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "count",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_ruling",
                  "type": "uint256"
                }
              ],
              "name": "rule",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_localDisputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "_evidenceURI",
                  "type": "string"
                }
              ],
              "name": "submitEvidence",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_localDisputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "_contributor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_round",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_ruling",
                  "type": "uint256"
                }
              ],
              "name": "withdrawFeesAndRewards",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "sum",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_localDisputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "_contributor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_ruling",
                  "type": "uint256"
                }
              ],
              "name": "withdrawFeesAndRewardsForAllRounds",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "events": {
              "Contribution(uint256,uint256,uint256,address,uint256)": {
                "details": "Raised when a contribution is made, inside fundAppeal function.",
                "params": {
                  "_amount": "Contribution amount.",
                  "_contributor": "Caller of fundAppeal function.",
                  "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
                  "_round": "The round number the contribution was made to.",
                  "ruling": "Indicates the ruling option which got the contribution."
                }
              },
              "RulingFunded(uint256,uint256,uint256)": {
                "details": "To be raised when a ruling option is fully funded for appeal.",
                "params": {
                  "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
                  "_round": "Number of the round this ruling option was fully funded in.",
                  "_ruling": "The ruling option which just got fully funded."
                }
              },
              "Withdrawal(uint256,uint256,uint256,address,uint256)": {
                "details": "Raised when a contributor withdraws non-zero value.",
                "params": {
                  "_contributor": "The beneficiary of withdrawal.",
                  "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
                  "_reward": "Total amount of withdrawal, consists of reimbursed deposits plus rewards.",
                  "_round": "The round number the withdrawal was made from.",
                  "_ruling": "Indicates the ruling option which contributor gets rewards from."
                }
              }
            },
            "kind": "dev",
            "methods": {
              "externalIDtoLocalID(uint256)": {
                "details": "Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.",
                "params": {
                  "_externalDisputeID": "Dispute id as in arbitrator contract."
                },
                "returns": {
                  "localDisputeID": "Dispute id as in arbitrable contract."
                }
              },
              "fundAppeal(uint256,uint256)": {
                "details": "Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.",
                "params": {
                  "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
                  "_ruling": "The ruling option to which the caller wants to contribute."
                },
                "returns": {
                  "fullyFunded": "True if the ruling option got fully funded as a result of this contribution."
                }
              },
              "getMultipliers()": {
                "details": "Returns appeal multipliers.",
                "returns": {
                  "denominator": "Multiplier denominator in basis points.",
                  "loserAppealPeriodMultiplier": "Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.",
                  "loserStakeMultiplier": "Losers stake multiplier.",
                  "winnerStakeMultiplier": "Winners stake multiplier."
                }
              },
              "getTotalWithdrawableAmount(uint256,address,uint256)": {
                "details": "Returns the sum of withdrawable amount.",
                "params": {
                  "_contributor": "Beneficiary of withdraw operation.",
                  "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
                  "_ruling": "Ruling option that caller wants to get withdrawable amount from."
                },
                "returns": {
                  "sum": "The total amount available to withdraw."
                }
              },
              "numberOfRulingOptions(uint256)": {
                "details": "Returns number of possible ruling options. Valid rulings are [0, return value].",
                "params": {
                  "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID."
                },
                "returns": {
                  "count": "The number of ruling options."
                }
              },
              "rule(uint256,uint256)": {
                "details": "Give a ruling for a dispute. Must be called by the arbitrator. The purpose of this function is to ensure that the address calling it has the right to rule on the contract.",
                "params": {
                  "_disputeID": "ID of the dispute in the Arbitrator contract.",
                  "_ruling": "Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\"."
                }
              },
              "submitEvidence(uint256,string)": {
                "details": "Allows to submit evidence for a given dispute.",
                "params": {
                  "_evidenceURI": "IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'",
                  "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID."
                }
              },
              "withdrawFeesAndRewards(uint256,address,uint256,uint256)": {
                "details": "Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.",
                "params": {
                  "_contributor": "Beneficiary of withdraw operation.",
                  "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
                  "_round": "Number of the round that caller wants to execute withdraw on.",
                  "_ruling": "A ruling option that caller wants to execute withdraw on."
                },
                "returns": {
                  "sum": "The amount that is going to be transferred to contributor as a result of this function call."
                }
              },
              "withdrawFeesAndRewardsForAllRounds(uint256,address,uint256)": {
                "details": "Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.",
                "params": {
                  "_contributor": "Beneficiary of withdraw operation.",
                  "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
                  "_ruling": "Ruling option that caller wants to execute withdraw on."
                }
              }
            },
            "title": "This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet. This interface is used in Dispute Resolver (resolve.kleros.io).",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "VERSION()": "ffa1ad74",
              "externalIDtoLocalID(uint256)": "c21ae061",
              "fundAppeal(uint256,uint256)": "4b2f0ea0",
              "getMultipliers()": "79873f8a",
              "getTotalWithdrawableAmount(uint256,address,uint256)": "ec85635b",
              "numberOfRulingOptions(uint256)": "8d8b2d7e",
              "rule(uint256,uint256)": "311a6c56",
              "submitEvidence(uint256,string)": "a6a7f0eb",
              "withdrawFeesAndRewards(uint256,address,uint256,uint256)": "362c3479",
              "withdrawFeesAndRewardsForAllRounds(uint256,address,uint256)": "fe2dddeb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"}],\"name\":\"Dispute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_party\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"Evidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"MetaEvidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"Ruling\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"RulingFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_externalDisputeID\",\"type\":\"uint256\"}],\"name\":\"externalIDtoLocalID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"localDisputeID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"fundAppeal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fullyFunded\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMultipliers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winnerStakeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loserStakeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loserAppealPeriodMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"getTotalWithdrawableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"}],\"name\":\"numberOfRulingOptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"rule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_evidenceURI\",\"type\":\"string\"}],\"name\":\"submitEvidence\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"withdrawFeesAndRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"withdrawFeesAndRewardsForAllRounds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Contribution(uint256,uint256,uint256,address,uint256)\":{\"details\":\"Raised when a contribution is made, inside fundAppeal function.\",\"params\":{\"_amount\":\"Contribution amount.\",\"_contributor\":\"Caller of fundAppeal function.\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_round\":\"The round number the contribution was made to.\",\"ruling\":\"Indicates the ruling option which got the contribution.\"}},\"RulingFunded(uint256,uint256,uint256)\":{\"details\":\"To be raised when a ruling option is fully funded for appeal.\",\"params\":{\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_round\":\"Number of the round this ruling option was fully funded in.\",\"_ruling\":\"The ruling option which just got fully funded.\"}},\"Withdrawal(uint256,uint256,uint256,address,uint256)\":{\"details\":\"Raised when a contributor withdraws non-zero value.\",\"params\":{\"_contributor\":\"The beneficiary of withdrawal.\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_reward\":\"Total amount of withdrawal, consists of reimbursed deposits plus rewards.\",\"_round\":\"The round number the withdrawal was made from.\",\"_ruling\":\"Indicates the ruling option which contributor gets rewards from.\"}}},\"kind\":\"dev\",\"methods\":{\"externalIDtoLocalID(uint256)\":{\"details\":\"Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\",\"params\":{\"_externalDisputeID\":\"Dispute id as in arbitrator contract.\"},\"returns\":{\"localDisputeID\":\"Dispute id as in arbitrable contract.\"}},\"fundAppeal(uint256,uint256)\":{\"details\":\"Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\",\"params\":{\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_ruling\":\"The ruling option to which the caller wants to contribute.\"},\"returns\":{\"fullyFunded\":\"True if the ruling option got fully funded as a result of this contribution.\"}},\"getMultipliers()\":{\"details\":\"Returns appeal multipliers.\",\"returns\":{\"denominator\":\"Multiplier denominator in basis points.\",\"loserAppealPeriodMultiplier\":\"Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\",\"loserStakeMultiplier\":\"Losers stake multiplier.\",\"winnerStakeMultiplier\":\"Winners stake multiplier.\"}},\"getTotalWithdrawableAmount(uint256,address,uint256)\":{\"details\":\"Returns the sum of withdrawable amount.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_ruling\":\"Ruling option that caller wants to get withdrawable amount from.\"},\"returns\":{\"sum\":\"The total amount available to withdraw.\"}},\"numberOfRulingOptions(uint256)\":{\"details\":\"Returns number of possible ruling options. Valid rulings are [0, return value].\",\"params\":{\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\"},\"returns\":{\"count\":\"The number of ruling options.\"}},\"rule(uint256,uint256)\":{\"details\":\"Give a ruling for a dispute. Must be called by the arbitrator. The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\",\"params\":{\"_disputeID\":\"ID of the dispute in the Arbitrator contract.\",\"_ruling\":\"Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\"}},\"submitEvidence(uint256,string)\":{\"details\":\"Allows to submit evidence for a given dispute.\",\"params\":{\"_evidenceURI\":\"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\"}},\"withdrawFeesAndRewards(uint256,address,uint256,uint256)\":{\"details\":\"Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_round\":\"Number of the round that caller wants to execute withdraw on.\",\"_ruling\":\"A ruling option that caller wants to execute withdraw on.\"},\"returns\":{\"sum\":\"The amount that is going to be transferred to contributor as a result of this function call.\"}},\"withdrawFeesAndRewardsForAllRounds(uint256,address,uint256)\":{\"details\":\"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_ruling\":\"Ruling option that caller wants to execute withdraw on.\"}}},\"title\":\"This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet. This interface is used in Dispute Resolver (resolve.kleros.io).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol\":\"IDisputeResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/**\\n *  @authors: [@ferittuncer]\\n *  @reviewers: [@mtsalenc*, @hbarcelos*, @unknownunknown1, @MerlinEgalite, @fnanni-0*, @shalzz]\\n *  @auditors: []\\n *  @bounties: []\\n *  @deployments: []\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@kleros/erc-792/contracts/IArbitrable.sol\\\";\\nimport \\\"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\\\";\\nimport \\\"@kleros/erc-792/contracts/IArbitrator.sol\\\";\\n\\n/**\\n *  @title This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet.\\n    This interface is used in Dispute Resolver (resolve.kleros.io).\\n */\\nabstract contract IDisputeResolver is IArbitrable, IEvidence {\\n    string public constant VERSION = \\\"2.0.0\\\"; // Can be used to distinguish between multiple deployed versions, if necessary.\\n\\n    /** @dev Raised when a contribution is made, inside fundAppeal function.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _round The round number the contribution was made to.\\n     *  @param ruling Indicates the ruling option which got the contribution.\\n     *  @param _contributor Caller of fundAppeal function.\\n     *  @param _amount Contribution amount.\\n     */\\n    event Contribution(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 ruling, address indexed _contributor, uint256 _amount);\\n\\n    /** @dev Raised when a contributor withdraws non-zero value.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _round The round number the withdrawal was made from.\\n     *  @param _ruling Indicates the ruling option which contributor gets rewards from.\\n     *  @param _contributor The beneficiary of withdrawal.\\n     *  @param _reward Total amount of withdrawal, consists of reimbursed deposits plus rewards.\\n     */\\n    event Withdrawal(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 _ruling, address indexed _contributor, uint256 _reward);\\n\\n    /** @dev To be raised when a ruling option is fully funded for appeal.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _round Number of the round this ruling option was fully funded in.\\n     *  @param _ruling The ruling option which just got fully funded.\\n     */\\n    event RulingFunded(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 indexed _ruling);\\n\\n    /** @dev Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\\n     *  @param _externalDisputeID Dispute id as in arbitrator contract.\\n     *  @return localDisputeID Dispute id as in arbitrable contract.\\n     */\\n    function externalIDtoLocalID(uint256 _externalDisputeID) external virtual returns (uint256 localDisputeID);\\n\\n    /** @dev Returns number of possible ruling options. Valid rulings are [0, return value].\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @return count The number of ruling options.\\n     */\\n    function numberOfRulingOptions(uint256 _localDisputeID) external view virtual returns (uint256 count);\\n\\n    /** @dev Allows to submit evidence for a given dispute.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\\n     */\\n    function submitEvidence(uint256 _localDisputeID, string calldata _evidenceURI) external virtual;\\n\\n    /** @dev Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _ruling The ruling option to which the caller wants to contribute.\\n     *  @return fullyFunded True if the ruling option got fully funded as a result of this contribution.\\n     */\\n    function fundAppeal(uint256 _localDisputeID, uint256 _ruling) external payable virtual returns (bool fullyFunded);\\n\\n    /** @dev Returns appeal multipliers.\\n     *  @return winnerStakeMultiplier Winners stake multiplier.\\n     *  @return loserStakeMultiplier Losers stake multiplier.\\n     *  @return loserAppealPeriodMultiplier Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\\n     *  @return denominator Multiplier denominator in basis points.\\n     */\\n    function getMultipliers()\\n        external\\n        view\\n        virtual\\n        returns (\\n            uint256 winnerStakeMultiplier,\\n            uint256 loserStakeMultiplier,\\n            uint256 loserAppealPeriodMultiplier,\\n            uint256 denominator\\n        );\\n\\n    /** @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _contributor Beneficiary of withdraw operation.\\n     *  @param _round Number of the round that caller wants to execute withdraw on.\\n     *  @param _ruling A ruling option that caller wants to execute withdraw on.\\n     *  @return sum The amount that is going to be transferred to contributor as a result of this function call.\\n     */\\n    function withdrawFeesAndRewards(\\n        uint256 _localDisputeID,\\n        address payable _contributor,\\n        uint256 _round,\\n        uint256 _ruling\\n    ) external virtual returns (uint256 sum);\\n\\n    /** @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _contributor Beneficiary of withdraw operation.\\n     *  @param _ruling Ruling option that caller wants to execute withdraw on.\\n     */\\n    function withdrawFeesAndRewardsForAllRounds(\\n        uint256 _localDisputeID,\\n        address payable _contributor,\\n        uint256 _ruling\\n    ) external virtual;\\n\\n    /** @dev Returns the sum of withdrawable amount.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _contributor Beneficiary of withdraw operation.\\n     *  @param _ruling Ruling option that caller wants to get withdrawable amount from.\\n     *  @return sum The total amount available to withdraw.\\n     */\\n    function getTotalWithdrawableAmount(\\n        uint256 _localDisputeID,\\n        address payable _contributor,\\n        uint256 _ruling\\n    ) external view virtual returns (uint256 sum);\\n}\\n\",\"keccak256\":\"0x9174a37ba69e682381a3ae6e14582a17d69f29be879ff27433fce2b971f871ae\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/IArbitrable.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrator.sol\\\";\\n\\n/**\\n * @title IArbitrable\\n * Arbitrable interface.\\n * When developing arbitrable contracts, we need to:\\n * - Define the action taken when a ruling is received by the contract.\\n * - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);\\n */\\ninterface IArbitrable {\\n    /**\\n     * @dev To be raised when a ruling is given.\\n     * @param _arbitrator The arbitrator giving the ruling.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling The ruling which was given.\\n     */\\n    event Ruling(IArbitrator indexed _arbitrator, uint256 indexed _disputeID, uint256 _ruling);\\n\\n    /**\\n     * @dev Give a ruling for a dispute. Must be called by the arbitrator.\\n     * The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\\n     */\\n    function rule(uint256 _disputeID, uint256 _ruling) external;\\n}\\n\",\"keccak256\":\"0xf1a2c2d7ec1237ef8d3c5f580ac73f56ed58fe4d023817a188363885b3eeb9f2\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/IArbitrator.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrable.sol\\\";\\n\\n/**\\n * @title Arbitrator\\n * Arbitrator abstract contract.\\n * When developing arbitrator contracts we need to:\\n * - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\\n * - Define the functions for cost display (arbitrationCost and appealCost).\\n * - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\\n */\\ninterface IArbitrator {\\n    enum DisputeStatus {\\n        Waiting,\\n        Appealable,\\n        Solved\\n    }\\n\\n    /**\\n     * @dev To be emitted when a dispute is created.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event DisputeCreation(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when a dispute can be appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealPossible(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when the current ruling is appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealDecision(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev Create a dispute. Must be called by the arbitrable contract.\\n     * Must be paid at least arbitrationCost(_extraData).\\n     * @param _choices Amount of choices the arbitrator can make in this dispute.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return disputeID ID of the dispute created.\\n     */\\n    function createDispute(uint256 _choices, bytes calldata _extraData) external payable returns (uint256 disputeID);\\n\\n    /**\\n     * @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function arbitrationCost(bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give extra info on the appeal.\\n     */\\n    function appeal(uint256 _disputeID, bytes calldata _extraData) external payable;\\n\\n    /**\\n     * @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function appealCost(uint256 _disputeID, bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\\n     * @param _disputeID ID of the dispute.\\n     * @return start The start of the period.\\n     * @return end The end of the period.\\n     */\\n    function appealPeriod(uint256 _disputeID) external view returns (uint256 start, uint256 end);\\n\\n    /**\\n     * @dev Return the status of a dispute.\\n     * @param _disputeID ID of the dispute to rule.\\n     * @return status The status of the dispute.\\n     */\\n    function disputeStatus(uint256 _disputeID) external view returns (DisputeStatus status);\\n\\n    /**\\n     * @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\\n     * @param _disputeID ID of the dispute.\\n     * @return ruling The ruling which has been given or the one which will be given if there is no appeal.\\n     */\\n    function currentRuling(uint256 _disputeID) external view returns (uint256 ruling);\\n}\\n\",\"keccak256\":\"0xfd19582446ef635cfb02a035a18efae3bc242ccf1472bb9949cad3d291306333\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: []\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IArbitrator.sol\\\";\\n\\n/** @title IEvidence\\n *  ERC-1497: Evidence Standard\\n */\\ninterface IEvidence {\\n    /**\\n     * @dev To be emitted when meta-evidence is submitted.\\n     * @param _metaEvidenceID Unique identifier of meta-evidence.\\n     * @param _evidence IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'\\n     */\\n    event MetaEvidence(uint256 indexed _metaEvidenceID, string _evidence);\\n\\n    /**\\n     * @dev To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).\\n     * @param _arbitrator The arbitrator of the contract.\\n     * @param _evidenceGroupID Unique identifier of the evidence group the evidence belongs to.\\n     * @param _party The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\\n     * @param _evidence IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\\n     */\\n    event Evidence(\\n        IArbitrator indexed _arbitrator,\\n        uint256 indexed _evidenceGroupID,\\n        address indexed _party,\\n        string _evidence\\n    );\\n\\n    /**\\n     * @dev To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.\\n     * @param _arbitrator The arbitrator of the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _metaEvidenceID Unique identifier of meta-evidence.\\n     * @param _evidenceGroupID Unique identifier of the evidence group that is linked to this dispute.\\n     */\\n    event Dispute(\\n        IArbitrator indexed _arbitrator,\\n        uint256 indexed _disputeID,\\n        uint256 _metaEvidenceID,\\n        uint256 _evidenceGroupID\\n    );\\n}\\n\",\"keccak256\":\"0xf9f105a2cbf5e34cdc5ce71d877cded1b502437f1cd6d28173898f88542418af\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@kleros/erc-792/contracts/IArbitrable.sol": {
        "IArbitrable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IArbitrator",
                  "name": "_arbitrator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_ruling",
                  "type": "uint256"
                }
              ],
              "name": "Ruling",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_ruling",
                  "type": "uint256"
                }
              ],
              "name": "rule",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "events": {
              "Ruling(address,uint256,uint256)": {
                "details": "To be raised when a ruling is given.",
                "params": {
                  "_arbitrator": "The arbitrator giving the ruling.",
                  "_disputeID": "ID of the dispute in the Arbitrator contract.",
                  "_ruling": "The ruling which was given."
                }
              }
            },
            "kind": "dev",
            "methods": {
              "rule(uint256,uint256)": {
                "details": "Give a ruling for a dispute. Must be called by the arbitrator. The purpose of this function is to ensure that the address calling it has the right to rule on the contract.",
                "params": {
                  "_disputeID": "ID of the dispute in the Arbitrator contract.",
                  "_ruling": "Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\"."
                }
              }
            },
            "title": "IArbitrable Arbitrable interface. When developing arbitrable contracts, we need to: - Define the action taken when a ruling is received by the contract. - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "rule(uint256,uint256)": "311a6c56"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"Ruling\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"rule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Ruling(address,uint256,uint256)\":{\"details\":\"To be raised when a ruling is given.\",\"params\":{\"_arbitrator\":\"The arbitrator giving the ruling.\",\"_disputeID\":\"ID of the dispute in the Arbitrator contract.\",\"_ruling\":\"The ruling which was given.\"}}},\"kind\":\"dev\",\"methods\":{\"rule(uint256,uint256)\":{\"details\":\"Give a ruling for a dispute. Must be called by the arbitrator. The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\",\"params\":{\"_disputeID\":\"ID of the dispute in the Arbitrator contract.\",\"_ruling\":\"Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\"}}},\"title\":\"IArbitrable Arbitrable interface. When developing arbitrable contracts, we need to: - Define the action taken when a ruling is received by the contract. - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@kleros/erc-792/contracts/IArbitrable.sol\":\"IArbitrable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@kleros/erc-792/contracts/IArbitrable.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrator.sol\\\";\\n\\n/**\\n * @title IArbitrable\\n * Arbitrable interface.\\n * When developing arbitrable contracts, we need to:\\n * - Define the action taken when a ruling is received by the contract.\\n * - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);\\n */\\ninterface IArbitrable {\\n    /**\\n     * @dev To be raised when a ruling is given.\\n     * @param _arbitrator The arbitrator giving the ruling.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling The ruling which was given.\\n     */\\n    event Ruling(IArbitrator indexed _arbitrator, uint256 indexed _disputeID, uint256 _ruling);\\n\\n    /**\\n     * @dev Give a ruling for a dispute. Must be called by the arbitrator.\\n     * The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\\n     */\\n    function rule(uint256 _disputeID, uint256 _ruling) external;\\n}\\n\",\"keccak256\":\"0xf1a2c2d7ec1237ef8d3c5f580ac73f56ed58fe4d023817a188363885b3eeb9f2\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/IArbitrator.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrable.sol\\\";\\n\\n/**\\n * @title Arbitrator\\n * Arbitrator abstract contract.\\n * When developing arbitrator contracts we need to:\\n * - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\\n * - Define the functions for cost display (arbitrationCost and appealCost).\\n * - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\\n */\\ninterface IArbitrator {\\n    enum DisputeStatus {\\n        Waiting,\\n        Appealable,\\n        Solved\\n    }\\n\\n    /**\\n     * @dev To be emitted when a dispute is created.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event DisputeCreation(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when a dispute can be appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealPossible(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when the current ruling is appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealDecision(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev Create a dispute. Must be called by the arbitrable contract.\\n     * Must be paid at least arbitrationCost(_extraData).\\n     * @param _choices Amount of choices the arbitrator can make in this dispute.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return disputeID ID of the dispute created.\\n     */\\n    function createDispute(uint256 _choices, bytes calldata _extraData) external payable returns (uint256 disputeID);\\n\\n    /**\\n     * @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function arbitrationCost(bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give extra info on the appeal.\\n     */\\n    function appeal(uint256 _disputeID, bytes calldata _extraData) external payable;\\n\\n    /**\\n     * @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function appealCost(uint256 _disputeID, bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\\n     * @param _disputeID ID of the dispute.\\n     * @return start The start of the period.\\n     * @return end The end of the period.\\n     */\\n    function appealPeriod(uint256 _disputeID) external view returns (uint256 start, uint256 end);\\n\\n    /**\\n     * @dev Return the status of a dispute.\\n     * @param _disputeID ID of the dispute to rule.\\n     * @return status The status of the dispute.\\n     */\\n    function disputeStatus(uint256 _disputeID) external view returns (DisputeStatus status);\\n\\n    /**\\n     * @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\\n     * @param _disputeID ID of the dispute.\\n     * @return ruling The ruling which has been given or the one which will be given if there is no appeal.\\n     */\\n    function currentRuling(uint256 _disputeID) external view returns (uint256 ruling);\\n}\\n\",\"keccak256\":\"0xfd19582446ef635cfb02a035a18efae3bc242ccf1472bb9949cad3d291306333\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@kleros/erc-792/contracts/IArbitrator.sol": {
        "IArbitrator": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "contract IArbitrable",
                  "name": "_arbitrable",
                  "type": "address"
                }
              ],
              "name": "AppealDecision",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "contract IArbitrable",
                  "name": "_arbitrable",
                  "type": "address"
                }
              ],
              "name": "AppealPossible",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "contract IArbitrable",
                  "name": "_arbitrable",
                  "type": "address"
                }
              ],
              "name": "DisputeCreation",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_extraData",
                  "type": "bytes"
                }
              ],
              "name": "appeal",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_extraData",
                  "type": "bytes"
                }
              ],
              "name": "appealCost",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "cost",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                }
              ],
              "name": "appealPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "_extraData",
                  "type": "bytes"
                }
              ],
              "name": "arbitrationCost",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "cost",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_choices",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_extraData",
                  "type": "bytes"
                }
              ],
              "name": "createDispute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "disputeID",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                }
              ],
              "name": "currentRuling",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "ruling",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                }
              ],
              "name": "disputeStatus",
              "outputs": [
                {
                  "internalType": "enum IArbitrator.DisputeStatus",
                  "name": "status",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "events": {
              "AppealDecision(uint256,address)": {
                "details": "To be emitted when the current ruling is appealed.",
                "params": {
                  "_arbitrable": "The contract which created the dispute.",
                  "_disputeID": "ID of the dispute."
                }
              },
              "AppealPossible(uint256,address)": {
                "details": "To be emitted when a dispute can be appealed.",
                "params": {
                  "_arbitrable": "The contract which created the dispute.",
                  "_disputeID": "ID of the dispute."
                }
              },
              "DisputeCreation(uint256,address)": {
                "details": "To be emitted when a dispute is created.",
                "params": {
                  "_arbitrable": "The contract which created the dispute.",
                  "_disputeID": "ID of the dispute."
                }
              }
            },
            "kind": "dev",
            "methods": {
              "appeal(uint256,bytes)": {
                "details": "Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.",
                "params": {
                  "_disputeID": "ID of the dispute to be appealed.",
                  "_extraData": "Can be used to give extra info on the appeal."
                }
              },
              "appealCost(uint256,bytes)": {
                "details": "Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.",
                "params": {
                  "_disputeID": "ID of the dispute to be appealed.",
                  "_extraData": "Can be used to give additional info on the dispute to be created."
                },
                "returns": {
                  "cost": "Amount to be paid."
                }
              },
              "appealPeriod(uint256)": {
                "details": "Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).",
                "params": {
                  "_disputeID": "ID of the dispute."
                },
                "returns": {
                  "end": "The end of the period.",
                  "start": "The start of the period."
                }
              },
              "arbitrationCost(bytes)": {
                "details": "Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.",
                "params": {
                  "_extraData": "Can be used to give additional info on the dispute to be created."
                },
                "returns": {
                  "cost": "Amount to be paid."
                }
              },
              "createDispute(uint256,bytes)": {
                "details": "Create a dispute. Must be called by the arbitrable contract. Must be paid at least arbitrationCost(_extraData).",
                "params": {
                  "_choices": "Amount of choices the arbitrator can make in this dispute.",
                  "_extraData": "Can be used to give additional info on the dispute to be created."
                },
                "returns": {
                  "disputeID": "ID of the dispute created."
                }
              },
              "currentRuling(uint256)": {
                "details": "Return the current ruling of a dispute. This is useful for parties to know if they should appeal.",
                "params": {
                  "_disputeID": "ID of the dispute."
                },
                "returns": {
                  "ruling": "The ruling which has been given or the one which will be given if there is no appeal."
                }
              },
              "disputeStatus(uint256)": {
                "details": "Return the status of a dispute.",
                "params": {
                  "_disputeID": "ID of the dispute to rule."
                },
                "returns": {
                  "status": "The status of the dispute."
                }
              }
            },
            "title": "Arbitrator Arbitrator abstract contract. When developing arbitrator contracts we need to: - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes). - Define the functions for cost display (arbitrationCost and appealCost). - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "appeal(uint256,bytes)": "49912f88",
              "appealCost(uint256,bytes)": "f23f16e6",
              "appealPeriod(uint256)": "afe15cfb",
              "arbitrationCost(bytes)": "f7434ea9",
              "createDispute(uint256,bytes)": "c13517e1",
              "currentRuling(uint256)": "1c3db16d",
              "disputeStatus(uint256)": "10f169e8"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealDecision\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealPossible\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"DisputeCreation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"appeal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"appealCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"appealPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"arbitrationCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_choices\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"createDispute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeID\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"currentRuling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"disputeStatus\",\"outputs\":[{\"internalType\":\"enum IArbitrator.DisputeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AppealDecision(uint256,address)\":{\"details\":\"To be emitted when the current ruling is appealed.\",\"params\":{\"_arbitrable\":\"The contract which created the dispute.\",\"_disputeID\":\"ID of the dispute.\"}},\"AppealPossible(uint256,address)\":{\"details\":\"To be emitted when a dispute can be appealed.\",\"params\":{\"_arbitrable\":\"The contract which created the dispute.\",\"_disputeID\":\"ID of the dispute.\"}},\"DisputeCreation(uint256,address)\":{\"details\":\"To be emitted when a dispute is created.\",\"params\":{\"_arbitrable\":\"The contract which created the dispute.\",\"_disputeID\":\"ID of the dispute.\"}}},\"kind\":\"dev\",\"methods\":{\"appeal(uint256,bytes)\":{\"details\":\"Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\",\"params\":{\"_disputeID\":\"ID of the dispute to be appealed.\",\"_extraData\":\"Can be used to give extra info on the appeal.\"}},\"appealCost(uint256,bytes)\":{\"details\":\"Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\",\"params\":{\"_disputeID\":\"ID of the dispute to be appealed.\",\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"cost\":\"Amount to be paid.\"}},\"appealPeriod(uint256)\":{\"details\":\"Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\",\"params\":{\"_disputeID\":\"ID of the dispute.\"},\"returns\":{\"end\":\"The end of the period.\",\"start\":\"The start of the period.\"}},\"arbitrationCost(bytes)\":{\"details\":\"Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\",\"params\":{\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"cost\":\"Amount to be paid.\"}},\"createDispute(uint256,bytes)\":{\"details\":\"Create a dispute. Must be called by the arbitrable contract. Must be paid at least arbitrationCost(_extraData).\",\"params\":{\"_choices\":\"Amount of choices the arbitrator can make in this dispute.\",\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"disputeID\":\"ID of the dispute created.\"}},\"currentRuling(uint256)\":{\"details\":\"Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\",\"params\":{\"_disputeID\":\"ID of the dispute.\"},\"returns\":{\"ruling\":\"The ruling which has been given or the one which will be given if there is no appeal.\"}},\"disputeStatus(uint256)\":{\"details\":\"Return the status of a dispute.\",\"params\":{\"_disputeID\":\"ID of the dispute to rule.\"},\"returns\":{\"status\":\"The status of the dispute.\"}}},\"title\":\"Arbitrator Arbitrator abstract contract. When developing arbitrator contracts we need to: - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes). - Define the functions for cost display (arbitrationCost and appealCost). - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@kleros/erc-792/contracts/IArbitrator.sol\":\"IArbitrator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@kleros/erc-792/contracts/IArbitrable.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrator.sol\\\";\\n\\n/**\\n * @title IArbitrable\\n * Arbitrable interface.\\n * When developing arbitrable contracts, we need to:\\n * - Define the action taken when a ruling is received by the contract.\\n * - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);\\n */\\ninterface IArbitrable {\\n    /**\\n     * @dev To be raised when a ruling is given.\\n     * @param _arbitrator The arbitrator giving the ruling.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling The ruling which was given.\\n     */\\n    event Ruling(IArbitrator indexed _arbitrator, uint256 indexed _disputeID, uint256 _ruling);\\n\\n    /**\\n     * @dev Give a ruling for a dispute. Must be called by the arbitrator.\\n     * The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\\n     */\\n    function rule(uint256 _disputeID, uint256 _ruling) external;\\n}\\n\",\"keccak256\":\"0xf1a2c2d7ec1237ef8d3c5f580ac73f56ed58fe4d023817a188363885b3eeb9f2\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/IArbitrator.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrable.sol\\\";\\n\\n/**\\n * @title Arbitrator\\n * Arbitrator abstract contract.\\n * When developing arbitrator contracts we need to:\\n * - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\\n * - Define the functions for cost display (arbitrationCost and appealCost).\\n * - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\\n */\\ninterface IArbitrator {\\n    enum DisputeStatus {\\n        Waiting,\\n        Appealable,\\n        Solved\\n    }\\n\\n    /**\\n     * @dev To be emitted when a dispute is created.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event DisputeCreation(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when a dispute can be appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealPossible(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when the current ruling is appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealDecision(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev Create a dispute. Must be called by the arbitrable contract.\\n     * Must be paid at least arbitrationCost(_extraData).\\n     * @param _choices Amount of choices the arbitrator can make in this dispute.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return disputeID ID of the dispute created.\\n     */\\n    function createDispute(uint256 _choices, bytes calldata _extraData) external payable returns (uint256 disputeID);\\n\\n    /**\\n     * @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function arbitrationCost(bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give extra info on the appeal.\\n     */\\n    function appeal(uint256 _disputeID, bytes calldata _extraData) external payable;\\n\\n    /**\\n     * @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function appealCost(uint256 _disputeID, bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\\n     * @param _disputeID ID of the dispute.\\n     * @return start The start of the period.\\n     * @return end The end of the period.\\n     */\\n    function appealPeriod(uint256 _disputeID) external view returns (uint256 start, uint256 end);\\n\\n    /**\\n     * @dev Return the status of a dispute.\\n     * @param _disputeID ID of the dispute to rule.\\n     * @return status The status of the dispute.\\n     */\\n    function disputeStatus(uint256 _disputeID) external view returns (DisputeStatus status);\\n\\n    /**\\n     * @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\\n     * @param _disputeID ID of the dispute.\\n     * @return ruling The ruling which has been given or the one which will be given if there is no appeal.\\n     */\\n    function currentRuling(uint256 _disputeID) external view returns (uint256 ruling);\\n}\\n\",\"keccak256\":\"0xfd19582446ef635cfb02a035a18efae3bc242ccf1472bb9949cad3d291306333\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@kleros/erc-792/contracts/erc-1497/IEvidence.sol": {
        "IEvidence": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IArbitrator",
                  "name": "_arbitrator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_metaEvidenceID",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_evidenceGroupID",
                  "type": "uint256"
                }
              ],
              "name": "Dispute",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IArbitrator",
                  "name": "_arbitrator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_evidenceGroupID",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_party",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "_evidence",
                  "type": "string"
                }
              ],
              "name": "Evidence",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_metaEvidenceID",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "_evidence",
                  "type": "string"
                }
              ],
              "name": "MetaEvidence",
              "type": "event"
            }
          ],
          "devdoc": {
            "events": {
              "Dispute(address,uint256,uint256,uint256)": {
                "details": "To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.",
                "params": {
                  "_arbitrator": "The arbitrator of the contract.",
                  "_disputeID": "ID of the dispute in the Arbitrator contract.",
                  "_evidenceGroupID": "Unique identifier of the evidence group that is linked to this dispute.",
                  "_metaEvidenceID": "Unique identifier of meta-evidence."
                }
              },
              "Evidence(address,uint256,address,string)": {
                "details": "To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).",
                "params": {
                  "_arbitrator": "The arbitrator of the contract.",
                  "_evidence": "IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'",
                  "_evidenceGroupID": "Unique identifier of the evidence group the evidence belongs to.",
                  "_party": "The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party."
                }
              },
              "MetaEvidence(uint256,string)": {
                "details": "To be emitted when meta-evidence is submitted.",
                "params": {
                  "_evidence": "IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'",
                  "_metaEvidenceID": "Unique identifier of meta-evidence."
                }
              }
            },
            "kind": "dev",
            "methods": {},
            "title": "IEvidence  ERC-1497: Evidence Standard",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"}],\"name\":\"Dispute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_party\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"Evidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"MetaEvidence\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Dispute(address,uint256,uint256,uint256)\":{\"details\":\"To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.\",\"params\":{\"_arbitrator\":\"The arbitrator of the contract.\",\"_disputeID\":\"ID of the dispute in the Arbitrator contract.\",\"_evidenceGroupID\":\"Unique identifier of the evidence group that is linked to this dispute.\",\"_metaEvidenceID\":\"Unique identifier of meta-evidence.\"}},\"Evidence(address,uint256,address,string)\":{\"details\":\"To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).\",\"params\":{\"_arbitrator\":\"The arbitrator of the contract.\",\"_evidence\":\"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\",\"_evidenceGroupID\":\"Unique identifier of the evidence group the evidence belongs to.\",\"_party\":\"The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\"}},\"MetaEvidence(uint256,string)\":{\"details\":\"To be emitted when meta-evidence is submitted.\",\"params\":{\"_evidence\":\"IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'\",\"_metaEvidenceID\":\"Unique identifier of meta-evidence.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"IEvidence  ERC-1497: Evidence Standard\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\":\"IEvidence\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@kleros/erc-792/contracts/IArbitrable.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrator.sol\\\";\\n\\n/**\\n * @title IArbitrable\\n * Arbitrable interface.\\n * When developing arbitrable contracts, we need to:\\n * - Define the action taken when a ruling is received by the contract.\\n * - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);\\n */\\ninterface IArbitrable {\\n    /**\\n     * @dev To be raised when a ruling is given.\\n     * @param _arbitrator The arbitrator giving the ruling.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling The ruling which was given.\\n     */\\n    event Ruling(IArbitrator indexed _arbitrator, uint256 indexed _disputeID, uint256 _ruling);\\n\\n    /**\\n     * @dev Give a ruling for a dispute. Must be called by the arbitrator.\\n     * The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\\n     */\\n    function rule(uint256 _disputeID, uint256 _ruling) external;\\n}\\n\",\"keccak256\":\"0xf1a2c2d7ec1237ef8d3c5f580ac73f56ed58fe4d023817a188363885b3eeb9f2\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/IArbitrator.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrable.sol\\\";\\n\\n/**\\n * @title Arbitrator\\n * Arbitrator abstract contract.\\n * When developing arbitrator contracts we need to:\\n * - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\\n * - Define the functions for cost display (arbitrationCost and appealCost).\\n * - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\\n */\\ninterface IArbitrator {\\n    enum DisputeStatus {\\n        Waiting,\\n        Appealable,\\n        Solved\\n    }\\n\\n    /**\\n     * @dev To be emitted when a dispute is created.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event DisputeCreation(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when a dispute can be appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealPossible(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when the current ruling is appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealDecision(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev Create a dispute. Must be called by the arbitrable contract.\\n     * Must be paid at least arbitrationCost(_extraData).\\n     * @param _choices Amount of choices the arbitrator can make in this dispute.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return disputeID ID of the dispute created.\\n     */\\n    function createDispute(uint256 _choices, bytes calldata _extraData) external payable returns (uint256 disputeID);\\n\\n    /**\\n     * @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function arbitrationCost(bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give extra info on the appeal.\\n     */\\n    function appeal(uint256 _disputeID, bytes calldata _extraData) external payable;\\n\\n    /**\\n     * @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function appealCost(uint256 _disputeID, bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\\n     * @param _disputeID ID of the dispute.\\n     * @return start The start of the period.\\n     * @return end The end of the period.\\n     */\\n    function appealPeriod(uint256 _disputeID) external view returns (uint256 start, uint256 end);\\n\\n    /**\\n     * @dev Return the status of a dispute.\\n     * @param _disputeID ID of the dispute to rule.\\n     * @return status The status of the dispute.\\n     */\\n    function disputeStatus(uint256 _disputeID) external view returns (DisputeStatus status);\\n\\n    /**\\n     * @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\\n     * @param _disputeID ID of the dispute.\\n     * @return ruling The ruling which has been given or the one which will be given if there is no appeal.\\n     */\\n    function currentRuling(uint256 _disputeID) external view returns (uint256 ruling);\\n}\\n\",\"keccak256\":\"0xfd19582446ef635cfb02a035a18efae3bc242ccf1472bb9949cad3d291306333\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: []\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IArbitrator.sol\\\";\\n\\n/** @title IEvidence\\n *  ERC-1497: Evidence Standard\\n */\\ninterface IEvidence {\\n    /**\\n     * @dev To be emitted when meta-evidence is submitted.\\n     * @param _metaEvidenceID Unique identifier of meta-evidence.\\n     * @param _evidence IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'\\n     */\\n    event MetaEvidence(uint256 indexed _metaEvidenceID, string _evidence);\\n\\n    /**\\n     * @dev To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).\\n     * @param _arbitrator The arbitrator of the contract.\\n     * @param _evidenceGroupID Unique identifier of the evidence group the evidence belongs to.\\n     * @param _party The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\\n     * @param _evidence IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\\n     */\\n    event Evidence(\\n        IArbitrator indexed _arbitrator,\\n        uint256 indexed _evidenceGroupID,\\n        address indexed _party,\\n        string _evidence\\n    );\\n\\n    /**\\n     * @dev To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.\\n     * @param _arbitrator The arbitrator of the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _metaEvidenceID Unique identifier of meta-evidence.\\n     * @param _evidenceGroupID Unique identifier of the evidence group that is linked to this dispute.\\n     */\\n    event Dispute(\\n        IArbitrator indexed _arbitrator,\\n        uint256 indexed _disputeID,\\n        uint256 _metaEvidenceID,\\n        uint256 _evidenceGroupID\\n    );\\n}\\n\",\"keccak256\":\"0xf9f105a2cbf5e34cdc5ce71d877cded1b502437f1cd6d28173898f88542418af\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/ITruthPost.sol": {
        "ITruthPost": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_newAdmin",
                  "type": "address"
                }
              ],
              "name": "AdminUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_newWithdrawalTimelock",
                  "type": "uint256"
                }
              ],
              "name": "ArticleWithdrawalTimelockUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "articleAddress",
                  "type": "uint256"
                }
              ],
              "name": "ArticleWithdrawn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "articleAddress",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newTotal",
                  "type": "uint256"
                }
              ],
              "name": "BalanceUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "articleAddress",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "challanger",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "disputeID",
                  "type": "uint256"
                }
              ],
              "name": "Challenge",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_newTaxRate",
                  "type": "uint256"
                }
              ],
              "name": "ChallengeTaxRateUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "disputeId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "round",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "ruling",
                  "type": "uint8"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "contributor",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Contribution",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "articleAddress",
                  "type": "uint256"
                }
              ],
              "name": "Debunked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_newLoserAppealPeriodMultiplier",
                  "type": "uint256"
                }
              ],
              "name": "LoserAppealPeriodMultiplierUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_newLoserStakeMultiplier",
                  "type": "uint256"
                }
              ],
              "name": "LoserStakeMultiplierUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "articleID",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "category",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "articleAddress",
                  "type": "uint256"
                }
              ],
              "name": "NewArticle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "disputeId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "round",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "ruling",
                  "type": "uint8"
                }
              ],
              "name": "RulingFunded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "articleAddress",
                  "type": "uint256"
                }
              ],
              "name": "TimelockStarted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_byAmount",
                  "type": "uint256"
                }
              ],
              "name": "TreasuryBalanceUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_newTreasury",
                  "type": "address"
                }
              ],
              "name": "TreasuryUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_newWinnerStakeMultiplier",
                  "type": "uint256"
                }
              ],
              "name": "WinnerStakeMultiplierUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "disputeId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "round",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "ruling",
                  "type": "uint8"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "contributor",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "name": "Withdrawal",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "ARTICLE_WITHDRAWAL_TIMELOCK",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "LOSER_APPEAL_PERIOD_MULTIPLIER",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "LOSER_STAKE_MULTIPLIER",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MULTIPLIER_DENOMINATOR",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "NUMBER_OF_RULING_OPTIONS",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "TREASURY",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "VERSION",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "WINNER_STAKE_MULTIPLIER",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                }
              ],
              "name": "appealFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "arbitrationFee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_articleStorageAddress",
                  "type": "uint80"
                }
              ],
              "name": "challenge",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_articleStorageAddress",
                  "type": "uint80"
                }
              ],
              "name": "challengeFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "challengeFee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "challengeTaxRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newArticleWithdrawalTimelock",
                  "type": "uint256"
                }
              ],
              "name": "changeArticleWithdrawalTimelock",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newLoserAppealPeriodMultiplier",
                  "type": "uint256"
                }
              ],
              "name": "changeLoserAppealPeriodMultiplier",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newLoserStakeMultiplier",
                  "type": "uint256"
                }
              ],
              "name": "changeLoserStakeMultiplier",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newWinnerStakeMultiplier",
                  "type": "uint256"
                }
              ],
              "name": "changeWinnerStakeMultiplier",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_searchPointer",
                  "type": "uint80"
                }
              ],
              "name": "findVacantStorageSlot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "vacantSlotIndex",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "_ruling",
                  "type": "uint8"
                }
              ],
              "name": "fundAppeal",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "fullyFunded",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "_ruling",
                  "type": "uint8"
                }
              ],
              "name": "getAmountRemainsToBeRaised",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "_ruling",
                  "type": "uint8"
                }
              ],
              "name": "getAppealPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                }
              ],
              "name": "getLastRoundWinner",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "_ruling",
                  "type": "uint8"
                },
                {
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "_lastRoundWinner",
                  "type": "uint8"
                }
              ],
              "name": "getReturnOfInvestmentRatio",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_round",
                  "type": "uint256"
                }
              ],
              "name": "getRoundInfo",
              "outputs": [
                {
                  "internalType": "bool[3]",
                  "name": "hasPaid",
                  "type": "bool[3]"
                },
                {
                  "internalType": "uint256[3]",
                  "name": "totalPerRuling",
                  "type": "uint256[3]"
                },
                {
                  "internalType": "uint256",
                  "name": "totalClaimableAfterExpenses",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "_contributor",
                  "type": "address"
                }
              ],
              "name": "getTotalWithdrawableAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "sum",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[][]",
                  "name": "positions",
                  "type": "uint256[][]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_articleStorageAddress",
                  "type": "uint80"
                }
              ],
              "name": "increaseBounty",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_articleID",
                  "type": "string"
                },
                {
                  "internalType": "uint8",
                  "name": "_category",
                  "type": "uint8"
                },
                {
                  "internalType": "uint80",
                  "name": "_searchPointer",
                  "type": "uint80"
                }
              ],
              "name": "initializeArticle",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_articleStorageAddress",
                  "type": "uint80"
                }
              ],
              "name": "initiateWithdrawal",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "_evidenceURI",
                  "type": "string"
                }
              ],
              "name": "submitEvidence",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "switchPublishingLock",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_articleStorageAddress",
                  "type": "uint80"
                },
                {
                  "internalType": "address payable",
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasuryBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_articleStorageAddress",
                  "type": "uint80"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "_contributor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_round",
                  "type": "uint256"
                },
                {
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "_ruling",
                  "type": "uint8"
                }
              ],
              "name": "withdrawFeesAndRewards",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "sum",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "_contributor",
                  "type": "address"
                },
                {
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "_ruling",
                  "type": "uint8"
                }
              ],
              "name": "withdrawFeesAndRewardsForAllRounds",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "_contributor",
                  "type": "address"
                }
              ],
              "name": "withdrawFeesAndRewardsForAllRoundsAndAllRulings",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "_contributor",
                  "type": "address"
                },
                {
                  "internalType": "uint256[][]",
                  "name": "positions",
                  "type": "uint256[][]"
                }
              ],
              "name": "withdrawFeesAndRewardsForGivenPositions",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "https://github.com/proveuswrong<0xferit, gratestas>",
            "custom:approvals": "0xferit, gratestas",
            "details": "This contract serves as a standard interface among multiple deployments of the Truth Post contracts.         You should target this interface contract for interactions, not the concrete contract; otherwise you risk incompatibility across versions.",
            "kind": "dev",
            "methods": {
              "appealFee(uint256)": {
                "details": "Returns the total amount needs to be paid to appeal a dispute, including fees and stake deposit.",
                "params": {
                  "_disputeID": "ID of the dispute as in arbitrator."
                }
              },
              "challenge(uint80)": {
                "details": "Challenges the article at the given storage address. Emits Challenge.",
                "params": {
                  "_articleStorageAddress": "The address of the article in the storage."
                }
              },
              "challengeFee(uint80)": {
                "details": "Returns the total amount needs to be paid to challenge an article, including taxes if any.",
                "params": {
                  "_articleStorageAddress": "The address of article in the storage."
                }
              },
              "changeArticleWithdrawalTimelock(uint256)": {
                "details": "Sets the timelock before an author can initiate the withdrawal of an article to a new value.       Emits ArticleWithdrawalTimelockUpdate.",
                "params": {
                  "_newArticleWithdrawalTimelock": "The new value of ARTICLE_WITHDRAWAL_TIMELOCK."
                }
              },
              "changeLoserAppealPeriodMultiplier(uint256)": {
                "details": "Sets the multiplier of the appeal window for the loser to a new value. Emits LoserAppealPeriodMultiplierUpdate.",
                "params": {
                  "_newLoserAppealPeriodMultiplier": "The new value of LOSER_APPEAL_PERIOD_MULTIPLIER."
                }
              },
              "changeLoserStakeMultiplier(uint256)": {
                "details": "Sets the multiplier of the arbitration cost that the loser has to pay as fee stake to a new value.       Emits LoserStakeMultiplierUpdate.",
                "params": {
                  "_newLoserStakeMultiplier": "The new value of LOSER_STAKE_MULTIPLIER."
                }
              },
              "changeWinnerStakeMultiplier(uint256)": {
                "details": "Sets the multiplier of the arbitration cost that the winner has to pay as fee stake to a new value.       Emits WinnerStakeMultiplierUpdate.",
                "params": {
                  "_newWinnerStakeMultiplier": "The new value of WINNER_STAKE_MULTIPLIER."
                }
              },
              "findVacantStorageSlot(uint80)": {
                "details": "Helper function to find a vacant slot for article. Use this function before calling initialize to minimize your gas cost.",
                "params": {
                  "_searchPointer": "Starting point of the search. If you do not have a guess, just pass 0."
                }
              },
              "fundAppeal(uint256,uint8)": {
                "details": "Lets user to contribute funding of an appeal round. Emits Contribution. If fully funded, emits RulingFunded.",
                "params": {
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "_ruling": "The ruling option to which the caller wants to contribute."
                },
                "returns": {
                  "fullyFunded": "True if the ruling option got fully funded as a result of this contribution."
                }
              },
              "getAmountRemainsToBeRaised(uint256,uint8)": {
                "params": {
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "_ruling": "The ruling option to query."
                },
                "returns": {
                  "_0": "Amount needs to be raised"
                }
              },
              "getAppealPeriod(uint256,uint8)": {
                "params": {
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "_ruling": "The ruling option to query."
                },
                "returns": {
                  "_0": "Start",
                  "_1": "End"
                }
              },
              "getLastRoundWinner(uint256)": {
                "params": {
                  "_disputeID": "The dispute ID as in arbitrator."
                },
                "returns": {
                  "_0": "Winning ruling option."
                }
              },
              "getReturnOfInvestmentRatio(uint8,uint8)": {
                "details": "Purely depends on whether given ruling option is winner and stake multipliers.",
                "params": {
                  "_lastRoundWinner": "Winner of the last round.",
                  "_ruling": "The ruling option to query."
                },
                "returns": {
                  "_0": "Return of investment ratio, denominated by MULTIPLIER_DENOMINATOR."
                }
              },
              "getRoundInfo(uint256,uint256)": {
                "params": {
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "_round": "Round ID."
                },
                "returns": {
                  "hasPaid": "Whether given ruling option was fully funded.",
                  "totalClaimableAfterExpenses": "Total amount will be distributed back to winners, after deducting expenses.",
                  "totalPerRuling": "The total raised per ruling option."
                }
              },
              "getTotalWithdrawableAmount(uint256,address)": {
                "details": "Returns the sum of withdrawable amount and 2D array of positions[round][ruling].",
                "params": {
                  "_contributor": "Beneficiary of withdraw operation.",
                  "_disputeID": "The dispute ID as in arbitrator."
                },
                "returns": {
                  "sum": "The total amount available to withdraw."
                }
              },
              "increaseBounty(uint80)": {
                "details": "Lets author to increase a bounty of a live article. Emits BalanceUpdate.",
                "params": {
                  "_articleStorageAddress": "The address of the article in the storage."
                }
              },
              "initializeArticle(string,uint8,uint80)": {
                "details": "Do not confuse articleID with articleAddress. Emits NewArticle.",
                "params": {
                  "_articleID": "Unique identifier of an article in IPFS content identifier format.",
                  "_category": "The category code of this new article.",
                  "_searchPointer": "Starting point of the search. Find a vacant storage slot before calling this function to minimize gas cost."
                }
              },
              "initiateWithdrawal(uint80)": {
                "details": "Lets an author to start unpublishing process. Emits TimelockStarted.",
                "params": {
                  "_articleStorageAddress": "The address of the article in the storage."
                }
              },
              "submitEvidence(uint256,string)": {
                "params": {
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "_evidenceURI": "IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'"
                }
              },
              "switchPublishingLock()": {
                "details": "Useful when it's no longer safe or secure to use this contract.         Prevents new articles to be published. Only intended for privileges users."
              },
              "transferOwnership(uint80,address)": {
                "details": "Lets you to transfer ownership of an article.       This is useful when you want to change owner account without withdrawing and resubmitting.       Emits OwnershipTransfer.",
                "params": {
                  "_articleStorageAddress": "The address of article in the storage.",
                  "_newOwner": "The new owner of the article which resides in the storage address, provided by the previous parameter."
                }
              },
              "withdraw(uint80)": {
                "details": "Executes unpublishing of an article. Emits Withdrew.",
                "params": {
                  "_articleStorageAddress": "The address of the article in the storage."
                }
              },
              "withdrawFeesAndRewards(uint256,address,uint256,uint8)": {
                "details": "Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.",
                "params": {
                  "_contributor": "Beneficiary of withdraw operation.",
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "_round": "Number of the round that caller wants to execute withdraw on.",
                  "_ruling": "A ruling option that caller wants to execute withdraw on."
                },
                "returns": {
                  "sum": "The amount that is going to be transferred to contributor as a result of this function call."
                }
              },
              "withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)": {
                "details": "Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.",
                "params": {
                  "_contributor": "Beneficiary of withdraw operation.",
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "_ruling": "Ruling option that caller wants to execute withdraw on."
                }
              },
              "withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)": {
                "details": "Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds and all rulings at once.",
                "params": {
                  "_contributor": "Beneficiary of withdraw operation.",
                  "_disputeID": "The dispute ID as in arbitrator."
                }
              },
              "withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])": {
                "details": "Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for given positions at once.",
                "params": {
                  "_contributor": "Beneficiary of withdraw operation.",
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "positions": "[rounds][rulings]."
                }
              }
            },
            "title": "The Truth Post: Accurate and Relevant News",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "ARTICLE_WITHDRAWAL_TIMELOCK()": "d3b476b1",
              "LOSER_APPEAL_PERIOD_MULTIPLIER()": "be467604",
              "LOSER_STAKE_MULTIPLIER()": "b34bfaa8",
              "MULTIPLIER_DENOMINATOR()": "fe6ca782",
              "NUMBER_OF_RULING_OPTIONS()": "7597b3cb",
              "TREASURY()": "2d2c5565",
              "VERSION()": "ffa1ad74",
              "WINNER_STAKE_MULTIPLIER()": "e349ad30",
              "appealFee(uint256)": "1e26de34",
              "challenge(uint80)": "736ed418",
              "challengeFee(uint80)": "64ff9dfa",
              "challengeTaxRate()": "fc0ac672",
              "changeArticleWithdrawalTimelock(uint256)": "92e25925",
              "changeLoserAppealPeriodMultiplier(uint256)": "c94828f0",
              "changeLoserStakeMultiplier(uint256)": "92239dff",
              "changeWinnerStakeMultiplier(uint256)": "adc7faba",
              "findVacantStorageSlot(uint80)": "15f36ebe",
              "fundAppeal(uint256,uint8)": "12b3a2c0",
              "getAmountRemainsToBeRaised(uint256,uint8)": "a509efeb",
              "getAppealPeriod(uint256,uint8)": "638af3da",
              "getLastRoundWinner(uint256)": "7f67bd6c",
              "getReturnOfInvestmentRatio(uint8,uint8)": "b4c70581",
              "getRoundInfo(uint256,uint256)": "8a9bb02a",
              "getTotalWithdrawableAmount(uint256,address)": "af4a9144",
              "increaseBounty(uint80)": "bc0936fd",
              "initializeArticle(string,uint8,uint80)": "29238089",
              "initiateWithdrawal(uint80)": "956dcbd2",
              "submitEvidence(uint256,string)": "a6a7f0eb",
              "switchPublishingLock()": "ba0ec60b",
              "transferOwnership(uint80,address)": "06bcbd73",
              "treasuryBalance()": "313dab20",
              "withdraw(uint80)": "ab9cd37e",
              "withdrawFeesAndRewards(uint256,address,uint256,uint8)": "dc227fc2",
              "withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)": "6760aeb0",
              "withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)": "c9330c0f",
              "withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])": "67284f21"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"AdminUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newWithdrawalTimelock\",\"type\":\"uint256\"}],\"name\":\"ArticleWithdrawalTimelockUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"}],\"name\":\"ArticleWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotal\",\"type\":\"uint256\"}],\"name\":\"BalanceUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"challanger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"disputeID\",\"type\":\"uint256\"}],\"name\":\"Challenge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newTaxRate\",\"type\":\"uint256\"}],\"name\":\"ChallengeTaxRateUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"ruling\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"}],\"name\":\"Debunked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newLoserAppealPeriodMultiplier\",\"type\":\"uint256\"}],\"name\":\"LoserAppealPeriodMultiplierUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newLoserStakeMultiplier\",\"type\":\"uint256\"}],\"name\":\"LoserStakeMultiplierUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"articleID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"}],\"name\":\"NewArticle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"ruling\",\"type\":\"uint8\"}],\"name\":\"RulingFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"}],\"name\":\"TimelockStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_byAmount\",\"type\":\"uint256\"}],\"name\":\"TreasuryBalanceUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newWinnerStakeMultiplier\",\"type\":\"uint256\"}],\"name\":\"WinnerStakeMultiplierUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"ruling\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ARTICLE_WITHDRAWAL_TIMELOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOSER_APPEAL_PERIOD_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOSER_STAKE_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MULTIPLIER_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NUMBER_OF_RULING_OPTIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WINNER_STAKE_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"appealFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"arbitrationFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_articleStorageAddress\",\"type\":\"uint80\"}],\"name\":\"challenge\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_articleStorageAddress\",\"type\":\"uint80\"}],\"name\":\"challengeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"challengeFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"challengeTaxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newArticleWithdrawalTimelock\",\"type\":\"uint256\"}],\"name\":\"changeArticleWithdrawalTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newLoserAppealPeriodMultiplier\",\"type\":\"uint256\"}],\"name\":\"changeLoserAppealPeriodMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newLoserStakeMultiplier\",\"type\":\"uint256\"}],\"name\":\"changeLoserStakeMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newWinnerStakeMultiplier\",\"type\":\"uint256\"}],\"name\":\"changeWinnerStakeMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_searchPointer\",\"type\":\"uint80\"}],\"name\":\"findVacantStorageSlot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vacantSlotIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"fundAppeal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fullyFunded\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"getAmountRemainsToBeRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"getAppealPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"getLastRoundWinner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_lastRoundWinner\",\"type\":\"uint8\"}],\"name\":\"getReturnOfInvestmentRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"getRoundInfo\",\"outputs\":[{\"internalType\":\"bool[3]\",\"name\":\"hasPaid\",\"type\":\"bool[3]\"},{\"internalType\":\"uint256[3]\",\"name\":\"totalPerRuling\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimableAfterExpenses\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"getTotalWithdrawableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"},{\"internalType\":\"uint256[][]\",\"name\":\"positions\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_articleStorageAddress\",\"type\":\"uint80\"}],\"name\":\"increaseBounty\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_articleID\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_category\",\"type\":\"uint8\"},{\"internalType\":\"uint80\",\"name\":\"_searchPointer\",\"type\":\"uint80\"}],\"name\":\"initializeArticle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_articleStorageAddress\",\"type\":\"uint80\"}],\"name\":\"initiateWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_evidenceURI\",\"type\":\"string\"}],\"name\":\"submitEvidence\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"switchPublishingLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_articleStorageAddress\",\"type\":\"uint80\"},{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_articleStorageAddress\",\"type\":\"uint80\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"withdrawFeesAndRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"withdrawFeesAndRewardsForAllRounds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"withdrawFeesAndRewardsForAllRoundsAndAllRulings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256[][]\",\"name\":\"positions\",\"type\":\"uint256[][]\"}],\"name\":\"withdrawFeesAndRewardsForGivenPositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"https://github.com/proveuswrong<0xferit, gratestas>\",\"custom:approvals\":\"0xferit, gratestas\",\"details\":\"This contract serves as a standard interface among multiple deployments of the Truth Post contracts.         You should target this interface contract for interactions, not the concrete contract; otherwise you risk incompatibility across versions.\",\"kind\":\"dev\",\"methods\":{\"appealFee(uint256)\":{\"details\":\"Returns the total amount needs to be paid to appeal a dispute, including fees and stake deposit.\",\"params\":{\"_disputeID\":\"ID of the dispute as in arbitrator.\"}},\"challenge(uint80)\":{\"details\":\"Challenges the article at the given storage address. Emits Challenge.\",\"params\":{\"_articleStorageAddress\":\"The address of the article in the storage.\"}},\"challengeFee(uint80)\":{\"details\":\"Returns the total amount needs to be paid to challenge an article, including taxes if any.\",\"params\":{\"_articleStorageAddress\":\"The address of article in the storage.\"}},\"changeArticleWithdrawalTimelock(uint256)\":{\"details\":\"Sets the timelock before an author can initiate the withdrawal of an article to a new value.       Emits ArticleWithdrawalTimelockUpdate.\",\"params\":{\"_newArticleWithdrawalTimelock\":\"The new value of ARTICLE_WITHDRAWAL_TIMELOCK.\"}},\"changeLoserAppealPeriodMultiplier(uint256)\":{\"details\":\"Sets the multiplier of the appeal window for the loser to a new value. Emits LoserAppealPeriodMultiplierUpdate.\",\"params\":{\"_newLoserAppealPeriodMultiplier\":\"The new value of LOSER_APPEAL_PERIOD_MULTIPLIER.\"}},\"changeLoserStakeMultiplier(uint256)\":{\"details\":\"Sets the multiplier of the arbitration cost that the loser has to pay as fee stake to a new value.       Emits LoserStakeMultiplierUpdate.\",\"params\":{\"_newLoserStakeMultiplier\":\"The new value of LOSER_STAKE_MULTIPLIER.\"}},\"changeWinnerStakeMultiplier(uint256)\":{\"details\":\"Sets the multiplier of the arbitration cost that the winner has to pay as fee stake to a new value.       Emits WinnerStakeMultiplierUpdate.\",\"params\":{\"_newWinnerStakeMultiplier\":\"The new value of WINNER_STAKE_MULTIPLIER.\"}},\"findVacantStorageSlot(uint80)\":{\"details\":\"Helper function to find a vacant slot for article. Use this function before calling initialize to minimize your gas cost.\",\"params\":{\"_searchPointer\":\"Starting point of the search. If you do not have a guess, just pass 0.\"}},\"fundAppeal(uint256,uint8)\":{\"details\":\"Lets user to contribute funding of an appeal round. Emits Contribution. If fully funded, emits RulingFunded.\",\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"The ruling option to which the caller wants to contribute.\"},\"returns\":{\"fullyFunded\":\"True if the ruling option got fully funded as a result of this contribution.\"}},\"getAmountRemainsToBeRaised(uint256,uint8)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"The ruling option to query.\"},\"returns\":{\"_0\":\"Amount needs to be raised\"}},\"getAppealPeriod(uint256,uint8)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"The ruling option to query.\"},\"returns\":{\"_0\":\"Start\",\"_1\":\"End\"}},\"getLastRoundWinner(uint256)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\"},\"returns\":{\"_0\":\"Winning ruling option.\"}},\"getReturnOfInvestmentRatio(uint8,uint8)\":{\"details\":\"Purely depends on whether given ruling option is winner and stake multipliers.\",\"params\":{\"_lastRoundWinner\":\"Winner of the last round.\",\"_ruling\":\"The ruling option to query.\"},\"returns\":{\"_0\":\"Return of investment ratio, denominated by MULTIPLIER_DENOMINATOR.\"}},\"getRoundInfo(uint256,uint256)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_round\":\"Round ID.\"},\"returns\":{\"hasPaid\":\"Whether given ruling option was fully funded.\",\"totalClaimableAfterExpenses\":\"Total amount will be distributed back to winners, after deducting expenses.\",\"totalPerRuling\":\"The total raised per ruling option.\"}},\"getTotalWithdrawableAmount(uint256,address)\":{\"details\":\"Returns the sum of withdrawable amount and 2D array of positions[round][ruling].\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\"},\"returns\":{\"sum\":\"The total amount available to withdraw.\"}},\"increaseBounty(uint80)\":{\"details\":\"Lets author to increase a bounty of a live article. Emits BalanceUpdate.\",\"params\":{\"_articleStorageAddress\":\"The address of the article in the storage.\"}},\"initializeArticle(string,uint8,uint80)\":{\"details\":\"Do not confuse articleID with articleAddress. Emits NewArticle.\",\"params\":{\"_articleID\":\"Unique identifier of an article in IPFS content identifier format.\",\"_category\":\"The category code of this new article.\",\"_searchPointer\":\"Starting point of the search. Find a vacant storage slot before calling this function to minimize gas cost.\"}},\"initiateWithdrawal(uint80)\":{\"details\":\"Lets an author to start unpublishing process. Emits TimelockStarted.\",\"params\":{\"_articleStorageAddress\":\"The address of the article in the storage.\"}},\"submitEvidence(uint256,string)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_evidenceURI\":\"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\"}},\"switchPublishingLock()\":{\"details\":\"Useful when it's no longer safe or secure to use this contract.         Prevents new articles to be published. Only intended for privileges users.\"},\"transferOwnership(uint80,address)\":{\"details\":\"Lets you to transfer ownership of an article.       This is useful when you want to change owner account without withdrawing and resubmitting.       Emits OwnershipTransfer.\",\"params\":{\"_articleStorageAddress\":\"The address of article in the storage.\",\"_newOwner\":\"The new owner of the article which resides in the storage address, provided by the previous parameter.\"}},\"withdraw(uint80)\":{\"details\":\"Executes unpublishing of an article. Emits Withdrew.\",\"params\":{\"_articleStorageAddress\":\"The address of the article in the storage.\"}},\"withdrawFeesAndRewards(uint256,address,uint256,uint8)\":{\"details\":\"Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_round\":\"Number of the round that caller wants to execute withdraw on.\",\"_ruling\":\"A ruling option that caller wants to execute withdraw on.\"},\"returns\":{\"sum\":\"The amount that is going to be transferred to contributor as a result of this function call.\"}},\"withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)\":{\"details\":\"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"Ruling option that caller wants to execute withdraw on.\"}},\"withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)\":{\"details\":\"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds and all rulings at once.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\"}},\"withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])\":{\"details\":\"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for given positions at once.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\",\"positions\":\"[rounds][rulings].\"}}},\"title\":\"The Truth Post: Accurate and Relevant News\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"appealFee(uint256)\":{\"notice\":\"Get required appeal fee and deposit.\"},\"challenge(uint80)\":{\"notice\":\"Challenge article.\"},\"challengeFee(uint80)\":{\"notice\":\"Get required challenge fee.\"},\"changeArticleWithdrawalTimelock(uint256)\":{\"notice\":\"Update the timelock for the article withdtrawal.\"},\"changeLoserAppealPeriodMultiplier(uint256)\":{\"notice\":\"Update the appeal window for the loser.\"},\"changeLoserStakeMultiplier(uint256)\":{\"notice\":\"Update the arbitration cost for the loser.\"},\"changeWinnerStakeMultiplier(uint256)\":{\"notice\":\"Update the arbitration cost for the winner.\"},\"findVacantStorageSlot(uint80)\":{\"notice\":\"Find a vacant storage slot for an article.\"},\"fundAppeal(uint256,uint8)\":{\"notice\":\"Fund a crowdfunding appeal.\"},\"getAmountRemainsToBeRaised(uint256,uint8)\":{\"notice\":\"Learn about how much more needs to be raised for given ruling option.\"},\"getAppealPeriod(uint256,uint8)\":{\"notice\":\"Get appeal time window.\"},\"getLastRoundWinner(uint256)\":{\"notice\":\"Get last round's winner.\"},\"getReturnOfInvestmentRatio(uint8,uint8)\":{\"notice\":\"Get return of investment ratio.\"},\"getRoundInfo(uint256,uint256)\":{\"notice\":\"Learn about given dispute round.\"},\"getTotalWithdrawableAmount(uint256,address)\":{\"notice\":\"Learn the total amount of appeal crowdfunding balance available.\"},\"increaseBounty(uint80)\":{\"notice\":\"Increase bounty.\"},\"initializeArticle(string,uint8,uint80)\":{\"notice\":\"Publish an article.\"},\"initiateWithdrawal(uint80)\":{\"notice\":\"Initiate unpublishing process.\"},\"submitEvidence(uint256,string)\":{\"notice\":\"Submit an evidence.\"},\"switchPublishingLock()\":{\"notice\":\"Switches publishing lock.\"},\"transferOwnership(uint80,address)\":{\"notice\":\"Transfer ownership of an article.\"},\"withdraw(uint80)\":{\"notice\":\"Execute unpublishing.\"},\"withdrawFeesAndRewards(uint256,address,uint256,uint8)\":{\"notice\":\"Withdraw appeal crowdfunding balance.\"},\"withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)\":{\"notice\":\"Withdraw appeal crowdfunding balance for given ruling option for all rounds.\"},\"withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)\":{\"notice\":\"Withdraw appeal crowdfunding balance for all ruling options and all rounds.\"},\"withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])\":{\"notice\":\"Withdraw appeal crowdfunding balance for given ruling option and for given rounds.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ITruthPost.sol\":\"ITruthPost\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/ITruthPost.sol\":{\"content\":\"/// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.10;\\n\\n/// @title  The Truth Post: Accurate and Relevant News\\n/// @author https://github.com/proveuswrong<0xferit, gratestas>\\n/// @dev    This contract serves as a standard interface among multiple deployments of the Truth Post contracts.\\n///         You should target this interface contract for interactions, not the concrete contract; otherwise you risk incompatibility across versions.\\n/// @custom:approvals 0xferit, gratestas\\nabstract contract ITruthPost {\\n    string public constant VERSION = \\\"1.2.0\\\";\\n\\n    enum RulingOptions {\\n        Tied,\\n        ChallengeFailed,\\n        Debunked\\n    }\\n\\n    bool isPublishingEnabled = true;\\n    address payable public TREASURY;\\n    uint256 public treasuryBalance;\\n    uint256 public constant NUMBER_OF_RULING_OPTIONS = 2;\\n    uint256 public constant MULTIPLIER_DENOMINATOR = 1024; // Denominator for multipliers.\\n    uint256 public LOSER_APPEAL_PERIOD_MULTIPLIER = 512; // Multiplier of the appeal period for losers (any other ruling options) in basis points. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\\n    uint256 public ARTICLE_WITHDRAWAL_TIMELOCK; // To prevent authors to act fast and escape punishment.\\n    uint256 public WINNER_STAKE_MULTIPLIER; // Multiplier of the arbitration cost that the winner has to pay as fee stake for a round in basis points.\\n    uint256 public LOSER_STAKE_MULTIPLIER; // Multiplier of the arbitration cost that the loser has to pay as fee stake for a round in basis points.\\n    uint256 public challengeTaxRate = 16;\\n\\n    constructor(\\n        uint256 _articleWithdrawalTimelock,\\n        uint256 _winnerStakeMultiplier,\\n        uint256 _loserStakeMultiplier,\\n        address payable _treasury\\n    ) {\\n        ARTICLE_WITHDRAWAL_TIMELOCK = _articleWithdrawalTimelock;\\n        WINNER_STAKE_MULTIPLIER = _winnerStakeMultiplier;\\n        LOSER_STAKE_MULTIPLIER = _loserStakeMultiplier;\\n        TREASURY = _treasury;\\n    }\\n\\n    event NewArticle(string articleID, uint8 category, uint256 articleAddress);\\n    event Debunked(uint256 articleAddress);\\n    event ArticleWithdrawn(uint256 articleAddress);\\n    event BalanceUpdate(uint256 articleAddress, uint256 newTotal);\\n    event TimelockStarted(uint256 articleAddress);\\n    event Challenge(uint256 indexed articleAddress, address challanger, uint256 disputeID);\\n    event Contribution(\\n        uint256 indexed disputeId,\\n        uint256 indexed round,\\n        RulingOptions ruling,\\n        address indexed contributor,\\n        uint256 amount\\n    );\\n    event Withdrawal(\\n        uint256 indexed disputeId,\\n        uint256 indexed round,\\n        RulingOptions ruling,\\n        address indexed contributor,\\n        uint256 reward\\n    );\\n    event RulingFunded(uint256 indexed disputeId, uint256 indexed round, RulingOptions indexed ruling);\\n    event OwnershipTransfer(address indexed _newOwner);\\n    event AdminUpdate(address indexed _newAdmin);\\n    event WinnerStakeMultiplierUpdate(uint256 indexed _newWinnerStakeMultiplier);\\n    event LoserStakeMultiplierUpdate(uint256 indexed _newLoserStakeMultiplier);\\n    event LoserAppealPeriodMultiplierUpdate(uint256 indexed _newLoserAppealPeriodMultiplier);\\n    event ArticleWithdrawalTimelockUpdate(uint256 indexed _newWithdrawalTimelock);\\n    event ChallengeTaxRateUpdate(uint256 indexed _newTaxRate);\\n    event TreasuryUpdate(address indexed _newTreasury);\\n    event TreasuryBalanceUpdate(uint256 indexed _byAmount);\\n\\n\\n    /// @notice Submit an evidence.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\\n    function submitEvidence(uint256 _disputeID, string calldata _evidenceURI) external virtual;\\n\\n    /// @notice Fund a crowdfunding appeal.\\n    /// @dev Lets user to contribute funding of an appeal round. Emits Contribution. If fully funded, emits RulingFunded.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _ruling The ruling option to which the caller wants to contribute.\\n    /// @return fullyFunded True if the ruling option got fully funded as a result of this contribution.\\n    function fundAppeal(uint256 _disputeID, RulingOptions _ruling) external payable virtual returns (bool fullyFunded);\\n\\n    /// @notice Publish an article.\\n    /// @dev    Do not confuse articleID with articleAddress. Emits NewArticle.\\n    /// @param _articleID Unique identifier of an article in IPFS content identifier format.\\n    /// @param _category The category code of this new article.\\n    /// @param _searchPointer Starting point of the search. Find a vacant storage slot before calling this function to minimize gas cost.\\n    function initializeArticle(\\n        string calldata _articleID,\\n        uint8 _category,\\n        uint80 _searchPointer\\n    ) external payable virtual;\\n\\n    /// @notice Increase bounty.\\n    /// @dev Lets author to increase a bounty of a live article. Emits BalanceUpdate.\\n    /// @param _articleStorageAddress The address of the article in the storage.\\n    function increaseBounty(uint80 _articleStorageAddress) external payable virtual;\\n\\n    /// @notice Initiate unpublishing process.\\n    /// @dev Lets an author to start unpublishing process. Emits TimelockStarted.\\n    /// @param _articleStorageAddress The address of the article in the storage.\\n    function initiateWithdrawal(uint80 _articleStorageAddress) external virtual;\\n\\n    /// @notice Execute unpublishing.\\n    /// @dev Executes unpublishing of an article. Emits Withdrew.\\n    /// @param _articleStorageAddress The address of the article in the storage.\\n    function withdraw(uint80 _articleStorageAddress) external virtual;\\n\\n    /// @notice Challenge article.\\n    /// @dev Challenges the article at the given storage address. Emits Challenge.\\n    /// @param _articleStorageAddress The address of the article in the storage.\\n    function challenge(uint80 _articleStorageAddress) external payable virtual;\\n\\n    /// @notice Transfer ownership of an article.\\n    /// @dev Lets you to transfer ownership of an article. \\n    ///      This is useful when you want to change owner account without withdrawing and resubmitting. \\n    ///      Emits OwnershipTransfer.\\n    /// @param _articleStorageAddress The address of article in the storage.\\n    /// @param _newOwner The new owner of the article which resides in the storage address, provided by the previous parameter.\\n    function transferOwnership(uint80 _articleStorageAddress, address payable _newOwner) external virtual;\\n\\n    /// @notice Update the arbitration cost for the winner.\\n    /// @dev Sets the multiplier of the arbitration cost that the winner has to pay as fee stake to a new value. \\n    ///      Emits WinnerStakeMultiplierUpdate.\\n    /// @param _newWinnerStakeMultiplier The new value of WINNER_STAKE_MULTIPLIER.\\n    function changeWinnerStakeMultiplier(uint256 _newWinnerStakeMultiplier) external virtual;\\n\\n    /// @notice Update the arbitration cost for the loser.\\n    /// @dev Sets the multiplier of the arbitration cost that the loser has to pay as fee stake to a new value. \\n    ///      Emits LoserStakeMultiplierUpdate.\\n    /// @param _newLoserStakeMultiplier The new value of LOSER_STAKE_MULTIPLIER.\\n    \\n    function changeLoserStakeMultiplier(uint256 _newLoserStakeMultiplier) external virtual;\\n\\n    /// @notice Update the appeal window for the loser.\\n    /// @dev Sets the multiplier of the appeal window for the loser to a new value. Emits LoserAppealPeriodMultiplierUpdate.\\n    /// @param _newLoserAppealPeriodMultiplier The new value of LOSER_APPEAL_PERIOD_MULTIPLIER.\\n    function changeLoserAppealPeriodMultiplier(uint256 _newLoserAppealPeriodMultiplier) external virtual;\\n\\n    /// @notice Update the timelock for the article withdtrawal.\\n    /// @dev Sets the timelock before an author can initiate the withdrawal of an article to a new value. \\n    ///      Emits ArticleWithdrawalTimelockUpdate.\\n    /// @param _newArticleWithdrawalTimelock The new value of ARTICLE_WITHDRAWAL_TIMELOCK.\\n    function changeArticleWithdrawalTimelock(uint256 _newArticleWithdrawalTimelock) external virtual;\\n\\n    /// @notice Find a vacant storage slot for an article.\\n    /// @dev Helper function to find a vacant slot for article. Use this function before calling initialize to minimize your gas cost.\\n    /// @param _searchPointer Starting point of the search. If you do not have a guess, just pass 0.\\n    function findVacantStorageSlot(uint80 _searchPointer) external view virtual returns (uint256 vacantSlotIndex);\\n\\n    /// @notice Get required challenge fee.\\n    /// @dev Returns the total amount needs to be paid to challenge an article, including taxes if any.\\n    /// @param _articleStorageAddress The address of article in the storage.\\n    function challengeFee(uint80 _articleStorageAddress) public view virtual returns (uint256 challengeFee);\\n\\n    /// @notice Get required appeal fee and deposit.\\n    /// @dev Returns the total amount needs to be paid to appeal a dispute, including fees and stake deposit.\\n    /// @param _disputeID ID of the dispute as in arbitrator.\\n    function appealFee(uint256 _disputeID) external view virtual returns (uint256 arbitrationFee);\\n\\n    /// @notice Withdraw appeal crowdfunding balance.\\n    /// @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    /// @param _round Number of the round that caller wants to execute withdraw on.\\n    /// @param _ruling A ruling option that caller wants to execute withdraw on.\\n    /// @return sum The amount that is going to be transferred to contributor as a result of this function call.\\n    function withdrawFeesAndRewards(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        uint256 _round,\\n        RulingOptions _ruling\\n    ) external virtual returns (uint256 sum);\\n\\n    /// @notice Withdraw appeal crowdfunding balance for given ruling option for all rounds.\\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    /// @param _ruling Ruling option that caller wants to execute withdraw on.\\n    function withdrawFeesAndRewardsForAllRounds(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        RulingOptions _ruling\\n    ) external virtual;\\n\\n    /// @notice Withdraw appeal crowdfunding balance for given ruling option and for given rounds.\\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for given positions at once.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    /// @param positions [rounds][rulings].\\n    function withdrawFeesAndRewardsForGivenPositions(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        uint256[][] calldata positions\\n    ) external virtual;\\n\\n    /// @notice Withdraw appeal crowdfunding balance for all ruling options and all rounds.\\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds and all rulings at once.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    function withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256 _disputeID, address payable _contributor)\\n        external\\n        virtual;\\n\\n    /// @notice Learn the total amount of appeal crowdfunding balance available.\\n    /// @dev Returns the sum of withdrawable amount and 2D array of positions[round][ruling].\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    /// @return sum The total amount available to withdraw.\\n    function getTotalWithdrawableAmount(uint256 _disputeID, address payable _contributor)\\n        external\\n        view\\n        virtual\\n        returns (uint256 sum, uint256[][] memory positions);\\n\\n    /// @notice Learn about given dispute round.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _round Round ID.\\n    /// @return hasPaid Whether given ruling option was fully funded.\\n    /// @return totalPerRuling The total raised per ruling option.\\n    /// @return totalClaimableAfterExpenses Total amount will be distributed back to winners, after deducting expenses.\\n    function getRoundInfo(uint256 _disputeID, uint256 _round)\\n        external\\n        view\\n        virtual\\n        returns (\\n            bool[NUMBER_OF_RULING_OPTIONS + 1] memory hasPaid,\\n            uint256[NUMBER_OF_RULING_OPTIONS + 1] memory totalPerRuling,\\n            uint256 totalClaimableAfterExpenses\\n        );\\n\\n    /// @notice Learn about how much more needs to be raised for given ruling option.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _ruling The ruling option to query.\\n    /// @return Amount needs to be raised\\n    function getAmountRemainsToBeRaised(uint256 _disputeID, RulingOptions _ruling)\\n        external\\n        view\\n        virtual\\n        returns (uint256);\\n\\n    /// @notice Get return of investment ratio.\\n    /// @dev Purely depends on whether given ruling option is winner and stake multipliers.\\n    /// @param _ruling The ruling option to query.\\n    /// @param _lastRoundWinner Winner of the last round.\\n    /// @return Return of investment ratio, denominated by MULTIPLIER_DENOMINATOR.\\n    function getReturnOfInvestmentRatio(RulingOptions _ruling, RulingOptions _lastRoundWinner)\\n        external\\n        view\\n        virtual\\n        returns (uint256);\\n\\n    /// @notice Get appeal time window.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _ruling The ruling option to query.\\n    /// @return Start\\n    /// @return End\\n    function getAppealPeriod(uint256 _disputeID, RulingOptions _ruling)\\n        external\\n        view\\n        virtual\\n        returns (uint256, uint256);\\n\\n    /// @notice Get last round's winner.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @return Winning ruling option.\\n    function getLastRoundWinner(uint256 _disputeID) public view virtual returns (uint256);\\n\\n    /// @notice Switches publishing lock.\\n    /// @dev    Useful when it's no longer safe or secure to use this contract.\\n    ///         Prevents new articles to be published. Only intended for privileges users.\\n    function switchPublishingLock() public virtual;\\n}\\n\",\"keccak256\":\"0x82d3bf9448724c610414b8d1b13916a0157777665b3d6e68873c5f299d044c57\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 298,
                "contract": "contracts/ITruthPost.sol:ITruthPost",
                "label": "isPublishingEnabled",
                "offset": 0,
                "slot": "0",
                "type": "t_bool"
              },
              {
                "astId": 300,
                "contract": "contracts/ITruthPost.sol:ITruthPost",
                "label": "TREASURY",
                "offset": 1,
                "slot": "0",
                "type": "t_address_payable"
              },
              {
                "astId": 302,
                "contract": "contracts/ITruthPost.sol:ITruthPost",
                "label": "treasuryBalance",
                "offset": 0,
                "slot": "1",
                "type": "t_uint256"
              },
              {
                "astId": 311,
                "contract": "contracts/ITruthPost.sol:ITruthPost",
                "label": "LOSER_APPEAL_PERIOD_MULTIPLIER",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 313,
                "contract": "contracts/ITruthPost.sol:ITruthPost",
                "label": "ARTICLE_WITHDRAWAL_TIMELOCK",
                "offset": 0,
                "slot": "3",
                "type": "t_uint256"
              },
              {
                "astId": 315,
                "contract": "contracts/ITruthPost.sol:ITruthPost",
                "label": "WINNER_STAKE_MULTIPLIER",
                "offset": 0,
                "slot": "4",
                "type": "t_uint256"
              },
              {
                "astId": 317,
                "contract": "contracts/ITruthPost.sol:ITruthPost",
                "label": "LOSER_STAKE_MULTIPLIER",
                "offset": 0,
                "slot": "5",
                "type": "t_uint256"
              },
              {
                "astId": 320,
                "contract": "contracts/ITruthPost.sol:ITruthPost",
                "label": "challengeTaxRate",
                "offset": 0,
                "slot": "6",
                "type": "t_uint256"
              }
            ],
            "types": {
              "t_address_payable": {
                "encoding": "inplace",
                "label": "address payable",
                "numberOfBytes": "20"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "appealFee(uint256)": {
                "notice": "Get required appeal fee and deposit."
              },
              "challenge(uint80)": {
                "notice": "Challenge article."
              },
              "challengeFee(uint80)": {
                "notice": "Get required challenge fee."
              },
              "changeArticleWithdrawalTimelock(uint256)": {
                "notice": "Update the timelock for the article withdtrawal."
              },
              "changeLoserAppealPeriodMultiplier(uint256)": {
                "notice": "Update the appeal window for the loser."
              },
              "changeLoserStakeMultiplier(uint256)": {
                "notice": "Update the arbitration cost for the loser."
              },
              "changeWinnerStakeMultiplier(uint256)": {
                "notice": "Update the arbitration cost for the winner."
              },
              "findVacantStorageSlot(uint80)": {
                "notice": "Find a vacant storage slot for an article."
              },
              "fundAppeal(uint256,uint8)": {
                "notice": "Fund a crowdfunding appeal."
              },
              "getAmountRemainsToBeRaised(uint256,uint8)": {
                "notice": "Learn about how much more needs to be raised for given ruling option."
              },
              "getAppealPeriod(uint256,uint8)": {
                "notice": "Get appeal time window."
              },
              "getLastRoundWinner(uint256)": {
                "notice": "Get last round's winner."
              },
              "getReturnOfInvestmentRatio(uint8,uint8)": {
                "notice": "Get return of investment ratio."
              },
              "getRoundInfo(uint256,uint256)": {
                "notice": "Learn about given dispute round."
              },
              "getTotalWithdrawableAmount(uint256,address)": {
                "notice": "Learn the total amount of appeal crowdfunding balance available."
              },
              "increaseBounty(uint80)": {
                "notice": "Increase bounty."
              },
              "initializeArticle(string,uint8,uint80)": {
                "notice": "Publish an article."
              },
              "initiateWithdrawal(uint80)": {
                "notice": "Initiate unpublishing process."
              },
              "submitEvidence(uint256,string)": {
                "notice": "Submit an evidence."
              },
              "switchPublishingLock()": {
                "notice": "Switches publishing lock."
              },
              "transferOwnership(uint80,address)": {
                "notice": "Transfer ownership of an article."
              },
              "withdraw(uint80)": {
                "notice": "Execute unpublishing."
              },
              "withdrawFeesAndRewards(uint256,address,uint256,uint8)": {
                "notice": "Withdraw appeal crowdfunding balance."
              },
              "withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)": {
                "notice": "Withdraw appeal crowdfunding balance for given ruling option for all rounds."
              },
              "withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)": {
                "notice": "Withdraw appeal crowdfunding balance for all ruling options and all rounds."
              },
              "withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])": {
                "notice": "Withdraw appeal crowdfunding balance for given ruling option and for given rounds."
              }
            },
            "version": 1
          }
        }
      },
      "contracts/TruthPost.sol": {
        "TruthPost": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IArbitrator",
                  "name": "_arbitrator",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_arbitratorExtraData",
                  "type": "bytes"
                },
                {
                  "internalType": "string",
                  "name": "_metaevidenceIpfsUri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "_articleWithdrawalTimelock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_winnerStakeMultiplier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_loserStakeMultiplier",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "_treasury",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_newAdmin",
                  "type": "address"
                }
              ],
              "name": "AdminUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_newWithdrawalTimelock",
                  "type": "uint256"
                }
              ],
              "name": "ArticleWithdrawalTimelockUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "articleAddress",
                  "type": "uint256"
                }
              ],
              "name": "ArticleWithdrawn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "articleAddress",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newTotal",
                  "type": "uint256"
                }
              ],
              "name": "BalanceUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "articleAddress",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "challanger",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "disputeID",
                  "type": "uint256"
                }
              ],
              "name": "Challenge",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_newTaxRate",
                  "type": "uint256"
                }
              ],
              "name": "ChallengeTaxRateUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "disputeId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "round",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "ruling",
                  "type": "uint8"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "contributor",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Contribution",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "articleAddress",
                  "type": "uint256"
                }
              ],
              "name": "Debunked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IArbitrator",
                  "name": "_arbitrator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_metaEvidenceID",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_evidenceGroupID",
                  "type": "uint256"
                }
              ],
              "name": "Dispute",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IArbitrator",
                  "name": "_arbitrator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_evidenceGroupID",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_party",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "_evidence",
                  "type": "string"
                }
              ],
              "name": "Evidence",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_newLoserAppealPeriodMultiplier",
                  "type": "uint256"
                }
              ],
              "name": "LoserAppealPeriodMultiplierUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_newLoserStakeMultiplier",
                  "type": "uint256"
                }
              ],
              "name": "LoserStakeMultiplierUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_metaEvidenceID",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "_evidence",
                  "type": "string"
                }
              ],
              "name": "MetaEvidence",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "articleID",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "category",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "articleAddress",
                  "type": "uint256"
                }
              ],
              "name": "NewArticle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IArbitrator",
                  "name": "_arbitrator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_ruling",
                  "type": "uint256"
                }
              ],
              "name": "Ruling",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "disputeId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "round",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "ruling",
                  "type": "uint8"
                }
              ],
              "name": "RulingFunded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "articleAddress",
                  "type": "uint256"
                }
              ],
              "name": "TimelockStarted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_byAmount",
                  "type": "uint256"
                }
              ],
              "name": "TreasuryBalanceUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_newTreasury",
                  "type": "address"
                }
              ],
              "name": "TreasuryUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_newWinnerStakeMultiplier",
                  "type": "uint256"
                }
              ],
              "name": "WinnerStakeMultiplierUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "disputeId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "round",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "ruling",
                  "type": "uint8"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "contributor",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "name": "Withdrawal",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "ARBITRATOR",
              "outputs": [
                {
                  "internalType": "contract IArbitrator",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "ARTICLE_WITHDRAWAL_TIMELOCK",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "LOSER_APPEAL_PERIOD_MULTIPLIER",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "LOSER_STAKE_MULTIPLIER",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MULTIPLIER_DENOMINATOR",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "NUMBER_OF_RULING_OPTIONS",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "TREASURY",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "VERSION",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "WINNER_STAKE_MULTIPLIER",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "admin",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                }
              ],
              "name": "appealFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "arbitrationFee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "",
                  "type": "uint80"
                }
              ],
              "name": "articleStorage",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "withdrawalPermittedAt",
                  "type": "uint32"
                },
                {
                  "internalType": "uint56",
                  "name": "bountyAmount",
                  "type": "uint56"
                },
                {
                  "internalType": "uint8",
                  "name": "category",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "categoryCounter",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "categoryToArbitratorExtraData",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_articleStorageAddress",
                  "type": "uint80"
                }
              ],
              "name": "challenge",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_articleStorageAddress",
                  "type": "uint80"
                }
              ],
              "name": "challengeFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "challengeTaxRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "_newAdmin",
                  "type": "address"
                }
              ],
              "name": "changeAdmin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newArticleWithdrawalTimelock",
                  "type": "uint256"
                }
              ],
              "name": "changeArticleWithdrawalTimelock",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newLoserAppealPeriodMultiplier",
                  "type": "uint256"
                }
              ],
              "name": "changeLoserAppealPeriodMultiplier",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newLoserStakeMultiplier",
                  "type": "uint256"
                }
              ],
              "name": "changeLoserStakeMultiplier",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "_newTreasury",
                  "type": "address"
                }
              ],
              "name": "changeTreasury",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newWinnerStakeMultiplier",
                  "type": "uint256"
                }
              ],
              "name": "changeWinnerStakeMultiplier",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "disputes",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "challenger",
                  "type": "address"
                },
                {
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "outcome",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "articleCategory",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "resolved",
                  "type": "bool"
                },
                {
                  "internalType": "uint80",
                  "name": "articleStorageAddress",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_searchPointer",
                  "type": "uint80"
                }
              ],
              "name": "findVacantStorageSlot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "vacantSlotIndex",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "_supportedRuling",
                  "type": "uint8"
                }
              ],
              "name": "fundAppeal",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "fullyFunded",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "_ruling",
                  "type": "uint8"
                }
              ],
              "name": "getAmountRemainsToBeRaised",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "_ruling",
                  "type": "uint8"
                }
              ],
              "name": "getAppealPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                }
              ],
              "name": "getLastRoundWinner",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "_ruling",
                  "type": "uint8"
                },
                {
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "_lastRoundWinner",
                  "type": "uint8"
                }
              ],
              "name": "getReturnOfInvestmentRatio",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_round",
                  "type": "uint256"
                }
              ],
              "name": "getRoundInfo",
              "outputs": [
                {
                  "internalType": "bool[3]",
                  "name": "hasPaid",
                  "type": "bool[3]"
                },
                {
                  "internalType": "uint256[3]",
                  "name": "totalPerRuling",
                  "type": "uint256[3]"
                },
                {
                  "internalType": "uint256",
                  "name": "totalClaimableAfterExpenses",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "_contributor",
                  "type": "address"
                }
              ],
              "name": "getTotalWithdrawableAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "sum",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[][]",
                  "name": "amounts",
                  "type": "uint256[][]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_articleStorageAddress",
                  "type": "uint80"
                }
              ],
              "name": "increaseBounty",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_articleID",
                  "type": "string"
                },
                {
                  "internalType": "uint8",
                  "name": "_category",
                  "type": "uint8"
                },
                {
                  "internalType": "uint80",
                  "name": "_searchPointer",
                  "type": "uint80"
                }
              ],
              "name": "initializeArticle",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_articleStorageAddress",
                  "type": "uint80"
                }
              ],
              "name": "initiateWithdrawal",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_metaevidenceIpfsUri",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "_arbitratorExtraData",
                  "type": "bytes"
                }
              ],
              "name": "newCategory",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_ruling",
                  "type": "uint256"
                }
              ],
              "name": "rule",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "_evidenceURI",
                  "type": "string"
                }
              ],
              "name": "submitEvidence",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "switchPublishingLock",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "transferBalanceToTreasury",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_articleStorageAddress",
                  "type": "uint80"
                },
                {
                  "internalType": "address payable",
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasuryBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newChallengeTaxRate",
                  "type": "uint256"
                }
              ],
              "name": "updateChallengeTaxRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_articleStorageAddress",
                  "type": "uint80"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "_contributor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_roundNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "_ruling",
                  "type": "uint8"
                }
              ],
              "name": "withdrawFeesAndRewards",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "_contributor",
                  "type": "address"
                },
                {
                  "internalType": "enum ITruthPost.RulingOptions",
                  "name": "_ruling",
                  "type": "uint8"
                }
              ],
              "name": "withdrawFeesAndRewardsForAllRounds",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "_contributor",
                  "type": "address"
                }
              ],
              "name": "withdrawFeesAndRewardsForAllRoundsAndAllRulings",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "_contributor",
                  "type": "address"
                },
                {
                  "internalType": "uint256[][]",
                  "name": "positions",
                  "type": "uint256[][]"
                }
              ],
              "name": "withdrawFeesAndRewardsForGivenPositions",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "https://github.com/proveuswrong<0xferit, gratestas>",
            "custom:approvals": "0xferit, gratestas",
            "details": "You should target ITruthPost interface contract for building on top. Otherwise you risk incompatibility across versions.         Articles are not addressed with their identifiers. That enables us to reuse same storage address for another article later.///         Arbitrator is fixed, but subcourts, jury size and metaevidence are not.         We prevent articles to get withdrawn immediately. This is to prevent submitter to escape punishment in case someone discovers an argument to debunk the article.         Bounty amounts are compressed with a lossy compression method to save on storage cost.",
            "kind": "dev",
            "methods": {
              "appealFee(uint256)": {
                "details": "Returns the total amount needs to be paid to appeal a dispute, including fees and stake deposit.",
                "params": {
                  "_disputeID": "ID of the dispute as in arbitrator."
                }
              },
              "challenge(uint80)": {
                "details": "Challenges the article at the given storage address. Emits Challenge.",
                "params": {
                  "_articleStorageAddress": "The address of the article in the storage."
                }
              },
              "challengeFee(uint80)": {
                "details": "Returns the total amount needs to be paid to challenge an article, including taxes if any.",
                "params": {
                  "_articleStorageAddress": "The address of article in the storage."
                }
              },
              "changeAdmin(address)": {
                "details": "Only the current administrator can call this function. Emits AdminUpdate.",
                "params": {
                  "_newAdmin": "The address of the new administrator."
                }
              },
              "changeArticleWithdrawalTimelock(uint256)": {
                "details": "Sets the timelock before an author can initiate the withdrawal of an article to a new value.       Emits ArticleWithdrawalTimelockUpdate.",
                "params": {
                  "_newArticleWithdrawalTimelock": "The new value of ARTICLE_WITHDRAWAL_TIMELOCK."
                }
              },
              "changeLoserAppealPeriodMultiplier(uint256)": {
                "details": "Sets the multiplier of the appeal window for the loser to a new value. Emits LoserAppealPeriodMultiplierUpdate.",
                "params": {
                  "_newLoserAppealPeriodMultiplier": "The new value of LOSER_APPEAL_PERIOD_MULTIPLIER."
                }
              },
              "changeLoserStakeMultiplier(uint256)": {
                "details": "Sets the multiplier of the arbitration cost that the loser has to pay as fee stake to a new value.       Emits LoserStakeMultiplierUpdate.",
                "params": {
                  "_newLoserStakeMultiplier": "The new value of LOSER_STAKE_MULTIPLIER."
                }
              },
              "changeTreasury(address)": {
                "details": "Only the current administrator can call this function. Emits TreasuryUpdate.",
                "params": {
                  "_newTreasury": "The address of the new treasury."
                }
              },
              "changeWinnerStakeMultiplier(uint256)": {
                "details": "Sets the multiplier of the arbitration cost that the winner has to pay as fee stake to a new value.       Emits WinnerStakeMultiplierUpdate.",
                "params": {
                  "_newWinnerStakeMultiplier": "The new value of WINNER_STAKE_MULTIPLIER."
                }
              },
              "findVacantStorageSlot(uint80)": {
                "details": "Helper function to find a vacant slot for article. Use this function before calling initialize to minimize your gas cost.",
                "params": {
                  "_searchPointer": "Starting point of the search. If you do not have a guess, just pass 0."
                }
              },
              "fundAppeal(uint256,uint8)": {
                "details": "Lets user to contribute funding of an appeal round. Emits Contribution. If fully funded, emits RulingFunded.",
                "params": {
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "_ruling": "The ruling option to which the caller wants to contribute."
                },
                "returns": {
                  "fullyFunded": "True if the ruling option got fully funded as a result of this contribution."
                }
              },
              "getAmountRemainsToBeRaised(uint256,uint8)": {
                "params": {
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "_ruling": "The ruling option to query."
                },
                "returns": {
                  "_0": "Amount needs to be raised"
                }
              },
              "getAppealPeriod(uint256,uint8)": {
                "params": {
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "_ruling": "The ruling option to query."
                },
                "returns": {
                  "_0": "Start",
                  "_1": "End"
                }
              },
              "getLastRoundWinner(uint256)": {
                "params": {
                  "_disputeID": "The dispute ID as in arbitrator."
                },
                "returns": {
                  "_0": "Winning ruling option."
                }
              },
              "getReturnOfInvestmentRatio(uint8,uint8)": {
                "details": "Purely depends on whether given ruling option is winner and stake multipliers.",
                "params": {
                  "_lastRoundWinner": "Winner of the last round.",
                  "_ruling": "The ruling option to query."
                },
                "returns": {
                  "_0": "Return of investment ratio, denominated by MULTIPLIER_DENOMINATOR."
                }
              },
              "getRoundInfo(uint256,uint256)": {
                "params": {
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "_round": "Round ID."
                },
                "returns": {
                  "hasPaid": "Whether given ruling option was fully funded.",
                  "totalClaimableAfterExpenses": "Total amount will be distributed back to winners, after deducting expenses.",
                  "totalPerRuling": "The total raised per ruling option."
                }
              },
              "getTotalWithdrawableAmount(uint256,address)": {
                "details": "Returns the sum of withdrawable amount and 2D array of positions[round][ruling].",
                "params": {
                  "_contributor": "Beneficiary of withdraw operation.",
                  "_disputeID": "The dispute ID as in arbitrator."
                },
                "returns": {
                  "sum": "The total amount available to withdraw."
                }
              },
              "increaseBounty(uint80)": {
                "details": "Lets author to increase a bounty of a live article. Emits BalanceUpdate.",
                "params": {
                  "_articleStorageAddress": "The address of the article in the storage."
                }
              },
              "initializeArticle(string,uint8,uint80)": {
                "details": "Do not confuse articleID with articleAddress. Emits NewArticle.",
                "params": {
                  "_articleID": "Unique identifier of an article in IPFS content identifier format.",
                  "_category": "The category code of this new article.",
                  "_searchPointer": "Starting point of the search. Find a vacant storage slot before calling this function to minimize gas cost."
                }
              },
              "initiateWithdrawal(uint80)": {
                "details": "Lets an author to start unpublishing process. Emits TimelockStarted.",
                "params": {
                  "_articleStorageAddress": "The address of the article in the storage."
                }
              },
              "newCategory(string,bytes)": {
                "params": {
                  "_arbitratorExtraData": "Extra data of Kleros arbitrator, signaling subcourt and jury size selection.",
                  "_metaevidenceIpfsUri": "IPFS content identifier for metaevidence."
                }
              },
              "rule(uint256,uint256)": {
                "details": "This is only for arbitrator to use.",
                "params": {
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "_ruling": "Winning ruling option."
                }
              },
              "submitEvidence(uint256,string)": {
                "params": {
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "_evidenceURI": "IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'"
                }
              },
              "switchPublishingLock()": {
                "details": "Useful when it's no longer safe or secure to use this contract.         Prevents new articles to be published. Only intended for privileges users."
              },
              "transferBalanceToTreasury()": {
                "details": "Allows the contract to send its entire balance to the treasury address.         It is important to ensure that the treasury address is set correctly.         If the transfer fails, an exception will be raised, and the funds will remain in the contract.         Emits TreasuryBalanceUpdate."
              },
              "transferOwnership(uint80,address)": {
                "details": "Lets you to transfer ownership of an article.       This is useful when you want to change owner account without withdrawing and resubmitting.       Emits OwnershipTransfer.",
                "params": {
                  "_articleStorageAddress": "The address of article in the storage.",
                  "_newOwner": "The new owner of the article which resides in the storage address, provided by the previous parameter."
                }
              },
              "updateChallengeTaxRate(uint256)": {
                "details": "The new challenge tax rate must be at most 25% based on MULTIPLIER_DENOMINATOR.         Only the current administrator can call this function. Emits ChallengeTaxRateUpdate.",
                "params": {
                  "_newChallengeTaxRate": "The new challenge tax rate to be set."
                }
              },
              "withdraw(uint80)": {
                "details": "Executes unpublishing of an article. Emits Withdrew.",
                "params": {
                  "_articleStorageAddress": "The address of the article in the storage."
                }
              },
              "withdrawFeesAndRewards(uint256,address,uint256,uint8)": {
                "details": "Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.",
                "params": {
                  "_contributor": "Beneficiary of withdraw operation.",
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "_round": "Number of the round that caller wants to execute withdraw on.",
                  "_ruling": "A ruling option that caller wants to execute withdraw on."
                },
                "returns": {
                  "amount": "The amount that is going to be transferred to contributor as a result of this function call."
                }
              },
              "withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)": {
                "details": "Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.",
                "params": {
                  "_contributor": "Beneficiary of withdraw operation.",
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "_ruling": "Ruling option that caller wants to execute withdraw on."
                }
              },
              "withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)": {
                "details": "Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds and all rulings at once.",
                "params": {
                  "_contributor": "Beneficiary of withdraw operation.",
                  "_disputeID": "The dispute ID as in arbitrator."
                }
              },
              "withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])": {
                "details": "Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for given positions at once.",
                "params": {
                  "_contributor": "Beneficiary of withdraw operation.",
                  "_disputeID": "The dispute ID as in arbitrator.",
                  "positions": "[rounds][rulings]."
                }
              }
            },
            "title": "The Trust Post",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_348": {
                  "entryPoint": null,
                  "id": 348,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@_827": {
                  "entryPoint": null,
                  "id": 827,
                  "parameterSlots": 7,
                  "returnSlots": 0
                },
                "@newCategory_2185": {
                  "entryPoint": 184,
                  "id": 2185,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address_payable_fromMemory": {
                  "entryPoint": 887,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_available_length_bytes_fromMemory": {
                  "entryPoint": 721,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_string_fromMemory": {
                  "entryPoint": 845,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_contract$_IArbitrator_$249t_bytes_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_address_payable_fromMemory": {
                  "entryPoint": 905,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 7
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 1166,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e23f3e71c05305a9182237d48ba9b404f0c1c59aaff27a9576fb3eb02eaabde6__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_t_uint8": {
                  "entryPoint": 1126,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "copy_memory_to_memory": {
                  "entryPoint": 670,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 1276,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_t_uint8": {
                  "entryPoint": 1241,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 1104,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 1219,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 648,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_contract_IArbitrator": {
                  "entryPoint": 623,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:4488:7",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "72:86:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "136:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "145:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "148:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "138:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "138:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "138:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "95:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "106:5:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "121:3:7",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "126:1:7",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "117:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "117:11:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "130:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "113:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "113:19:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "102:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "102:31:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "92:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "92:42:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "85:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "85:50:7"
                              },
                              "nodeType": "YulIf",
                              "src": "82:70:7"
                            }
                          ]
                        },
                        "name": "validator_revert_contract_IArbitrator",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "61:5:7",
                            "type": ""
                          }
                        ],
                        "src": "14:144:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "195:95:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "212:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "219:3:7",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "224:10:7",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "215:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "215:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "205:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "205:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "205:31:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "255:4:7",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "245:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "276:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "279:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "269:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "269:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "269:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "163:127:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "348:205:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "358:10:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "367:1:7",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "362:1:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "427:63:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "452:3:7"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "457:1:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "448:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "448:11:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "471:3:7"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "476:1:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "467:3:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "467:11:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "461:5:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "461:18:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "441:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "441:39:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "441:39:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "388:1:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "391:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "385:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "385:13:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "399:19:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "401:15:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "410:1:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "413:2:7",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "406:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "406:10:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "401:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "381:3:7",
                                "statements": []
                              },
                              "src": "377:113:7"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "516:31:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "529:3:7"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "534:6:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "525:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "525:16:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "543:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "518:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "518:27:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "518:27:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "505:1:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "508:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "502:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "502:13:7"
                              },
                              "nodeType": "YulIf",
                              "src": "499:48:7"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "326:3:7",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "331:3:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "336:6:7",
                            "type": ""
                          }
                        ],
                        "src": "295:258:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "643:516:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "653:28:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "671:2:7",
                                        "type": "",
                                        "value": "64"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "675:1:7",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "667:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "667:10:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "679:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "663:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "663:18:7"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "657:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "708:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "710:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "710:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "710:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "696:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "704:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "693:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "693:14:7"
                              },
                              "nodeType": "YulIf",
                              "src": "690:40:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "739:17:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "753:2:7",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "749:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "749:7:7"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "743:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "765:23:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "785:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "779:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "779:9:7"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "769:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "797:73:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "819:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "length",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "843:6:7"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "851:2:7",
                                                    "type": "",
                                                    "value": "31"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "839:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "839:15:7"
                                              },
                                              {
                                                "name": "_2",
                                                "nodeType": "YulIdentifier",
                                                "src": "856:2:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "835:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "835:24:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "861:2:7",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "831:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "831:33:7"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "866:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "827:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "827:42:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "815:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "815:55:7"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "801:10:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "929:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "931:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "931:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "931:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "888:10:7"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "900:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "885:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "885:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "908:10:7"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "920:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "905:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "905:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "882:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "882:46:7"
                              },
                              "nodeType": "YulIf",
                              "src": "879:72:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "967:2:7",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "971:10:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "960:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "960:22:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "960:22:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "991:15:7",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1000:6:7"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "991:5:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1022:6:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1030:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1015:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1015:22:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1015:22:7"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1075:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1084:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1087:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1077:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1077:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1077:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "1056:3:7"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1061:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1052:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1052:16:7"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1070:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1049:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1049:25:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1046:45:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "1122:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1131:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1139:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1127:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1127:17:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1146:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1100:21:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1100:53:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1100:53:7"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_bytes_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "612:3:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "617:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "625:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "633:5:7",
                            "type": ""
                          }
                        ],
                        "src": "558:601:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1228:172:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1277:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1286:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1289:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1279:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1279:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1279:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1256:6:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1264:4:7",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1252:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1252:17:7"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1271:3:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1248:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1248:27:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1241:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1241:35:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1238:55:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1302:92:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1360:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1368:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1356:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1356:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1381:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1375:5:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1375:13:7"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1390:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_bytes_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1311:44:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1311:83:7"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "1302:5:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_string_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1202:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1210:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "1218:5:7",
                            "type": ""
                          }
                        ],
                        "src": "1164:236:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1473:91:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1483:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1498:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1492:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1492:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1483:5:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1552:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_contract_IArbitrator",
                                  "nodeType": "YulIdentifier",
                                  "src": "1514:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1514:44:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1514:44:7"
                            }
                          ]
                        },
                        "name": "abi_decode_address_payable_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1452:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1463:5:7",
                            "type": ""
                          }
                        ],
                        "src": "1405:159:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1798:901:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1845:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1854:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1857:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1847:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1847:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1847:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1819:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1828:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1815:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1815:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1840:3:7",
                                    "type": "",
                                    "value": "224"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1811:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1811:33:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1808:53:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1870:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1889:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1883:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1883:16:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1874:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1946:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_contract_IArbitrator",
                                  "nodeType": "YulIdentifier",
                                  "src": "1908:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1908:44:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1908:44:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1961:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1971:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1961:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1985:39:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2009:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2020:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2005:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2005:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1999:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1999:25:7"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1989:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2033:28:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2051:2:7",
                                        "type": "",
                                        "value": "64"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2055:1:7",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2047:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2047:10:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2059:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2043:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2043:18:7"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2037:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2088:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2097:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2100:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2090:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2090:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2090:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2076:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2084:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2073:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2073:14:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2070:34:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2113:32:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2127:9:7"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2138:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2123:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2123:22:7"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "2117:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2193:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2202:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2205:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2195:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2195:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2195:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "2172:2:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2176:4:7",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2168:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2168:13:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2183:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2164:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2164:27:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2157:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2157:35:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2154:55:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2218:87:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "2277:2:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2281:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2273:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2273:11:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "2292:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2286:5:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2286:9:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2297:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_bytes_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "2228:44:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2228:77:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2218:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2314:41:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2340:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2351:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2336:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2336:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2330:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2330:25:7"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2318:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2384:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2393:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2396:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2386:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2386:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2386:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2370:8:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2380:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2367:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2367:16:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2364:36:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2409:73:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2452:9:7"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2463:8:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2448:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2448:24:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2474:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "2419:28:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2419:63:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2409:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2491:35:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2511:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2522:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2507:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2507:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2501:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2501:25:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2491:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2535:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2555:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2566:3:7",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2551:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2551:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2545:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2545:26:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2535:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2580:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2600:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2611:3:7",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2596:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2596:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2590:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2590:26:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nodeType": "YulIdentifier",
                                  "src": "2580:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2625:68:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2677:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2688:3:7",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2673:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2673:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_payable_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "2635:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2635:58:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value6",
                                  "nodeType": "YulIdentifier",
                                  "src": "2625:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_IArbitrator_$249t_bytes_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_address_payable_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1716:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1727:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1739:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1747:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1755:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1763:6:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "1771:6:7",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "1779:6:7",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "1787:6:7",
                            "type": ""
                          }
                        ],
                        "src": "1569:1130:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2736:95:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2753:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2760:3:7",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2765:10:7",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2756:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2756:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2746:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2746:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2746:31:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2793:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2796:4:7",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2786:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2786:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2786:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2817:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2820:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2810:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2810:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2810:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "2704:127:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2882:158:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2892:23:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2907:1:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2910:4:7",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2903:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2903:12:7"
                              },
                              "variables": [
                                {
                                  "name": "x_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2896:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2924:23:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "2939:1:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2942:4:7",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2935:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2935:12:7"
                              },
                              "variables": [
                                {
                                  "name": "y_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2928:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2983:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2985:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2985:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2985:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2962:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2971:4:7",
                                        "type": "",
                                        "value": "0xff"
                                      },
                                      {
                                        "name": "y_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2977:3:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2967:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2967:14:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2959:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2959:23:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2956:49:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3014:20:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3025:3:7"
                                  },
                                  {
                                    "name": "y_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3030:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3021:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3021:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "3014:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "2865:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "2868:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "2874:3:7",
                            "type": ""
                          }
                        ],
                        "src": "2836:204:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3219:182:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3236:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3247:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3229:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3229:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3229:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3270:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3281:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3266:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3266:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3286:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3259:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3259:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3259:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3309:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3320:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3305:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3305:18:7"
                                  },
                                  {
                                    "hexValue": "4e6f207370616365206c65667420666f722061206e65772063617465676f7279",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3325:34:7",
                                    "type": "",
                                    "value": "No space left for a new category"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3298:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3298:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3298:62:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3369:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3381:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3392:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3377:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3377:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3369:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e23f3e71c05305a9182237d48ba9b404f0c1c59aaff27a9576fb3eb02eaabde6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3196:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3210:4:7",
                            "type": ""
                          }
                        ],
                        "src": "3045:356:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3527:262:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3544:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3555:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3537:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3537:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3537:21:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3567:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3587:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3581:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3581:13:7"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "3571:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3614:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3625:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3610:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3610:18:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3630:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3603:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3603:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3603:34:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3672:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3680:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3668:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3668:15:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3689:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3700:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3685:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3685:18:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3705:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "3646:21:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3646:66:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3646:66:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3721:62:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3737:9:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "3756:6:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3764:2:7",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "3752:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3752:15:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3773:2:7",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "3769:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3769:7:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "3748:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3748:29:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3733:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3733:45:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3780:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3729:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3729:54:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3721:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3496:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3507:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3518:4:7",
                            "type": ""
                          }
                        ],
                        "src": "3406:383:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3826:95:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3843:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3850:3:7",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3855:10:7",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3846:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3846:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3836:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3836:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3836:31:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3883:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3886:4:7",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3876:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3876:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3876:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3907:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3910:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3900:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3900:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3900:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "3794:127:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3971:130:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3981:31:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4000:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4007:4:7",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3996:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3996:16:7"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3985:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4042:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4044:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4044:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4044:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4027:7:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4036:4:7",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "4024:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4024:17:7"
                              },
                              "nodeType": "YulIf",
                              "src": "4021:43:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4073:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4084:7:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4093:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4080:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4080:15:7"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "4073:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3953:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "3963:3:7",
                            "type": ""
                          }
                        ],
                        "src": "3926:175:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4161:325:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4171:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4185:1:7",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "4188:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "4181:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4181:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "4171:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4202:38:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "4232:4:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4238:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4228:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4228:12:7"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "4206:18:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4279:31:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "4281:27:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "4295:6:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4303:4:7",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "4291:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4291:17:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "4281:6:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "4259:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4252:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4252:26:7"
                              },
                              "nodeType": "YulIf",
                              "src": "4249:61:7"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4369:111:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4390:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4397:3:7",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4402:10:7",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "4393:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4393:20:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4383:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4383:31:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4383:31:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4434:1:7",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4437:4:7",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4427:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4427:15:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4427:15:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4462:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4465:4:7",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4455:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4455:15:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4455:15:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "4325:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "4348:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4356:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "4345:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4345:14:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "4322:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4322:38:7"
                              },
                              "nodeType": "YulIf",
                              "src": "4319:161:7"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "4141:4:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "4150:6:7",
                            "type": ""
                          }
                        ],
                        "src": "4106:380:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_contract_IArbitrator(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_decode_available_length_bytes_fromMemory(src, length, end) -> array\n    {\n        let _1 := sub(shl(64, 1), 1)\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, add(memPtr, 0x20), length)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes_fromMemory(add(offset, 0x20), mload(offset), end)\n    }\n    function abi_decode_address_payable_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_contract_IArbitrator(value)\n    }\n    function abi_decode_tuple_t_contract$_IArbitrator_$249t_bytes_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_address_payable_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IArbitrator(value)\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_bytes_fromMemory(add(_2, 32), mload(_2), dataEnd)\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n        value6 := abi_decode_address_payable_fromMemory(add(headStart, 192))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if gt(x_1, sub(0xff, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function abi_encode_tuple_t_stringliteral_e23f3e71c05305a9182237d48ba9b404f0c1c59aaff27a9576fb3eb02eaabde6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"No space left for a new category\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60a06040526000805460ff1916600117905561020060025560106006556007805433610100026001600160a81b03199091161790553480156200004157600080fd5b50604051620044f9380380620044f9833981016040819052620000649162000389565b600384905560048390556005829055600080546001600160a01b0380841661010002610100600160a81b0319909216919091179091558716608052620000ab8587620000b8565b5050505050505062000539565b600754620000cb9060ff16600162000466565b60ff166200011f5760405162461bcd60e51b815260206004820181905260248201527f4e6f207370616365206c65667420666f722061206e65772063617465676f7279604482015260640160405180910390fd5b60075460405160ff909116907f61606860eb6c87306811e2695215385101daab53bd6ab4e9f9049aead9363c7d906200015a9085906200048e565b60405180910390a2600754819060089060ff1660408110620001805762000180620004c3565b01908051906020019062000196929190620001c9565b506007805460ff16906000620001ac83620004d9565b91906101000a81548160ff021916908360ff160217905550505050565b828054620001d790620004fc565b90600052602060002090601f016020900481019282620001fb576000855562000246565b82601f106200021657805160ff191683800117855562000246565b8280016001018555821562000246579182015b828111156200024657825182559160200191906001019062000229565b506200025492915062000258565b5090565b5b8082111562000254576000815560010162000259565b6001600160a01b03811681146200028557600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002bb578181015183820152602001620002a1565b83811115620002cb576000848401525b50505050565b60006001600160401b0380841115620002ee57620002ee62000288565b604051601f8501601f19908116603f0116810190828211818310171562000319576200031962000288565b816040528093508581528686860111156200033357600080fd5b620003438660208301876200029e565b5050509392505050565b600082601f8301126200035f57600080fd5b6200037083835160208501620002d1565b9392505050565b805162000384816200026f565b919050565b600080600080600080600060e0888a031215620003a557600080fd5b8751620003b2816200026f565b60208901519097506001600160401b0380821115620003d057600080fd5b818a0191508a601f830112620003e557600080fd5b620003f68b835160208501620002d1565b975060408a01519150808211156200040d57600080fd5b506200041c8a828b016200034d565b955050606088015193506080880151925060a088015191506200044260c0890162000377565b905092959891949750929550565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111562000486576200048662000450565b019392505050565b6020815260008251806020840152620004af8160408501602087016200029e565b601f01601f19169190910160400192915050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff811415620004f357620004f362000450565b60010192915050565b600181811c908216806200051157607f821691505b602082108114156200053357634e487b7160e01b600052602260045260246000fd5b50919050565b608051613f49620005b0600039600081816105fb01528181610b5f01528181610bed01528181610dd301528181611210015281816113ae0152818161178801528181611bb601528181611cfc015281816120af01528181612245015281816122f4015281816127b801526128b20152613f496000f3fe60806040526004361061031e5760003560e01c806392239dff116101a5578063ba0ec60b116100ec578063d970d18c11610095578063f851a4401161006f578063f851a440146109ad578063fc0ac672146109d2578063fe6ca782146109e8578063ffa1ad74146109fe57600080fd5b8063d970d18c14610962578063dc227fc214610977578063e349ad301461099757600080fd5b8063c9330c0f116100c6578063c9330c0f1461090c578063c94828f01461092c578063d3b476b11461094c57600080fd5b8063ba0ec60b146108ce578063bc0936fd146108e3578063be467604146108f657600080fd5b8063adc7faba1161014e578063b34bfaa811610128578063b34bfaa814610883578063b4c7058114610899578063b7bddc72146108b957600080fd5b8063adc7faba14610815578063af4a914414610835578063b14f2a391461086357600080fd5b8063a509efeb1161017f578063a509efeb146107b5578063a6a7f0eb146107d5578063ab9cd37e146107f557600080fd5b806392239dff1461075557806392e2592514610775578063956dcbd21461079557600080fd5b8063564a565d11610269578063736ed418116102125780637f67bd6c116101ec5780637f67bd6c146106e65780638a9bb02a146107065780638f2839701461073557600080fd5b8063736ed4181461061d5780637597b3cb1461063057806378431ce91461064557600080fd5b806367284f211161024357806367284f21146105a95780636760aeb0146105c957806368871c9c146105e957600080fd5b8063564a565d146104da578063638af3da1461055457806364ff9dfa1461058957600080fd5b806329238089116102cb578063313dab20116102a5578063313dab20146104775780634c55c0001461048d5780634de12db0146104ad57600080fd5b806329238089146104075780632d2c55651461041a578063311a6c561461045757600080fd5b806315f36ebe116102fc57806315f36ebe146103995780631e26de34146103c757806326804bef146103e757600080fd5b806303624fc01461032357806306bcbd731461035457806312b3a2c014610376575b600080fd5b34801561032f57600080fd5b5060075461033d9060ff1681565b60405160ff90911681526020015b60405180910390f35b34801561036057600080fd5b5061037461036f366004613578565b610a47565b005b6103896103843660046135ba565b610b39565b604051901515815260200161034b565b3480156103a557600080fd5b506103b96103b43660046135dd565b611335565b60405190815260200161034b565b3480156103d357600080fd5b506103b96103e23660046135f8565b611399565b3480156103f357600080fd5b506103746104023660046135f8565b611462565b610374610415366004613653565b611529565b34801561042657600080fd5b5060005461043f9061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161034b565b34801561046357600080fd5b506103746104723660046136bf565b61177d565b34801561048357600080fd5b506103b960015481565b34801561049957600080fd5b506103746104a836600461376d565b611a0d565b3480156104b957600080fd5b506104cd6104c83660046135f8565b611b0e565b60405161034b9190613849565b3480156104e657600080fd5b506105436104f53660046135f8565b604960205260009081526040902080546001909101546001600160a01b0382169160ff600160a01b8204811692600160a81b8304821692600160b01b9004909116906001600160501b031685565b60405161034b959493929190613894565b34801561056057600080fd5b5061057461056f3660046135ba565b611bae565b6040805192835260208301919091520161034b565b34801561059557600080fd5b506103b96105a43660046135dd565b611cdb565b3480156105b557600080fd5b506103746105c43660046138d9565b611df4565b3480156105d557600080fd5b506103746105e4366004613963565b611eb8565b3480156105f557600080fd5b5061043f7f000000000000000000000000000000000000000000000000000000000000000081565b61037461062b3660046135dd565b611efd565b34801561063c57600080fd5b506103b9600281565b34801561065157600080fd5b506106a66106603660046135dd565b6048602052600090815260409020546001600160a01b03811690600160a01b810463ffffffff1690600160c01b810466ffffffffffffff1690600160f81b900460ff1684565b604080516001600160a01b03909516855263ffffffff909316602085015266ffffffffffffff9091169183019190915260ff16606082015260800161034b565b3480156106f257600080fd5b506103b96107013660046135f8565b6122db565b34801561071257600080fd5b506107266107213660046136bf565b61236d565b60405161034b9392919061399f565b34801561074157600080fd5b50610374610750366004613a04565b61245d565b34801561076157600080fd5b506103746107703660046135f8565b6124d8565b34801561078157600080fd5b506103746107903660046135f8565b612527565b3480156107a157600080fd5b506103746107b03660046135dd565b612576565b3480156107c157600080fd5b506103b96107d03660046135ba565b6126e3565b3480156107e157600080fd5b506103746107f0366004613a1f565b6128a5565b34801561080157600080fd5b506103746108103660046135dd565b612918565b34801561082157600080fd5b506103746108303660046135f8565b612b4a565b34801561084157600080fd5b50610855610850366004613a6b565b612b99565b60405161034b929190613a8e565b34801561086f57600080fd5b5061037461087e366004613a04565b612d83565b34801561088f57600080fd5b506103b960055481565b3480156108a557600080fd5b506103b96108b4366004613b20565b612dfc565b3480156108c557600080fd5b50610374612e86565b3480156108da57600080fd5b50610374612eeb565b6103746108f13660046135dd565b612f1b565b34801561090257600080fd5b506103b960025481565b34801561091857600080fd5b50610374610927366004613a6b565b613055565b34801561093857600080fd5b506103746109473660046135f8565b6130bc565b34801561095857600080fd5b506103b960035481565b34801561096e57600080fd5b506103b9602081565b34801561098357600080fd5b506103b9610992366004613b4a565b61310b565b3480156109a357600080fd5b506103b960045481565b3480156109b957600080fd5b5060075461043f9061010090046001600160a01b031681565b3480156109de57600080fd5b506103b960065481565b3480156109f457600080fd5b506103b961040081565b348015610a0a57600080fd5b506104cd6040518060400160405280600581526020017f312e322e3000000000000000000000000000000000000000000000000000000081525081565b6001600160501b038216600090815260486020526040902080546001600160a01b03163314610ae35760405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920617574686f722063616e207472616e73666572206f776e6572736860448201527f69702e000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03831690811782556040517fdfc39691aec87dc6aa51ff70c0e592f260c54d2ed6c64e8c4c2306da0eec872b90600090a2505050565b6000828152604960205260408082209051631c3db16d60e01b81526004810185905282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c3db16d90602401602060405180830381865afa158015610bae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd29190613b85565b6002811115610be357610be361385c565b90506000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663afe15cfb8a6040518263ffffffff1660e01b8152600401610c3991815260200190565b6040805180830381865afa158015610c55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c799190613b9e565b915091506000856002811115610c9157610c9161385c565b896002811115610ca357610ca361385c565b1415610d2757814210610d1e5760405162461bcd60e51b815260206004820152602e60248201527f46756e64696e67206d757374206265206d6164652077697468696e207468652060448201527f61707065616c20706572696f642e0000000000000000000000000000000000006064820152608401610ada565b50600454610dcf565b60025461040090610d388585613bd8565b610d429190613bef565b610d4c9190613c0e565b610d569084613c30565b4210610dca5760405162461bcd60e51b815260206004820152603960248201527f46756e64696e67206d757374206265206d6164652077697468696e207468652060448201527f66697273742068616c662061707065616c20706572696f642e000000000000006064820152608401610ada565b506005545b86547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f23f16e6908c90600890600160a81b900460ff1660408110610e2157610e21613c48565b016040518363ffffffff1660e01b8152600401610e3f929190613d39565b602060405180830381865afa158015610e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e809190613b85565b9450610400610e8f8287613bef565b610e999190613c0e565b610ea39086613c30565b600288015490945089935060009250610ebf9150600190613bd8565b90506000866002018281548110610ed857610ed8613c48565b9060005260206000209060060201905080600101836002811115610efe57610efe61385c565b60038110610f0e57610f0e613c48565b602081049091015460ff601f9092166101000a90041615610f975760405162461bcd60e51b815260206004820152602160248201527f41707065616c206665652068617320616c7265616479206265656e207061696460448201527f2e000000000000000000000000000000000000000000000000000000000000006064820152608401610ada565b60008082600201856002811115610fb057610fb061385c565b60038110610fc057610fc0613c48565b01549050858110610fd45760009150610ff8565b34610fdf8288613bd8565b11610ff357610fee8187613bd8565b610ff5565b345b91505b50336001600160a01b0316838c7f2b4ef80a862edc5616a4e61c11f4a368f33323faca91fa7635d48b85c183e66a8d85604051611036929190613d5a565b60405180910390a433600090815260208390526040902081908560028111156110615761106161385c565b6003811061107157611071613c48565b0160008282546110819190613c30565b92505081905550808260020185600281111561109f5761109f61385c565b600381106110af576110af613c48565b0160008282546110bf9190613c30565b9250508190555084826002018560028111156110dd576110dd61385c565b600381106110ed576110ed613c48565b0154106111bb578160020184600281111561110a5761110a61385c565b6003811061111a5761111a613c48565b015482600501600082825461112f9190613c30565b909155506001905082810185600281111561114c5761114c61385c565b6003811061115c5761115c613c48565b602091828204019190066101000a81548160ff02191690831515021790555089600281111561118d5761118d61385c565b60405184908d907fb5681f036910f38d8c2fa06f2cbedc227ecf03d7c4a358ee9096197b15ff8fd090600090a45b6001820154610100900460ff1680156111de5750600182015462010000900460ff165b156112b15760028801805460010181556000908152600583018054889290611207908490613bd8565b909155505087547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906349912f889088908e90600890600160a81b900460ff166040811061126057611260613c48565b016040518463ffffffff1660e01b815260040161127e929190613d39565b6000604051808303818588803b15801561129757600080fd5b505af11580156112ab573d6000803e3d6000fd5b50505050505b60006112bd8234613bd8565b11156112e957336108fc6112d18334613bd8565b6040518115909202916000818181858888f150505050505b816001018460028111156112ff576112ff61385c565b6003811061130f5761130f613c48565b602081049091015460ff601f9092166101000a9004169850505050505050505092915050565b6000805b604860008461134781613d75565b6001600160501b03919091168252602082019290925260400160002080549194509150600160c01b900466ffffffffffffff1661133957611389600184613d9c565b6001600160501b03169392505050565b600081815260496020526040808220805490917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163f23f16e6918691600891600160a81b90910460ff169081106113fc576113fc613c48565b016040518363ffffffff1660e01b815260040161141a929190613d39565b602060405180830381865afa158015611437573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145b9190613b85565b9392505050565b60075461010090046001600160a01b0316331461147e57600080fd5b6101008111156114f65760405162461bcd60e51b815260206004820152603660248201527f5468652074617820726174652063616e206f6e6c7920626520696e637265617360448201527f65642062792061206d6178696d756d206f6620323525000000000000000000006064820152608401610ada565b600681905560405181907f5100ab374784a62034356f9af3b71ea723c1e89beb5627c6c1dacea1117250b890600090a250565b60075460ff908116908316106115815760405162461bcd60e51b815260206004820152601c60248201527f546869732063617465676f727920646f6573206e6f74206578697374000000006044820152606401610ada565b60005b604860008361159281613d75565b6001600160501b03919091168252602082019290925260400160002080549193509150600160c01b900466ffffffffffffff166115845780547fff00000000000000ffffffff000000000000000000000000000000000000000016337fff00000000000000ffffffffffffffffffffffffffffffffffffffffffffffff1617600160c01b3460201c66ffffffffffffff9081168202929092177effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160f81b60ff8716021780845504166116ce5760405162461bcd60e51b815260206004820152603960248201527f596f752063616e277420696e697469616c697a6520616e2061727469636c652060448201527f776974686f75742070757474696e67206120626f756e74792e000000000000006064820152608401610ada565b60006116db600184613d9c565b6001600160501b031690507f4f9a2b734331c583faf3f19d1feb5f08b742e016a56fb61379950beaf3e223418686868460405161171b9493929190613ded565b60405180910390a1815460408051838152600160c01b909204602090811b6affffffffffffff0000000016908301527fdf5fc410d3381cc7f0a7fe3af72f4e3cf53ef5787f20554af69035a950e1b2e3910160405180910390a1505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146117b257600080fd5b60008281526049602052604081206002810180549192916117d590600190613bd8565b815481106117e5576117e5613c48565b60009182526020822060016006929092020190810154909250610100900460ff161561181357506001611829565b6001820154610100900460ff1615611829575060025b60008082600281111561183e5761183e61385c565b141561185b578460028111156118565761185661385c565b61185d565b815b8454909150819085907fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b83600281111561189f5761189f61385c565b021790555060018401546001600160501b0316600081815260486020526040902060028360028111156118d4576118d461385c565b141561198b5780547fff00000000000000ffffffffffffffffffffffffffffffffffffffffffffffff811682556040516001600160501b0384168152600160c01b909104602090811b6affffffffffffff0000000016917f8271992f9b3a3f30dc2a464982dc4a136e7357403462443a171a0fb0c6ccc265910160405180910390a16000898152604960205260408082205490516001600160a01b039091169183156108fc02918491818181858888f15050505050505b805463ffffffff60a01b1916815585547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b178655604051889033907f394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e75622276906119fb908b815260200190565b60405180910390a35050505050505050565b600754611a1e9060ff166001613e17565b60ff16611a6d5760405162461bcd60e51b815260206004820181905260248201527f4e6f207370616365206c65667420666f722061206e65772063617465676f72796044820152606401610ada565b60075460405160ff909116907f61606860eb6c87306811e2695215385101daab53bd6ab4e9f9049aead9363c7d90611aa6908590613849565b60405180910390a2600754819060089060ff1660408110611ac957611ac9613c48565b019080519060200190611add92919061348e565b506007805460ff16906000611af183613e3c565b91906101000a81548160ff021916908360ff160217905550505050565b60088160408110611b1e57600080fd5b018054909150611b2d90613c5e565b80601f0160208091040260200160405190810160405280929190818152602001828054611b5990613c5e565b8015611ba65780601f10611b7b57610100808354040283529160200191611ba6565b820191906000526020600020905b815481529060010190602001808311611b8957829003601f168201915b505050505081565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663afe15cfb876040518263ffffffff1660e01b8152600401611c0291815260200190565b6040805180830381865afa158015611c1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c429190613b9e565b9150915060006104006002548484611c5a9190613bd8565b611c649190613bef565b611c6e9190613c0e565b611c789084613c30565b90506000866002811115611c8e57611c8e61385c565b611c97896122db565b6002811115611ca857611ca861385c565b6002811115611cb957611cb961385c565b14905080611cc8578382611ccb565b83835b95509550505050505b9250929050565b6001600160501b0381166000908152604860205260408082208054909183917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163f7434ea991600891600160f81b90910460ff16908110611d4857611d48613c48565b016040518263ffffffff1660e01b8152600401611d659190613e5c565b602060405180830381865afa158015611d82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da69190613b85565b600654835491925060009161040091611dd591600160c01b900460201b6affffffffffffff0000000016613bef565b611ddf9190613c0e565b9050611deb8183613c30565b95945050505050565b60005b81811015611eb15760005b838383818110611e1457611e14613c48565b9050602002810190611e269190613e6f565b9050811015611e9e576000848484818110611e4357611e43613c48565b9050602002810190611e559190613e6f565b83818110611e6557611e65613c48565b905060200201351115611e8c57611e8a8686848460028111156109925761099261385c565b505b80611e9681613eb9565b915050611e02565b5080611ea981613eb9565b915050611df7565b5050505050565b6000838152604960205260408120600281015490915b81811015611ef557611ee28686838761310b565b5080611eed81613eb9565b915050611ece565b505050505050565b6001600160501b03811660009081526048602052604090208054600160c01b900466ffffffffffffff16611f735760405162461bcd60e51b815260206004820152601560248201527f4e6f7468696e6720746f206368616c6c656e67652e00000000000000000000006044820152606401610ada565b8054600160a01b900463ffffffff9081161415611fd25760405162461bcd60e51b815260206004820152601e60248201527f546865726520697320616e206f6e676f696e67206368616c6c656e67652e00006044820152606401610ada565b805463ffffffff60a01b191677ffffffff000000000000000000000000000000000000000017815561200382611cdb565b3410156120525760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e742066756e647320746f206368616c6c656e67652e6044820152606401610ada565b60065481546000916104009161207f9190600160c01b900460201b6affffffffffffff0000000016613bef565b6120899190613c0e565b9050806001600082825461209d9190613c30565b90915550600090506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663c13517e16120de8434613bd8565b8554600290600890600160f81b900460ff166040811061210057612100613c48565b016040518463ffffffff1660e01b815260040161211e929190613d39565b60206040518083038185885af115801561213c573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906121619190613b85565b60008181526049602090815260409182902080543373ffffffffffffffffffffffffffffffffffffffff1982168117835560028301805460019081019091558301805469ffffffffffffffffffff19166001600160501b038c1617905588547fffffffffffffffffffff00ff00000000000000000000000000000000000000009092167fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff90911617600160f81b9182900460ff908116600160a81b029190911790925587548451919004909116815290810183905291925082916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016917f74baab670a4015ab2f1b467c5252a96141a2573f2908e58a92081e80d3cfde3d910160405180910390a360408051338152602081018390526001600160501b038616917f1e5338a1fb672aa84963dc9f9e4afd009b4ed726debb09224bf4d02a6c68b4e4910160405180910390a250505050565b604051631c3db16d60e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c3db16d90602401602060405180830381865afa158015612343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123679190613b85565b92915050565b612375613512565b61237d613512565b60008481526049602052604081206002018054829190869081106123a3576123a3613c48565b906000526020600020906006020190508060010181600201826005015482600380602002604051908101604052809291908260038015612418576020028201916000905b825461010083900a900460ff1615158152602060019283018181049485019490930390920291018084116123e75790505b505060408051606081019182905294975086935060039250905082845b8154815260200190600101908083116124355750505050509150935093509350509250925092565b60075461010090046001600160a01b0316331461247957600080fd5b6007805474ffffffffffffffffffffffffffffffffffffffff0019166101006001600160a01b038416908102919091179091556040517f0c2515f25186df02132ad46f01e062c3b8982c8de57fa2b1b0a280d8e810f39b90600090a250565b60075461010090046001600160a01b031633146124f457600080fd5b600581905560405181907f505f3bf1e426c82f14f7c9cfb2d31ef5b7bb76428e16bd90dabec113e3d4a2bc90600090a250565b60075461010090046001600160a01b0316331461254357600080fd5b600381905560405181907f207e19e347becb468ef02d25790188e4d5da0fe37176d3bbb7940168ec5d613690600090a250565b6001600160501b038116600090815260486020526040902080546001600160a01b031633146125f35760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920617574686f722063616e20776974686472617720616e206172746960448201526331b6329760e11b6064820152608401610ada565b8054600160a01b900463ffffffff16156126755760405162461bcd60e51b815260206004820152603560248201527f5769746864726177616c20616c726561647920696e69746961746564206f722060448201527f74686572652069732061206368616c6c656e67652e00000000000000000000006064820152608401610ada565b6003546126829042613c30565b815463ffffffff91909116600160a01b0263ffffffff60a01b199091161781556040516001600160501b03831681527f416c1ad2b96c356f3bbd35431f86cce449ddbb4f8c3755ea9d2776b04c2e9c8f906020015b60405180910390a15050565b60008281526049602052604081206002810154829061270490600190613bd8565b9050600082600201828154811061271d5761271d613c48565b9060005260206000209060060201905060008560028111156127415761274161385c565b61274a886122db565b600281111561275b5761275b61385c565b600281111561276c5761276c61385c565b14905060008161277e57600554612782565b6004545b905060008360020188600281111561279c5761279c61385c565b600381106127ac576127ac613c48565b015486549091506000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f23f16e6908c90600890600160a81b900460ff166040811061280657612806613c48565b016040518363ffffffff1660e01b8152600401612824929190613d39565b602060405180830381865afa158015612841573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128659190613b85565b905060006104006128768584613bef565b6128809190613c0e565b61288a9083613c30565b90506128968382613bd8565b9b9a5050505050505050505050565b336001600160a01b0316837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c858560405161290b929190613ed4565b60405180910390a4505050565b6001600160501b038116600090815260486020526040902080546001600160a01b031633146129955760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920617574686f722063616e20776974686472617720616e206172746960448201526331b6329760e11b6064820152608401610ada565b8054600160a01b900463ffffffff16612a165760405162461bcd60e51b815260206004820152602660248201527f596f75206e65656420746f20696e697469617465207769746864726177616c2060448201527f66697273742e00000000000000000000000000000000000000000000000000006064820152608401610ada565b805442600160a01b90910463ffffffff161115612a9b5760405162461bcd60e51b815260206004820152603f60248201527f596f75206e65656420746f207761697420666f722074696d656c6f636b206f7260448201527f207761697420756e74696c20746865206368616c6c656e676520656e64732e006064820152608401610ada565b80547fff0000000000000000000000ffffffffffffffffffffffffffffffffffffffff81168255604051600160c01b90910460201b6affffffffffffff00000000169033906108fc8315029083906000818181858888f19350505050158015612b08573d6000803e3d6000fd5b506040516001600160501b03841681527f70b41d8cca762ceec66d93f536dbb31f5cabbf1901f862508b9438de54fce4eb9060200160405180910390a1505050565b60075461010090046001600160a01b03163314612b6657600080fd5b600481905560405181907f8df75282265171690a1298cf028f5e3c7d8d42313394a4f25d4aeea6c1ea62cf90600090a250565b6000828152604960205260408120805460609190600160b01b900460ff16612bc5576000925050611cd4565b60028101548154600160a01b900460ff168167ffffffffffffffff811115612bef57612bef6136e1565b604051908082528060200260200182016040528015612c2257816020015b6060815260200190600190039081612c0d5790505b50935060005b82811015612d7857612c3c60026001613c30565b67ffffffffffffffff811115612c5457612c546136e1565b604051908082528060200260200182016040528015612c7d578160200160208202803683370190505b50858281518110612c9057612c90613c48565b60200260200101819052506000846002018281548110612cb257612cb2613c48565b9060005260206000209060060201905060005b60028111612d63576000612cec838b846002811115612ce657612ce661385c565b8861326f565b90508015612d5057612d0b838b846002811115612ce657612ce661385c565b612d15908a613c30565b985080888581518110612d2a57612d2a613c48565b60200260200101518381518110612d4357612d43613c48565b6020026020010181815250505b5080612d5b81613eb9565b915050612cc5565b50508080612d7090613eb9565b915050612c28565b505050509250929050565b60075461010090046001600160a01b03163314612d9f57600080fd5b6000805474ffffffffffffffffffffffffffffffffffffffff0019166101006001600160a01b03841690810291909117825560405190917f8a3509a4057c89a5993a4a3140c2ebf7e829d325d8998eaa6c48adcff98b2cef91a250565b600080836002811115612e1157612e1161385c565b836002811115612e2357612e2361385c565b1490506103e8600082612e3857600554612e3c565b6004545b9050612e4a61040082613c30565b82610400600554600454612e5e9190613c30565b612e689190613c30565b612e729190613bef565b612e7c9190613c0e565b9695505050505050565b60018054600091829055815460405191926101009091046001600160a01b0316916108fc84150291849190818181858888f150506040518493507fb315332b30dc40d1e51def214ce42d93a73bd0c17b08db04b34f10736bb2f06f925060009150a250565b60075461010090046001600160a01b03163314612f0757600080fd5b6000805460ff19811660ff90911615179055565b6001600160501b038116600090815260486020526040902080546001600160a01b03163314612fb25760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c7920617574686f722063616e20696e63726561736520626f756e74792060448201527f6f6620616e2061727469636c652e0000000000000000000000000000000000006064820152608401610ada565b80543460201c908290601890612fd9908490600160c01b900466ffffffffffffff16613ee8565b82546101009290920a66ffffffffffffff818102199093169190921691909102179055508054604080516001600160501b0385168152600160c01b909204602090811b6affffffffffffff0000000016908301527fdf5fc410d3381cc7f0a7fe3af72f4e3cf53ef5787f20554af69035a950e1b2e391016126d7565b6000828152604960205260408120600281015490915b81811015611eb15760005b600281116130a9576130968686848460028111156109925761099261385c565b50806130a181613eb9565b915050613076565b50806130b481613eb9565b91505061306b565b60075461010090046001600160a01b031633146130d857600080fd5b600281905560405181907fbf39faa024d2f97599a0095e84098ee2171b6681738416c0030f442ba956d52b90600090a250565b60008481526049602052604081208054600160b01b900460ff166131715760405162461bcd60e51b815260206004820152601760248201527f5468657265206973206e6f2072756c696e67207965742e0000000000000000006044820152606401610ada565b600081600201858154811061318857613188613c48565b906000526020600020906006020190506131b58187868560000160149054906101000a900460ff1661326f565b92508215613265576001600160a01b03861660009081526020829052604081208560028111156131e7576131e761385c565b600381106131f7576131f7613c48565b01556040516001600160a01b0387169084156108fc029085906000818181858888f1935050505050856001600160a01b031685887fff2b7c936d6023fea901b3455cefc23b124c1ca5997dc5b48c461fd20984289d878760405161325c929190613d5a565b60405180910390a45b5050949350505050565b600082600186018160028111156132885761328861385c565b6003811061329857613298613c48565b602081049091015460ff601f9092166101000a9004166132f5576001600160a01b03851660009081526020879052604090208160028111156132dc576132dc61385c565b600381106132ec576132ec613c48565b01549150613485565b8260028111156133075761330761385c565b8460028111156133195761331961385c565b14156133d9576000866002018260028111156133375761333761385c565b6003811061334757613347613c48565b0154116133555760006133d2565b8560020181600281111561336b5761336b61385c565b6003811061337b5761337b613c48565b015460058701546001600160a01b03871660009081526020899052604090208360028111156133ac576133ac61385c565b600381106133bc576133bc613c48565b01546133c89190613bef565b6133d29190613c0e565b9150613485565b856001018360028111156133ef576133ef61385c565b600381106133ff576133ff613c48565b602081049091015460ff601f9092166101000a900416613485576004860154600387015461342d9190613c30565b60058701546001600160a01b038716600090815260208990526040902083600281111561345c5761345c61385c565b6003811061346c5761346c613c48565b01546134789190613bef565b6134829190613c0e565b91505b50949350505050565b82805461349a90613c5e565b90600052602060002090601f0160209004810192826134bc5760008555613502565b82601f106134d557805160ff1916838001178555613502565b82800160010185558215613502579182015b828111156135025782518255916020019190600101906134e7565b5061350e929150613530565b5090565b60405180606001604052806003906020820280368337509192915050565b5b8082111561350e5760008155600101613531565b80356001600160501b038116811461355c57600080fd5b919050565b80356001600160a01b038116811461355c57600080fd5b6000806040838503121561358b57600080fd5b61359483613545565b91506135a260208401613561565b90509250929050565b80356003811061355c57600080fd5b600080604083850312156135cd57600080fd5b823591506135a2602084016135ab565b6000602082840312156135ef57600080fd5b61145b82613545565b60006020828403121561360a57600080fd5b5035919050565b60008083601f84011261362357600080fd5b50813567ffffffffffffffff81111561363b57600080fd5b602083019150836020828501011115611cd457600080fd5b6000806000806060858703121561366957600080fd5b843567ffffffffffffffff81111561368057600080fd5b61368c87828801613611565b909550935050602085013560ff811681146136a657600080fd5b91506136b460408601613545565b905092959194509250565b600080604083850312156136d257600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115613712576137126136e1565b604051601f8501601f19908116603f0116810190828211818310171561373a5761373a6136e1565b8160405280935085815286868601111561375357600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561378057600080fd5b823567ffffffffffffffff8082111561379857600080fd5b818501915085601f8301126137ac57600080fd5b6137bb868335602085016136f7565b935060208501359150808211156137d157600080fd5b508301601f810185136137e357600080fd5b6137f2858235602084016136f7565b9150509250929050565b6000815180845260005b8181101561382257602081850181015186830182015201613806565b81811115613834576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061145b60208301846137fc565b634e487b7160e01b600052602160045260246000fd5b6003811061389057634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038616815260a081016138b16020830187613872565b60ff94909416604082015291151560608301526001600160501b031660809091015292915050565b600080600080606085870312156138ef57600080fd5b843593506138ff60208601613561565b9250604085013567ffffffffffffffff8082111561391c57600080fd5b818701915087601f83011261393057600080fd5b81358181111561393f57600080fd5b8860208260051b850101111561395457600080fd5b95989497505060200194505050565b60008060006060848603121561397857600080fd5b8335925061398860208501613561565b9150613996604085016135ab565b90509250925092565b60e08101818560005b60038110156139c957815115158352602092830192909101906001016139a8565b505050606082018460005b60038110156139f35781518352602092830192909101906001016139d4565b5050508260c0830152949350505050565b600060208284031215613a1657600080fd5b61145b82613561565b600080600060408486031215613a3457600080fd5b83359250602084013567ffffffffffffffff811115613a5257600080fd5b613a5e86828701613611565b9497909650939450505050565b60008060408385031215613a7e57600080fd5b823591506135a260208401613561565b600060408201848352602060408185015281855180845260608601915060608160051b87010193508287016000805b83811015613b1157888703605f19018552825180518089529087019087890190845b81811015613afb57835183529289019291890191600101613adf565b5090985050509385019391850191600101613abd565b50949998505050505050505050565b60008060408385031215613b3357600080fd5b613b3c836135ab565b91506135a2602084016135ab565b60008060008060808587031215613b6057600080fd5b84359350613b7060208601613561565b9250604085013591506136b4606086016135ab565b600060208284031215613b9757600080fd5b5051919050565b60008060408385031215613bb157600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b600082821015613bea57613bea613bc2565b500390565b6000816000190483118215151615613c0957613c09613bc2565b500290565b600082613c2b57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115613c4357613c43613bc2565b500190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680613c7257607f821691505b60208210811415613c9357634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c9080831680613cb357607f831692505b6020808410821415613cd557634e487b7160e01b600052602260045260246000fd5b83885260208801828015613cf05760018114613d0157613d2c565b60ff19871682528282019750613d2c565b60008981526020902060005b87811015613d2657815484820152908601908401613d0d565b83019850505b5050505050505092915050565b828152604060208201526000613d526040830184613c99565b949350505050565b60408101613d688285613872565b8260208301529392505050565b60006001600160501b0380831681811415613d9257613d92613bc2565b6001019392505050565b60006001600160501b0383811690831681811015613dbc57613dbc613bc2565b039392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b606081526000613e01606083018688613dc4565b60ff949094166020830152506040015292915050565b600060ff821660ff84168060ff03821115613e3457613e34613bc2565b019392505050565b600060ff821660ff811415613e5357613e53613bc2565b60010192915050565b60208152600061145b6020830184613c99565b6000808335601e19843603018112613e8657600080fd5b83018035915067ffffffffffffffff821115613ea157600080fd5b6020019150600581901b3603821315611cd457600080fd5b6000600019821415613ecd57613ecd613bc2565b5060010190565b602081526000613d52602083018486613dc4565b600066ffffffffffffff808316818516808303821115613f0a57613f0a613bc2565b0194935050505056fea2646970667358221220a906a41ab294bd1772920ea2f89288b3be011f722e02fbdcd5fd7de216c3d2f564736f6c634300080a0033",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x200 PUSH1 0x2 SSTORE PUSH1 0x10 PUSH1 0x6 SSTORE PUSH1 0x7 DUP1 SLOAD CALLER PUSH2 0x100 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x44F9 CODESIZE SUB DUP1 PUSH3 0x44F9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x64 SWAP2 PUSH3 0x389 JUMP JUMPDEST PUSH1 0x3 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP4 SWAP1 SSTORE PUSH1 0x5 DUP3 SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP8 AND PUSH1 0x80 MSTORE PUSH3 0xAB DUP6 DUP8 PUSH3 0xB8 JUMP JUMPDEST POP POP POP POP POP POP POP PUSH3 0x539 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH3 0xCB SWAP1 PUSH1 0xFF AND PUSH1 0x1 PUSH3 0x466 JUMP JUMPDEST PUSH1 0xFF AND PUSH3 0x11F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207370616365206C65667420666F722061206E65772063617465676F7279 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x61606860EB6C87306811E2695215385101DAAB53BD6AB4E9F9049AEAD9363C7D SWAP1 PUSH3 0x15A SWAP1 DUP6 SWAP1 PUSH3 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x7 SLOAD DUP2 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH3 0x180 JUMPI PUSH3 0x180 PUSH3 0x4C3 JUMP JUMPDEST ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x196 SWAP3 SWAP2 SWAP1 PUSH3 0x1C9 JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH3 0x1AC DUP4 PUSH3 0x4D9 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1D7 SWAP1 PUSH3 0x4FC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1FB JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x246 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x216 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x246 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x246 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x246 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x229 JUMP JUMPDEST POP PUSH3 0x254 SWAP3 SWAP2 POP PUSH3 0x258 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x254 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x259 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2BB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x2A1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2CB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 GT ISZERO PUSH3 0x2EE JUMPI PUSH3 0x2EE PUSH3 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x319 JUMPI PUSH3 0x319 PUSH3 0x288 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH3 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x343 DUP7 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x29E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x370 DUP4 DUP4 MLOAD PUSH1 0x20 DUP6 ADD PUSH3 0x2D1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH3 0x384 DUP2 PUSH3 0x26F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x3B2 DUP2 PUSH3 0x26F JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD SWAP1 SWAP8 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3F6 DUP12 DUP4 MLOAD PUSH1 0x20 DUP6 ADD PUSH3 0x2D1 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x41C DUP11 DUP3 DUP12 ADD PUSH3 0x34D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 DUP9 ADD MLOAD SWAP4 POP PUSH1 0x80 DUP9 ADD MLOAD SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD SWAP2 POP PUSH3 0x442 PUSH1 0xC0 DUP10 ADD PUSH3 0x377 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH3 0x486 JUMPI PUSH3 0x486 PUSH3 0x450 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x4AF DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x29E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH3 0x4F3 JUMPI PUSH3 0x4F3 PUSH3 0x450 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x511 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x533 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3F49 PUSH3 0x5B0 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x5FB ADD MSTORE DUP2 DUP2 PUSH2 0xB5F ADD MSTORE DUP2 DUP2 PUSH2 0xBED ADD MSTORE DUP2 DUP2 PUSH2 0xDD3 ADD MSTORE DUP2 DUP2 PUSH2 0x1210 ADD MSTORE DUP2 DUP2 PUSH2 0x13AE ADD MSTORE DUP2 DUP2 PUSH2 0x1788 ADD MSTORE DUP2 DUP2 PUSH2 0x1BB6 ADD MSTORE DUP2 DUP2 PUSH2 0x1CFC ADD MSTORE DUP2 DUP2 PUSH2 0x20AF ADD MSTORE DUP2 DUP2 PUSH2 0x2245 ADD MSTORE DUP2 DUP2 PUSH2 0x22F4 ADD MSTORE DUP2 DUP2 PUSH2 0x27B8 ADD MSTORE PUSH2 0x28B2 ADD MSTORE PUSH2 0x3F49 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x31E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x92239DFF GT PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xBA0EC60B GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xD970D18C GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF851A440 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x9AD JUMPI DUP1 PUSH4 0xFC0AC672 EQ PUSH2 0x9D2 JUMPI DUP1 PUSH4 0xFE6CA782 EQ PUSH2 0x9E8 JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x9FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD970D18C EQ PUSH2 0x962 JUMPI DUP1 PUSH4 0xDC227FC2 EQ PUSH2 0x977 JUMPI DUP1 PUSH4 0xE349AD30 EQ PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC9330C0F GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xC9330C0F EQ PUSH2 0x90C JUMPI DUP1 PUSH4 0xC94828F0 EQ PUSH2 0x92C JUMPI DUP1 PUSH4 0xD3B476B1 EQ PUSH2 0x94C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBA0EC60B EQ PUSH2 0x8CE JUMPI DUP1 PUSH4 0xBC0936FD EQ PUSH2 0x8E3 JUMPI DUP1 PUSH4 0xBE467604 EQ PUSH2 0x8F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xADC7FABA GT PUSH2 0x14E JUMPI DUP1 PUSH4 0xB34BFAA8 GT PUSH2 0x128 JUMPI DUP1 PUSH4 0xB34BFAA8 EQ PUSH2 0x883 JUMPI DUP1 PUSH4 0xB4C70581 EQ PUSH2 0x899 JUMPI DUP1 PUSH4 0xB7BDDC72 EQ PUSH2 0x8B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xADC7FABA EQ PUSH2 0x815 JUMPI DUP1 PUSH4 0xAF4A9144 EQ PUSH2 0x835 JUMPI DUP1 PUSH4 0xB14F2A39 EQ PUSH2 0x863 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA509EFEB GT PUSH2 0x17F JUMPI DUP1 PUSH4 0xA509EFEB EQ PUSH2 0x7B5 JUMPI DUP1 PUSH4 0xA6A7F0EB EQ PUSH2 0x7D5 JUMPI DUP1 PUSH4 0xAB9CD37E EQ PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x92239DFF EQ PUSH2 0x755 JUMPI DUP1 PUSH4 0x92E25925 EQ PUSH2 0x775 JUMPI DUP1 PUSH4 0x956DCBD2 EQ PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x564A565D GT PUSH2 0x269 JUMPI DUP1 PUSH4 0x736ED418 GT PUSH2 0x212 JUMPI DUP1 PUSH4 0x7F67BD6C GT PUSH2 0x1EC JUMPI DUP1 PUSH4 0x7F67BD6C EQ PUSH2 0x6E6 JUMPI DUP1 PUSH4 0x8A9BB02A EQ PUSH2 0x706 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x736ED418 EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x7597B3CB EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0x78431CE9 EQ PUSH2 0x645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67284F21 GT PUSH2 0x243 JUMPI DUP1 PUSH4 0x67284F21 EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0x6760AEB0 EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0x68871C9C EQ PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x564A565D EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x638AF3DA EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0x64FF9DFA EQ PUSH2 0x589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29238089 GT PUSH2 0x2CB JUMPI DUP1 PUSH4 0x313DAB20 GT PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x313DAB20 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0x4C55C000 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x4DE12DB0 EQ PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29238089 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x2D2C5565 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x311A6C56 EQ PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x15F36EBE GT PUSH2 0x2FC JUMPI DUP1 PUSH4 0x15F36EBE EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x1E26DE34 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0x26804BEF EQ PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3624FC0 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x6BCBD73 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x12B3A2C0 EQ PUSH2 0x376 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x33D SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x3578 JUMP JUMPDEST PUSH2 0xA47 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x389 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x1399 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x415 CALLDATASIZE PUSH1 0x4 PUSH2 0x3653 JUMP JUMPDEST PUSH2 0x1529 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x43F SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x36BF JUMP JUMPDEST PUSH2 0x177D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x376D JUMP JUMPDEST PUSH2 0x1A0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CD PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x3849 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x543 PUSH2 0x4F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0xA8 SHL DUP4 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV SWAP1 SWAP2 AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3894 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x574 PUSH2 0x56F CALLDATASIZE PUSH1 0x4 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x1BAE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x1CDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x5C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x38D9 JUMP JUMPDEST PUSH2 0x1DF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x5E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3963 JUMP JUMPDEST PUSH2 0x1EB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43F PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x62B CALLDATASIZE PUSH1 0x4 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x1EFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x2 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A6 PUSH2 0x660 CALLDATASIZE PUSH1 0x4 PUSH2 0x35DD JUMP JUMPDEST PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL DUP2 DIV PUSH7 0xFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH7 0xFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x701 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x22DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x726 PUSH2 0x721 CALLDATASIZE PUSH1 0x4 PUSH2 0x36BF JUMP JUMPDEST PUSH2 0x236D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x399F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x750 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A04 JUMP JUMPDEST PUSH2 0x245D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x770 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x24D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x790 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x2527 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x7B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x2576 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x7D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x26E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x7F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A1F JUMP JUMPDEST PUSH2 0x28A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x810 CALLDATASIZE PUSH1 0x4 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x2918 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x830 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x2B4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x855 PUSH2 0x850 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A6B JUMP JUMPDEST PUSH2 0x2B99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP3 SWAP2 SWAP1 PUSH2 0x3A8E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x87E CALLDATASIZE PUSH1 0x4 PUSH2 0x3A04 JUMP JUMPDEST PUSH2 0x2D83 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x8B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B20 JUMP JUMPDEST PUSH2 0x2DFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x2E86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x2EEB JUMP JUMPDEST PUSH2 0x374 PUSH2 0x8F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x2F1B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x918 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x927 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A6B JUMP JUMPDEST PUSH2 0x3055 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x947 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x30BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x20 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x983 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x992 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B4A JUMP JUMPDEST PUSH2 0x310B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x43F SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x400 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E322E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F722063616E207472616E73666572206F776E65727368 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x69702E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD PUSH32 0xDFC39691AEC87DC6AA51FF70C0E592F260C54D2ED6C64E8C4C2306DA0EEC872B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH4 0x1C3DB16D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE DUP3 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x1C3DB16D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD2 SWAP2 SWAP1 PUSH2 0x3B85 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBE3 JUMPI PUSH2 0xBE3 PUSH2 0x385C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAFE15CFB DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC39 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC79 SWAP2 SWAP1 PUSH2 0x3B9E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC91 PUSH2 0x385C JUMP JUMPDEST DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCA3 JUMPI PUSH2 0xCA3 PUSH2 0x385C JUMP JUMPDEST EQ ISZERO PUSH2 0xD27 JUMPI DUP2 TIMESTAMP LT PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E64696E67206D757374206265206D6164652077697468696E2074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61707065616C20706572696F642E000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x400 SWAP1 PUSH2 0xD38 DUP6 DUP6 PUSH2 0x3BD8 JUMP JUMPDEST PUSH2 0xD42 SWAP2 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0xD4C SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST PUSH2 0xD56 SWAP1 DUP5 PUSH2 0x3C30 JUMP JUMPDEST TIMESTAMP LT PUSH2 0xDCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E64696E67206D757374206265206D6164652077697468696E2074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x66697273742068616C662061707065616C20706572696F642E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST POP PUSH1 0x5 SLOAD JUMPDEST DUP7 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF23F16E6 SWAP1 DUP13 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0xE21 JUMPI PUSH2 0xE21 PUSH2 0x3C48 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3F SWAP3 SWAP2 SWAP1 PUSH2 0x3D39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE80 SWAP2 SWAP1 PUSH2 0x3B85 JUMP JUMPDEST SWAP5 POP PUSH2 0x400 PUSH2 0xE8F DUP3 DUP8 PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0xE99 SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST PUSH2 0xEA3 SWAP1 DUP7 PUSH2 0x3C30 JUMP JUMPDEST PUSH1 0x2 DUP9 ADD SLOAD SWAP1 SWAP5 POP DUP10 SWAP4 POP PUSH1 0x0 SWAP3 POP PUSH2 0xEBF SWAP2 POP PUSH1 0x1 SWAP1 PUSH2 0x3BD8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x2 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xED8 JUMPI PUSH2 0xED8 PUSH2 0x3C48 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xEFE JUMPI PUSH2 0xEFE PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xF0E JUMPI PUSH2 0xF0E PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND ISZERO PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41707065616C206665652068617320616C7265616479206265656E2070616964 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFB0 JUMPI PUSH2 0xFB0 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xFC0 JUMPI PUSH2 0xFC0 PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD SWAP1 POP DUP6 DUP2 LT PUSH2 0xFD4 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0xFF8 JUMP JUMPDEST CALLVALUE PUSH2 0xFDF DUP3 DUP9 PUSH2 0x3BD8 JUMP JUMPDEST GT PUSH2 0xFF3 JUMPI PUSH2 0xFEE DUP2 DUP8 PUSH2 0x3BD8 JUMP JUMPDEST PUSH2 0xFF5 JUMP JUMPDEST CALLVALUE JUMPDEST SWAP2 POP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP13 PUSH32 0x2B4EF80A862EDC5616A4E61C11F4A368F33323FACA91FA7635D48B85C183E66A DUP14 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1036 SWAP3 SWAP2 SWAP1 PUSH2 0x3D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1061 JUMPI PUSH2 0x1061 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1071 JUMPI PUSH2 0x1071 PUSH2 0x3C48 JUMP JUMPDEST ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1081 SWAP2 SWAP1 PUSH2 0x3C30 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x2 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x109F JUMPI PUSH2 0x109F PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x10AF JUMPI PUSH2 0x10AF PUSH2 0x3C48 JUMP JUMPDEST ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10BF SWAP2 SWAP1 PUSH2 0x3C30 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP3 PUSH1 0x2 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x10DD JUMPI PUSH2 0x10DD PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x10ED JUMPI PUSH2 0x10ED PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD LT PUSH2 0x11BB JUMPI DUP2 PUSH1 0x2 ADD DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x110A JUMPI PUSH2 0x110A PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x111A JUMPI PUSH2 0x111A PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD DUP3 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x112F SWAP2 SWAP1 PUSH2 0x3C30 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP1 POP DUP3 DUP2 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x114C JUMPI PUSH2 0x114C PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x115C JUMPI PUSH2 0x115C PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x118D JUMPI PUSH2 0x118D PUSH2 0x385C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 SWAP1 DUP14 SWAP1 PUSH32 0xB5681F036910F38D8C2FA06F2CBEDC227ECF03D7C4A358EE9096197B15FF8FD0 SWAP1 PUSH1 0x0 SWAP1 LOG4 JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x11DE JUMPI POP PUSH1 0x1 DUP3 ADD SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x12B1 JUMPI PUSH1 0x2 DUP9 ADD DUP1 SLOAD PUSH1 0x1 ADD DUP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 DUP4 ADD DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1207 SWAP1 DUP5 SWAP1 PUSH2 0x3BD8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP8 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x49912F88 SWAP1 DUP9 SWAP1 DUP15 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x1260 JUMPI PUSH2 0x1260 PUSH2 0x3C48 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127E SWAP3 SWAP2 SWAP1 PUSH2 0x3D39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x12BD DUP3 CALLVALUE PUSH2 0x3BD8 JUMP JUMPDEST GT ISZERO PUSH2 0x12E9 JUMPI CALLER PUSH2 0x8FC PUSH2 0x12D1 DUP4 CALLVALUE PUSH2 0x3BD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL POP POP POP POP POP JUMPDEST DUP2 PUSH1 0x1 ADD DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12FF JUMPI PUSH2 0x12FF PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x130F JUMPI PUSH2 0x130F PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x48 PUSH1 0x0 DUP5 PUSH2 0x1347 DUP2 PUSH2 0x3D75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP2 SWAP5 POP SWAP2 POP PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0x1339 JUMPI PUSH2 0x1389 PUSH1 0x1 DUP5 PUSH2 0x3D9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xF23F16E6 SWAP2 DUP7 SWAP2 PUSH1 0x8 SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 LT PUSH2 0x13FC JUMPI PUSH2 0x13FC PUSH2 0x3C48 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141A SWAP3 SWAP2 SWAP1 PUSH2 0x3D39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1437 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x145B SWAP2 SWAP1 PUSH2 0x3B85 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x147E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100 DUP2 GT ISZERO PUSH2 0x14F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652074617820726174652063616E206F6E6C7920626520696E6372656173 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642062792061206D6178696D756D206F662032352500000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x5100AB374784A62034356F9AF3B71EA723C1E89BEB5627C6C1DACEA1117250B8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF SWAP1 DUP2 AND SWAP1 DUP4 AND LT PUSH2 0x1581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732063617465676F727920646F6573206E6F7420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xADA JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x48 PUSH1 0x0 DUP4 PUSH2 0x1592 DUP2 PUSH2 0x3D75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0x1584 JUMPI DUP1 SLOAD PUSH32 0xFF00000000000000FFFFFFFF0000000000000000000000000000000000000000 AND CALLER PUSH32 0xFF00000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND OR PUSH1 0x1 PUSH1 0xC0 SHL CALLVALUE PUSH1 0x20 SHR PUSH7 0xFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xF8 SHL PUSH1 0xFF DUP8 AND MUL OR DUP1 DUP5 SSTORE DIV AND PUSH2 0x16CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E277420696E697469616C697A6520616E2061727469636C6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x776974686F75742070757474696E67206120626F756E74792E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16DB PUSH1 0x1 DUP5 PUSH2 0x3D9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP1 POP PUSH32 0x4F9A2B734331C583FAF3F19D1FEB5F08B742E016A56FB61379950BEAF3E22341 DUP7 DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x171B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP3 DIV PUSH1 0x20 SWAP1 DUP2 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND SWAP1 DUP4 ADD MSTORE PUSH32 0xDF5FC410D3381CC7F0A7FE3AF72F4E3CF53EF5787F20554AF69035A950E1B2E3 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x17B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x17D5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3BD8 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x17E5 JUMPI PUSH2 0x17E5 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x6 SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SLOAD SWAP1 SWAP3 POP PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1813 JUMPI POP PUSH1 0x1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1829 JUMPI POP PUSH1 0x2 JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x183E JUMPI PUSH2 0x183E PUSH2 0x385C JUMP JUMPDEST EQ ISZERO PUSH2 0x185B JUMPI DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1856 JUMPI PUSH2 0x1856 PUSH2 0x385C JUMP JUMPDEST PUSH2 0x185D JUMP JUMPDEST DUP2 JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 DUP6 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x189F JUMPI PUSH2 0x189F PUSH2 0x385C JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18D4 JUMPI PUSH2 0x18D4 PUSH2 0x385C JUMP JUMPDEST EQ ISZERO PUSH2 0x198B JUMPI DUP1 SLOAD PUSH32 0xFF00000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH1 0x20 SWAP1 DUP2 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND SWAP2 PUSH32 0x8271992F9B3A3F30DC2A464982DC4A136E7357403462443A171A0FB0C6CCC265 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL POP POP POP POP POP POP JUMPDEST DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE DUP6 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xB0 SHL OR DUP7 SSTORE PUSH1 0x40 MLOAD DUP9 SWAP1 CALLER SWAP1 PUSH32 0x394027A5FA6E098A1191094D1719D6929B9ABC535FCC0C8F448D6A4E75622276 SWAP1 PUSH2 0x19FB SWAP1 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1A1E SWAP1 PUSH1 0xFF AND PUSH1 0x1 PUSH2 0x3E17 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x1A6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207370616365206C65667420666F722061206E65772063617465676F7279 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xADA JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x61606860EB6C87306811E2695215385101DAAB53BD6AB4E9F9049AEAD9363C7D SWAP1 PUSH2 0x1AA6 SWAP1 DUP6 SWAP1 PUSH2 0x3849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x7 SLOAD DUP2 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x1AC9 JUMPI PUSH2 0x1AC9 PUSH2 0x3C48 JUMP JUMPDEST ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1ADD SWAP3 SWAP2 SWAP1 PUSH2 0x348E JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH2 0x1AF1 DUP4 PUSH2 0x3E3C JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 PUSH1 0x40 DUP2 LT PUSH2 0x1B1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x1B2D SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B59 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BA6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B7B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BA6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B89 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAFE15CFB DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C02 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C1E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C42 SWAP2 SWAP1 PUSH2 0x3B9E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x400 PUSH1 0x2 SLOAD DUP5 DUP5 PUSH2 0x1C5A SWAP2 SWAP1 PUSH2 0x3BD8 JUMP JUMPDEST PUSH2 0x1C64 SWAP2 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0x1C6E SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST PUSH2 0x1C78 SWAP1 DUP5 PUSH2 0x3C30 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1C8E JUMPI PUSH2 0x1C8E PUSH2 0x385C JUMP JUMPDEST PUSH2 0x1C97 DUP10 PUSH2 0x22DB JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1CA8 JUMPI PUSH2 0x1CA8 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1CB9 JUMPI PUSH2 0x1CB9 PUSH2 0x385C JUMP JUMPDEST EQ SWAP1 POP DUP1 PUSH2 0x1CC8 JUMPI DUP4 DUP3 PUSH2 0x1CCB JUMP JUMPDEST DUP4 DUP4 JUMPDEST SWAP6 POP SWAP6 POP POP POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xF7434EA9 SWAP2 PUSH1 0x8 SWAP2 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 LT PUSH2 0x1D48 JUMPI PUSH2 0x1D48 PUSH2 0x3C48 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D65 SWAP2 SWAP1 PUSH2 0x3E5C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DA6 SWAP2 SWAP1 PUSH2 0x3B85 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0x400 SWAP2 PUSH2 0x1DD5 SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x20 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0x1DDF SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST SWAP1 POP PUSH2 0x1DEB DUP2 DUP4 PUSH2 0x3C30 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EB1 JUMPI PUSH1 0x0 JUMPDEST DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1E14 JUMPI PUSH2 0x1E14 PUSH2 0x3C48 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1E26 SWAP2 SWAP1 PUSH2 0x3E6F JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x1E9E JUMPI PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x1E43 JUMPI PUSH2 0x1E43 PUSH2 0x3C48 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1E55 SWAP2 SWAP1 PUSH2 0x3E6F JUMP JUMPDEST DUP4 DUP2 DUP2 LT PUSH2 0x1E65 JUMPI PUSH2 0x1E65 PUSH2 0x3C48 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT ISZERO PUSH2 0x1E8C JUMPI PUSH2 0x1E8A DUP7 DUP7 DUP5 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x992 JUMPI PUSH2 0x992 PUSH2 0x385C JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x1E96 DUP2 PUSH2 0x3EB9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E02 JUMP JUMPDEST POP DUP1 PUSH2 0x1EA9 DUP2 PUSH2 0x3EB9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1DF7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EF5 JUMPI PUSH2 0x1EE2 DUP7 DUP7 DUP4 DUP8 PUSH2 0x310B JUMP JUMPDEST POP DUP1 PUSH2 0x1EED DUP2 PUSH2 0x3EB9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1ECE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0x1F73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F206368616C6C656E67652E0000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xADA JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF SWAP1 DUP2 AND EQ ISZERO PUSH2 0x1FD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865726520697320616E206F6E676F696E67206368616C6C656E67652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xADA JUMP JUMPDEST DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH24 0xFFFFFFFF0000000000000000000000000000000000000000 OR DUP2 SSTORE PUSH2 0x2003 DUP3 PUSH2 0x1CDB JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x2052 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742066756E647320746F206368616C6C656E67652E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xADA JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x400 SWAP2 PUSH2 0x207F SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x20 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0x2089 SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x209D SWAP2 SWAP1 PUSH2 0x3C30 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0xC13517E1 PUSH2 0x20DE DUP5 CALLVALUE PUSH2 0x3BD8 JUMP JUMPDEST DUP6 SLOAD PUSH1 0x2 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x2100 JUMPI PUSH2 0x2100 PUSH2 0x3C48 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211E SWAP3 SWAP2 SWAP1 PUSH2 0x3D39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x213C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2161 SWAP2 SWAP1 PUSH2 0x3B85 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP4 ADD DUP1 SLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP13 AND OR SWAP1 SSTORE DUP9 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FF0000000000000000000000000000000000000000 SWAP1 SWAP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xF8 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE DUP8 SLOAD DUP5 MLOAD SWAP2 SWAP1 DIV SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH32 0x74BAAB670A4015AB2F1B467C5252A96141A2573F2908E58A92081E80D3CFDE3D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP7 AND SWAP2 PUSH32 0x1E5338A1FB672AA84963DC9F9E4AFD009B4ED726DEBB09224BF4D02A6C68B4E4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C3DB16D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x1C3DB16D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2343 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2367 SWAP2 SWAP1 PUSH2 0x3B85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2375 PUSH2 0x3512 JUMP JUMPDEST PUSH2 0x237D PUSH2 0x3512 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x23A3 JUMPI PUSH2 0x23A3 PUSH2 0x3C48 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD DUP2 PUSH1 0x2 ADD DUP3 PUSH1 0x5 ADD SLOAD DUP3 PUSH1 0x3 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0x2418 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 SLOAD PUSH2 0x100 DUP4 SWAP1 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 PUSH1 0x1 SWAP3 DUP4 ADD DUP2 DUP2 DIV SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP4 SUB SWAP1 SWAP3 MUL SWAP2 ADD DUP1 DUP5 GT PUSH2 0x23E7 JUMPI SWAP1 POP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP5 SWAP8 POP DUP7 SWAP4 POP PUSH1 0x3 SWAP3 POP SWAP1 POP DUP3 DUP5 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2435 JUMPI POP POP POP POP POP SWAP2 POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xC2515F25186DF02132AD46F01E062C3B8982C8DE57FA2B1B0A280D8E810F39B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x505F3BF1E426C82F14F7C9CFB2D31EF5B7BB76428E16BD90DABEC113E3D4A2BC SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x207E19E347BECB468EF02D25790188E4D5DA0FE37176D3BBB7940168EC5D6136 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x25F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F722063616E20776974686472617720616E2061727469 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x31B63297 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x2675 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20616C726561647920696E69746961746564206F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74686572652069732061206368616C6C656E67652E0000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2682 SWAP1 TIMESTAMP PUSH2 0x3C30 JUMP JUMPDEST DUP2 SLOAD PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP4 AND DUP2 MSTORE PUSH32 0x416C1AD2B96C356F3BBD35431F86CCE449DDBB4F8C3755EA9D2776B04C2E9C8F SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD DUP3 SWAP1 PUSH2 0x2704 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3BD8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x2 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x271D JUMPI PUSH2 0x271D PUSH2 0x3C48 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2741 JUMPI PUSH2 0x2741 PUSH2 0x385C JUMP JUMPDEST PUSH2 0x274A DUP9 PUSH2 0x22DB JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x275B JUMPI PUSH2 0x275B PUSH2 0x385C JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x276C JUMPI PUSH2 0x276C PUSH2 0x385C JUMP JUMPDEST EQ SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x277E JUMPI PUSH1 0x5 SLOAD PUSH2 0x2782 JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 ADD DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x279C JUMPI PUSH2 0x279C PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x27AC JUMPI PUSH2 0x27AC PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD DUP7 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF23F16E6 SWAP1 DUP13 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x2806 JUMPI PUSH2 0x2806 PUSH2 0x3C48 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2824 SWAP3 SWAP2 SWAP1 PUSH2 0x3D39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2841 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2865 SWAP2 SWAP1 PUSH2 0x3B85 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x400 PUSH2 0x2876 DUP6 DUP5 PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0x2880 SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST PUSH2 0x288A SWAP1 DUP4 PUSH2 0x3C30 JUMP JUMPDEST SWAP1 POP PUSH2 0x2896 DUP4 DUP3 PUSH2 0x3BD8 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDCCF2F8B2CC26EAFCD61905CBA744CFF4B81D14740725F6376390DC6298A6A3C DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x290B SWAP3 SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2995 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F722063616E20776974686472617720616E2061727469 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x31B63297 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x2A16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E65656420746F20696E697469617465207769746864726177616C20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x66697273742E0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST DUP1 SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x2A9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E65656420746F207761697420666F722074696D656C6F636B206F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207761697420756E74696C20746865206368616C6C656E676520656E64732E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST DUP1 SLOAD PUSH32 0xFF0000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH1 0x20 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND SWAP1 CALLER SWAP1 PUSH2 0x8FC DUP4 ISZERO MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2B08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP5 AND DUP2 MSTORE PUSH32 0x70B41D8CCA762CEEC66D93F536DBB31F5CABBF1901F862508B9438DE54FCE4EB SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2B66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x8DF75282265171690A1298CF028F5E3C7D8D42313394A4F25D4AEEA6C1EA62CF SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2BC5 JUMPI PUSH1 0x0 SWAP3 POP POP PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BEF JUMPI PUSH2 0x2BEF PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C22 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2C0D JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2D78 JUMPI PUSH2 0x2C3C PUSH1 0x2 PUSH1 0x1 PUSH2 0x3C30 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C54 JUMPI PUSH2 0x2C54 PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C7D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2C90 JUMPI PUSH2 0x2C90 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP5 PUSH1 0x2 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2CB2 JUMPI PUSH2 0x2CB2 PUSH2 0x3C48 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 GT PUSH2 0x2D63 JUMPI PUSH1 0x0 PUSH2 0x2CEC DUP4 DUP12 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2CE6 JUMPI PUSH2 0x2CE6 PUSH2 0x385C JUMP JUMPDEST DUP9 PUSH2 0x326F JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2D50 JUMPI PUSH2 0x2D0B DUP4 DUP12 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2CE6 JUMPI PUSH2 0x2CE6 PUSH2 0x385C JUMP JUMPDEST PUSH2 0x2D15 SWAP1 DUP11 PUSH2 0x3C30 JUMP JUMPDEST SWAP9 POP DUP1 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2D2A JUMPI PUSH2 0x2D2A PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2D43 JUMPI PUSH2 0x2D43 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP DUP1 PUSH2 0x2D5B DUP2 PUSH2 0x3EB9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2CC5 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2D70 SWAP1 PUSH2 0x3EB9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2C28 JUMP JUMPDEST POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2D9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x8A3509A4057C89A5993A4A3140C2EBF7E829D325D8998EAA6C48ADCFF98B2CEF SWAP2 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2E11 JUMPI PUSH2 0x2E11 PUSH2 0x385C JUMP JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2E23 JUMPI PUSH2 0x2E23 PUSH2 0x385C JUMP JUMPDEST EQ SWAP1 POP PUSH2 0x3E8 PUSH1 0x0 DUP3 PUSH2 0x2E38 JUMPI PUSH1 0x5 SLOAD PUSH2 0x2E3C JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST SWAP1 POP PUSH2 0x2E4A PUSH2 0x400 DUP3 PUSH2 0x3C30 JUMP JUMPDEST DUP3 PUSH2 0x400 PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH2 0x2E5E SWAP2 SWAP1 PUSH2 0x3C30 JUMP JUMPDEST PUSH2 0x2E68 SWAP2 SWAP1 PUSH2 0x3C30 JUMP JUMPDEST PUSH2 0x2E72 SWAP2 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0x2E7C SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP1 SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x8FC DUP5 ISZERO MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL POP POP PUSH1 0x40 MLOAD DUP5 SWAP4 POP PUSH32 0xB315332B30DC40D1E51DEF214CE42D93A73BD0C17B08DB04B34F10736BB2F06F SWAP3 POP PUSH1 0x0 SWAP2 POP LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2F07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP1 SWAP2 AND ISZERO OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F722063616E20696E63726561736520626F756E747920 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6620616E2061727469636C652E000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST DUP1 SLOAD CALLVALUE PUSH1 0x20 SHR SWAP1 DUP3 SWAP1 PUSH1 0x18 SWAP1 PUSH2 0x2FD9 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0x3EE8 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH7 0xFFFFFFFFFFFFFF DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE POP DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP3 DIV PUSH1 0x20 SWAP1 DUP2 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND SWAP1 DUP4 ADD MSTORE PUSH32 0xDF5FC410D3381CC7F0A7FE3AF72F4E3CF53EF5787F20554AF69035A950E1B2E3 SWAP2 ADD PUSH2 0x26D7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EB1 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 GT PUSH2 0x30A9 JUMPI PUSH2 0x3096 DUP7 DUP7 DUP5 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x992 JUMPI PUSH2 0x992 PUSH2 0x385C JUMP JUMPDEST POP DUP1 PUSH2 0x30A1 DUP2 PUSH2 0x3EB9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3076 JUMP JUMPDEST POP DUP1 PUSH2 0x30B4 DUP2 PUSH2 0x3EB9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x306B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x30D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xBF39FAA024D2F97599A0095E84098EE2171B6681738416C0030F442BA956D52B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3171 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206973206E6F2072756C696E67207965742E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xADA JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x3188 JUMPI PUSH2 0x3188 PUSH2 0x3C48 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP PUSH2 0x31B5 DUP2 DUP8 DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x326F JUMP JUMPDEST SWAP3 POP DUP3 ISZERO PUSH2 0x3265 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x31E7 JUMPI PUSH2 0x31E7 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x31F7 JUMPI PUSH2 0x31F7 PUSH2 0x3C48 JUMP JUMPDEST ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP9 PUSH32 0xFF2B7C936D6023FEA901B3455CEFC23B124C1CA5997DC5B48C461FD20984289D DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x325C SWAP3 SWAP2 SWAP1 PUSH2 0x3D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 DUP7 ADD DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3288 JUMPI PUSH2 0x3288 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3298 JUMPI PUSH2 0x3298 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND PUSH2 0x32F5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x32DC JUMPI PUSH2 0x32DC PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x32EC JUMPI PUSH2 0x32EC PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD SWAP2 POP PUSH2 0x3485 JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3307 JUMPI PUSH2 0x3307 PUSH2 0x385C JUMP JUMPDEST DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3319 JUMPI PUSH2 0x3319 PUSH2 0x385C JUMP JUMPDEST EQ ISZERO PUSH2 0x33D9 JUMPI PUSH1 0x0 DUP7 PUSH1 0x2 ADD DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3337 JUMPI PUSH2 0x3337 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3347 JUMPI PUSH2 0x3347 PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD GT PUSH2 0x3355 JUMPI PUSH1 0x0 PUSH2 0x33D2 JUMP JUMPDEST DUP6 PUSH1 0x2 ADD DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x336B JUMPI PUSH2 0x336B PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x337B JUMPI PUSH2 0x337B PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP10 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33AC JUMPI PUSH2 0x33AC PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x33BC JUMPI PUSH2 0x33BC PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD PUSH2 0x33C8 SWAP2 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0x33D2 SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST SWAP2 POP PUSH2 0x3485 JUMP JUMPDEST DUP6 PUSH1 0x1 ADD DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33EF JUMPI PUSH2 0x33EF PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x33FF JUMPI PUSH2 0x33FF PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND PUSH2 0x3485 JUMPI PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x3 DUP8 ADD SLOAD PUSH2 0x342D SWAP2 SWAP1 PUSH2 0x3C30 JUMP JUMPDEST PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP10 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x345C JUMPI PUSH2 0x345C PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x346C JUMPI PUSH2 0x346C PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD PUSH2 0x3478 SWAP2 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0x3482 SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x349A SWAP1 PUSH2 0x3C5E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x34BC JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3502 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x34D5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3502 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3502 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3502 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x34E7 JUMP JUMPDEST POP PUSH2 0x350E SWAP3 SWAP2 POP PUSH2 0x3530 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x350E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3531 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x355C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x355C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x358B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3594 DUP4 PUSH2 0x3545 JUMP JUMPDEST SWAP2 POP PUSH2 0x35A2 PUSH1 0x20 DUP5 ADD PUSH2 0x3561 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x355C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x35A2 PUSH1 0x20 DUP5 ADD PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145B DUP3 PUSH2 0x3545 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x360A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x363B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1CD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x368C DUP8 DUP3 DUP9 ADD PUSH2 0x3611 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x36A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH2 0x36B4 PUSH1 0x40 DUP7 ADD PUSH2 0x3545 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x3712 JUMPI PUSH2 0x3712 PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x373A JUMPI PUSH2 0x373A PUSH2 0x36E1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x3753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x37AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37BB DUP7 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x36F7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x37D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x37E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37F2 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x36F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3822 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x3806 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3834 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x145B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x37FC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3890 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 DUP2 ADD PUSH2 0x38B1 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3872 JUMP JUMPDEST PUSH1 0xFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x38EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x38FF PUSH1 0x20 DUP7 ADD PUSH2 0x3561 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x391C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x393F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3954 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x3988 PUSH1 0x20 DUP6 ADD PUSH2 0x3561 JUMP JUMPDEST SWAP2 POP PUSH2 0x3996 PUSH1 0x40 DUP6 ADD PUSH2 0x35AB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD DUP2 DUP6 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x39C9 JUMPI DUP2 MLOAD ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x39A8 JUMP JUMPDEST POP POP POP PUSH1 0x60 DUP3 ADD DUP5 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x39F3 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x39D4 JUMP JUMPDEST POP POP POP DUP3 PUSH1 0xC0 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145B DUP3 PUSH2 0x3561 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3A34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A5E DUP7 DUP3 DUP8 ADD PUSH2 0x3611 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x35A2 PUSH1 0x20 DUP5 ADD PUSH2 0x3561 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD DUP5 DUP4 MSTORE PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP3 DUP8 ADD PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B11 JUMPI DUP9 DUP8 SUB PUSH1 0x5F NOT ADD DUP6 MSTORE DUP3 MLOAD DUP1 MLOAD DUP1 DUP10 MSTORE SWAP1 DUP8 ADD SWAP1 DUP8 DUP10 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3AFB JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP10 ADD SWAP3 SWAP2 DUP10 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3ADF JUMP JUMPDEST POP SWAP1 SWAP9 POP POP POP SWAP4 DUP6 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3ABD JUMP JUMPDEST POP SWAP5 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B3C DUP4 PUSH2 0x35AB JUMP JUMPDEST SWAP2 POP PUSH2 0x35A2 PUSH1 0x20 DUP5 ADD PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3B60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x3B70 PUSH1 0x20 DUP7 ADD PUSH2 0x3561 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x36B4 PUSH1 0x60 DUP7 ADD PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3BEA JUMPI PUSH2 0x3BEA PUSH2 0x3BC2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3C09 JUMPI PUSH2 0x3C09 PUSH2 0x3BC2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3C2B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3C43 JUMPI PUSH2 0x3C43 PUSH2 0x3BC2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3C72 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3C93 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x3CB3 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x3CD5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 DUP9 MSTORE PUSH1 0x20 DUP9 ADD DUP3 DUP1 ISZERO PUSH2 0x3CF0 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3D01 JUMPI PUSH2 0x3D2C JUMP JUMPDEST PUSH1 0xFF NOT DUP8 AND DUP3 MSTORE DUP3 DUP3 ADD SWAP8 POP PUSH2 0x3D2C JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x3D26 JUMPI DUP2 SLOAD DUP5 DUP3 ADD MSTORE SWAP1 DUP7 ADD SWAP1 DUP5 ADD PUSH2 0x3D0D JUMP JUMPDEST DUP4 ADD SWAP9 POP POP JUMPDEST POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3D52 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3C99 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x3D68 DUP3 DUP6 PUSH2 0x3872 JUMP JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x3D92 JUMPI PUSH2 0x3D92 PUSH2 0x3BC2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x3DBC JUMPI PUSH2 0x3DBC PUSH2 0x3BC2 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3E01 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x3DC4 JUMP JUMPDEST PUSH1 0xFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x3E34 JUMPI PUSH2 0x3E34 PUSH2 0x3BC2 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x3E53 JUMPI PUSH2 0x3E53 PUSH2 0x3BC2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x145B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C99 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x3E86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3EA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP PUSH1 0x5 DUP2 SWAP1 SHL CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x1CD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3ECD JUMPI PUSH2 0x3ECD PUSH2 0x3BC2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3D52 PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x3DC4 JUMP JUMPDEST PUSH1 0x0 PUSH7 0xFFFFFFFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x3F0A JUMPI PUSH2 0x3F0A PUSH2 0x3BC2 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 MOD LOG4 BYTE 0xB2 SWAP5 0xBD OR PUSH19 0x920EA2F89288B3BE011F722E02FBDCD5FD7DE2 AND 0xC3 0xD2 CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
              "sourceMap": "1105:26133:5:-:0;;;654:31:4;;;-1:-1:-1;;654:31:4;681:4;654:31;;;961:3;913:51;;1601:2;1567:36;;1364:32:5;;;1442:10;654:31:4;1403:50:5;-1:-1:-1;;;;;;1403:50:5;;;;;;2893:499;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1796:27:4;:56;;;1862:23;:48;;;1920:22;:46;;;-1:-1:-1;1976:20:4;;-1:-1:-1;;;;;1976:20:4;;;;;-1:-1:-1;;;;;;1976:20:4;;;;;;;;;;3296:24:5;::::1;;::::0;3330:55:::1;3342:20:::0;3364;3330:11:::1;:55::i;:::-;2893:499:::0;;;;;;;1105:26133;;19567:358;19684:15;;:19;;:15;;;:19;:::i;:::-;:24;;19676:69;;;;-1:-1:-1;;;19676:69:5;;3247:2:7;19676:69:5;;;3229:21:7;;;3266:18;;;3259:30;3325:34;3305:18;;;3298:62;3377:18;;19676:69:5;;;;;;;;19773:15;;19760:51;;19773:15;;;;;19760:51;;;;19790:20;;19760:51;:::i;:::-;;;;;;;;19851:15;;19870:20;;19821:29;;19851:15;;19821:46;;;;;;;:::i;:::-;;:69;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19901:15:5;:17;;;;;:15;:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;19567:358;;:::o;1105:26133::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1105:26133:5;;;-1:-1:-1;1105:26133:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:144:7;-1:-1:-1;;;;;102:31:7;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:127::-;224:10;219:3;215:20;212:1;205:31;255:4;252:1;245:15;279:4;276:1;269:15;295:258;367:1;377:113;391:6;388:1;385:13;377:113;;;467:11;;;461:18;448:11;;;441:39;413:2;406:10;377:113;;;508:6;505:1;502:13;499:48;;;543:1;534:6;529:3;525:16;518:27;499:48;;295:258;;;:::o;558:601::-;633:5;-1:-1:-1;;;;;693:14:7;;;690:40;;;710:18;;:::i;:::-;785:2;779:9;753:2;839:15;;-1:-1:-1;;835:24:7;;;861:2;831:33;827:42;815:55;;;885:18;;;905:22;;;882:46;879:72;;;931:18;;:::i;:::-;971:10;967:2;960:22;1000:6;991:15;;1030:6;1022;1015:22;1070:3;1061:6;1056:3;1052:16;1049:25;1046:45;;;1087:1;1084;1077:12;1046:45;1100:53;1146:6;1139:4;1131:6;1127:17;1122:3;1100:53;:::i;:::-;;;;558:601;;;;;:::o;1164:236::-;1218:5;1271:3;1264:4;1256:6;1252:17;1248:27;1238:55;;1289:1;1286;1279:12;1238:55;1311:83;1390:3;1381:6;1375:13;1368:4;1360:6;1356:17;1311:83;:::i;:::-;1302:92;1164:236;-1:-1:-1;;;1164:236:7:o;1405:159::-;1492:13;;1514:44;1492:13;1514:44;:::i;:::-;1405:159;;;:::o;1569:1130::-;1739:6;1747;1755;1763;1771;1779;1787;1840:3;1828:9;1819:7;1815:23;1811:33;1808:53;;;1857:1;1854;1847:12;1808:53;1889:9;1883:16;1908:44;1946:5;1908:44;:::i;:::-;2020:2;2005:18;;1999:25;1971:5;;-1:-1:-1;;;;;;2073:14:7;;;2070:34;;;2100:1;2097;2090:12;2070:34;2138:6;2127:9;2123:22;2113:32;;2183:7;2176:4;2172:2;2168:13;2164:27;2154:55;;2205:1;2202;2195:12;2154:55;2228:77;2297:7;2292:2;2286:9;2281:2;2277;2273:11;2228:77;:::i;:::-;2218:87;;2351:2;2340:9;2336:18;2330:25;2314:41;;2380:2;2370:8;2367:16;2364:36;;;2396:1;2393;2386:12;2364:36;;2419:63;2474:7;2463:8;2452:9;2448:24;2419:63;:::i;:::-;2409:73;;;2522:2;2511:9;2507:18;2501:25;2491:35;;2566:3;2555:9;2551:19;2545:26;2535:36;;2611:3;2600:9;2596:19;2590:26;2580:36;;2635:58;2688:3;2677:9;2673:19;2635:58;:::i;:::-;2625:68;;1569:1130;;;;;;;;;;:::o;2704:127::-;2765:10;2760:3;2756:20;2753:1;2746:31;2796:4;2793:1;2786:15;2820:4;2817:1;2810:15;2836:204;2874:3;2910:4;2907:1;2903:12;2942:4;2939:1;2935:12;2977:3;2971:4;2967:14;2962:3;2959:23;2956:49;;;2985:18;;:::i;:::-;3021:13;;2836:204;-1:-1:-1;;;2836:204:7:o;3406:383::-;3555:2;3544:9;3537:21;3518:4;3587:6;3581:13;3630:6;3625:2;3614:9;3610:18;3603:34;3646:66;3705:6;3700:2;3689:9;3685:18;3680:2;3672:6;3668:15;3646:66;:::i;:::-;3773:2;3752:15;-1:-1:-1;;3748:29:7;3733:45;;;;3780:2;3729:54;;3406:383;-1:-1:-1;;3406:383:7:o;3794:127::-;3855:10;3850:3;3846:20;3843:1;3836:31;3886:4;3883:1;3876:15;3910:4;3907:1;3900:15;3926:175;3963:3;4007:4;4000:5;3996:16;4036:4;4027:7;4024:17;4021:43;;;4044:18;;:::i;:::-;4093:1;4080:15;;3926:175;-1:-1:-1;;3926:175:7:o;4106:380::-;4185:1;4181:12;;;;4228;;;4249:61;;4303:4;4295:6;4291:17;4281:27;;4249:61;4356:2;4348:6;4345:14;4325:18;4322:38;4319:161;;;4402:10;4397:3;4393:20;4390:1;4383:31;4437:4;4434:1;4427:15;4465:4;4462:1;4455:15;4319:161;;4106:380;;;:::o;:::-;1105:26133:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@ARBITRATOR_707": {
                  "entryPoint": null,
                  "id": 707,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@ARTICLE_WITHDRAWAL_TIMELOCK_313": {
                  "entryPoint": null,
                  "id": 313,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@LOSER_APPEAL_PERIOD_MULTIPLIER_311": {
                  "entryPoint": null,
                  "id": 311,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@LOSER_STAKE_MULTIPLIER_317": {
                  "entryPoint": null,
                  "id": 317,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@MULTIPLIER_DENOMINATOR_308": {
                  "entryPoint": null,
                  "id": 308,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE_710": {
                  "entryPoint": null,
                  "id": 710,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@NUMBER_OF_RULING_OPTIONS_305": {
                  "entryPoint": null,
                  "id": 305,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@TREASURY_300": {
                  "entryPoint": null,
                  "id": 300,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@VERSION_291": {
                  "entryPoint": null,
                  "id": 291,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@WINNER_STAKE_MULTIPLIER_315": {
                  "entryPoint": null,
                  "id": 315,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@admin_720": {
                  "entryPoint": null,
                  "id": 720,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@appealFee_2296": {
                  "entryPoint": 5017,
                  "id": 2296,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@articleStorage_788": {
                  "entryPoint": null,
                  "id": 788,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@categoryCounter_713": {
                  "entryPoint": null,
                  "id": 713,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@categoryToArbitratorExtraData_783": {
                  "entryPoint": 6926,
                  "id": 783,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@challengeFee_2268": {
                  "entryPoint": 7387,
                  "id": 2268,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@challengeTaxRate_320": {
                  "entryPoint": null,
                  "id": 320,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@challenge_1253": {
                  "entryPoint": 7933,
                  "id": 1253,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@changeAdmin_2064": {
                  "entryPoint": 9309,
                  "id": 2064,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@changeArticleWithdrawalTimelock_2153": {
                  "entryPoint": 9511,
                  "id": 2153,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@changeLoserAppealPeriodMultiplier_2135": {
                  "entryPoint": 12476,
                  "id": 2135,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@changeLoserStakeMultiplier_2117": {
                  "entryPoint": 9432,
                  "id": 2117,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@changeTreasury_2081": {
                  "entryPoint": 11651,
                  "id": 2081,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@changeWinnerStakeMultiplier_2099": {
                  "entryPoint": 11082,
                  "id": 2099,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@disputes_793": {
                  "entryPoint": null,
                  "id": 793,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@findVacantStorageSlot_2327": {
                  "entryPoint": 4917,
                  "id": 2327,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@fundAppeal_1587": {
                  "entryPoint": 2873,
                  "id": 1587,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@getAmountRemainsToBeRaised_2849": {
                  "entryPoint": 9955,
                  "id": 2849,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@getAppealPeriod_2711": {
                  "entryPoint": 7086,
                  "id": 2711,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "@getLastRoundWinner_2653": {
                  "entryPoint": 8923,
                  "id": 2653,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getReturnOfInvestmentRatio_2758": {
                  "entryPoint": 11772,
                  "id": 2758,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@getRoundInfo_2638": {
                  "entryPoint": 9069,
                  "id": 2638,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "@getTotalWithdrawableAmount_2461": {
                  "entryPoint": 11161,
                  "id": 2461,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "@getWithdrawableAmount_2596": {
                  "entryPoint": 12911,
                  "id": 2596,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "@increaseBounty_987": {
                  "entryPoint": 12059,
                  "id": 987,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@initializeArticle_922": {
                  "entryPoint": 5417,
                  "id": 922,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@initiateWithdrawal_1035": {
                  "entryPoint": 9590,
                  "id": 1035,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@newCategory_2185": {
                  "entryPoint": 6669,
                  "id": 2185,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@rule_1745": {
                  "entryPoint": 6013,
                  "id": 1745,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@submitEvidence_940": {
                  "entryPoint": 10405,
                  "id": 940,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@switchPublishingLock_2047": {
                  "entryPoint": 12011,
                  "id": 2047,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferBalanceToTreasury_2034": {
                  "entryPoint": 11910,
                  "id": 2034,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferOwnership_2221": {
                  "entryPoint": 2631,
                  "id": 2221,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@treasuryBalance_302": {
                  "entryPoint": null,
                  "id": 302,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@updateChallengeTaxRate_2011": {
                  "entryPoint": 5218,
                  "id": 2011,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@withdrawFeesAndRewardsForAllRoundsAndAllRulings_1800": {
                  "entryPoint": 12373,
                  "id": 1800,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@withdrawFeesAndRewardsForAllRounds_1845": {
                  "entryPoint": 7864,
                  "id": 1845,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@withdrawFeesAndRewardsForGivenPositions_1905": {
                  "entryPoint": 7668,
                  "id": 1905,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@withdrawFeesAndRewards_1987": {
                  "entryPoint": 12555,
                  "id": 1987,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "@withdraw_1111": {
                  "entryPoint": 10520,
                  "id": 1111,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_address_payable": {
                  "entryPoint": 13665,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_available_length_string": {
                  "entryPoint": 14071,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_enum_RulingOptions": {
                  "entryPoint": 13739,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_string_calldata": {
                  "entryPoint": 13841,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_address_payable": {
                  "entryPoint": 14852,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_enum$_RulingOptions_$295t_enum$_RulingOptions_$295": {
                  "entryPoint": 15136,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_string_calldata_ptrt_uint8t_uint80": {
                  "entryPoint": 13907,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr": {
                  "entryPoint": 14189,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 13816,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 15237,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256t_address_payable": {
                  "entryPoint": 14955,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256t_address_payablet_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr": {
                  "entryPoint": 14553,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_decode_tuple_t_uint256t_address_payablet_enum$_RulingOptions_$295": {
                  "entryPoint": 14691,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_uint256t_address_payablet_uint256t_enum$_RulingOptions_$295": {
                  "entryPoint": 15178,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_decode_tuple_t_uint256t_enum$_RulingOptions_$295": {
                  "entryPoint": 13754,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256t_string_calldata_ptr": {
                  "entryPoint": 14879,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_uint256t_uint256": {
                  "entryPoint": 14015,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256t_uint256_fromMemory": {
                  "entryPoint": 15262,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint80": {
                  "entryPoint": 13789,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint80t_address_payable": {
                  "entryPoint": 13688,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_uint80": {
                  "entryPoint": 13637,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_bytes": {
                  "entryPoint": 14332,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bytes_storage": {
                  "entryPoint": 15513,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_enum_RulingOptions": {
                  "entryPoint": 14450,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_string_calldata": {
                  "entryPoint": 15812,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_payable_t_enum$_RulingOptions_$295_t_uint8_t_bool_t_uint80__to_t_address_payable_t_uint8_t_uint8_t_bool_t_uint80__fromStack_reversed": {
                  "entryPoint": 14484,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_payable_t_uint32_t_uint56_t_uint8__to_t_address_payable_t_uint32_t_uint56_t_uint8__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_array$_t_bool_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr_t_uint256__to_t_array$_t_bool_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr_t_uint256__fromStack_reversed": {
                  "entryPoint": 14751,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
                  "entryPoint": 14409,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes_storage__to_t_bytes_memory_ptr__fromStack_reversed": {
                  "entryPoint": 15964,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IArbitrator_$249__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_enum$_RulingOptions_$295_t_uint256__to_t_uint8_t_uint256__fromStack_reversed": {
                  "entryPoint": 15706,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 16084,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_calldata_ptr_t_uint8_t_uint256__to_t_string_memory_ptr_t_uint8_t_uint256__fromStack_reversed": {
                  "entryPoint": 15853,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_0345b6b07b3f7ea23ce7c0682ae193a7b3933d232b736d656630025e0007450f__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_09736bc764ff8f7b07f5d004c384a229ed4912017c53bd247c8e39209b9ae7f6__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_0c03e9d393d30f62793e04d553e45144120700c0c39d75130bccb90781d9e9e5__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_0fb9b5de11a486bb1b8d34864ad6b246b0b983476450ee45857735429bd77eb9__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_264afed15e2abe1afd48e9529ae4102fd34dc15becf22ac12086d34e9bca14d5__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_5943b819c05c7059125985bc4ac5cf738c94c0822c506b598ab2eced554e2f50__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_646d3354d32a4e6f10f97f8e4dafb31e5ad3c387e7ce2b3b8fd9a6cf92aec955__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_6a7ac09dd6d1a595ef63e3c006cc799fa0704d926f43c9ba8a2701161a095cea__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_735d504b2c5de2f29425b794cdb33103551951bc0508e48cdd57a296c3d28554__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_7c0c82b0d480101a30f3ad2e3ccc7970d31d7e8da6ac4e66c07d00ffcf930f48__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9591a49cf5d9e3ba9b3aea5505a2b8a639d2f239a0cb6a9059466b60c54a080f__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_a40667c3d5ae3c08746fe24fceae1033d89d0e1de162ecdda7e68141465d7af7__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_b54a59a715146ed6c99f49691f55e62e941bfed713a75eda7bc62bf50148d555__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_c2f2256a77e1cd7cdc564a3b966df4f3e5bfbdc15f00156637ffbff138e529be__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_de142eb746bdd0d0ef7f42e32a89b1f8be902652448bd9ef60b61b168c6d9194__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e23f3e71c05305a9182237d48ba9b404f0c1c59aaff27a9576fb3eb02eaabde6__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_f3418d70ac679d1f67a83336adc36c46a5610f9d2455f76fc28495336bbc06ed__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
                  "entryPoint": 14990,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_bytes_storage__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
                  "entryPoint": 15673,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint80__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint80_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "access_calldata_tail_t_array$_t_uint256_$dyn_calldata_ptr": {
                  "entryPoint": 15983,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "array_dataslot_bytes_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_bytes": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 15408,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint56": {
                  "entryPoint": 16104,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint8": {
                  "entryPoint": 15895,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 15374,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 15343,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 15320,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint80": {
                  "entryPoint": 15772,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 15454,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_t_uint256": {
                  "entryPoint": 16057,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_t_uint8": {
                  "entryPoint": 15932,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_t_uint80": {
                  "entryPoint": 15733,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 15298,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x21": {
                  "entryPoint": 14428,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 15432,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 14049,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:28149:7",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "111:87:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "121:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "133:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "144:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "129:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "129:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "121:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "163:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "178:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "186:4:7",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "174:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "174:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "156:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "156:36:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "156:36:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "80:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "91:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "102:4:7",
                            "type": ""
                          }
                        ],
                        "src": "14:184:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "251:127:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "261:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "283:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "270:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "270:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "261:5:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "356:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "365:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "368:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "358:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "358:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "358:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "312:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "323:5:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "330:22:7",
                                            "type": "",
                                            "value": "0xffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "319:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "319:34:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "309:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "309:45:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "302:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "302:53:7"
                              },
                              "nodeType": "YulIf",
                              "src": "299:73:7"
                            }
                          ]
                        },
                        "name": "abi_decode_uint80",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "230:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "241:5:7",
                            "type": ""
                          }
                        ],
                        "src": "203:175:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "440:147:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "450:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "472:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "459:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "459:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "450:5:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "565:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "574:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "577:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "567:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "567:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "567:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "501:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "512:5:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "519:42:7",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "508:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "508:54:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "498:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "498:65:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "491:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "491:73:7"
                              },
                              "nodeType": "YulIf",
                              "src": "488:93:7"
                            }
                          ]
                        },
                        "name": "abi_decode_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "419:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "430:5:7",
                            "type": ""
                          }
                        ],
                        "src": "383:204:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "686:180:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "732:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "741:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "744:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "734:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "734:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "734:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "707:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "716:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "703:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "703:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "728:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "699:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "699:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "696:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "757:38:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "785:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint80",
                                  "nodeType": "YulIdentifier",
                                  "src": "767:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "767:28:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "757:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "804:56:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "845:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "856:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "841:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "841:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_payable",
                                  "nodeType": "YulIdentifier",
                                  "src": "814:26:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "814:46:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "804:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint80t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "644:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "655:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "667:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "675:6:7",
                            "type": ""
                          }
                        ],
                        "src": "592:274:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "931:94:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "941:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "963:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "950:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "950:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "941:5:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1003:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1012:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1015:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1005:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1005:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1005:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "992:5:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "999:1:7",
                                        "type": "",
                                        "value": "3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "989:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "989:12:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "982:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "982:20:7"
                              },
                              "nodeType": "YulIf",
                              "src": "979:40:7"
                            }
                          ]
                        },
                        "name": "abi_decode_enum_RulingOptions",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "910:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "921:5:7",
                            "type": ""
                          }
                        ],
                        "src": "871:154:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1134:178:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1180:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1189:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1192:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1182:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1182:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1182:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1155:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1164:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1151:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1151:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1176:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1147:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1147:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1144:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1205:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1228:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1215:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1215:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1205:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1247:59:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1291:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1302:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1287:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1287:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_enum_RulingOptions",
                                  "nodeType": "YulIdentifier",
                                  "src": "1257:29:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1257:49:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1247:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_enum$_RulingOptions_$295",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1092:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1103:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1115:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1123:6:7",
                            "type": ""
                          }
                        ],
                        "src": "1030:282:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1412:92:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1422:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1434:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1445:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1430:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1430:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1422:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1464:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "1489:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1482:6:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1482:14:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1475:6:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1475:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1457:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1457:41:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1457:41:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1381:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1392:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1403:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1317:187:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1578:115:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1624:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1633:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1636:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1626:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1626:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1626:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1599:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1608:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1595:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1595:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1620:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1591:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1591:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1588:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1649:38:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1677:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint80",
                                  "nodeType": "YulIdentifier",
                                  "src": "1659:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1659:28:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1649:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint80",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1544:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1555:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1567:6:7",
                            "type": ""
                          }
                        ],
                        "src": "1509:184:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1799:76:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1809:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1821:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1832:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1817:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1817:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1809:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1851:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1862:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1844:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1844:25:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1844:25:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1768:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1779:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1790:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1698:177:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1950:110:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1996:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2005:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2008:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1998:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1998:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1998:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1971:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1980:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1967:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1967:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1992:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1963:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1963:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1960:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2021:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2044:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2031:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2031:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2021:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1916:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1927:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1939:6:7",
                            "type": ""
                          }
                        ],
                        "src": "1880:180:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2138:275:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2187:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2196:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2199:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2189:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2189:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2189:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2166:6:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2174:4:7",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2162:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2162:17:7"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "2181:3:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2158:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2158:27:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2151:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2151:35:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2148:55:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2212:30:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2235:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2222:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2222:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2212:6:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2285:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2294:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2297:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2287:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2287:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2287:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2257:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2265:18:7",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2254:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2254:30:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2251:50:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2310:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2326:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2334:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2322:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2322:17:7"
                              },
                              "variableNames": [
                                {
                                  "name": "arrayPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2310:8:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2391:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2400:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2403:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2393:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2393:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2393:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2362:6:7"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "2370:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2358:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2358:19:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2379:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2354:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2354:30:7"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "2386:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2351:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2351:39:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2348:59:7"
                            }
                          ]
                        },
                        "name": "abi_decode_string_calldata",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2101:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2109:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulTypedName",
                            "src": "2117:8:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2127:6:7",
                            "type": ""
                          }
                        ],
                        "src": "2065:348:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2539:519:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2585:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2594:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2597:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2587:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2587:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2587:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2560:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2569:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2556:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2556:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2581:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2552:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2552:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2549:52:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2610:37:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2637:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2624:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2624:23:7"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "2614:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2690:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2699:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2702:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2692:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2692:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2692:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2662:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2670:18:7",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2659:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2659:30:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2656:50:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2715:85:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2772:9:7"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2783:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2768:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2768:22:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2792:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "2741:26:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2741:59:7"
                              },
                              "variables": [
                                {
                                  "name": "value0_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2719:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value1_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2729:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2809:18:7",
                              "value": {
                                "name": "value0_1",
                                "nodeType": "YulIdentifier",
                                "src": "2819:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2809:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2836:18:7",
                              "value": {
                                "name": "value1_1",
                                "nodeType": "YulIdentifier",
                                "src": "2846:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2836:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2863:45:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2893:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2904:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2889:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2889:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2876:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2876:32:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2867:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2956:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2965:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2968:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2958:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2958:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2958:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2930:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2941:5:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2948:4:7",
                                            "type": "",
                                            "value": "0xff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2937:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2937:16:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2927:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2927:27:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2920:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2920:35:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2917:55:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2981:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2991:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2981:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3005:47:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3037:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3048:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3033:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3033:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint80",
                                  "nodeType": "YulIdentifier",
                                  "src": "3015:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3015:37:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "3005:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_string_calldata_ptrt_uint8t_uint80",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2481:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2492:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2504:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2512:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2520:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2528:6:7",
                            "type": ""
                          }
                        ],
                        "src": "2418:640:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3180:125:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3190:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3202:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3213:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3198:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3198:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3190:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3232:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3247:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3255:42:7",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3243:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3243:55:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3225:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3225:74:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3225:74:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3149:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3160:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3171:4:7",
                            "type": ""
                          }
                        ],
                        "src": "3063:242:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3397:161:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3443:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3452:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3455:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3445:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3445:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3445:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3418:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3427:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3414:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3414:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3439:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3410:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3410:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "3407:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3468:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3491:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3478:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3478:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3468:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3510:42:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3537:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3548:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3533:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3533:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3520:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3520:32:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3510:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3355:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3366:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3378:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3386:6:7",
                            "type": ""
                          }
                        ],
                        "src": "3310:248:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3595:152:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3612:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3615:77:7",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3605:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3605:88:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3605:88:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3709:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3712:4:7",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3702:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3702:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3702:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3733:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3736:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3726:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3726:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3726:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "3563:184:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3827:557:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3837:28:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3847:18:7",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3841:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3892:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "3894:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3894:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3894:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3880:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3888:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3877:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3877:14:7"
                              },
                              "nodeType": "YulIf",
                              "src": "3874:40:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3923:17:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3937:2:7",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3933:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3933:7:7"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "3927:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3949:23:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3969:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3963:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3963:9:7"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "3953:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3981:73:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4003:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "length",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4027:6:7"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "4035:2:7",
                                                    "type": "",
                                                    "value": "31"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4023:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "4023:15:7"
                                              },
                                              {
                                                "name": "_2",
                                                "nodeType": "YulIdentifier",
                                                "src": "4040:2:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "4019:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4019:24:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4045:2:7",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4015:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4015:33:7"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "4050:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4011:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4011:42:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3999:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3999:55:7"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "3985:10:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4113:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "4115:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4115:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4115:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4072:10:7"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4084:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "4069:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4069:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4092:10:7"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4104:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "4089:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4089:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "4066:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4066:46:7"
                              },
                              "nodeType": "YulIf",
                              "src": "4063:72:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4151:2:7",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4155:10:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4144:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4144:22:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4144:22:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4175:15:7",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "4184:6:7"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "4175:5:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4206:6:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4214:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4199:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4199:22:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4199:22:7"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4259:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4268:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4271:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4261:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4261:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4261:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "4240:3:7"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "4245:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4236:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4236:16:7"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "4254:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4233:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4233:25:7"
                              },
                              "nodeType": "YulIf",
                              "src": "4230:45:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4301:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4309:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4297:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4297:17:7"
                                  },
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "4316:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4321:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "4284:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4284:44:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4284:44:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "4352:6:7"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "4360:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4348:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4348:19:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4369:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4344:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4344:30:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4376:1:7",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4337:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4337:41:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4337:41:7"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_string",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "3796:3:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3801:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3809:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "3817:5:7",
                            "type": ""
                          }
                        ],
                        "src": "3752:632:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4495:700:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4541:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4550:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4553:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4543:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4543:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4543:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4516:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4525:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4512:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4512:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4537:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4508:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4508:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "4505:52:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4566:37:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4593:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4580:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4580:23:7"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "4570:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4612:28:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4622:18:7",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4616:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4667:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4676:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4679:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4669:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4669:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4669:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4655:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4663:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4652:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4652:14:7"
                              },
                              "nodeType": "YulIf",
                              "src": "4649:34:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4692:32:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4706:9:7"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4717:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4702:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4702:22:7"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "4696:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4772:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4781:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4784:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4774:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4774:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4774:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "4751:2:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4755:4:7",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4747:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4747:13:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4762:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "4743:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4743:27:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4736:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4736:35:7"
                              },
                              "nodeType": "YulIf",
                              "src": "4733:55:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4797:86:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "4846:2:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4850:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4842:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4842:13:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "4870:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4857:12:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4857:16:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4875:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "4807:34:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4807:76:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4797:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4892:50:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4925:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4936:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4921:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4921:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4908:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4908:34:7"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4896:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4971:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4980:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4983:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4973:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4973:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4973:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4957:8:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4967:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4954:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4954:16:7"
                              },
                              "nodeType": "YulIf",
                              "src": "4951:36:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4996:34:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5010:9:7"
                                  },
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5021:8:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5006:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5006:24:7"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "5000:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5078:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5087:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5090:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5080:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5080:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5080:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "5057:2:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5061:4:7",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5053:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5053:13:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5068:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "5049:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5049:27:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5042:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5042:35:7"
                              },
                              "nodeType": "YulIf",
                              "src": "5039:55:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5103:86:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "5152:2:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5156:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5148:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5148:13:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "5176:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5163:12:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5163:16:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5181:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "5113:34:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5113:76:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5103:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4453:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4464:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4476:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4484:6:7",
                            "type": ""
                          }
                        ],
                        "src": "4389:806:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5276:73:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5293:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5298:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5286:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5286:19:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5286:19:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5314:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5333:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5338:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5329:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5329:14:7"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5314:11:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_bytes",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5244:3:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "5249:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "5260:11:7",
                            "type": ""
                          }
                        ],
                        "src": "5200:149:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5403:422:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5413:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5433:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5427:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5427:12:7"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "5417:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5455:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5460:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5448:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5448:19:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5448:19:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5476:10:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5485:1:7",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "5480:1:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5547:110:7",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5561:14:7",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5571:4:7",
                                      "type": "",
                                      "value": "0x20"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulTypedName",
                                        "src": "5565:2:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "pos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5603:3:7"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5608:1:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "5599:3:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "5599:11:7"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "5612:2:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5595:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5595:20:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5631:5:7"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5638:1:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5627:3:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "5627:13:7"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5642:2:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "5623:3:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "5623:22:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "5617:5:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5617:29:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5588:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5588:59:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5588:59:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "5506:1:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5509:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5503:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5503:13:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "5517:21:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5519:17:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5528:1:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5531:4:7",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5524:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5524:12:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "5519:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "5499:3:7",
                                "statements": []
                              },
                              "src": "5495:162:7"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5691:62:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "pos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5720:3:7"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5725:6:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "5716:3:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "5716:16:7"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "5734:4:7",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5712:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5712:27:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5741:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5705:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5705:38:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5705:38:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "5672:1:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5675:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5669:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5669:13:7"
                              },
                              "nodeType": "YulIf",
                              "src": "5666:87:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5762:57:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5777:3:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "5790:6:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5798:2:7",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "5786:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5786:15:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5807:2:7",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "5803:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5803:7:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "5782:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5782:29:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5773:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5773:39:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5814:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5769:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5769:50:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5762:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_bytes",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5380:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5387:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5395:3:7",
                            "type": ""
                          }
                        ],
                        "src": "5354:471:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5949:98:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5966:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5977:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5959:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5959:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5959:21:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5989:52:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6014:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6026:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6037:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6022:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6022:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "5997:16:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5997:44:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5989:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5918:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5929:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5940:4:7",
                            "type": ""
                          }
                        ],
                        "src": "5830:217:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6084:152:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6101:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6104:77:7",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6094:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6094:88:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6094:88:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6198:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6201:4:7",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6191:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6191:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6191:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6222:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6225:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "6215:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6215:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6215:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "6052:184:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6296:243:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6338:168:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6359:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6362:77:7",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6352:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6352:88:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6352:88:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6460:1:7",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6463:4:7",
                                          "type": "",
                                          "value": "0x21"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6453:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6453:15:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6453:15:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6488:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6491:4:7",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6481:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6481:15:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6481:15:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6319:5:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6326:1:7",
                                        "type": "",
                                        "value": "3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "6316:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6316:12:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6309:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6309:20:7"
                              },
                              "nodeType": "YulIf",
                              "src": "6306:200:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6522:3:7"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6527:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6515:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6515:18:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6515:18:7"
                            }
                          ]
                        },
                        "name": "abi_encode_enum_RulingOptions",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6280:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6287:3:7",
                            "type": ""
                          }
                        ],
                        "src": "6241:298:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6776:378:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6786:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6798:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6809:3:7",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6794:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6794:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6786:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6829:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6844:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6852:42:7",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6840:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6840:55:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6822:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6822:74:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6822:74:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6935:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6947:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6958:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6943:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6943:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_enum_RulingOptions",
                                  "nodeType": "YulIdentifier",
                                  "src": "6905:29:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6905:57:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6905:57:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6982:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6993:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6978:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6978:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "7002:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7010:4:7",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6998:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6998:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6971:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6971:45:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6971:45:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7036:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7047:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7032:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7032:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value3",
                                            "nodeType": "YulIdentifier",
                                            "src": "7066:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "7059:6:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7059:14:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "7052:6:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7052:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7025:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7025:50:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7025:50:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7095:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7106:3:7",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7091:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7091:19:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "7116:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7124:22:7",
                                        "type": "",
                                        "value": "0xffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "7112:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7112:35:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7084:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7084:64:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7084:64:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_payable_t_enum$_RulingOptions_$295_t_uint8_t_bool_t_uint80__to_t_address_payable_t_uint8_t_uint8_t_bool_t_uint80__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6713:9:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "6724:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "6732:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "6740:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6748:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6756:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6767:4:7",
                            "type": ""
                          }
                        ],
                        "src": "6544:610:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7288:119:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7298:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7310:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7321:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7306:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7306:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7298:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7340:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7351:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7333:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7333:25:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7333:25:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7378:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7389:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7374:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7374:18:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7394:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7367:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7367:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7367:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7249:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7260:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7268:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7279:4:7",
                            "type": ""
                          }
                        ],
                        "src": "7159:248:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7586:626:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7632:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7641:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7644:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7634:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7634:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7634:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7607:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7616:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "7603:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7603:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7628:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7599:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7599:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "7596:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7657:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7680:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7667:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7667:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "7657:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7699:56:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7740:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7751:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7736:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7736:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_payable",
                                  "nodeType": "YulIdentifier",
                                  "src": "7709:26:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7709:46:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "7699:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7764:46:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7795:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7806:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7791:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7791:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7778:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7778:32:7"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "7768:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7819:28:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7829:18:7",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7823:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7874:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7883:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7886:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7876:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7876:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7876:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "7862:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7870:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7859:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7859:14:7"
                              },
                              "nodeType": "YulIf",
                              "src": "7856:34:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7899:32:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7913:9:7"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "7924:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7909:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7909:22:7"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "7903:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7979:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7988:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7991:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7981:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7981:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7981:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "7958:2:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7962:4:7",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7954:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7954:13:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7969:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "7950:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7950:27:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7943:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7943:35:7"
                              },
                              "nodeType": "YulIf",
                              "src": "7940:55:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8004:30:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8031:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8018:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8018:16:7"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "8008:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8061:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8070:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8073:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8063:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8063:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8063:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8049:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8057:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8046:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8046:14:7"
                              },
                              "nodeType": "YulIf",
                              "src": "8043:34:7"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8135:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8144:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8147:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8137:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8137:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8137:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "8100:2:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "8108:1:7",
                                                "type": "",
                                                "value": "5"
                                              },
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "8111:6:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "8104:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8104:14:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8096:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8096:23:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8121:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8092:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8092:32:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8126:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8089:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8089:45:7"
                              },
                              "nodeType": "YulIf",
                              "src": "8086:65:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8160:21:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8174:2:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8178:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8170:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8170:11:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "8160:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8190:16:7",
                              "value": {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "8200:6:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "8190:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_address_payablet_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7528:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "7539:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7551:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7559:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "7567:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "7575:6:7",
                            "type": ""
                          }
                        ],
                        "src": "7412:800:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8346:243:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8392:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8401:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8404:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8394:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8394:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8394:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8367:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8376:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8363:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8363:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8388:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8359:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8359:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "8356:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8417:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8440:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8427:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8427:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "8417:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8459:56:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8500:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8511:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8496:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8496:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_payable",
                                  "nodeType": "YulIdentifier",
                                  "src": "8469:26:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8469:46:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "8459:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8524:59:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8568:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8579:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8564:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8564:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_enum_RulingOptions",
                                  "nodeType": "YulIdentifier",
                                  "src": "8534:29:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8534:49:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "8524:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_address_payablet_enum$_RulingOptions_$295",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8296:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "8307:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8319:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8327:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "8335:6:7",
                            "type": ""
                          }
                        ],
                        "src": "8217:372:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8714:125:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8724:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8736:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8747:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8732:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8732:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8724:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8766:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "8781:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8789:42:7",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "8777:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8777:55:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8759:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8759:74:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8759:74:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IArbitrator_$249__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8683:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8694:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8705:4:7",
                            "type": ""
                          }
                        ],
                        "src": "8594:245:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9037:306:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9047:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9059:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9070:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9055:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9055:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9047:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9090:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "9105:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9113:42:7",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "9101:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9101:55:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9083:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9083:74:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9083:74:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9177:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9188:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9173:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9173:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "9197:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9205:10:7",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "9193:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9193:23:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9166:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9166:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9166:51:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9237:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9248:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9233:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9233:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "9257:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9265:16:7",
                                        "type": "",
                                        "value": "0xffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "9253:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9253:29:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9226:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9226:57:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9226:57:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9303:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9314:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9299:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9299:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value3",
                                        "nodeType": "YulIdentifier",
                                        "src": "9323:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9331:4:7",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "9319:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9319:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9292:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9292:45:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9292:45:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_payable_t_uint32_t_uint56_t_uint8__to_t_address_payable_t_uint32_t_uint56_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8982:9:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "8993:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "9001:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "9009:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9017:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9028:4:7",
                            "type": ""
                          }
                        ],
                        "src": "8844:499:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9591:744:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9601:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9613:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9624:3:7",
                                    "type": "",
                                    "value": "224"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9609:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9609:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9601:4:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9637:20:7",
                              "value": {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9648:9:7"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulTypedName",
                                  "src": "9641:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9666:16:7",
                              "value": {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9673:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9666:3:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9691:20:7",
                              "value": {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "9705:6:7"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "9695:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9720:10:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9729:1:7",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "9724:1:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9786:163:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "9807:3:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "srcPtr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9832:6:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mload",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9826:5:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "9826:13:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "iszero",
                                                "nodeType": "YulIdentifier",
                                                "src": "9819:6:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "9819:21:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "iszero",
                                            "nodeType": "YulIdentifier",
                                            "src": "9812:6:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9812:29:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "9800:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9800:42:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9800:42:7"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "9855:14:7",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9865:4:7",
                                      "type": "",
                                      "value": "0x20"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulTypedName",
                                        "src": "9859:2:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "9882:19:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "9893:3:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "9898:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "9889:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9889:12:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "9882:3:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "9914:25:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "9928:6:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "9936:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "9924:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9924:15:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "9914:6:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "9750:1:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9753:4:7",
                                    "type": "",
                                    "value": "0x03"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9747:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9747:11:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "9759:18:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "9761:14:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "9770:1:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9773:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "9766:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9766:9:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "9761:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "9743:3:7",
                                "statements": []
                              },
                              "src": "9739:210:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9958:31:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9975:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9986:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9971:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9971:18:7"
                              },
                              "variables": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulTypedName",
                                  "src": "9962:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9998:14:7",
                              "value": {
                                "name": "pos_1",
                                "nodeType": "YulIdentifier",
                                "src": "10007:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "9998:5:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10021:22:7",
                              "value": {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "10037:6:7"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr_1",
                                  "nodeType": "YulTypedName",
                                  "src": "10025:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10052:12:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10063:1:7",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i_1",
                                  "nodeType": "YulTypedName",
                                  "src": "10056:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10126:159:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "10147:5:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "srcPtr_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "10160:8:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "10154:5:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10154:15:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "10140:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10140:30:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10140:30:7"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "10183:14:7",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10193:4:7",
                                      "type": "",
                                      "value": "0x20"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulTypedName",
                                        "src": "10187:2:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "10210:23:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "10223:5:7"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "10230:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10219:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10219:14:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "10210:5:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "10246:29:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "10262:8:7"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "10272:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10258:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10258:17:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "10246:8:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10084:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10089:4:7",
                                    "type": "",
                                    "value": "0x03"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10081:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10081:13:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "10095:22:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "10097:18:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "10108:3:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10113:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10104:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10104:11:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "10097:3:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "10077:3:7",
                                "statements": []
                              },
                              "src": "10073:212:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10305:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10316:3:7",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10301:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10301:19:7"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "10322:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10294:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10294:35:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10294:35:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_bool_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr_t_uint256__to_t_array$_t_bool_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9544:9:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "9555:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "9563:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9571:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9582:4:7",
                            "type": ""
                          }
                        ],
                        "src": "9348:987:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10418:124:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10464:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10473:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10476:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "10466:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10466:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10466:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "10439:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10448:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "10435:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10435:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10460:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10431:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10431:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "10428:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10489:47:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10526:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_payable",
                                  "nodeType": "YulIdentifier",
                                  "src": "10499:26:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10499:37:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "10489:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10384:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "10395:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10407:6:7",
                            "type": ""
                          }
                        ],
                        "src": "10340:202:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10654:372:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10700:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10709:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10712:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "10702:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10702:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10702:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "10675:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10684:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "10671:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10671:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10696:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10667:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10667:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "10664:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10725:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10748:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10735:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10735:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "10725:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10767:46:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10798:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10809:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10794:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10794:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10781:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10781:32:7"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "10771:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10856:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10865:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10868:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "10858:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10858:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10858:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "10828:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10836:18:7",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10825:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10825:30:7"
                              },
                              "nodeType": "YulIf",
                              "src": "10822:50:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10881:85:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10938:9:7"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "10949:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10934:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10934:22:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "10958:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "10907:26:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10907:59:7"
                              },
                              "variables": [
                                {
                                  "name": "value1_1",
                                  "nodeType": "YulTypedName",
                                  "src": "10885:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value2_1",
                                  "nodeType": "YulTypedName",
                                  "src": "10895:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10975:18:7",
                              "value": {
                                "name": "value1_1",
                                "nodeType": "YulIdentifier",
                                "src": "10985:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "10975:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11002:18:7",
                              "value": {
                                "name": "value2_1",
                                "nodeType": "YulIdentifier",
                                "src": "11012:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "11002:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_string_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10604:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "10615:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10627:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10635:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "10643:6:7",
                            "type": ""
                          }
                        ],
                        "src": "10547:479:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11126:175:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11172:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11181:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11184:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "11174:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11174:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11174:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "11147:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11156:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11143:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11143:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11168:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11139:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11139:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "11136:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11197:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11220:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11207:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11207:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "11197:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11239:56:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11280:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11291:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11276:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11276:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_payable",
                                  "nodeType": "YulIdentifier",
                                  "src": "11249:26:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11249:46:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "11239:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11084:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "11095:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11107:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "11115:6:7",
                            "type": ""
                          }
                        ],
                        "src": "11031:270:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11535:1134:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11545:32:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11563:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11574:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11559:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11559:18:7"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "11549:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11593:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11604:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11586:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11586:25:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11586:25:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11620:12:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11630:2:7",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "11624:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11652:9:7"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "11663:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11648:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11648:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11668:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11641:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11641:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11641:30:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11680:17:7",
                              "value": {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "11691:6:7"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulTypedName",
                                  "src": "11684:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11706:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11726:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11720:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11720:13:7"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "11710:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11749:6:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11757:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11742:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11742:22:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11742:22:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11773:25:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11784:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11795:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11780:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11780:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11773:3:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11807:53:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11829:9:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "11844:1:7",
                                            "type": "",
                                            "value": "5"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "11847:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "11840:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11840:14:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11825:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11825:30:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11857:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11821:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11821:39:7"
                              },
                              "variables": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulTypedName",
                                  "src": "11811:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11869:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11887:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11895:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11883:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11883:15:7"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "11873:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11907:10:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11916:1:7",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "11911:1:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11926:12:7",
                              "value": {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "11937:1:7"
                              },
                              "variables": [
                                {
                                  "name": "i_1",
                                  "nodeType": "YulTypedName",
                                  "src": "11930:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12002:638:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "12023:3:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "tail_2",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12036:6:7"
                                                },
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12044:9:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "12032:3:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "12032:22:7"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "12060:2:7",
                                                  "type": "",
                                                  "value": "95"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "12056:3:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "12056:7:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "12028:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12028:36:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "12016:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12016:49:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12016:49:7"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "12078:23:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "12094:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "12088:5:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12088:13:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulTypedName",
                                        "src": "12082:2:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "12114:19:7",
                                    "value": {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "12127:6:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "pos_1",
                                        "nodeType": "YulTypedName",
                                        "src": "12118:5:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "12146:25:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "12168:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "12162:5:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12162:9:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "length_1",
                                        "nodeType": "YulTypedName",
                                        "src": "12150:8:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "tail_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "12191:6:7"
                                        },
                                        {
                                          "name": "length_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "12199:8:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "12184:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12184:24:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12184:24:7"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "12221:24:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "tail_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "12234:6:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "12242:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "12230:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12230:15:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "12221:5:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "12258:27:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "12278:2:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "12282:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "12274:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12274:11:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "srcPtr_1",
                                        "nodeType": "YulTypedName",
                                        "src": "12262:8:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "12298:12:7",
                                    "value": {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "12309:1:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "i_2",
                                        "nodeType": "YulTypedName",
                                        "src": "12302:3:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "12384:148:7",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "pos_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "12409:5:7"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "srcPtr_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "12422:8:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12416:5:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12416:15:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "12402:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12402:30:7"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "12402:30:7"
                                        },
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "12449:23:7",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "pos_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "12462:5:7"
                                              },
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "12469:2:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "12458:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12458:14:7"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "pos_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "12449:5:7"
                                            }
                                          ]
                                        },
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "12489:29:7",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "srcPtr_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "12505:8:7"
                                              },
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "12515:2:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "12501:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12501:17:7"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "srcPtr_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "12489:8:7"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "i_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "12334:3:7"
                                        },
                                        {
                                          "name": "length_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "12339:8:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "12331:2:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12331:17:7"
                                    },
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nodeType": "YulBlock",
                                      "src": "12349:22:7",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "12351:18:7",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "i_2",
                                                "nodeType": "YulIdentifier",
                                                "src": "12362:3:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "12367:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "12358:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12358:11:7"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "i_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "12351:3:7"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nodeType": "YulBlock",
                                      "src": "12327:3:7",
                                      "statements": []
                                    },
                                    "src": "12323:209:7"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "12545:15:7",
                                    "value": {
                                      "name": "pos_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "12555:5:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "tail_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "12545:6:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "12573:25:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "12587:6:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "12595:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "12583:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12583:15:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "12573:6:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "12611:19:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "12622:3:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "12627:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "12618:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12618:12:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "12611:3:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11958:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11963:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11955:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11955:15:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "11971:22:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "11973:18:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "11984:3:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11989:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "11980:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11980:11:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "11973:3:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "11951:3:7",
                                "statements": []
                              },
                              "src": "11947:693:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12649:14:7",
                              "value": {
                                "name": "tail_2",
                                "nodeType": "YulIdentifier",
                                "src": "12657:6:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12649:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11496:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "11507:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11515:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11526:4:7",
                            "type": ""
                          }
                        ],
                        "src": "11306:1363:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12795:195:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12841:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12850:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12853:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "12843:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12843:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12843:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "12816:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12825:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "12812:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12812:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12837:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "12808:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12808:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "12805:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12866:50:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12906:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_enum_RulingOptions",
                                  "nodeType": "YulIdentifier",
                                  "src": "12876:29:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12876:40:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "12866:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12925:59:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12969:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12980:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12965:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12965:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_enum_RulingOptions",
                                  "nodeType": "YulIdentifier",
                                  "src": "12935:29:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12935:49:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "12925:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_enum$_RulingOptions_$295t_enum$_RulingOptions_$295",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12753:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "12764:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12776:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "12784:6:7",
                            "type": ""
                          }
                        ],
                        "src": "12674:316:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13141:295:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13188:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13197:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13200:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "13190:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13190:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13190:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "13162:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13171:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "13158:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13158:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13183:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "13154:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13154:33:7"
                              },
                              "nodeType": "YulIf",
                              "src": "13151:53:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13213:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13236:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "13223:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13223:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "13213:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13255:56:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13296:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13307:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13292:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13292:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_payable",
                                  "nodeType": "YulIdentifier",
                                  "src": "13265:26:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13265:46:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "13255:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13320:42:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13347:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13358:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13343:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13343:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "13330:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13330:32:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "13320:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13371:59:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13415:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13426:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13411:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13411:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_enum_RulingOptions",
                                  "nodeType": "YulIdentifier",
                                  "src": "13381:29:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13381:49:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "13371:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_address_payablet_uint256t_enum$_RulingOptions_$295",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13083:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "13094:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "13106:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "13114:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "13122:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "13130:6:7",
                            "type": ""
                          }
                        ],
                        "src": "12995:441:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13562:98:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13579:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13590:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13572:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13572:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13572:21:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13602:52:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "13627:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13639:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13650:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13635:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13635:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "13610:16:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13610:44:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13602:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13531:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "13542:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13553:4:7",
                            "type": ""
                          }
                        ],
                        "src": "13441:219:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13839:225:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13856:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13867:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13849:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13849:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13849:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13890:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13901:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13886:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13886:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13906:2:7",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13879:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13879:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13879:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13929:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13940:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13925:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13925:18:7"
                                  },
                                  {
                                    "hexValue": "4f6e6c7920617574686f722063616e207472616e73666572206f776e65727368",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13945:34:7",
                                    "type": "",
                                    "value": "Only author can transfer ownersh"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13918:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13918:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13918:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14000:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14011:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13996:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13996:18:7"
                                  },
                                  {
                                    "hexValue": "69702e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14016:5:7",
                                    "type": "",
                                    "value": "ip."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13989:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13989:33:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13989:33:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14031:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14043:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14054:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14039:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14039:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14031:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_264afed15e2abe1afd48e9529ae4102fd34dc15becf22ac12086d34e9bca14d5__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13816:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13830:4:7",
                            "type": ""
                          }
                        ],
                        "src": "13665:399:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14150:103:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14196:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14205:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14208:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "14198:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14198:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14198:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "14171:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14180:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "14167:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14167:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14192:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "14163:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14163:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "14160:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14221:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14237:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "14231:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14231:16:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "14221:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14116:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "14127:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "14139:6:7",
                            "type": ""
                          }
                        ],
                        "src": "14069:184:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14356:147:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14402:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14411:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14414:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "14404:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14404:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14404:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "14377:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14386:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "14373:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14373:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14398:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "14369:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14369:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "14366:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14427:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14443:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "14437:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14437:16:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "14427:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14462:35:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14482:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14493:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14478:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14478:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "14472:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14472:25:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "14462:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14314:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "14325:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "14337:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "14345:6:7",
                            "type": ""
                          }
                        ],
                        "src": "14258:245:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14682:236:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14699:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14710:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14692:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14692:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14692:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14733:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14744:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14729:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14729:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14749:2:7",
                                    "type": "",
                                    "value": "46"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14722:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14722:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14722:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14772:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14783:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14768:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14768:18:7"
                                  },
                                  {
                                    "hexValue": "46756e64696e67206d757374206265206d6164652077697468696e2074686520",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14788:34:7",
                                    "type": "",
                                    "value": "Funding must be made within the "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14761:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14761:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14761:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14843:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14854:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14839:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14839:18:7"
                                  },
                                  {
                                    "hexValue": "61707065616c20706572696f642e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14859:16:7",
                                    "type": "",
                                    "value": "appeal period."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14832:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14832:44:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14832:44:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14885:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14897:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14908:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14893:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14893:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14885:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0345b6b07b3f7ea23ce7c0682ae193a7b3933d232b736d656630025e0007450f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14659:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14673:4:7",
                            "type": ""
                          }
                        ],
                        "src": "14508:410:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14955:152:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14972:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14975:77:7",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14965:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14965:88:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14965:88:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15069:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15072:4:7",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15062:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15062:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15062:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15093:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15096:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "15086:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15086:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15086:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14923:184:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15161:76:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15183:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "15185:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15185:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15185:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15177:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15180:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15174:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15174:8:7"
                              },
                              "nodeType": "YulIf",
                              "src": "15171:34:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15214:17:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15226:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15229:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "15222:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15222:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "15214:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "15143:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "15146:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "15152:4:7",
                            "type": ""
                          }
                        ],
                        "src": "15112:125:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15294:116:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15353:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "15355:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15355:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15355:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "15325:1:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "15318:6:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15318:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "15311:6:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15311:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "15333:1:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "15344:1:7",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "15340:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "15340:6:7"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "15348:1:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "15336:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15336:14:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "15330:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15330:21:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "15307:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15307:45:7"
                              },
                              "nodeType": "YulIf",
                              "src": "15304:71:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15384:20:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15399:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15402:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "15395:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15395:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "15384:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "15273:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "15276:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "15282:7:7",
                            "type": ""
                          }
                        ],
                        "src": "15242:168:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15461:228:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15492:168:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15513:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15516:77:7",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15506:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15506:88:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15506:88:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15614:1:7",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15617:4:7",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15607:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15607:15:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15607:15:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15642:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15645:4:7",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15635:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15635:15:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15635:15:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15481:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15474:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15474:9:7"
                              },
                              "nodeType": "YulIf",
                              "src": "15471:189:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15669:14:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15678:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15681:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "15674:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15674:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "15669:1:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "15446:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "15449:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "15455:1:7",
                            "type": ""
                          }
                        ],
                        "src": "15415:274:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15742:80:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15769:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "15771:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15771:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15771:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15758:1:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "15765:1:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "15761:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15761:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15755:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15755:13:7"
                              },
                              "nodeType": "YulIf",
                              "src": "15752:39:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15800:16:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15811:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15814:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15807:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15807:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "15800:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "15725:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "15728:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "15734:3:7",
                            "type": ""
                          }
                        ],
                        "src": "15694:128:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16001:247:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16018:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16029:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16011:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16011:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16011:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16052:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16063:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16048:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16048:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16068:2:7",
                                    "type": "",
                                    "value": "57"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16041:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16041:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16041:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16091:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16102:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16087:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16087:18:7"
                                  },
                                  {
                                    "hexValue": "46756e64696e67206d757374206265206d6164652077697468696e2074686520",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16107:34:7",
                                    "type": "",
                                    "value": "Funding must be made within the "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16080:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16080:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16080:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16162:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16173:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16158:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16158:18:7"
                                  },
                                  {
                                    "hexValue": "66697273742068616c662061707065616c20706572696f642e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16178:27:7",
                                    "type": "",
                                    "value": "first half appeal period."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16151:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16151:55:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16151:55:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16215:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16227:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16238:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16223:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16223:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16215:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f3418d70ac679d1f67a83336adc36c46a5610f9d2455f76fc28495336bbc06ed__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15978:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15992:4:7",
                            "type": ""
                          }
                        ],
                        "src": "15827:421:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16285:152:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16302:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16305:77:7",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16295:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16295:88:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16295:88:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16399:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16402:4:7",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16392:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16392:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16392:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16423:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16426:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "16416:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16416:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16416:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "16253:184:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16497:382:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16507:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16521:1:7",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "16524:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "16517:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16517:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "16507:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "16538:38:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "16568:4:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16574:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "16564:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16564:12:7"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "16542:18:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "16615:31:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "16617:27:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "16631:6:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16639:4:7",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "16627:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16627:17:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "16617:6:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "16595:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "16588:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16588:26:7"
                              },
                              "nodeType": "YulIf",
                              "src": "16585:61:7"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "16705:168:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16726:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16729:77:7",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "16719:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16719:88:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16719:88:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16827:1:7",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16830:4:7",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "16820:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16820:15:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16820:15:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16855:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16858:4:7",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "16848:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16848:15:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16848:15:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "16661:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "16684:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16692:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "16681:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16681:14:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "16658:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16658:38:7"
                              },
                              "nodeType": "YulIf",
                              "src": "16655:218:7"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "16477:4:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "16486:6:7",
                            "type": ""
                          }
                        ],
                        "src": "16442:437:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16939:65:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16956:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "16959:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16949:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16949:14:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16949:14:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16972:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16990:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16993:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "16980:9:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16980:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "16972:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_bytes_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "16922:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "16930:4:7",
                            "type": ""
                          }
                        ],
                        "src": "16884:120:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17066:1039:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17076:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "17099:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nodeType": "YulIdentifier",
                                  "src": "17093:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17093:12:7"
                              },
                              "variables": [
                                {
                                  "name": "slotValue",
                                  "nodeType": "YulTypedName",
                                  "src": "17080:9:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17114:15:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17128:1:7",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "17118:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17138:11:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17148:1:7",
                                "type": "",
                                "value": "1"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "17142:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17158:28:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "17172:2:7"
                                  },
                                  {
                                    "name": "slotValue",
                                    "nodeType": "YulIdentifier",
                                    "src": "17176:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "17168:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17168:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "17158:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17195:44:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "slotValue",
                                    "nodeType": "YulIdentifier",
                                    "src": "17225:9:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "17236:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "17221:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17221:18:7"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "17199:18:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17278:31:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "17280:27:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "17294:6:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17302:4:7",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "17290:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17290:17:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "17280:6:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "17258:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "17251:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17251:26:7"
                              },
                              "nodeType": "YulIf",
                              "src": "17248:61:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17318:12:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17328:2:7",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "17322:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17389:168:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17410:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17413:77:7",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "17403:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17403:88:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17403:88:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17511:1:7",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17514:4:7",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "17504:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17504:15:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17504:15:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17539:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17542:4:7",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "17532:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17532:15:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17532:15:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "17345:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "17368:6:7"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "17376:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "17365:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17365:14:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "17342:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17342:38:7"
                              },
                              "nodeType": "YulIf",
                              "src": "17339:218:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17566:60:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17614:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "17619:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "17579:34:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17579:47:7"
                              },
                              "variables": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulTypedName",
                                  "src": "17570:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "17676:97:7",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "pos_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "17697:5:7"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "slotValue",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "17708:9:7"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "17723:3:7",
                                                      "type": "",
                                                      "value": "255"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "not",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "17719:3:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "17719:8:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "and",
                                                "nodeType": "YulIdentifier",
                                                "src": "17704:3:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "17704:24:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "17690:6:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "17690:39:7"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "17690:39:7"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "17742:21:7",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "pos_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "17753:5:7"
                                            },
                                            {
                                              "name": "_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "17760:2:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "17749:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "17749:14:7"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "ret",
                                            "nodeType": "YulIdentifier",
                                            "src": "17742:3:7"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "17669:104:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17674:1:7",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "17789:310:7",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "17803:50:7",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "value",
                                              "nodeType": "YulIdentifier",
                                              "src": "17847:5:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_bytes_storage",
                                            "nodeType": "YulIdentifier",
                                            "src": "17818:28:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "17818:35:7"
                                        },
                                        "variables": [
                                          {
                                            "name": "dataPos",
                                            "nodeType": "YulTypedName",
                                            "src": "17807:7:7",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "17866:10:7",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17875:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulTypedName",
                                            "src": "17870:1:7",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "17943:113:7",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "pos_1",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "17972:5:7"
                                                      },
                                                      {
                                                        "name": "i",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "17979:1:7"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "17968:3:7"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "17968:13:7"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "dataPos",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "17989:7:7"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "sload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "17983:5:7"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "17983:14:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "17961:6:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "17961:37:7"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "17961:37:7"
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "18015:27:7",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dataPos",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "18030:7:7"
                                                  },
                                                  {
                                                    "name": "_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "18039:2:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "18026:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "18026:16:7"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dataPos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "18015:7:7"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "17900:1:7"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "17903:6:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "17897:2:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "17897:13:7"
                                        },
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nodeType": "YulBlock",
                                          "src": "17911:19:7",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "17913:15:7",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "17922:1:7"
                                                  },
                                                  {
                                                    "name": "_2",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "17925:2:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "17918:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "17918:10:7"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "17913:1:7"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nodeType": "YulBlock",
                                          "src": "17893:3:7",
                                          "statements": []
                                        },
                                        "src": "17889:167:7"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "18069:20:7",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "pos_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "18080:5:7"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "18087:1:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "18076:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "18076:13:7"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "ret",
                                            "nodeType": "YulIdentifier",
                                            "src": "18069:3:7"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "17782:317:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17787:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "17642:18:7"
                              },
                              "nodeType": "YulSwitch",
                              "src": "17635:464:7"
                            }
                          ]
                        },
                        "name": "abi_encode_bytes_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "17043:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "17050:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "17058:3:7",
                            "type": ""
                          }
                        ],
                        "src": "17009:1096:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18254:149:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18271:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "18282:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18264:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18264:25:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18264:25:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18309:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18320:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18305:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18305:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18325:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18298:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18298:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18298:30:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18337:60:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "18370:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18382:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18393:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18378:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18378:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bytes_storage",
                                  "nodeType": "YulIdentifier",
                                  "src": "18345:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18345:52:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18337:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_bytes_storage__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18215:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "18226:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "18234:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18245:4:7",
                            "type": ""
                          }
                        ],
                        "src": "18110:293:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18582:223:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18599:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18610:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18592:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18592:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18592:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18633:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18644:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18629:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18629:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18649:2:7",
                                    "type": "",
                                    "value": "33"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18622:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18622:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18622:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18672:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18683:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18668:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18668:18:7"
                                  },
                                  {
                                    "hexValue": "41707065616c206665652068617320616c7265616479206265656e2070616964",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18688:34:7",
                                    "type": "",
                                    "value": "Appeal fee has already been paid"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18661:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18661:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18661:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18743:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18754:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18739:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18739:18:7"
                                  },
                                  {
                                    "hexValue": "2e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18759:3:7",
                                    "type": "",
                                    "value": "."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18732:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18732:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18732:31:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18772:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18784:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18795:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18780:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18780:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18772:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c2f2256a77e1cd7cdc564a3b966df4f3e5bfbdc15f00156637ffbff138e529be__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18559:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18573:4:7",
                            "type": ""
                          }
                        ],
                        "src": "18408:397:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18954:142:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18964:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18976:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18987:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18972:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18972:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18964:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19029:6:7"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19037:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_enum_RulingOptions",
                                  "nodeType": "YulIdentifier",
                                  "src": "18999:29:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18999:48:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18999:48:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19067:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19078:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19063:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19063:18:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19083:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19056:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19056:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19056:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_enum$_RulingOptions_$295_t_uint256__to_t_uint8_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18915:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "18926:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "18934:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18945:4:7",
                            "type": ""
                          }
                        ],
                        "src": "18810:286:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19147:167:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "19157:32:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19167:22:7",
                                "type": "",
                                "value": "0xffffffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "19161:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "19198:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "19217:5:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19224:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "19213:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19213:14:7"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "19202:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "19255:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "19257:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "19257:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "19257:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19242:7:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19251:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "19239:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19239:15:7"
                              },
                              "nodeType": "YulIf",
                              "src": "19236:41:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19286:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19297:7:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19306:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19293:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19293:15:7"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "19286:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint80",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "19129:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "19139:3:7",
                            "type": ""
                          }
                        ],
                        "src": "19101:213:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19367:185:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "19377:32:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19387:22:7",
                                "type": "",
                                "value": "0xffffffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "19381:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "19418:21:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "19433:1:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19436:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "19429:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19429:10:7"
                              },
                              "variables": [
                                {
                                  "name": "x_1",
                                  "nodeType": "YulTypedName",
                                  "src": "19422:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "19448:21:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "19463:1:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19466:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "19459:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19459:10:7"
                              },
                              "variables": [
                                {
                                  "name": "y_1",
                                  "nodeType": "YulTypedName",
                                  "src": "19452:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "19494:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "19496:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "19496:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "19496:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19484:3:7"
                                  },
                                  {
                                    "name": "y_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19489:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "19481:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19481:12:7"
                              },
                              "nodeType": "YulIf",
                              "src": "19478:38:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19525:21:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19537:3:7"
                                  },
                                  {
                                    "name": "y_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19542:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "19533:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19533:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "19525:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint80",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "19349:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "19352:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "19358:4:7",
                            "type": ""
                          }
                        ],
                        "src": "19319:233:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19731:244:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19748:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19759:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19741:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19741:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19741:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19782:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19793:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19778:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19778:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19798:2:7",
                                    "type": "",
                                    "value": "54"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19771:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19771:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19771:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19821:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19832:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19817:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19817:18:7"
                                  },
                                  {
                                    "hexValue": "5468652074617820726174652063616e206f6e6c7920626520696e6372656173",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "19837:34:7",
                                    "type": "",
                                    "value": "The tax rate can only be increas"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19810:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19810:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19810:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19892:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19903:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19888:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19888:18:7"
                                  },
                                  {
                                    "hexValue": "65642062792061206d6178696d756d206f6620323525",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "19908:24:7",
                                    "type": "",
                                    "value": "ed by a maximum of 25%"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19881:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19881:52:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19881:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19942:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19954:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19965:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19950:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19950:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19942:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5943b819c05c7059125985bc4ac5cf738c94c0822c506b598ab2eced554e2f50__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19708:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19722:4:7",
                            "type": ""
                          }
                        ],
                        "src": "19557:418:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20154:178:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20171:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20182:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20164:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20164:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20164:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20205:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20216:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20201:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20201:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20221:2:7",
                                    "type": "",
                                    "value": "28"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20194:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20194:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20194:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20244:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20255:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20240:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20240:18:7"
                                  },
                                  {
                                    "hexValue": "546869732063617465676f727920646f6573206e6f74206578697374",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "20260:30:7",
                                    "type": "",
                                    "value": "This category does not exist"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20233:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20233:58:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20233:58:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20300:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20312:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20323:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20308:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20308:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20300:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_de142eb746bdd0d0ef7f42e32a89b1f8be902652448bd9ef60b61b168c6d9194__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20131:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20145:4:7",
                            "type": ""
                          }
                        ],
                        "src": "19980:352:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20511:247:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20528:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20539:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20521:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20521:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20521:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20562:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20573:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20558:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20558:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20578:2:7",
                                    "type": "",
                                    "value": "57"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20551:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20551:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20551:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20601:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20612:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20597:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20597:18:7"
                                  },
                                  {
                                    "hexValue": "596f752063616e277420696e697469616c697a6520616e2061727469636c6520",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "20617:34:7",
                                    "type": "",
                                    "value": "You can't initialize an article "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20590:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20590:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20590:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20672:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20683:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20668:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20668:18:7"
                                  },
                                  {
                                    "hexValue": "776974686f75742070757474696e67206120626f756e74792e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "20688:27:7",
                                    "type": "",
                                    "value": "without putting a bounty."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20661:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20661:55:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20661:55:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20725:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20737:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20748:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20733:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20733:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20725:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_735d504b2c5de2f29425b794cdb33103551951bc0508e48cdd57a296c3d28554__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20488:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20502:4:7",
                            "type": ""
                          }
                        ],
                        "src": "20337:421:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20830:200:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "20847:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "20852:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20840:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20840:19:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20840:19:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "20885:3:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20890:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20881:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20881:14:7"
                                  },
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "20897:5:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "20904:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "20868:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20868:43:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20868:43:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "20935:3:7"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "20940:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "20931:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "20931:16:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20949:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20927:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20927:27:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20956:1:7",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20920:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20920:38:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20920:38:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20967:57:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "20982:3:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "20995:6:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "21003:2:7",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "20991:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "20991:15:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "21012:2:7",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "21008:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "21008:7:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "20987:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "20987:29:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20978:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20978:39:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21019:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20974:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20974:50:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "20967:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_string_calldata",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "20799:5:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "20806:6:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "20814:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "20822:3:7",
                            "type": ""
                          }
                        ],
                        "src": "20763:267:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21218:213:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21235:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21246:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21228:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21228:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21228:21:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21258:70:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "21293:6:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "21301:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21313:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21324:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21309:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21309:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_string_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "21266:26:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21266:62:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21258:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21348:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21359:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21344:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21344:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "21368:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21376:4:7",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "21364:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21364:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21337:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21337:45:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21337:45:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21402:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21413:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21398:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21398:18:7"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "21418:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21391:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21391:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21391:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_calldata_ptr_t_uint8_t_uint256__to_t_string_memory_ptr_t_uint8_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21163:9:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "21174:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "21182:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "21190:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "21198:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21209:4:7",
                            "type": ""
                          }
                        ],
                        "src": "21035:396:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21536:105:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21546:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21558:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21569:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21554:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21554:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21546:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21588:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "21603:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21611:22:7",
                                        "type": "",
                                        "value": "0xffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "21599:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21599:35:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21581:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21581:54:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21581:54:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint80__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21505:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "21516:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21527:4:7",
                            "type": ""
                          }
                        ],
                        "src": "21436:205:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21692:158:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "21702:23:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "21717:1:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21720:4:7",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "21713:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21713:12:7"
                              },
                              "variables": [
                                {
                                  "name": "x_1",
                                  "nodeType": "YulTypedName",
                                  "src": "21706:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "21734:23:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "21749:1:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21752:4:7",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "21745:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21745:12:7"
                              },
                              "variables": [
                                {
                                  "name": "y_1",
                                  "nodeType": "YulTypedName",
                                  "src": "21738:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "21793:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "21795:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21795:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21795:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "21772:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21781:4:7",
                                        "type": "",
                                        "value": "0xff"
                                      },
                                      {
                                        "name": "y_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "21787:3:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "21777:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21777:14:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "21769:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21769:23:7"
                              },
                              "nodeType": "YulIf",
                              "src": "21766:49:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21824:20:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "21835:3:7"
                                  },
                                  {
                                    "name": "y_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "21840:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21831:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21831:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "21824:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "21675:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "21678:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "21684:3:7",
                            "type": ""
                          }
                        ],
                        "src": "21646:204:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22029:182:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22046:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22057:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22039:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22039:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22039:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22080:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22091:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22076:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22076:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22096:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22069:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22069:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22069:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22119:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22130:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22115:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22115:18:7"
                                  },
                                  {
                                    "hexValue": "4e6f207370616365206c65667420666f722061206e65772063617465676f7279",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "22135:34:7",
                                    "type": "",
                                    "value": "No space left for a new category"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22108:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22108:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22108:62:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22179:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22191:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22202:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22187:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22187:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22179:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e23f3e71c05305a9182237d48ba9b404f0c1c59aaff27a9576fb3eb02eaabde6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22006:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22020:4:7",
                            "type": ""
                          }
                        ],
                        "src": "21855:356:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22261:130:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "22271:31:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "22290:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22297:4:7",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "22286:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22286:16:7"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "22275:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22332:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "22334:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22334:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22334:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "22317:7:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22326:4:7",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "22314:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22314:17:7"
                              },
                              "nodeType": "YulIf",
                              "src": "22311:43:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22363:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "22374:7:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22383:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22370:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22370:15:7"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "22363:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "22243:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "22253:3:7",
                            "type": ""
                          }
                        ],
                        "src": "22216:175:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22512:106:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22529:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22540:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22522:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22522:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22522:21:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22552:60:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22585:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22597:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22608:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22593:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22593:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bytes_storage",
                                  "nodeType": "YulIdentifier",
                                  "src": "22560:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22560:52:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22552:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes_storage__to_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22481:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "22492:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22503:4:7",
                            "type": ""
                          }
                        ],
                        "src": "22396:222:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22733:435:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "22743:51:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr_to_tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "22782:11:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "22769:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22769:25:7"
                              },
                              "variables": [
                                {
                                  "name": "rel_offset_of_tail",
                                  "nodeType": "YulTypedName",
                                  "src": "22747:18:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22883:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "22892:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "22895:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "22885:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22885:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22885:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "rel_offset_of_tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "22817:18:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "calldatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "22845:12:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "22845:14:7"
                                              },
                                              {
                                                "name": "base_ref",
                                                "nodeType": "YulIdentifier",
                                                "src": "22861:8:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "22841:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "22841:29:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "22876:2:7",
                                                "type": "",
                                                "value": "30"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "22872:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "22872:7:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "22837:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22837:43:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "22813:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22813:68:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "22806:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22806:76:7"
                              },
                              "nodeType": "YulIf",
                              "src": "22803:96:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "22908:47:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base_ref",
                                    "nodeType": "YulIdentifier",
                                    "src": "22926:8:7"
                                  },
                                  {
                                    "name": "rel_offset_of_tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "22936:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22922:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22922:33:7"
                              },
                              "variables": [
                                {
                                  "name": "addr_1",
                                  "nodeType": "YulTypedName",
                                  "src": "22912:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22964:30:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "addr_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "22987:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "22974:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22974:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "22964:6:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "23037:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "23046:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "23049:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "23039:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "23039:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "23039:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "23009:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23017:18:7",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "23006:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23006:30:7"
                              },
                              "nodeType": "YulIf",
                              "src": "23003:50:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23062:25:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "addr_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "23074:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23082:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23070:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23070:17:7"
                              },
                              "variableNames": [
                                {
                                  "name": "addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "23062:4:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "23146:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "23155:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "23158:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "23148:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "23148:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "23148:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "addr",
                                    "nodeType": "YulIdentifier",
                                    "src": "23103:4:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "calldatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "23113:12:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23113:14:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "23133:1:7",
                                            "type": "",
                                            "value": "5"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "23136:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "23129:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23129:14:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "23109:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23109:35:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "sgt",
                                  "nodeType": "YulIdentifier",
                                  "src": "23099:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23099:46:7"
                              },
                              "nodeType": "YulIf",
                              "src": "23096:66:7"
                            }
                          ]
                        },
                        "name": "access_calldata_tail_t_array$_t_uint256_$dyn_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base_ref",
                            "nodeType": "YulTypedName",
                            "src": "22690:8:7",
                            "type": ""
                          },
                          {
                            "name": "ptr_to_tail",
                            "nodeType": "YulTypedName",
                            "src": "22700:11:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "addr",
                            "nodeType": "YulTypedName",
                            "src": "22716:4:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "22722:6:7",
                            "type": ""
                          }
                        ],
                        "src": "22623:545:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23220:88:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "23251:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "23253:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "23253:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "23253:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "23236:5:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23247:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "23243:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23243:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "23233:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23233:17:7"
                              },
                              "nodeType": "YulIf",
                              "src": "23230:43:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23282:20:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "23293:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23300:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23289:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23289:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "23282:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "23202:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "23212:3:7",
                            "type": ""
                          }
                        ],
                        "src": "23173:135:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23487:171:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23504:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23515:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23497:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23497:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23497:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23538:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23549:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23534:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23534:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23554:2:7",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23527:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23527:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23527:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23577:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23588:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23573:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23573:18:7"
                                  },
                                  {
                                    "hexValue": "4e6f7468696e6720746f206368616c6c656e67652e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "23593:23:7",
                                    "type": "",
                                    "value": "Nothing to challenge."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23566:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23566:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23566:51:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23626:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23638:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23649:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23634:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23634:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23626:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0fb9b5de11a486bb1b8d34864ad6b246b0b983476450ee45857735429bd77eb9__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23464:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23478:4:7",
                            "type": ""
                          }
                        ],
                        "src": "23313:345:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23837:180:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23854:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23865:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23847:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23847:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23847:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23888:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23899:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23884:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23884:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23904:2:7",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23877:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23877:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23877:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23927:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23938:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23923:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23923:18:7"
                                  },
                                  {
                                    "hexValue": "546865726520697320616e206f6e676f696e67206368616c6c656e67652e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "23943:32:7",
                                    "type": "",
                                    "value": "There is an ongoing challenge."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23916:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23916:60:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23916:60:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23985:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23997:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24008:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23993:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23993:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23985:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b54a59a715146ed6c99f49691f55e62e941bfed713a75eda7bc62bf50148d555__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23814:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23828:4:7",
                            "type": ""
                          }
                        ],
                        "src": "23663:354:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24196:182:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24213:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24224:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24206:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24206:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24206:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24247:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24258:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24243:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24243:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24263:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24236:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24236:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24236:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24286:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24297:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24282:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24282:18:7"
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e742066756e647320746f206368616c6c656e67652e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "24302:34:7",
                                    "type": "",
                                    "value": "Insufficient funds to challenge."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24275:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24275:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24275:62:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "24346:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24358:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24369:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24354:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24354:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24346:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0c03e9d393d30f62793e04d553e45144120700c0c39d75130bccb90781d9e9e5__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24173:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "24187:4:7",
                            "type": ""
                          }
                        ],
                        "src": "24022:356:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24510:130:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24520:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24532:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24543:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24528:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24528:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24520:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24562:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "24577:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24585:4:7",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "24573:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24573:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24555:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24555:36:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24555:36:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24611:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24622:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24607:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24607:18:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "24627:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24600:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24600:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24600:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24471:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "24482:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "24490:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "24501:4:7",
                            "type": ""
                          }
                        ],
                        "src": "24383:257:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24774:168:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24784:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24796:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24807:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24792:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24792:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24784:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24826:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "24841:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24849:42:7",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "24837:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24837:55:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24819:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24819:74:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24819:74:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24913:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24924:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24909:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24909:18:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "24929:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24902:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24902:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24902:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24735:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "24746:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "24754:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "24765:4:7",
                            "type": ""
                          }
                        ],
                        "src": "24645:297:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25121:226:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25138:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25149:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25131:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25131:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25131:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25172:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25183:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25168:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25168:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25188:2:7",
                                    "type": "",
                                    "value": "36"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25161:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25161:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25161:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25211:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25222:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25207:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25207:18:7"
                                  },
                                  {
                                    "hexValue": "4f6e6c7920617574686f722063616e20776974686472617720616e2061727469",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "25227:34:7",
                                    "type": "",
                                    "value": "Only author can withdraw an arti"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25200:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25200:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25200:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25282:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25293:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25278:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25278:18:7"
                                  },
                                  {
                                    "hexValue": "636c652e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "25298:6:7",
                                    "type": "",
                                    "value": "cle."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25271:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25271:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25271:34:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25314:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25326:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25337:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25322:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25322:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25314:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_6a7ac09dd6d1a595ef63e3c006cc799fa0704d926f43c9ba8a2701161a095cea__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "25098:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "25112:4:7",
                            "type": ""
                          }
                        ],
                        "src": "24947:400:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25526:243:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25543:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25554:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25536:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25536:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25536:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25577:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25588:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25573:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25573:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25593:2:7",
                                    "type": "",
                                    "value": "53"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25566:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25566:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25566:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25616:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25627:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25612:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25612:18:7"
                                  },
                                  {
                                    "hexValue": "5769746864726177616c20616c726561647920696e69746961746564206f7220",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "25632:34:7",
                                    "type": "",
                                    "value": "Withdrawal already initiated or "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25605:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25605:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25605:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25687:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25698:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25683:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25683:18:7"
                                  },
                                  {
                                    "hexValue": "74686572652069732061206368616c6c656e67652e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "25703:23:7",
                                    "type": "",
                                    "value": "there is a challenge."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25676:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25676:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25676:51:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25736:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25748:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25759:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25744:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25744:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25736:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_09736bc764ff8f7b07f5d004c384a229ed4912017c53bd247c8e39209b9ae7f6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "25503:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "25517:4:7",
                            "type": ""
                          }
                        ],
                        "src": "25352:417:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25905:116:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25922:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25933:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25915:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25915:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25915:21:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25945:70:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "25980:6:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "25988:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26000:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26011:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25996:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25996:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_string_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "25953:26:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25953:62:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25945:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "25866:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "25877:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "25885:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "25896:4:7",
                            "type": ""
                          }
                        ],
                        "src": "25774:247:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26200:228:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "26217:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26228:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26210:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26210:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26210:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26251:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26262:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26247:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26247:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26267:2:7",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26240:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26240:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26240:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26290:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26301:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26286:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26286:18:7"
                                  },
                                  {
                                    "hexValue": "596f75206e65656420746f20696e697469617465207769746864726177616c20",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "26306:34:7",
                                    "type": "",
                                    "value": "You need to initiate withdrawal "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26279:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26279:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26279:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26361:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26372:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26357:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26357:18:7"
                                  },
                                  {
                                    "hexValue": "66697273742e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "26377:8:7",
                                    "type": "",
                                    "value": "first."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26350:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26350:36:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26350:36:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "26395:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "26407:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26418:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26403:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26403:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "26395:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_646d3354d32a4e6f10f97f8e4dafb31e5ad3c387e7ce2b3b8fd9a6cf92aec955__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "26177:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "26191:4:7",
                            "type": ""
                          }
                        ],
                        "src": "26026:402:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26607:253:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "26624:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26635:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26617:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26617:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26617:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26658:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26669:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26654:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26654:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26674:2:7",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26647:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26647:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26647:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26697:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26708:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26693:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26693:18:7"
                                  },
                                  {
                                    "hexValue": "596f75206e65656420746f207761697420666f722074696d656c6f636b206f72",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "26713:34:7",
                                    "type": "",
                                    "value": "You need to wait for timelock or"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26686:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26686:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26686:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26768:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26779:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26764:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26764:18:7"
                                  },
                                  {
                                    "hexValue": "207761697420756e74696c20746865206368616c6c656e676520656e64732e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "26784:33:7",
                                    "type": "",
                                    "value": " wait until the challenge ends."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26757:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26757:61:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26757:61:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "26827:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "26839:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26850:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26835:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26835:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "26827:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_7c0c82b0d480101a30f3ad2e3ccc7970d31d7e8da6ac4e66c07d00ffcf930f48__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "26584:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "26598:4:7",
                            "type": ""
                          }
                        ],
                        "src": "26433:427:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27039:236:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "27056:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27067:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27049:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27049:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27049:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27090:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27101:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27086:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27086:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27106:2:7",
                                    "type": "",
                                    "value": "46"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27079:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27079:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27079:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27129:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27140:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27125:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27125:18:7"
                                  },
                                  {
                                    "hexValue": "4f6e6c7920617574686f722063616e20696e63726561736520626f756e747920",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "27145:34:7",
                                    "type": "",
                                    "value": "Only author can increase bounty "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27118:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27118:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27118:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27200:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27211:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27196:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27196:18:7"
                                  },
                                  {
                                    "hexValue": "6f6620616e2061727469636c652e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "27216:16:7",
                                    "type": "",
                                    "value": "of an article."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27189:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27189:44:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27189:44:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "27242:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "27254:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27265:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "27250:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27250:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "27242:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a40667c3d5ae3c08746fe24fceae1033d89d0e1de162ecdda7e68141465d7af7__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "27016:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "27030:4:7",
                            "type": ""
                          }
                        ],
                        "src": "26865:410:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27327:187:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "27337:26:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "27347:16:7",
                                "type": "",
                                "value": "0xffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "27341:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "27372:21:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "27387:1:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "27390:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "27383:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27383:10:7"
                              },
                              "variables": [
                                {
                                  "name": "x_1",
                                  "nodeType": "YulTypedName",
                                  "src": "27376:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "27402:21:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "27417:1:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "27420:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "27413:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27413:10:7"
                              },
                              "variables": [
                                {
                                  "name": "y_1",
                                  "nodeType": "YulTypedName",
                                  "src": "27406:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "27457:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "27459:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "27459:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "27459:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "27438:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "27447:2:7"
                                      },
                                      {
                                        "name": "y_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "27451:3:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "27443:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27443:12:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "27435:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27435:21:7"
                              },
                              "nodeType": "YulIf",
                              "src": "27432:47:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "27488:20:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "27499:3:7"
                                  },
                                  {
                                    "name": "y_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "27504:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "27495:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27495:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "27488:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint56",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "27310:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "27313:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "27319:3:7",
                            "type": ""
                          }
                        ],
                        "src": "27280:234:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27647:148:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "27657:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "27669:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27680:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "27665:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27665:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "27657:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "27699:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "27714:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27722:22:7",
                                        "type": "",
                                        "value": "0xffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "27710:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27710:35:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27692:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27692:54:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27692:54:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27766:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27777:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27762:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27762:18:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "27782:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27755:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27755:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27755:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint80_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "27608:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "27619:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "27627:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "27638:4:7",
                            "type": ""
                          }
                        ],
                        "src": "27519:276:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27974:173:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "27991:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28002:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27984:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27984:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27984:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28025:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28036:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28021:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28021:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28041:2:7",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28014:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28014:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28014:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28064:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28075:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28060:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28060:18:7"
                                  },
                                  {
                                    "hexValue": "5468657265206973206e6f2072756c696e67207965742e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "28080:25:7",
                                    "type": "",
                                    "value": "There is no ruling yet."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28053:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28053:53:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28053:53:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "28115:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "28127:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28138:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "28123:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28123:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "28115:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9591a49cf5d9e3ba9b3aea5505a2b8a639d2f239a0cb6a9059466b60c54a080f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "27951:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "27965:4:7",
                            "type": ""
                          }
                        ],
                        "src": "27800:347:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_uint80(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_address_payable(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_address_payable(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint80(headStart)\n        value1 := abi_decode_address_payable(add(headStart, 32))\n    }\n    function abi_decode_enum_RulingOptions(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_enum$_RulingOptions_$295(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_enum_RulingOptions(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint80(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint80(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_uint8t_uint80(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value2 := value\n        value3 := abi_decode_uint80(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_2, 0x20), calldataload(_2), dataEnd)\n        let offset_1 := calldataload(add(headStart, 0x20))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_1)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_string(add(_3, 0x20), calldataload(_3), dataEnd)\n    }\n    function array_storeLengthForEncoding_bytes(pos, length) -> updated_pos\n    {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_RulingOptions(value, pos)\n    {\n        if iszero(lt(value, 3))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_address_payable_t_enum$_RulingOptions_$295_t_uint8_t_bool_t_uint80__to_t_address_payable_t_uint8_t_uint8_t_bool_t_uint80__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        abi_encode_enum_RulingOptions(value1, add(headStart, 32))\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256t_address_payablet_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address_payable(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function abi_decode_tuple_t_uint256t_address_payablet_enum$_RulingOptions_$295(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address_payable(add(headStart, 32))\n        value2 := abi_decode_enum_RulingOptions(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_contract$_IArbitrator_$249__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_payable_t_uint32_t_uint56_t_uint8__to_t_address_payable_t_uint32_t_uint56_t_uint8__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffff))\n        mstore(add(headStart, 96), and(value3, 0xff))\n    }\n    function abi_encode_tuple_t_array$_t_bool_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr_t_uint256__to_t_array$_t_bool_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        let pos := headStart\n        pos := headStart\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, 0x03) { i := add(i, 1) }\n        {\n            mstore(pos, iszero(iszero(mload(srcPtr))))\n            let _1 := 0x20\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        let pos_1 := add(headStart, 96)\n        pos_1 := pos_1\n        let srcPtr_1 := value1\n        let i_1 := 0\n        for { } lt(i_1, 0x03) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos_1, mload(srcPtr_1))\n            let _2 := 0x20\n            pos_1 := add(pos_1, _2)\n            srcPtr_1 := add(srcPtr_1, _2)\n        }\n        mstore(add(headStart, 192), value2)\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_payable(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_decode_tuple_t_uint256t_address_payable(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address_payable(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), 64)\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let tail_2 := add(add(headStart, shl(5, length)), 96)\n        let srcPtr := add(value1, _1)\n        let i := 0\n        let i_1 := i\n        for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(95)))\n            let _2 := mload(srcPtr)\n            let pos_1 := tail_2\n            let length_1 := mload(_2)\n            mstore(tail_2, length_1)\n            pos_1 := add(tail_2, _1)\n            let srcPtr_1 := add(_2, _1)\n            let i_2 := i\n            for { } lt(i_2, length_1) { i_2 := add(i_2, 1) }\n            {\n                mstore(pos_1, mload(srcPtr_1))\n                pos_1 := add(pos_1, _1)\n                srcPtr_1 := add(srcPtr_1, _1)\n            }\n            tail_2 := pos_1\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_enum$_RulingOptions_$295t_enum$_RulingOptions_$295(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_enum_RulingOptions(headStart)\n        value1 := abi_decode_enum_RulingOptions(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_address_payablet_uint256t_enum$_RulingOptions_$295(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address_payable(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_enum_RulingOptions(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_264afed15e2abe1afd48e9529ae4102fd34dc15becf22ac12086d34e9bca14d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Only author can transfer ownersh\")\n        mstore(add(headStart, 96), \"ip.\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_0345b6b07b3f7ea23ce7c0682ae193a7b3933d232b736d656630025e0007450f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Funding must be made within the \")\n        mstore(add(headStart, 96), \"appeal period.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f3418d70ac679d1f67a83336adc36c46a5610f9d2455f76fc28495336bbc06ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"Funding must be made within the \")\n        mstore(add(headStart, 96), \"first half appeal period.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_bytes_storage(value, pos) -> ret\n    {\n        let slotValue := sload(value)\n        let length := 0\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n        let pos_1 := array_storeLengthForEncoding_bytes(pos, length)\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos_1, and(slotValue, not(255)))\n            ret := add(pos_1, _2)\n        }\n        case 1 {\n            let dataPos := array_dataslot_bytes_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos_1, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos_1, i)\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_bytes_storage__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes_storage(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_c2f2256a77e1cd7cdc564a3b966df4f3e5bfbdc15f00156637ffbff138e529be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Appeal fee has already been paid\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_enum$_RulingOptions_$295_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        abi_encode_enum_RulingOptions(value0, headStart)\n        mstore(add(headStart, 32), value1)\n    }\n    function increment_t_uint80(value) -> ret\n    {\n        let _1 := 0xffffffffffffffffffff\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function checked_sub_t_uint80(x, y) -> diff\n    {\n        let _1 := 0xffffffffffffffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function abi_encode_tuple_t_stringliteral_5943b819c05c7059125985bc4ac5cf738c94c0822c506b598ab2eced554e2f50__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"The tax rate can only be increas\")\n        mstore(add(headStart, 96), \"ed by a maximum of 25%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_de142eb746bdd0d0ef7f42e32a89b1f8be902652448bd9ef60b61b168c6d9194__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"This category does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_735d504b2c5de2f29425b794cdb33103551951bc0508e48cdd57a296c3d28554__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"You can't initialize an article \")\n        mstore(add(headStart, 96), \"without putting a bounty.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_uint8_t_uint256__to_t_string_memory_ptr_t_uint8_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_string_calldata(value0, value1, add(headStart, 96))\n        mstore(add(headStart, 32), and(value2, 0xff))\n        mstore(add(headStart, 64), value3)\n    }\n    function abi_encode_tuple_t_uint80__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffff))\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if gt(x_1, sub(0xff, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function abi_encode_tuple_t_stringliteral_e23f3e71c05305a9182237d48ba9b404f0c1c59aaff27a9576fb3eb02eaabde6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"No space left for a new category\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_bytes_storage__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes_storage(value0, add(headStart, 32))\n    }\n    function access_calldata_tail_t_array$_t_uint256_$dyn_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), shl(5, length))) { revert(0, 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_0fb9b5de11a486bb1b8d34864ad6b246b0b983476450ee45857735429bd77eb9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Nothing to challenge.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b54a59a715146ed6c99f49691f55e62e941bfed713a75eda7bc62bf50148d555__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"There is an ongoing challenge.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0c03e9d393d30f62793e04d553e45144120700c0c39d75130bccb90781d9e9e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Insufficient funds to challenge.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint8_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_6a7ac09dd6d1a595ef63e3c006cc799fa0704d926f43c9ba8a2701161a095cea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Only author can withdraw an arti\")\n        mstore(add(headStart, 96), \"cle.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_09736bc764ff8f7b07f5d004c384a229ed4912017c53bd247c8e39209b9ae7f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"Withdrawal already initiated or \")\n        mstore(add(headStart, 96), \"there is a challenge.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_calldata(value0, value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_646d3354d32a4e6f10f97f8e4dafb31e5ad3c387e7ce2b3b8fd9a6cf92aec955__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"You need to initiate withdrawal \")\n        mstore(add(headStart, 96), \"first.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7c0c82b0d480101a30f3ad2e3ccc7970d31d7e8da6ac4e66c07d00ffcf930f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"You need to wait for timelock or\")\n        mstore(add(headStart, 96), \" wait until the challenge ends.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a40667c3d5ae3c08746fe24fceae1033d89d0e1de162ecdda7e68141465d7af7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Only author can increase bounty \")\n        mstore(add(headStart, 96), \"of an article.\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint56(x, y) -> sum\n    {\n        let _1 := 0xffffffffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function abi_encode_tuple_t_uint80_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9591a49cf5d9e3ba9b3aea5505a2b8a639d2f239a0cb6a9059466b60c54a080f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"There is no ruling yet.\")\n        tail := add(headStart, 96)\n    }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "707": [
                  {
                    "length": 32,
                    "start": 1531
                  },
                  {
                    "length": 32,
                    "start": 2911
                  },
                  {
                    "length": 32,
                    "start": 3053
                  },
                  {
                    "length": 32,
                    "start": 3539
                  },
                  {
                    "length": 32,
                    "start": 4624
                  },
                  {
                    "length": 32,
                    "start": 5038
                  },
                  {
                    "length": 32,
                    "start": 6024
                  },
                  {
                    "length": 32,
                    "start": 7094
                  },
                  {
                    "length": 32,
                    "start": 7420
                  },
                  {
                    "length": 32,
                    "start": 8367
                  },
                  {
                    "length": 32,
                    "start": 8773
                  },
                  {
                    "length": 32,
                    "start": 8948
                  },
                  {
                    "length": 32,
                    "start": 10168
                  },
                  {
                    "length": 32,
                    "start": 10418
                  }
                ]
              },
              "linkReferences": {},
              "object": "60806040526004361061031e5760003560e01c806392239dff116101a5578063ba0ec60b116100ec578063d970d18c11610095578063f851a4401161006f578063f851a440146109ad578063fc0ac672146109d2578063fe6ca782146109e8578063ffa1ad74146109fe57600080fd5b8063d970d18c14610962578063dc227fc214610977578063e349ad301461099757600080fd5b8063c9330c0f116100c6578063c9330c0f1461090c578063c94828f01461092c578063d3b476b11461094c57600080fd5b8063ba0ec60b146108ce578063bc0936fd146108e3578063be467604146108f657600080fd5b8063adc7faba1161014e578063b34bfaa811610128578063b34bfaa814610883578063b4c7058114610899578063b7bddc72146108b957600080fd5b8063adc7faba14610815578063af4a914414610835578063b14f2a391461086357600080fd5b8063a509efeb1161017f578063a509efeb146107b5578063a6a7f0eb146107d5578063ab9cd37e146107f557600080fd5b806392239dff1461075557806392e2592514610775578063956dcbd21461079557600080fd5b8063564a565d11610269578063736ed418116102125780637f67bd6c116101ec5780637f67bd6c146106e65780638a9bb02a146107065780638f2839701461073557600080fd5b8063736ed4181461061d5780637597b3cb1461063057806378431ce91461064557600080fd5b806367284f211161024357806367284f21146105a95780636760aeb0146105c957806368871c9c146105e957600080fd5b8063564a565d146104da578063638af3da1461055457806364ff9dfa1461058957600080fd5b806329238089116102cb578063313dab20116102a5578063313dab20146104775780634c55c0001461048d5780634de12db0146104ad57600080fd5b806329238089146104075780632d2c55651461041a578063311a6c561461045757600080fd5b806315f36ebe116102fc57806315f36ebe146103995780631e26de34146103c757806326804bef146103e757600080fd5b806303624fc01461032357806306bcbd731461035457806312b3a2c014610376575b600080fd5b34801561032f57600080fd5b5060075461033d9060ff1681565b60405160ff90911681526020015b60405180910390f35b34801561036057600080fd5b5061037461036f366004613578565b610a47565b005b6103896103843660046135ba565b610b39565b604051901515815260200161034b565b3480156103a557600080fd5b506103b96103b43660046135dd565b611335565b60405190815260200161034b565b3480156103d357600080fd5b506103b96103e23660046135f8565b611399565b3480156103f357600080fd5b506103746104023660046135f8565b611462565b610374610415366004613653565b611529565b34801561042657600080fd5b5060005461043f9061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161034b565b34801561046357600080fd5b506103746104723660046136bf565b61177d565b34801561048357600080fd5b506103b960015481565b34801561049957600080fd5b506103746104a836600461376d565b611a0d565b3480156104b957600080fd5b506104cd6104c83660046135f8565b611b0e565b60405161034b9190613849565b3480156104e657600080fd5b506105436104f53660046135f8565b604960205260009081526040902080546001909101546001600160a01b0382169160ff600160a01b8204811692600160a81b8304821692600160b01b9004909116906001600160501b031685565b60405161034b959493929190613894565b34801561056057600080fd5b5061057461056f3660046135ba565b611bae565b6040805192835260208301919091520161034b565b34801561059557600080fd5b506103b96105a43660046135dd565b611cdb565b3480156105b557600080fd5b506103746105c43660046138d9565b611df4565b3480156105d557600080fd5b506103746105e4366004613963565b611eb8565b3480156105f557600080fd5b5061043f7f000000000000000000000000000000000000000000000000000000000000000081565b61037461062b3660046135dd565b611efd565b34801561063c57600080fd5b506103b9600281565b34801561065157600080fd5b506106a66106603660046135dd565b6048602052600090815260409020546001600160a01b03811690600160a01b810463ffffffff1690600160c01b810466ffffffffffffff1690600160f81b900460ff1684565b604080516001600160a01b03909516855263ffffffff909316602085015266ffffffffffffff9091169183019190915260ff16606082015260800161034b565b3480156106f257600080fd5b506103b96107013660046135f8565b6122db565b34801561071257600080fd5b506107266107213660046136bf565b61236d565b60405161034b9392919061399f565b34801561074157600080fd5b50610374610750366004613a04565b61245d565b34801561076157600080fd5b506103746107703660046135f8565b6124d8565b34801561078157600080fd5b506103746107903660046135f8565b612527565b3480156107a157600080fd5b506103746107b03660046135dd565b612576565b3480156107c157600080fd5b506103b96107d03660046135ba565b6126e3565b3480156107e157600080fd5b506103746107f0366004613a1f565b6128a5565b34801561080157600080fd5b506103746108103660046135dd565b612918565b34801561082157600080fd5b506103746108303660046135f8565b612b4a565b34801561084157600080fd5b50610855610850366004613a6b565b612b99565b60405161034b929190613a8e565b34801561086f57600080fd5b5061037461087e366004613a04565b612d83565b34801561088f57600080fd5b506103b960055481565b3480156108a557600080fd5b506103b96108b4366004613b20565b612dfc565b3480156108c557600080fd5b50610374612e86565b3480156108da57600080fd5b50610374612eeb565b6103746108f13660046135dd565b612f1b565b34801561090257600080fd5b506103b960025481565b34801561091857600080fd5b50610374610927366004613a6b565b613055565b34801561093857600080fd5b506103746109473660046135f8565b6130bc565b34801561095857600080fd5b506103b960035481565b34801561096e57600080fd5b506103b9602081565b34801561098357600080fd5b506103b9610992366004613b4a565b61310b565b3480156109a357600080fd5b506103b960045481565b3480156109b957600080fd5b5060075461043f9061010090046001600160a01b031681565b3480156109de57600080fd5b506103b960065481565b3480156109f457600080fd5b506103b961040081565b348015610a0a57600080fd5b506104cd6040518060400160405280600581526020017f312e322e3000000000000000000000000000000000000000000000000000000081525081565b6001600160501b038216600090815260486020526040902080546001600160a01b03163314610ae35760405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920617574686f722063616e207472616e73666572206f776e6572736860448201527f69702e000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03831690811782556040517fdfc39691aec87dc6aa51ff70c0e592f260c54d2ed6c64e8c4c2306da0eec872b90600090a2505050565b6000828152604960205260408082209051631c3db16d60e01b81526004810185905282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c3db16d90602401602060405180830381865afa158015610bae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd29190613b85565b6002811115610be357610be361385c565b90506000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663afe15cfb8a6040518263ffffffff1660e01b8152600401610c3991815260200190565b6040805180830381865afa158015610c55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c799190613b9e565b915091506000856002811115610c9157610c9161385c565b896002811115610ca357610ca361385c565b1415610d2757814210610d1e5760405162461bcd60e51b815260206004820152602e60248201527f46756e64696e67206d757374206265206d6164652077697468696e207468652060448201527f61707065616c20706572696f642e0000000000000000000000000000000000006064820152608401610ada565b50600454610dcf565b60025461040090610d388585613bd8565b610d429190613bef565b610d4c9190613c0e565b610d569084613c30565b4210610dca5760405162461bcd60e51b815260206004820152603960248201527f46756e64696e67206d757374206265206d6164652077697468696e207468652060448201527f66697273742068616c662061707065616c20706572696f642e000000000000006064820152608401610ada565b506005545b86547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f23f16e6908c90600890600160a81b900460ff1660408110610e2157610e21613c48565b016040518363ffffffff1660e01b8152600401610e3f929190613d39565b602060405180830381865afa158015610e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e809190613b85565b9450610400610e8f8287613bef565b610e999190613c0e565b610ea39086613c30565b600288015490945089935060009250610ebf9150600190613bd8565b90506000866002018281548110610ed857610ed8613c48565b9060005260206000209060060201905080600101836002811115610efe57610efe61385c565b60038110610f0e57610f0e613c48565b602081049091015460ff601f9092166101000a90041615610f975760405162461bcd60e51b815260206004820152602160248201527f41707065616c206665652068617320616c7265616479206265656e207061696460448201527f2e000000000000000000000000000000000000000000000000000000000000006064820152608401610ada565b60008082600201856002811115610fb057610fb061385c565b60038110610fc057610fc0613c48565b01549050858110610fd45760009150610ff8565b34610fdf8288613bd8565b11610ff357610fee8187613bd8565b610ff5565b345b91505b50336001600160a01b0316838c7f2b4ef80a862edc5616a4e61c11f4a368f33323faca91fa7635d48b85c183e66a8d85604051611036929190613d5a565b60405180910390a433600090815260208390526040902081908560028111156110615761106161385c565b6003811061107157611071613c48565b0160008282546110819190613c30565b92505081905550808260020185600281111561109f5761109f61385c565b600381106110af576110af613c48565b0160008282546110bf9190613c30565b9250508190555084826002018560028111156110dd576110dd61385c565b600381106110ed576110ed613c48565b0154106111bb578160020184600281111561110a5761110a61385c565b6003811061111a5761111a613c48565b015482600501600082825461112f9190613c30565b909155506001905082810185600281111561114c5761114c61385c565b6003811061115c5761115c613c48565b602091828204019190066101000a81548160ff02191690831515021790555089600281111561118d5761118d61385c565b60405184908d907fb5681f036910f38d8c2fa06f2cbedc227ecf03d7c4a358ee9096197b15ff8fd090600090a45b6001820154610100900460ff1680156111de5750600182015462010000900460ff165b156112b15760028801805460010181556000908152600583018054889290611207908490613bd8565b909155505087547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906349912f889088908e90600890600160a81b900460ff166040811061126057611260613c48565b016040518463ffffffff1660e01b815260040161127e929190613d39565b6000604051808303818588803b15801561129757600080fd5b505af11580156112ab573d6000803e3d6000fd5b50505050505b60006112bd8234613bd8565b11156112e957336108fc6112d18334613bd8565b6040518115909202916000818181858888f150505050505b816001018460028111156112ff576112ff61385c565b6003811061130f5761130f613c48565b602081049091015460ff601f9092166101000a9004169850505050505050505092915050565b6000805b604860008461134781613d75565b6001600160501b03919091168252602082019290925260400160002080549194509150600160c01b900466ffffffffffffff1661133957611389600184613d9c565b6001600160501b03169392505050565b600081815260496020526040808220805490917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163f23f16e6918691600891600160a81b90910460ff169081106113fc576113fc613c48565b016040518363ffffffff1660e01b815260040161141a929190613d39565b602060405180830381865afa158015611437573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145b9190613b85565b9392505050565b60075461010090046001600160a01b0316331461147e57600080fd5b6101008111156114f65760405162461bcd60e51b815260206004820152603660248201527f5468652074617820726174652063616e206f6e6c7920626520696e637265617360448201527f65642062792061206d6178696d756d206f6620323525000000000000000000006064820152608401610ada565b600681905560405181907f5100ab374784a62034356f9af3b71ea723c1e89beb5627c6c1dacea1117250b890600090a250565b60075460ff908116908316106115815760405162461bcd60e51b815260206004820152601c60248201527f546869732063617465676f727920646f6573206e6f74206578697374000000006044820152606401610ada565b60005b604860008361159281613d75565b6001600160501b03919091168252602082019290925260400160002080549193509150600160c01b900466ffffffffffffff166115845780547fff00000000000000ffffffff000000000000000000000000000000000000000016337fff00000000000000ffffffffffffffffffffffffffffffffffffffffffffffff1617600160c01b3460201c66ffffffffffffff9081168202929092177effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160f81b60ff8716021780845504166116ce5760405162461bcd60e51b815260206004820152603960248201527f596f752063616e277420696e697469616c697a6520616e2061727469636c652060448201527f776974686f75742070757474696e67206120626f756e74792e000000000000006064820152608401610ada565b60006116db600184613d9c565b6001600160501b031690507f4f9a2b734331c583faf3f19d1feb5f08b742e016a56fb61379950beaf3e223418686868460405161171b9493929190613ded565b60405180910390a1815460408051838152600160c01b909204602090811b6affffffffffffff0000000016908301527fdf5fc410d3381cc7f0a7fe3af72f4e3cf53ef5787f20554af69035a950e1b2e3910160405180910390a1505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146117b257600080fd5b60008281526049602052604081206002810180549192916117d590600190613bd8565b815481106117e5576117e5613c48565b60009182526020822060016006929092020190810154909250610100900460ff161561181357506001611829565b6001820154610100900460ff1615611829575060025b60008082600281111561183e5761183e61385c565b141561185b578460028111156118565761185661385c565b61185d565b815b8454909150819085907fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b83600281111561189f5761189f61385c565b021790555060018401546001600160501b0316600081815260486020526040902060028360028111156118d4576118d461385c565b141561198b5780547fff00000000000000ffffffffffffffffffffffffffffffffffffffffffffffff811682556040516001600160501b0384168152600160c01b909104602090811b6affffffffffffff0000000016917f8271992f9b3a3f30dc2a464982dc4a136e7357403462443a171a0fb0c6ccc265910160405180910390a16000898152604960205260408082205490516001600160a01b039091169183156108fc02918491818181858888f15050505050505b805463ffffffff60a01b1916815585547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b178655604051889033907f394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e75622276906119fb908b815260200190565b60405180910390a35050505050505050565b600754611a1e9060ff166001613e17565b60ff16611a6d5760405162461bcd60e51b815260206004820181905260248201527f4e6f207370616365206c65667420666f722061206e65772063617465676f72796044820152606401610ada565b60075460405160ff909116907f61606860eb6c87306811e2695215385101daab53bd6ab4e9f9049aead9363c7d90611aa6908590613849565b60405180910390a2600754819060089060ff1660408110611ac957611ac9613c48565b019080519060200190611add92919061348e565b506007805460ff16906000611af183613e3c565b91906101000a81548160ff021916908360ff160217905550505050565b60088160408110611b1e57600080fd5b018054909150611b2d90613c5e565b80601f0160208091040260200160405190810160405280929190818152602001828054611b5990613c5e565b8015611ba65780601f10611b7b57610100808354040283529160200191611ba6565b820191906000526020600020905b815481529060010190602001808311611b8957829003601f168201915b505050505081565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663afe15cfb876040518263ffffffff1660e01b8152600401611c0291815260200190565b6040805180830381865afa158015611c1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c429190613b9e565b9150915060006104006002548484611c5a9190613bd8565b611c649190613bef565b611c6e9190613c0e565b611c789084613c30565b90506000866002811115611c8e57611c8e61385c565b611c97896122db565b6002811115611ca857611ca861385c565b6002811115611cb957611cb961385c565b14905080611cc8578382611ccb565b83835b95509550505050505b9250929050565b6001600160501b0381166000908152604860205260408082208054909183917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163f7434ea991600891600160f81b90910460ff16908110611d4857611d48613c48565b016040518263ffffffff1660e01b8152600401611d659190613e5c565b602060405180830381865afa158015611d82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da69190613b85565b600654835491925060009161040091611dd591600160c01b900460201b6affffffffffffff0000000016613bef565b611ddf9190613c0e565b9050611deb8183613c30565b95945050505050565b60005b81811015611eb15760005b838383818110611e1457611e14613c48565b9050602002810190611e269190613e6f565b9050811015611e9e576000848484818110611e4357611e43613c48565b9050602002810190611e559190613e6f565b83818110611e6557611e65613c48565b905060200201351115611e8c57611e8a8686848460028111156109925761099261385c565b505b80611e9681613eb9565b915050611e02565b5080611ea981613eb9565b915050611df7565b5050505050565b6000838152604960205260408120600281015490915b81811015611ef557611ee28686838761310b565b5080611eed81613eb9565b915050611ece565b505050505050565b6001600160501b03811660009081526048602052604090208054600160c01b900466ffffffffffffff16611f735760405162461bcd60e51b815260206004820152601560248201527f4e6f7468696e6720746f206368616c6c656e67652e00000000000000000000006044820152606401610ada565b8054600160a01b900463ffffffff9081161415611fd25760405162461bcd60e51b815260206004820152601e60248201527f546865726520697320616e206f6e676f696e67206368616c6c656e67652e00006044820152606401610ada565b805463ffffffff60a01b191677ffffffff000000000000000000000000000000000000000017815561200382611cdb565b3410156120525760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e742066756e647320746f206368616c6c656e67652e6044820152606401610ada565b60065481546000916104009161207f9190600160c01b900460201b6affffffffffffff0000000016613bef565b6120899190613c0e565b9050806001600082825461209d9190613c30565b90915550600090506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663c13517e16120de8434613bd8565b8554600290600890600160f81b900460ff166040811061210057612100613c48565b016040518463ffffffff1660e01b815260040161211e929190613d39565b60206040518083038185885af115801561213c573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906121619190613b85565b60008181526049602090815260409182902080543373ffffffffffffffffffffffffffffffffffffffff1982168117835560028301805460019081019091558301805469ffffffffffffffffffff19166001600160501b038c1617905588547fffffffffffffffffffff00ff00000000000000000000000000000000000000009092167fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff90911617600160f81b9182900460ff908116600160a81b029190911790925587548451919004909116815290810183905291925082916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016917f74baab670a4015ab2f1b467c5252a96141a2573f2908e58a92081e80d3cfde3d910160405180910390a360408051338152602081018390526001600160501b038616917f1e5338a1fb672aa84963dc9f9e4afd009b4ed726debb09224bf4d02a6c68b4e4910160405180910390a250505050565b604051631c3db16d60e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c3db16d90602401602060405180830381865afa158015612343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123679190613b85565b92915050565b612375613512565b61237d613512565b60008481526049602052604081206002018054829190869081106123a3576123a3613c48565b906000526020600020906006020190508060010181600201826005015482600380602002604051908101604052809291908260038015612418576020028201916000905b825461010083900a900460ff1615158152602060019283018181049485019490930390920291018084116123e75790505b505060408051606081019182905294975086935060039250905082845b8154815260200190600101908083116124355750505050509150935093509350509250925092565b60075461010090046001600160a01b0316331461247957600080fd5b6007805474ffffffffffffffffffffffffffffffffffffffff0019166101006001600160a01b038416908102919091179091556040517f0c2515f25186df02132ad46f01e062c3b8982c8de57fa2b1b0a280d8e810f39b90600090a250565b60075461010090046001600160a01b031633146124f457600080fd5b600581905560405181907f505f3bf1e426c82f14f7c9cfb2d31ef5b7bb76428e16bd90dabec113e3d4a2bc90600090a250565b60075461010090046001600160a01b0316331461254357600080fd5b600381905560405181907f207e19e347becb468ef02d25790188e4d5da0fe37176d3bbb7940168ec5d613690600090a250565b6001600160501b038116600090815260486020526040902080546001600160a01b031633146125f35760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920617574686f722063616e20776974686472617720616e206172746960448201526331b6329760e11b6064820152608401610ada565b8054600160a01b900463ffffffff16156126755760405162461bcd60e51b815260206004820152603560248201527f5769746864726177616c20616c726561647920696e69746961746564206f722060448201527f74686572652069732061206368616c6c656e67652e00000000000000000000006064820152608401610ada565b6003546126829042613c30565b815463ffffffff91909116600160a01b0263ffffffff60a01b199091161781556040516001600160501b03831681527f416c1ad2b96c356f3bbd35431f86cce449ddbb4f8c3755ea9d2776b04c2e9c8f906020015b60405180910390a15050565b60008281526049602052604081206002810154829061270490600190613bd8565b9050600082600201828154811061271d5761271d613c48565b9060005260206000209060060201905060008560028111156127415761274161385c565b61274a886122db565b600281111561275b5761275b61385c565b600281111561276c5761276c61385c565b14905060008161277e57600554612782565b6004545b905060008360020188600281111561279c5761279c61385c565b600381106127ac576127ac613c48565b015486549091506000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f23f16e6908c90600890600160a81b900460ff166040811061280657612806613c48565b016040518363ffffffff1660e01b8152600401612824929190613d39565b602060405180830381865afa158015612841573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128659190613b85565b905060006104006128768584613bef565b6128809190613c0e565b61288a9083613c30565b90506128968382613bd8565b9b9a5050505050505050505050565b336001600160a01b0316837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c858560405161290b929190613ed4565b60405180910390a4505050565b6001600160501b038116600090815260486020526040902080546001600160a01b031633146129955760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920617574686f722063616e20776974686472617720616e206172746960448201526331b6329760e11b6064820152608401610ada565b8054600160a01b900463ffffffff16612a165760405162461bcd60e51b815260206004820152602660248201527f596f75206e65656420746f20696e697469617465207769746864726177616c2060448201527f66697273742e00000000000000000000000000000000000000000000000000006064820152608401610ada565b805442600160a01b90910463ffffffff161115612a9b5760405162461bcd60e51b815260206004820152603f60248201527f596f75206e65656420746f207761697420666f722074696d656c6f636b206f7260448201527f207761697420756e74696c20746865206368616c6c656e676520656e64732e006064820152608401610ada565b80547fff0000000000000000000000ffffffffffffffffffffffffffffffffffffffff81168255604051600160c01b90910460201b6affffffffffffff00000000169033906108fc8315029083906000818181858888f19350505050158015612b08573d6000803e3d6000fd5b506040516001600160501b03841681527f70b41d8cca762ceec66d93f536dbb31f5cabbf1901f862508b9438de54fce4eb9060200160405180910390a1505050565b60075461010090046001600160a01b03163314612b6657600080fd5b600481905560405181907f8df75282265171690a1298cf028f5e3c7d8d42313394a4f25d4aeea6c1ea62cf90600090a250565b6000828152604960205260408120805460609190600160b01b900460ff16612bc5576000925050611cd4565b60028101548154600160a01b900460ff168167ffffffffffffffff811115612bef57612bef6136e1565b604051908082528060200260200182016040528015612c2257816020015b6060815260200190600190039081612c0d5790505b50935060005b82811015612d7857612c3c60026001613c30565b67ffffffffffffffff811115612c5457612c546136e1565b604051908082528060200260200182016040528015612c7d578160200160208202803683370190505b50858281518110612c9057612c90613c48565b60200260200101819052506000846002018281548110612cb257612cb2613c48565b9060005260206000209060060201905060005b60028111612d63576000612cec838b846002811115612ce657612ce661385c565b8861326f565b90508015612d5057612d0b838b846002811115612ce657612ce661385c565b612d15908a613c30565b985080888581518110612d2a57612d2a613c48565b60200260200101518381518110612d4357612d43613c48565b6020026020010181815250505b5080612d5b81613eb9565b915050612cc5565b50508080612d7090613eb9565b915050612c28565b505050509250929050565b60075461010090046001600160a01b03163314612d9f57600080fd5b6000805474ffffffffffffffffffffffffffffffffffffffff0019166101006001600160a01b03841690810291909117825560405190917f8a3509a4057c89a5993a4a3140c2ebf7e829d325d8998eaa6c48adcff98b2cef91a250565b600080836002811115612e1157612e1161385c565b836002811115612e2357612e2361385c565b1490506103e8600082612e3857600554612e3c565b6004545b9050612e4a61040082613c30565b82610400600554600454612e5e9190613c30565b612e689190613c30565b612e729190613bef565b612e7c9190613c0e565b9695505050505050565b60018054600091829055815460405191926101009091046001600160a01b0316916108fc84150291849190818181858888f150506040518493507fb315332b30dc40d1e51def214ce42d93a73bd0c17b08db04b34f10736bb2f06f925060009150a250565b60075461010090046001600160a01b03163314612f0757600080fd5b6000805460ff19811660ff90911615179055565b6001600160501b038116600090815260486020526040902080546001600160a01b03163314612fb25760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c7920617574686f722063616e20696e63726561736520626f756e74792060448201527f6f6620616e2061727469636c652e0000000000000000000000000000000000006064820152608401610ada565b80543460201c908290601890612fd9908490600160c01b900466ffffffffffffff16613ee8565b82546101009290920a66ffffffffffffff818102199093169190921691909102179055508054604080516001600160501b0385168152600160c01b909204602090811b6affffffffffffff0000000016908301527fdf5fc410d3381cc7f0a7fe3af72f4e3cf53ef5787f20554af69035a950e1b2e391016126d7565b6000828152604960205260408120600281015490915b81811015611eb15760005b600281116130a9576130968686848460028111156109925761099261385c565b50806130a181613eb9565b915050613076565b50806130b481613eb9565b91505061306b565b60075461010090046001600160a01b031633146130d857600080fd5b600281905560405181907fbf39faa024d2f97599a0095e84098ee2171b6681738416c0030f442ba956d52b90600090a250565b60008481526049602052604081208054600160b01b900460ff166131715760405162461bcd60e51b815260206004820152601760248201527f5468657265206973206e6f2072756c696e67207965742e0000000000000000006044820152606401610ada565b600081600201858154811061318857613188613c48565b906000526020600020906006020190506131b58187868560000160149054906101000a900460ff1661326f565b92508215613265576001600160a01b03861660009081526020829052604081208560028111156131e7576131e761385c565b600381106131f7576131f7613c48565b01556040516001600160a01b0387169084156108fc029085906000818181858888f1935050505050856001600160a01b031685887fff2b7c936d6023fea901b3455cefc23b124c1ca5997dc5b48c461fd20984289d878760405161325c929190613d5a565b60405180910390a45b5050949350505050565b600082600186018160028111156132885761328861385c565b6003811061329857613298613c48565b602081049091015460ff601f9092166101000a9004166132f5576001600160a01b03851660009081526020879052604090208160028111156132dc576132dc61385c565b600381106132ec576132ec613c48565b01549150613485565b8260028111156133075761330761385c565b8460028111156133195761331961385c565b14156133d9576000866002018260028111156133375761333761385c565b6003811061334757613347613c48565b0154116133555760006133d2565b8560020181600281111561336b5761336b61385c565b6003811061337b5761337b613c48565b015460058701546001600160a01b03871660009081526020899052604090208360028111156133ac576133ac61385c565b600381106133bc576133bc613c48565b01546133c89190613bef565b6133d29190613c0e565b9150613485565b856001018360028111156133ef576133ef61385c565b600381106133ff576133ff613c48565b602081049091015460ff601f9092166101000a900416613485576004860154600387015461342d9190613c30565b60058701546001600160a01b038716600090815260208990526040902083600281111561345c5761345c61385c565b6003811061346c5761346c613c48565b01546134789190613bef565b6134829190613c0e565b91505b50949350505050565b82805461349a90613c5e565b90600052602060002090601f0160209004810192826134bc5760008555613502565b82601f106134d557805160ff1916838001178555613502565b82800160010185558215613502579182015b828111156135025782518255916020019190600101906134e7565b5061350e929150613530565b5090565b60405180606001604052806003906020820280368337509192915050565b5b8082111561350e5760008155600101613531565b80356001600160501b038116811461355c57600080fd5b919050565b80356001600160a01b038116811461355c57600080fd5b6000806040838503121561358b57600080fd5b61359483613545565b91506135a260208401613561565b90509250929050565b80356003811061355c57600080fd5b600080604083850312156135cd57600080fd5b823591506135a2602084016135ab565b6000602082840312156135ef57600080fd5b61145b82613545565b60006020828403121561360a57600080fd5b5035919050565b60008083601f84011261362357600080fd5b50813567ffffffffffffffff81111561363b57600080fd5b602083019150836020828501011115611cd457600080fd5b6000806000806060858703121561366957600080fd5b843567ffffffffffffffff81111561368057600080fd5b61368c87828801613611565b909550935050602085013560ff811681146136a657600080fd5b91506136b460408601613545565b905092959194509250565b600080604083850312156136d257600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115613712576137126136e1565b604051601f8501601f19908116603f0116810190828211818310171561373a5761373a6136e1565b8160405280935085815286868601111561375357600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561378057600080fd5b823567ffffffffffffffff8082111561379857600080fd5b818501915085601f8301126137ac57600080fd5b6137bb868335602085016136f7565b935060208501359150808211156137d157600080fd5b508301601f810185136137e357600080fd5b6137f2858235602084016136f7565b9150509250929050565b6000815180845260005b8181101561382257602081850181015186830182015201613806565b81811115613834576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061145b60208301846137fc565b634e487b7160e01b600052602160045260246000fd5b6003811061389057634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038616815260a081016138b16020830187613872565b60ff94909416604082015291151560608301526001600160501b031660809091015292915050565b600080600080606085870312156138ef57600080fd5b843593506138ff60208601613561565b9250604085013567ffffffffffffffff8082111561391c57600080fd5b818701915087601f83011261393057600080fd5b81358181111561393f57600080fd5b8860208260051b850101111561395457600080fd5b95989497505060200194505050565b60008060006060848603121561397857600080fd5b8335925061398860208501613561565b9150613996604085016135ab565b90509250925092565b60e08101818560005b60038110156139c957815115158352602092830192909101906001016139a8565b505050606082018460005b60038110156139f35781518352602092830192909101906001016139d4565b5050508260c0830152949350505050565b600060208284031215613a1657600080fd5b61145b82613561565b600080600060408486031215613a3457600080fd5b83359250602084013567ffffffffffffffff811115613a5257600080fd5b613a5e86828701613611565b9497909650939450505050565b60008060408385031215613a7e57600080fd5b823591506135a260208401613561565b600060408201848352602060408185015281855180845260608601915060608160051b87010193508287016000805b83811015613b1157888703605f19018552825180518089529087019087890190845b81811015613afb57835183529289019291890191600101613adf565b5090985050509385019391850191600101613abd565b50949998505050505050505050565b60008060408385031215613b3357600080fd5b613b3c836135ab565b91506135a2602084016135ab565b60008060008060808587031215613b6057600080fd5b84359350613b7060208601613561565b9250604085013591506136b4606086016135ab565b600060208284031215613b9757600080fd5b5051919050565b60008060408385031215613bb157600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b600082821015613bea57613bea613bc2565b500390565b6000816000190483118215151615613c0957613c09613bc2565b500290565b600082613c2b57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115613c4357613c43613bc2565b500190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680613c7257607f821691505b60208210811415613c9357634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c9080831680613cb357607f831692505b6020808410821415613cd557634e487b7160e01b600052602260045260246000fd5b83885260208801828015613cf05760018114613d0157613d2c565b60ff19871682528282019750613d2c565b60008981526020902060005b87811015613d2657815484820152908601908401613d0d565b83019850505b5050505050505092915050565b828152604060208201526000613d526040830184613c99565b949350505050565b60408101613d688285613872565b8260208301529392505050565b60006001600160501b0380831681811415613d9257613d92613bc2565b6001019392505050565b60006001600160501b0383811690831681811015613dbc57613dbc613bc2565b039392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b606081526000613e01606083018688613dc4565b60ff949094166020830152506040015292915050565b600060ff821660ff84168060ff03821115613e3457613e34613bc2565b019392505050565b600060ff821660ff811415613e5357613e53613bc2565b60010192915050565b60208152600061145b6020830184613c99565b6000808335601e19843603018112613e8657600080fd5b83018035915067ffffffffffffffff821115613ea157600080fd5b6020019150600581901b3603821315611cd457600080fd5b6000600019821415613ecd57613ecd613bc2565b5060010190565b602081526000613d52602083018486613dc4565b600066ffffffffffffff808316818516808303821115613f0a57613f0a613bc2565b0194935050505056fea2646970667358221220a906a41ab294bd1772920ea2f89288b3be011f722e02fbdcd5fd7de216c3d2f564736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x31E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x92239DFF GT PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xBA0EC60B GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xD970D18C GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF851A440 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x9AD JUMPI DUP1 PUSH4 0xFC0AC672 EQ PUSH2 0x9D2 JUMPI DUP1 PUSH4 0xFE6CA782 EQ PUSH2 0x9E8 JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x9FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD970D18C EQ PUSH2 0x962 JUMPI DUP1 PUSH4 0xDC227FC2 EQ PUSH2 0x977 JUMPI DUP1 PUSH4 0xE349AD30 EQ PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC9330C0F GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xC9330C0F EQ PUSH2 0x90C JUMPI DUP1 PUSH4 0xC94828F0 EQ PUSH2 0x92C JUMPI DUP1 PUSH4 0xD3B476B1 EQ PUSH2 0x94C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBA0EC60B EQ PUSH2 0x8CE JUMPI DUP1 PUSH4 0xBC0936FD EQ PUSH2 0x8E3 JUMPI DUP1 PUSH4 0xBE467604 EQ PUSH2 0x8F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xADC7FABA GT PUSH2 0x14E JUMPI DUP1 PUSH4 0xB34BFAA8 GT PUSH2 0x128 JUMPI DUP1 PUSH4 0xB34BFAA8 EQ PUSH2 0x883 JUMPI DUP1 PUSH4 0xB4C70581 EQ PUSH2 0x899 JUMPI DUP1 PUSH4 0xB7BDDC72 EQ PUSH2 0x8B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xADC7FABA EQ PUSH2 0x815 JUMPI DUP1 PUSH4 0xAF4A9144 EQ PUSH2 0x835 JUMPI DUP1 PUSH4 0xB14F2A39 EQ PUSH2 0x863 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA509EFEB GT PUSH2 0x17F JUMPI DUP1 PUSH4 0xA509EFEB EQ PUSH2 0x7B5 JUMPI DUP1 PUSH4 0xA6A7F0EB EQ PUSH2 0x7D5 JUMPI DUP1 PUSH4 0xAB9CD37E EQ PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x92239DFF EQ PUSH2 0x755 JUMPI DUP1 PUSH4 0x92E25925 EQ PUSH2 0x775 JUMPI DUP1 PUSH4 0x956DCBD2 EQ PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x564A565D GT PUSH2 0x269 JUMPI DUP1 PUSH4 0x736ED418 GT PUSH2 0x212 JUMPI DUP1 PUSH4 0x7F67BD6C GT PUSH2 0x1EC JUMPI DUP1 PUSH4 0x7F67BD6C EQ PUSH2 0x6E6 JUMPI DUP1 PUSH4 0x8A9BB02A EQ PUSH2 0x706 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x736ED418 EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x7597B3CB EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0x78431CE9 EQ PUSH2 0x645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67284F21 GT PUSH2 0x243 JUMPI DUP1 PUSH4 0x67284F21 EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0x6760AEB0 EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0x68871C9C EQ PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x564A565D EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x638AF3DA EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0x64FF9DFA EQ PUSH2 0x589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29238089 GT PUSH2 0x2CB JUMPI DUP1 PUSH4 0x313DAB20 GT PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x313DAB20 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0x4C55C000 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x4DE12DB0 EQ PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29238089 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x2D2C5565 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x311A6C56 EQ PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x15F36EBE GT PUSH2 0x2FC JUMPI DUP1 PUSH4 0x15F36EBE EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x1E26DE34 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0x26804BEF EQ PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3624FC0 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x6BCBD73 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x12B3A2C0 EQ PUSH2 0x376 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x33D SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x3578 JUMP JUMPDEST PUSH2 0xA47 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x389 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x1399 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x415 CALLDATASIZE PUSH1 0x4 PUSH2 0x3653 JUMP JUMPDEST PUSH2 0x1529 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x43F SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x36BF JUMP JUMPDEST PUSH2 0x177D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x376D JUMP JUMPDEST PUSH2 0x1A0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CD PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x3849 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x543 PUSH2 0x4F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0xA8 SHL DUP4 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV SWAP1 SWAP2 AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3894 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x574 PUSH2 0x56F CALLDATASIZE PUSH1 0x4 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x1BAE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x1CDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x5C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x38D9 JUMP JUMPDEST PUSH2 0x1DF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x5E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3963 JUMP JUMPDEST PUSH2 0x1EB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43F PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x62B CALLDATASIZE PUSH1 0x4 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x1EFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x2 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A6 PUSH2 0x660 CALLDATASIZE PUSH1 0x4 PUSH2 0x35DD JUMP JUMPDEST PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL DUP2 DIV PUSH7 0xFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH7 0xFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x34B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x701 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x22DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x726 PUSH2 0x721 CALLDATASIZE PUSH1 0x4 PUSH2 0x36BF JUMP JUMPDEST PUSH2 0x236D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x399F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x750 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A04 JUMP JUMPDEST PUSH2 0x245D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x770 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x24D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x790 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x2527 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x7B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x2576 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x7D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x26E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x7F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A1F JUMP JUMPDEST PUSH2 0x28A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x810 CALLDATASIZE PUSH1 0x4 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x2918 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x830 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x2B4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x855 PUSH2 0x850 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A6B JUMP JUMPDEST PUSH2 0x2B99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP3 SWAP2 SWAP1 PUSH2 0x3A8E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x87E CALLDATASIZE PUSH1 0x4 PUSH2 0x3A04 JUMP JUMPDEST PUSH2 0x2D83 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x8B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B20 JUMP JUMPDEST PUSH2 0x2DFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x2E86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x2EEB JUMP JUMPDEST PUSH2 0x374 PUSH2 0x8F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x2F1B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x918 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x927 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A6B JUMP JUMPDEST PUSH2 0x3055 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x947 CALLDATASIZE PUSH1 0x4 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x30BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x20 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x983 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x992 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B4A JUMP JUMPDEST PUSH2 0x310B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x43F SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x400 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E322E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F722063616E207472616E73666572206F776E65727368 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x69702E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD PUSH32 0xDFC39691AEC87DC6AA51FF70C0E592F260C54D2ED6C64E8C4C2306DA0EEC872B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH4 0x1C3DB16D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE DUP3 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x1C3DB16D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD2 SWAP2 SWAP1 PUSH2 0x3B85 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBE3 JUMPI PUSH2 0xBE3 PUSH2 0x385C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAFE15CFB DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC39 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC79 SWAP2 SWAP1 PUSH2 0x3B9E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC91 PUSH2 0x385C JUMP JUMPDEST DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCA3 JUMPI PUSH2 0xCA3 PUSH2 0x385C JUMP JUMPDEST EQ ISZERO PUSH2 0xD27 JUMPI DUP2 TIMESTAMP LT PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E64696E67206D757374206265206D6164652077697468696E2074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61707065616C20706572696F642E000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x400 SWAP1 PUSH2 0xD38 DUP6 DUP6 PUSH2 0x3BD8 JUMP JUMPDEST PUSH2 0xD42 SWAP2 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0xD4C SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST PUSH2 0xD56 SWAP1 DUP5 PUSH2 0x3C30 JUMP JUMPDEST TIMESTAMP LT PUSH2 0xDCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E64696E67206D757374206265206D6164652077697468696E2074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x66697273742068616C662061707065616C20706572696F642E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST POP PUSH1 0x5 SLOAD JUMPDEST DUP7 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF23F16E6 SWAP1 DUP13 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0xE21 JUMPI PUSH2 0xE21 PUSH2 0x3C48 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3F SWAP3 SWAP2 SWAP1 PUSH2 0x3D39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE80 SWAP2 SWAP1 PUSH2 0x3B85 JUMP JUMPDEST SWAP5 POP PUSH2 0x400 PUSH2 0xE8F DUP3 DUP8 PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0xE99 SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST PUSH2 0xEA3 SWAP1 DUP7 PUSH2 0x3C30 JUMP JUMPDEST PUSH1 0x2 DUP9 ADD SLOAD SWAP1 SWAP5 POP DUP10 SWAP4 POP PUSH1 0x0 SWAP3 POP PUSH2 0xEBF SWAP2 POP PUSH1 0x1 SWAP1 PUSH2 0x3BD8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x2 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xED8 JUMPI PUSH2 0xED8 PUSH2 0x3C48 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xEFE JUMPI PUSH2 0xEFE PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xF0E JUMPI PUSH2 0xF0E PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND ISZERO PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41707065616C206665652068617320616C7265616479206265656E2070616964 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFB0 JUMPI PUSH2 0xFB0 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xFC0 JUMPI PUSH2 0xFC0 PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD SWAP1 POP DUP6 DUP2 LT PUSH2 0xFD4 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0xFF8 JUMP JUMPDEST CALLVALUE PUSH2 0xFDF DUP3 DUP9 PUSH2 0x3BD8 JUMP JUMPDEST GT PUSH2 0xFF3 JUMPI PUSH2 0xFEE DUP2 DUP8 PUSH2 0x3BD8 JUMP JUMPDEST PUSH2 0xFF5 JUMP JUMPDEST CALLVALUE JUMPDEST SWAP2 POP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP13 PUSH32 0x2B4EF80A862EDC5616A4E61C11F4A368F33323FACA91FA7635D48B85C183E66A DUP14 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1036 SWAP3 SWAP2 SWAP1 PUSH2 0x3D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1061 JUMPI PUSH2 0x1061 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1071 JUMPI PUSH2 0x1071 PUSH2 0x3C48 JUMP JUMPDEST ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1081 SWAP2 SWAP1 PUSH2 0x3C30 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x2 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x109F JUMPI PUSH2 0x109F PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x10AF JUMPI PUSH2 0x10AF PUSH2 0x3C48 JUMP JUMPDEST ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10BF SWAP2 SWAP1 PUSH2 0x3C30 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP3 PUSH1 0x2 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x10DD JUMPI PUSH2 0x10DD PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x10ED JUMPI PUSH2 0x10ED PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD LT PUSH2 0x11BB JUMPI DUP2 PUSH1 0x2 ADD DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x110A JUMPI PUSH2 0x110A PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x111A JUMPI PUSH2 0x111A PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD DUP3 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x112F SWAP2 SWAP1 PUSH2 0x3C30 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP1 POP DUP3 DUP2 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x114C JUMPI PUSH2 0x114C PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x115C JUMPI PUSH2 0x115C PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x118D JUMPI PUSH2 0x118D PUSH2 0x385C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 SWAP1 DUP14 SWAP1 PUSH32 0xB5681F036910F38D8C2FA06F2CBEDC227ECF03D7C4A358EE9096197B15FF8FD0 SWAP1 PUSH1 0x0 SWAP1 LOG4 JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x11DE JUMPI POP PUSH1 0x1 DUP3 ADD SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x12B1 JUMPI PUSH1 0x2 DUP9 ADD DUP1 SLOAD PUSH1 0x1 ADD DUP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 DUP4 ADD DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1207 SWAP1 DUP5 SWAP1 PUSH2 0x3BD8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP8 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x49912F88 SWAP1 DUP9 SWAP1 DUP15 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x1260 JUMPI PUSH2 0x1260 PUSH2 0x3C48 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127E SWAP3 SWAP2 SWAP1 PUSH2 0x3D39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x12BD DUP3 CALLVALUE PUSH2 0x3BD8 JUMP JUMPDEST GT ISZERO PUSH2 0x12E9 JUMPI CALLER PUSH2 0x8FC PUSH2 0x12D1 DUP4 CALLVALUE PUSH2 0x3BD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL POP POP POP POP POP JUMPDEST DUP2 PUSH1 0x1 ADD DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12FF JUMPI PUSH2 0x12FF PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x130F JUMPI PUSH2 0x130F PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x48 PUSH1 0x0 DUP5 PUSH2 0x1347 DUP2 PUSH2 0x3D75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP2 SWAP5 POP SWAP2 POP PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0x1339 JUMPI PUSH2 0x1389 PUSH1 0x1 DUP5 PUSH2 0x3D9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xF23F16E6 SWAP2 DUP7 SWAP2 PUSH1 0x8 SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 LT PUSH2 0x13FC JUMPI PUSH2 0x13FC PUSH2 0x3C48 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141A SWAP3 SWAP2 SWAP1 PUSH2 0x3D39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1437 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x145B SWAP2 SWAP1 PUSH2 0x3B85 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x147E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100 DUP2 GT ISZERO PUSH2 0x14F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652074617820726174652063616E206F6E6C7920626520696E6372656173 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642062792061206D6178696D756D206F662032352500000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x5100AB374784A62034356F9AF3B71EA723C1E89BEB5627C6C1DACEA1117250B8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF SWAP1 DUP2 AND SWAP1 DUP4 AND LT PUSH2 0x1581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732063617465676F727920646F6573206E6F7420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xADA JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x48 PUSH1 0x0 DUP4 PUSH2 0x1592 DUP2 PUSH2 0x3D75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0x1584 JUMPI DUP1 SLOAD PUSH32 0xFF00000000000000FFFFFFFF0000000000000000000000000000000000000000 AND CALLER PUSH32 0xFF00000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND OR PUSH1 0x1 PUSH1 0xC0 SHL CALLVALUE PUSH1 0x20 SHR PUSH7 0xFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xF8 SHL PUSH1 0xFF DUP8 AND MUL OR DUP1 DUP5 SSTORE DIV AND PUSH2 0x16CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E277420696E697469616C697A6520616E2061727469636C6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x776974686F75742070757474696E67206120626F756E74792E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16DB PUSH1 0x1 DUP5 PUSH2 0x3D9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP1 POP PUSH32 0x4F9A2B734331C583FAF3F19D1FEB5F08B742E016A56FB61379950BEAF3E22341 DUP7 DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x171B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP3 DIV PUSH1 0x20 SWAP1 DUP2 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND SWAP1 DUP4 ADD MSTORE PUSH32 0xDF5FC410D3381CC7F0A7FE3AF72F4E3CF53EF5787F20554AF69035A950E1B2E3 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x17B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x17D5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3BD8 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x17E5 JUMPI PUSH2 0x17E5 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x6 SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SLOAD SWAP1 SWAP3 POP PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1813 JUMPI POP PUSH1 0x1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1829 JUMPI POP PUSH1 0x2 JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x183E JUMPI PUSH2 0x183E PUSH2 0x385C JUMP JUMPDEST EQ ISZERO PUSH2 0x185B JUMPI DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1856 JUMPI PUSH2 0x1856 PUSH2 0x385C JUMP JUMPDEST PUSH2 0x185D JUMP JUMPDEST DUP2 JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 DUP6 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x189F JUMPI PUSH2 0x189F PUSH2 0x385C JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18D4 JUMPI PUSH2 0x18D4 PUSH2 0x385C JUMP JUMPDEST EQ ISZERO PUSH2 0x198B JUMPI DUP1 SLOAD PUSH32 0xFF00000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH1 0x20 SWAP1 DUP2 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND SWAP2 PUSH32 0x8271992F9B3A3F30DC2A464982DC4A136E7357403462443A171A0FB0C6CCC265 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL POP POP POP POP POP POP JUMPDEST DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE DUP6 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xB0 SHL OR DUP7 SSTORE PUSH1 0x40 MLOAD DUP9 SWAP1 CALLER SWAP1 PUSH32 0x394027A5FA6E098A1191094D1719D6929B9ABC535FCC0C8F448D6A4E75622276 SWAP1 PUSH2 0x19FB SWAP1 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1A1E SWAP1 PUSH1 0xFF AND PUSH1 0x1 PUSH2 0x3E17 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x1A6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207370616365206C65667420666F722061206E65772063617465676F7279 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xADA JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x61606860EB6C87306811E2695215385101DAAB53BD6AB4E9F9049AEAD9363C7D SWAP1 PUSH2 0x1AA6 SWAP1 DUP6 SWAP1 PUSH2 0x3849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x7 SLOAD DUP2 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x1AC9 JUMPI PUSH2 0x1AC9 PUSH2 0x3C48 JUMP JUMPDEST ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1ADD SWAP3 SWAP2 SWAP1 PUSH2 0x348E JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH2 0x1AF1 DUP4 PUSH2 0x3E3C JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 PUSH1 0x40 DUP2 LT PUSH2 0x1B1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x1B2D SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B59 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BA6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B7B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BA6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B89 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAFE15CFB DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C02 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C1E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C42 SWAP2 SWAP1 PUSH2 0x3B9E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x400 PUSH1 0x2 SLOAD DUP5 DUP5 PUSH2 0x1C5A SWAP2 SWAP1 PUSH2 0x3BD8 JUMP JUMPDEST PUSH2 0x1C64 SWAP2 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0x1C6E SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST PUSH2 0x1C78 SWAP1 DUP5 PUSH2 0x3C30 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1C8E JUMPI PUSH2 0x1C8E PUSH2 0x385C JUMP JUMPDEST PUSH2 0x1C97 DUP10 PUSH2 0x22DB JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1CA8 JUMPI PUSH2 0x1CA8 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1CB9 JUMPI PUSH2 0x1CB9 PUSH2 0x385C JUMP JUMPDEST EQ SWAP1 POP DUP1 PUSH2 0x1CC8 JUMPI DUP4 DUP3 PUSH2 0x1CCB JUMP JUMPDEST DUP4 DUP4 JUMPDEST SWAP6 POP SWAP6 POP POP POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xF7434EA9 SWAP2 PUSH1 0x8 SWAP2 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 LT PUSH2 0x1D48 JUMPI PUSH2 0x1D48 PUSH2 0x3C48 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D65 SWAP2 SWAP1 PUSH2 0x3E5C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DA6 SWAP2 SWAP1 PUSH2 0x3B85 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0x400 SWAP2 PUSH2 0x1DD5 SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x20 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0x1DDF SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST SWAP1 POP PUSH2 0x1DEB DUP2 DUP4 PUSH2 0x3C30 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EB1 JUMPI PUSH1 0x0 JUMPDEST DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1E14 JUMPI PUSH2 0x1E14 PUSH2 0x3C48 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1E26 SWAP2 SWAP1 PUSH2 0x3E6F JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x1E9E JUMPI PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x1E43 JUMPI PUSH2 0x1E43 PUSH2 0x3C48 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1E55 SWAP2 SWAP1 PUSH2 0x3E6F JUMP JUMPDEST DUP4 DUP2 DUP2 LT PUSH2 0x1E65 JUMPI PUSH2 0x1E65 PUSH2 0x3C48 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT ISZERO PUSH2 0x1E8C JUMPI PUSH2 0x1E8A DUP7 DUP7 DUP5 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x992 JUMPI PUSH2 0x992 PUSH2 0x385C JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x1E96 DUP2 PUSH2 0x3EB9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E02 JUMP JUMPDEST POP DUP1 PUSH2 0x1EA9 DUP2 PUSH2 0x3EB9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1DF7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EF5 JUMPI PUSH2 0x1EE2 DUP7 DUP7 DUP4 DUP8 PUSH2 0x310B JUMP JUMPDEST POP DUP1 PUSH2 0x1EED DUP2 PUSH2 0x3EB9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1ECE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0x1F73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F206368616C6C656E67652E0000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xADA JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF SWAP1 DUP2 AND EQ ISZERO PUSH2 0x1FD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865726520697320616E206F6E676F696E67206368616C6C656E67652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xADA JUMP JUMPDEST DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH24 0xFFFFFFFF0000000000000000000000000000000000000000 OR DUP2 SSTORE PUSH2 0x2003 DUP3 PUSH2 0x1CDB JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x2052 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742066756E647320746F206368616C6C656E67652E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xADA JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x400 SWAP2 PUSH2 0x207F SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x20 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0x2089 SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x209D SWAP2 SWAP1 PUSH2 0x3C30 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0xC13517E1 PUSH2 0x20DE DUP5 CALLVALUE PUSH2 0x3BD8 JUMP JUMPDEST DUP6 SLOAD PUSH1 0x2 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x2100 JUMPI PUSH2 0x2100 PUSH2 0x3C48 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211E SWAP3 SWAP2 SWAP1 PUSH2 0x3D39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x213C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2161 SWAP2 SWAP1 PUSH2 0x3B85 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP4 ADD DUP1 SLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP13 AND OR SWAP1 SSTORE DUP9 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FF0000000000000000000000000000000000000000 SWAP1 SWAP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xF8 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE DUP8 SLOAD DUP5 MLOAD SWAP2 SWAP1 DIV SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH32 0x74BAAB670A4015AB2F1B467C5252A96141A2573F2908E58A92081E80D3CFDE3D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP7 AND SWAP2 PUSH32 0x1E5338A1FB672AA84963DC9F9E4AFD009B4ED726DEBB09224BF4D02A6C68B4E4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C3DB16D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x1C3DB16D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2343 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2367 SWAP2 SWAP1 PUSH2 0x3B85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2375 PUSH2 0x3512 JUMP JUMPDEST PUSH2 0x237D PUSH2 0x3512 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x23A3 JUMPI PUSH2 0x23A3 PUSH2 0x3C48 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD DUP2 PUSH1 0x2 ADD DUP3 PUSH1 0x5 ADD SLOAD DUP3 PUSH1 0x3 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0x2418 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 SLOAD PUSH2 0x100 DUP4 SWAP1 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 PUSH1 0x1 SWAP3 DUP4 ADD DUP2 DUP2 DIV SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP4 SUB SWAP1 SWAP3 MUL SWAP2 ADD DUP1 DUP5 GT PUSH2 0x23E7 JUMPI SWAP1 POP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP5 SWAP8 POP DUP7 SWAP4 POP PUSH1 0x3 SWAP3 POP SWAP1 POP DUP3 DUP5 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2435 JUMPI POP POP POP POP POP SWAP2 POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xC2515F25186DF02132AD46F01E062C3B8982C8DE57FA2B1B0A280D8E810F39B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x505F3BF1E426C82F14F7C9CFB2D31EF5B7BB76428E16BD90DABEC113E3D4A2BC SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x207E19E347BECB468EF02D25790188E4D5DA0FE37176D3BBB7940168EC5D6136 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x25F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F722063616E20776974686472617720616E2061727469 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x31B63297 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x2675 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20616C726561647920696E69746961746564206F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74686572652069732061206368616C6C656E67652E0000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2682 SWAP1 TIMESTAMP PUSH2 0x3C30 JUMP JUMPDEST DUP2 SLOAD PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP4 AND DUP2 MSTORE PUSH32 0x416C1AD2B96C356F3BBD35431F86CCE449DDBB4F8C3755EA9D2776B04C2E9C8F SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD DUP3 SWAP1 PUSH2 0x2704 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3BD8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x2 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x271D JUMPI PUSH2 0x271D PUSH2 0x3C48 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2741 JUMPI PUSH2 0x2741 PUSH2 0x385C JUMP JUMPDEST PUSH2 0x274A DUP9 PUSH2 0x22DB JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x275B JUMPI PUSH2 0x275B PUSH2 0x385C JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x276C JUMPI PUSH2 0x276C PUSH2 0x385C JUMP JUMPDEST EQ SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x277E JUMPI PUSH1 0x5 SLOAD PUSH2 0x2782 JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 ADD DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x279C JUMPI PUSH2 0x279C PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x27AC JUMPI PUSH2 0x27AC PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD DUP7 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF23F16E6 SWAP1 DUP13 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP2 LT PUSH2 0x2806 JUMPI PUSH2 0x2806 PUSH2 0x3C48 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2824 SWAP3 SWAP2 SWAP1 PUSH2 0x3D39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2841 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2865 SWAP2 SWAP1 PUSH2 0x3B85 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x400 PUSH2 0x2876 DUP6 DUP5 PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0x2880 SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST PUSH2 0x288A SWAP1 DUP4 PUSH2 0x3C30 JUMP JUMPDEST SWAP1 POP PUSH2 0x2896 DUP4 DUP3 PUSH2 0x3BD8 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDCCF2F8B2CC26EAFCD61905CBA744CFF4B81D14740725F6376390DC6298A6A3C DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x290B SWAP3 SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2995 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F722063616E20776974686472617720616E2061727469 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x31B63297 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x2A16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E65656420746F20696E697469617465207769746864726177616C20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x66697273742E0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST DUP1 SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x2A9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E65656420746F207761697420666F722074696D656C6F636B206F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207761697420756E74696C20746865206368616C6C656E676520656E64732E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST DUP1 SLOAD PUSH32 0xFF0000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH1 0x20 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND SWAP1 CALLER SWAP1 PUSH2 0x8FC DUP4 ISZERO MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2B08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP5 AND DUP2 MSTORE PUSH32 0x70B41D8CCA762CEEC66D93F536DBB31F5CABBF1901F862508B9438DE54FCE4EB SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2B66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x8DF75282265171690A1298CF028F5E3C7D8D42313394A4F25D4AEEA6C1EA62CF SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2BC5 JUMPI PUSH1 0x0 SWAP3 POP POP PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BEF JUMPI PUSH2 0x2BEF PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C22 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2C0D JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2D78 JUMPI PUSH2 0x2C3C PUSH1 0x2 PUSH1 0x1 PUSH2 0x3C30 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C54 JUMPI PUSH2 0x2C54 PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C7D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2C90 JUMPI PUSH2 0x2C90 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP5 PUSH1 0x2 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2CB2 JUMPI PUSH2 0x2CB2 PUSH2 0x3C48 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 GT PUSH2 0x2D63 JUMPI PUSH1 0x0 PUSH2 0x2CEC DUP4 DUP12 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2CE6 JUMPI PUSH2 0x2CE6 PUSH2 0x385C JUMP JUMPDEST DUP9 PUSH2 0x326F JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2D50 JUMPI PUSH2 0x2D0B DUP4 DUP12 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2CE6 JUMPI PUSH2 0x2CE6 PUSH2 0x385C JUMP JUMPDEST PUSH2 0x2D15 SWAP1 DUP11 PUSH2 0x3C30 JUMP JUMPDEST SWAP9 POP DUP1 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2D2A JUMPI PUSH2 0x2D2A PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2D43 JUMPI PUSH2 0x2D43 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP DUP1 PUSH2 0x2D5B DUP2 PUSH2 0x3EB9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2CC5 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2D70 SWAP1 PUSH2 0x3EB9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2C28 JUMP JUMPDEST POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2D9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x8A3509A4057C89A5993A4A3140C2EBF7E829D325D8998EAA6C48ADCFF98B2CEF SWAP2 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2E11 JUMPI PUSH2 0x2E11 PUSH2 0x385C JUMP JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2E23 JUMPI PUSH2 0x2E23 PUSH2 0x385C JUMP JUMPDEST EQ SWAP1 POP PUSH2 0x3E8 PUSH1 0x0 DUP3 PUSH2 0x2E38 JUMPI PUSH1 0x5 SLOAD PUSH2 0x2E3C JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST SWAP1 POP PUSH2 0x2E4A PUSH2 0x400 DUP3 PUSH2 0x3C30 JUMP JUMPDEST DUP3 PUSH2 0x400 PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH2 0x2E5E SWAP2 SWAP1 PUSH2 0x3C30 JUMP JUMPDEST PUSH2 0x2E68 SWAP2 SWAP1 PUSH2 0x3C30 JUMP JUMPDEST PUSH2 0x2E72 SWAP2 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0x2E7C SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP1 SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x8FC DUP5 ISZERO MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL POP POP PUSH1 0x40 MLOAD DUP5 SWAP4 POP PUSH32 0xB315332B30DC40D1E51DEF214CE42D93A73BD0C17B08DB04B34F10736BB2F06F SWAP3 POP PUSH1 0x0 SWAP2 POP LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2F07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP1 SWAP2 AND ISZERO OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x48 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F722063616E20696E63726561736520626F756E747920 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6620616E2061727469636C652E000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xADA JUMP JUMPDEST DUP1 SLOAD CALLVALUE PUSH1 0x20 SHR SWAP1 DUP3 SWAP1 PUSH1 0x18 SWAP1 PUSH2 0x2FD9 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0x3EE8 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH7 0xFFFFFFFFFFFFFF DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE POP DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP3 DIV PUSH1 0x20 SWAP1 DUP2 SHL PUSH11 0xFFFFFFFFFFFFFF00000000 AND SWAP1 DUP4 ADD MSTORE PUSH32 0xDF5FC410D3381CC7F0A7FE3AF72F4E3CF53EF5787F20554AF69035A950E1B2E3 SWAP2 ADD PUSH2 0x26D7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EB1 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 GT PUSH2 0x30A9 JUMPI PUSH2 0x3096 DUP7 DUP7 DUP5 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x992 JUMPI PUSH2 0x992 PUSH2 0x385C JUMP JUMPDEST POP DUP1 PUSH2 0x30A1 DUP2 PUSH2 0x3EB9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3076 JUMP JUMPDEST POP DUP1 PUSH2 0x30B4 DUP2 PUSH2 0x3EB9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x306B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x30D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xBF39FAA024D2F97599A0095E84098EE2171B6681738416C0030F442BA956D52B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3171 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206973206E6F2072756C696E67207965742E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xADA JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x3188 JUMPI PUSH2 0x3188 PUSH2 0x3C48 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP PUSH2 0x31B5 DUP2 DUP8 DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x326F JUMP JUMPDEST SWAP3 POP DUP3 ISZERO PUSH2 0x3265 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x31E7 JUMPI PUSH2 0x31E7 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x31F7 JUMPI PUSH2 0x31F7 PUSH2 0x3C48 JUMP JUMPDEST ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP9 PUSH32 0xFF2B7C936D6023FEA901B3455CEFC23B124C1CA5997DC5B48C461FD20984289D DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x325C SWAP3 SWAP2 SWAP1 PUSH2 0x3D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 DUP7 ADD DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3288 JUMPI PUSH2 0x3288 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3298 JUMPI PUSH2 0x3298 PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND PUSH2 0x32F5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x32DC JUMPI PUSH2 0x32DC PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x32EC JUMPI PUSH2 0x32EC PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD SWAP2 POP PUSH2 0x3485 JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3307 JUMPI PUSH2 0x3307 PUSH2 0x385C JUMP JUMPDEST DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3319 JUMPI PUSH2 0x3319 PUSH2 0x385C JUMP JUMPDEST EQ ISZERO PUSH2 0x33D9 JUMPI PUSH1 0x0 DUP7 PUSH1 0x2 ADD DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3337 JUMPI PUSH2 0x3337 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3347 JUMPI PUSH2 0x3347 PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD GT PUSH2 0x3355 JUMPI PUSH1 0x0 PUSH2 0x33D2 JUMP JUMPDEST DUP6 PUSH1 0x2 ADD DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x336B JUMPI PUSH2 0x336B PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x337B JUMPI PUSH2 0x337B PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP10 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33AC JUMPI PUSH2 0x33AC PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x33BC JUMPI PUSH2 0x33BC PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD PUSH2 0x33C8 SWAP2 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0x33D2 SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST SWAP2 POP PUSH2 0x3485 JUMP JUMPDEST DUP6 PUSH1 0x1 ADD DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33EF JUMPI PUSH2 0x33EF PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x33FF JUMPI PUSH2 0x33FF PUSH2 0x3C48 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND PUSH2 0x3485 JUMPI PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x3 DUP8 ADD SLOAD PUSH2 0x342D SWAP2 SWAP1 PUSH2 0x3C30 JUMP JUMPDEST PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP10 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x345C JUMPI PUSH2 0x345C PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x346C JUMPI PUSH2 0x346C PUSH2 0x3C48 JUMP JUMPDEST ADD SLOAD PUSH2 0x3478 SWAP2 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0x3482 SWAP2 SWAP1 PUSH2 0x3C0E JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x349A SWAP1 PUSH2 0x3C5E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x34BC JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3502 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x34D5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3502 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3502 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3502 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x34E7 JUMP JUMPDEST POP PUSH2 0x350E SWAP3 SWAP2 POP PUSH2 0x3530 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x350E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3531 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x355C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x355C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x358B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3594 DUP4 PUSH2 0x3545 JUMP JUMPDEST SWAP2 POP PUSH2 0x35A2 PUSH1 0x20 DUP5 ADD PUSH2 0x3561 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x355C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x35A2 PUSH1 0x20 DUP5 ADD PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145B DUP3 PUSH2 0x3545 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x360A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x363B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1CD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x368C DUP8 DUP3 DUP9 ADD PUSH2 0x3611 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x36A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH2 0x36B4 PUSH1 0x40 DUP7 ADD PUSH2 0x3545 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x3712 JUMPI PUSH2 0x3712 PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x373A JUMPI PUSH2 0x373A PUSH2 0x36E1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x3753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x37AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37BB DUP7 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x36F7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x37D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x37E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37F2 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x36F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3822 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x3806 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3834 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x145B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x37FC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3890 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 DUP2 ADD PUSH2 0x38B1 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3872 JUMP JUMPDEST PUSH1 0xFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x38EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x38FF PUSH1 0x20 DUP7 ADD PUSH2 0x3561 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x391C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x393F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3954 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x3988 PUSH1 0x20 DUP6 ADD PUSH2 0x3561 JUMP JUMPDEST SWAP2 POP PUSH2 0x3996 PUSH1 0x40 DUP6 ADD PUSH2 0x35AB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD DUP2 DUP6 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x39C9 JUMPI DUP2 MLOAD ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x39A8 JUMP JUMPDEST POP POP POP PUSH1 0x60 DUP3 ADD DUP5 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x39F3 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x39D4 JUMP JUMPDEST POP POP POP DUP3 PUSH1 0xC0 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145B DUP3 PUSH2 0x3561 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3A34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A5E DUP7 DUP3 DUP8 ADD PUSH2 0x3611 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x35A2 PUSH1 0x20 DUP5 ADD PUSH2 0x3561 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD DUP5 DUP4 MSTORE PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP3 DUP8 ADD PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B11 JUMPI DUP9 DUP8 SUB PUSH1 0x5F NOT ADD DUP6 MSTORE DUP3 MLOAD DUP1 MLOAD DUP1 DUP10 MSTORE SWAP1 DUP8 ADD SWAP1 DUP8 DUP10 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3AFB JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP10 ADD SWAP3 SWAP2 DUP10 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3ADF JUMP JUMPDEST POP SWAP1 SWAP9 POP POP POP SWAP4 DUP6 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3ABD JUMP JUMPDEST POP SWAP5 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B3C DUP4 PUSH2 0x35AB JUMP JUMPDEST SWAP2 POP PUSH2 0x35A2 PUSH1 0x20 DUP5 ADD PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3B60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x3B70 PUSH1 0x20 DUP7 ADD PUSH2 0x3561 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x36B4 PUSH1 0x60 DUP7 ADD PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3BEA JUMPI PUSH2 0x3BEA PUSH2 0x3BC2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3C09 JUMPI PUSH2 0x3C09 PUSH2 0x3BC2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3C2B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3C43 JUMPI PUSH2 0x3C43 PUSH2 0x3BC2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3C72 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3C93 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x3CB3 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x3CD5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 DUP9 MSTORE PUSH1 0x20 DUP9 ADD DUP3 DUP1 ISZERO PUSH2 0x3CF0 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3D01 JUMPI PUSH2 0x3D2C JUMP JUMPDEST PUSH1 0xFF NOT DUP8 AND DUP3 MSTORE DUP3 DUP3 ADD SWAP8 POP PUSH2 0x3D2C JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x3D26 JUMPI DUP2 SLOAD DUP5 DUP3 ADD MSTORE SWAP1 DUP7 ADD SWAP1 DUP5 ADD PUSH2 0x3D0D JUMP JUMPDEST DUP4 ADD SWAP9 POP POP JUMPDEST POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3D52 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3C99 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x3D68 DUP3 DUP6 PUSH2 0x3872 JUMP JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x3D92 JUMPI PUSH2 0x3D92 PUSH2 0x3BC2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x3DBC JUMPI PUSH2 0x3DBC PUSH2 0x3BC2 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3E01 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x3DC4 JUMP JUMPDEST PUSH1 0xFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x3E34 JUMPI PUSH2 0x3E34 PUSH2 0x3BC2 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x3E53 JUMPI PUSH2 0x3E53 PUSH2 0x3BC2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x145B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C99 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x3E86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3EA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP PUSH1 0x5 DUP2 SWAP1 SHL CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x1CD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3ECD JUMPI PUSH2 0x3ECD PUSH2 0x3BC2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3D52 PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x3DC4 JUMP JUMPDEST PUSH1 0x0 PUSH7 0xFFFFFFFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x3F0A JUMPI PUSH2 0x3F0A PUSH2 0x3BC2 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 MOD LOG4 BYTE 0xB2 SWAP5 0xBD OR PUSH19 0x920EA2F89288B3BE011F722E02FBDCD5FD7DE2 AND 0xC3 0xD2 CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
              "sourceMap": "1105:26133:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1364:32;;;;;;;;;;-1:-1:-1;1364:32:5;;;;;;;;;;;186:4:7;174:17;;;156:36;;144:2;129:18;1364:32:5;;;;;;;;19962:347;;;;;;;;;;-1:-1:-1;19962:347:5;;;;;:::i;:::-;;:::i;:::-;;8187:3417;;;;;;:::i;:::-;;:::i;:::-;;;1482:14:7;;1475:22;1457:41;;1445:2;1430:18;8187:3417:5;1317:187:7;21196:301:5;;;;;;;;;;-1:-1:-1;21196:301:5;;;;;:::i;:::-;;:::i;:::-;;;1844:25:7;;;1832:2;1817:18;21196:301:5;1698:177:7;20881:278:5;;;;;;;;;;-1:-1:-1;20881:278:5;;;;;:::i;:::-;;:::i;16347:300::-;;;;;;;;;;-1:-1:-1;16347:300:5;;;;;:::i;:::-;;:::i;3429:963::-;;;;;;:::i;:::-;;:::i;691:31:4:-;;;;;;;;;;-1:-1:-1;691:31:4;;;;;;;-1:-1:-1;;;;;691:31:4;;;;;;-1:-1:-1;;;;;3243:55:7;;;3225:74;;3213:2;3198:18;691:31:4;3063:242:7;11797:1638:5;;;;;;;;;;-1:-1:-1;11797:1638:5;;;;;:::i;:::-;;:::i;728:30:4:-;;;;;;;;;;;;;;;;19567:358:5;;;;;;;;;;-1:-1:-1;19567:358:5;;;;;:::i;:::-;;:::i;2574:46::-;;;;;;;;;;-1:-1:-1;2574:46:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2802:47::-;;;;;;;;;;-1:-1:-1;2802:47:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2802:47:5;;;;-1:-1:-1;;;2802:47:5;;;;;-1:-1:-1;;;2802:47:5;;;;;-1:-1:-1;;;2802:47:5;;;;;;-1:-1:-1;;;;;2802:47:5;;;;;;;;;;;;;;:::i;25157:624::-;;;;;;;;;;-1:-1:-1;25157:624:5;;;;;:::i;:::-;;:::i;:::-;;;;7333:25:7;;;7389:2;7374:18;;7367:34;;;;7306:18;25157:624:5;7159:248:7;20346:498:5;;;;;;;;;;-1:-1:-1;20346:498:5;;;;;:::i;:::-;;:::i;14569:598::-;;;;;;;;;;-1:-1:-1;14569:598:5;;;;;:::i;:::-;;:::i;14073:459::-;;;;;;;;;;-1:-1:-1;14073:459:5;;;;;:::i;:::-;;:::i;1168:39::-;;;;;;;;;;;;;;;6717:1433;;;;;;:::i;:::-;;:::i;764:52:4:-;;;;;;;;;;;;815:1;764:52;;2627:48:5;;;;;;;;;;-1:-1:-1;2627:48:5;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2627:48:5;;;-1:-1:-1;;;2627:48:5;;;;;-1:-1:-1;;;2627:48:5;;;;;-1:-1:-1;;;2627:48:5;;;;;;;;;;-1:-1:-1;;;;;9101:55:7;;;9083:74;;9205:10;9193:23;;;9188:2;9173:18;;9166:51;9265:16;9253:29;;;9233:18;;;9226:57;;;;9331:4;9319:17;9314:2;9299:18;;9292:45;9070:3;9055:19;2627:48:5;8844:499:7;24973:147:5;;;;;;;;;;-1:-1:-1;24973:147:5;;;;;:::i;:::-;;:::i;24452:484::-;;;;;;;;;;-1:-1:-1;24452:484:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;17641:138::-;;;;;;;;;;-1:-1:-1;17641:138:5;;;;;:::i;:::-;;:::i;18486:231::-;;;;;;;;;;-1:-1:-1;18486:231:5;;;;;:::i;:::-;;:::i;19069:261::-;;;;;;;;;;-1:-1:-1;19069:261:5;;;;;:::i;:::-;;:::i;5227:504::-;;;;;;;;;;-1:-1:-1;5227:504:5;;;;;:::i;:::-;;:::i;26383:852::-;;;;;;;;;;-1:-1:-1;26383:852:5;;;;;:::i;:::-;;:::i;4429:172::-;;;;;;;;;;-1:-1:-1;4429:172:5;;;;;:::i;:::-;;:::i;5768:912::-;;;;;;;;;;-1:-1:-1;5768:912:5;;;;;:::i;:::-;;:::i;18212:237::-;;;;;;;;;;-1:-1:-1;18212:237:5;;;;;:::i;:::-;;:::i;21534:1296::-;;;;;;;;;;-1:-1:-1;21534:1296:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;18019:156::-;;;;;;;;;;-1:-1:-1;18019:156:5;;;;;:::i;:::-;;:::i;1418:37:4:-;;;;;;;;;;;;;;;;25818:528:5;;;;;;;;;;-1:-1:-1;25818:528:5;;;;;:::i;:::-;;:::i;17054:197::-;;;;;;;;;;;;;:::i;17288:117::-;;;;;;;;;;;;;:::i;4638:552::-;;;;;;:::i;:::-;;:::i;913:51:4:-;;;;;;;;;;;;;;;;13472:564:5;;;;;;;;;;-1:-1:-1;13472:564:5;;;;;:::i;:::-;;:::i;18754:274::-;;;;;;;;;;-1:-1:-1;18754:274:5;;;;;:::i;:::-;;:::i;1162:42:4:-;;;;;;;;;;;;;;;;1213:71:5;;;;;;;;;;;;1282:2;1213:71;;15204:787;;;;;;;;;;-1:-1:-1;15204:787:5;;;;;:::i;:::-;;:::i;1267:38:4:-;;;;;;;;;;;;;;;;1403:50:5;;;;;;;;;;-1:-1:-1;1403:50:5;;;;;;;-1:-1:-1;;;;;1403:50:5;;;1567:36:4;;;;;;;;;;;;;;;;822:53;;;;;;;;;;;;871:4;822:53;;519:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19962:347:5;-1:-1:-1;;;;;20101:38:5;;20075:23;20101:38;;;:14;:38;;;;;20171:13;;-1:-1:-1;;;;;20171:13:5;20157:10;:27;20149:75;;;;-1:-1:-1;;;20149:75:5;;13867:2:7;20149:75:5;;;13849:21:7;13906:2;13886:18;;;13879:30;13945:34;13925:18;;;13918:62;14016:5;13996:18;;;13989:33;14039:19;;20149:75:5;;;;;;;;;20234:25;;-1:-1:-1;;20234:25:5;-1:-1:-1;;;;;20234:25:5;;;;;;;20274:28;;;;-1:-1:-1;;20274:28:5;20065:244;19962:347;;:::o;8187:3417::-;8326:16;8388:20;;;:8;:20;;;;;;8463:36;;-1:-1:-1;;;8463:36:5;;;;;1844:25:7;;;8326:16:5;;8463:10;-1:-1:-1;;;;;8463:24:5;;;;1817:18:7;;8463:36:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8449:51;;;;;;;;:::i;:::-;8419:81;;8510:17;8537;8579:25;8606:23;8633:10;-1:-1:-1;;;;;8633:23:5;;8657:10;8633:35;;;;;;;;;;;;;1844:25:7;;1832:2;1817:18;;1698:177;8633:35:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8578:90;;;;8683:18;8740:13;8720:33;;;;;;;;:::i;:::-;:16;:33;;;;;;;;:::i;:::-;;8716:663;;;8799:15;8781;:33;8773:92;;;;-1:-1:-1;;;8773:92:5;;14710:2:7;8773:92:5;;;14692:21:7;14749:2;14729:18;;;14722:30;14788:34;14768:18;;;14761:62;14859:16;14839:18;;;14832:44;14893:19;;8773:92:5;14508:410:7;8773:92:5;-1:-1:-1;8897:23:5;;8716:663;;;9121:30;;871:4:4;;9082:35:5;9100:17;9082:15;:35;:::i;:::-;9081:70;;;;:::i;:::-;9080:129;;;;:::i;:::-;9031:179;;:17;:179;:::i;:::-;8988:15;:223;8959:351;;;;-1:-1:-1;;;8959:351:5;;16029:2:7;8959:351:5;;;16011:21:7;16068:2;16048:18;;;16041:30;16107:34;16087:18;;;16080:62;16178:27;16158:18;;;16151:55;16223:19;;8959:351:5;15827:421:7;8959:351:5;-1:-1:-1;9342:22:5;;8716:663;9469:23;;9405:10;-1:-1:-1;;;;;9405:21:5;;;;9427:10;;9439:29;;-1:-1:-1;;;9469:23:5;;;;9439:54;;;;;;;:::i;:::-;;9405:89;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9393:101;-1:-1:-1;871:4:4;9534:24:5;9547:10;9393:101;9534:24;:::i;:::-;9533:51;;;;:::i;:::-;9520:65;;:9;:65;:::i;:::-;9712:14;;;:21;9508:77;;-1:-1:-1;9659:16:5;;-1:-1:-1;9606:36:5;;-1:-1:-1;9712:25:5;;-1:-1:-1;9736:1:5;;9712:25;:::i;:::-;9687:50;;9747:23;9773:7;:14;;9788;9773:30;;;;;;;;:::i;:::-;;;;;;;;;;;9747:56;;9822:9;:17;;9848:22;9840:31;;;;;;;;:::i;:::-;9822:50;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;9821:51;9813:97;;;;-1:-1:-1;;;9813:97:5;;18610:2:7;9813:97:5;;;18592:21:7;18649:2;18629:18;;;18622:30;18688:34;18668:18;;;18661:62;18759:3;18739:18;;;18732:31;18780:19;;9813:97:5;18408:397:7;9813:97:5;9921:20;9965:17;9985:9;:24;;10018:22;10010:31;;;;;;;;:::i;:::-;9985:57;;;;;;;:::i;:::-;;;9965:77;;10074:9;10061;:22;10057:293;;10118:1;10103:16;;10057:293;;;10290:9;10266:21;10278:9;10266;:21;:::i;:::-;:33;:69;;10314:21;10326:9;10314;:21;:::i;:::-;10266:69;;;10302:9;10266:69;10251:84;;10057:293;9951:409;10434:10;-1:-1:-1;;;;;10375:84:5;10400:14;10388:10;10375:84;10416:16;10446:12;10375:84;;;;;;;:::i;:::-;;;;;;;;10494:10;10470:23;:35;;;;;;;;;;10542:12;;10514:22;10506:31;;;;;;;;:::i;:::-;10470:68;;;;;;;:::i;:::-;;;:84;;;;;;;:::i;:::-;;;;;;;;10625:12;10564:9;:24;;10597:22;10589:31;;;;;;;;:::i;:::-;10564:57;;;;;;;:::i;:::-;;;:73;;;;;;;:::i;:::-;;;;;;;;10713:9;10652;:24;;10685:22;10677:31;;;;;;;;:::i;:::-;10652:57;;;;;;;:::i;:::-;;;:70;10648:347;;10779:9;:24;;10812:22;10804:31;;;;;;;;:::i;:::-;10779:57;;;;;;;:::i;:::-;;;10738:9;:37;;;:98;;;;;;;:::i;:::-;;;;-1:-1:-1;10903:4:5;;-1:-1:-1;10850:17:5;;;10876:22;10868:31;;;;;;;;:::i;:::-;10850:50;;;;;;;:::i;:::-;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;10967:16;10926:58;;;;;;;;:::i;:::-;;;10951:14;;10939:10;;10926:58;;;;;10648:347;11022:17;;;:57;;;;;;:123;;;;-1:-1:-1;11095:17:5;;;:50;;;;;;11022:123;11005:378;;;11170:14;;;:21;;;;;;-1:-1:-1;11170:21:5;;;11205:37;;;:50;;11246:9;;-1:-1:-1;11205:50:5;;11246:9;;11205:50;:::i;:::-;;;;-1:-1:-1;;11347:23:5;;11269:10;-1:-1:-1;;;;;11269:17:5;;;;11294:9;;11305:10;;11317:29;;-1:-1:-1;;;11347:23:5;;;;11317:54;;;;;;;:::i;:::-;;11269:103;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11005:378;11476:1;11449:24;11461:12;11449:9;:24;:::i;:::-;:28;11445:84;;;11487:10;11479:50;11504:24;11516:12;11504:9;:24;:::i;:::-;11479:50;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11445:84:5;11547:9;:17;;11573:22;11565:31;;;;;;;;:::i;:::-;11547:50;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;8187:3417:5;;;;:::o;21196:301::-;21282:23;21317;21350:105;21377:14;:32;21392:16;;;;:::i;:::-;-1:-1:-1;;;;;21377:32:5;;;;;;;;;;;;;;;-1:-1:-1;21377:32:5;21428:20;;21377:32;;-1:-1:-1;21377:32:5;-1:-1:-1;;;;21428:20:5;;;;21350:105;;21472:18;21489:1;21472:14;:18;:::i;:::-;-1:-1:-1;;;;;21465:25:5;;21196:301;-1:-1:-1;;;21196:301:5:o;20881:278::-;20952:22;21016:20;;;:8;:20;;;;;;21127:23;;21016:20;;21063:10;-1:-1:-1;;;;;21063:21:5;;;;21016:20;;21097:29;;-1:-1:-1;;;21127:23:5;;;;;;21097:54;;;;;;:::i;:::-;;21063:89;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21046:106;20881:278;-1:-1:-1;;;20881:278:5:o;16347:300::-;1513:5;;;;;-1:-1:-1;;;;;1513:5:5;1499:10;:19;1491:28;;;;;;16470:3:::1;16446:20;:27;;16438:94;;;::::0;-1:-1:-1;;;16438:94:5;;19759:2:7;16438:94:5::1;::::0;::::1;19741:21:7::0;19798:2;19778:18;;;19771:30;19837:34;19817:18;;;19810:62;19908:24;19888:18;;;19881:52;19950:19;;16438:94:5::1;19557:418:7::0;16438:94:5::1;16542:16;:39:::0;;;16596:44:::1;::::0;16561:20;;16596:44:::1;::::0;;;::::1;16347:300:::0;:::o;3429:963::-;3610:15;;;;;;3598:27;;;;3590:68;;;;-1:-1:-1;;;3590:68:5;;20182:2:7;3590:68:5;;;20164:21:7;20221:2;20201:18;;;20194:30;20260;20240:18;;;20233:58;20308:18;;3590:68:5;19980:352:7;3590:68:5;3669:23;3702:105;3729:14;:32;3744:16;;;;:::i;:::-;-1:-1:-1;;;;;3729:32:5;;;;;;;;;;;;;;;-1:-1:-1;3729:32:5;3780:20;;3729:32;;-1:-1:-1;3729:32:5;-1:-1:-1;;;;3780:20:5;;;;3702:105;;3817:35;;3862:86;;3841:10;3862:86;;;-1:-1:-1;;;3892:9:5;1282:2;3892:55;3862:86;;;;;;;;;;3958:28;;-1:-1:-1;;;3958:28:5;;;;;;;;4005:20;;3997:94;;;;-1:-1:-1;;;3997:94:5;;20539:2:7;3997:94:5;;;20521:21:7;20578:2;20558:18;;;20551:30;20617:34;20597:18;;;20590:62;20688:27;20668:18;;;20661:55;20733:19;;3997:94:5;20337:421:7;3997:94:5;4102:29;4134:18;4151:1;4134:14;:18;:::i;:::-;-1:-1:-1;;;;;4102:50:5;;;4167:56;4178:10;;4190:9;4201:21;4167:56;;;;;;;;;:::i;:::-;;;;;;;;4308:20;;4238:147;;;7333:25:7;;;-1:-1:-1;;;4308:20:5;;;1282:2;4300:75;;;;;7374:18:7;;;7367:34;4238:147:5;;7306:18:7;4238:147:5;;;;;;;3580:812;;3429:963;;;;:::o;11797:1638::-;11896:10;-1:-1:-1;;;;;11911:10:5;11884:37;;11876:46;;;;;;11933:27;11963:20;;;:8;:20;;;;;12019:14;;;12034:21;;11963:20;;11933:27;12034:25;;12058:1;;12034:25;:::i;:::-;12019:41;;;;;;;;:::i;:::-;;;;;;;;12278:17;12019:41;;;;;;12278:17;;;:57;12019:41;;-1:-1:-1;12278:57:5;;;;;12274:263;;;-1:-1:-1;12366:29:5;12274:263;;;12416:17;;;:57;;;;;;12412:125;;;-1:-1:-1;12504:22:5;12412:125;12547:26;;12576:12;:34;;;;;;;;:::i;:::-;;;:74;;12642:7;12628:22;;;;;;;;:::i;:::-;12576:74;;;12613:12;12576:74;12660:30;;12547:103;;-1:-1:-1;12547:103:5;;12660:7;;:30;;-1:-1:-1;;;12547:103:5;12660:30;;;;;;;;:::i;:::-;;;;;-1:-1:-1;12732:29:5;;;;-1:-1:-1;;;;;12732:29:5;12701:28;12798:37;;;:14;:37;;;;;12866:22;12850:12;:38;;;;;;;;:::i;:::-;;12846:363;;;12928:20;;13009:24;;;;;13053:31;;-1:-1:-1;;;;;21599:35:7;;21581:54;;-1:-1:-1;;;12928:20:5;;;1282:2;12921:74;;;;;;13053:31;;21554:18:7;13053:31:5;;;;;;;13098:20;;;;:8;:20;;;;;;:31;:44;;-1:-1:-1;;;;;13098:31:5;;;;:44;;;;;13135:6;;13098:44;:20;:44;13135:6;13098:31;:44;;-1:-1:-1;;;;;;12846:363:5;13261:33;;-1:-1:-1;;;;13261:33:5;;;13337:23;;;;-1:-1:-1;;;13337:23:5;;;13376:52;;13408:10;;13395;;13376:52;;;;13420:7;1844:25:7;;1832:2;1817:18;;1698:177;13376:52:5;;;;;;;;11866:1569;;;;;;11797:1638;;:::o;19567:358::-;19684:15;;:19;;:15;;;:19;:::i;:::-;:24;;19676:69;;;;-1:-1:-1;;;19676:69:5;;22057:2:7;19676:69:5;;;22039:21:7;;;22076:18;;;22069:30;22135:34;22115:18;;;22108:62;22187:18;;19676:69:5;21855:356:7;19676:69:5;19773:15;;19760:51;;19773:15;;;;;19760:51;;;;19790:20;;19760:51;:::i;:::-;;;;;;;;19851:15;;19870:20;;19821:29;;19851:15;;19821:46;;;;;;;:::i;:::-;;:69;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19901:15:5;:17;;;;;:15;:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;19567:358;;:::o;2574:46::-;;;;;;;;;;;;;;;;;-1:-1:-1;2574:46:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;25157:624::-;25289:7;25298;25322:25;25349:23;25376:10;-1:-1:-1;;;;;25376:23:5;;25400:10;25376:35;;;;;;;;;;;;;1844:25:7;;1832:2;1817:18;;1698:177;25376:35:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25321:90;;;;25421:28;871:4:4;25526:30:5;;25505:17;25487:15;:35;;;;:::i;:::-;25486:70;;;;:::i;:::-;25485:97;;;;:::i;:::-;25452:131;;:17;:131;:::i;:::-;25421:162;;25594:13;25659:7;25610:56;;;;;;;;:::i;:::-;25624:30;25643:10;25624:18;:30::i;:::-;25610:45;;;;;;;;:::i;:::-;:56;;;;;;;;:::i;:::-;;25594:72;;25683:8;:91;;25734:17;25753:20;25683:91;;;25695:17;25714:15;25683:91;25676:98;;;;;;;;25157:624;;;;;;:::o;20346:498::-;-1:-1:-1;;;;;20474:38:5;;20429:7;20474:38;;;:14;:38;;;;;;20605:16;;20474:38;;20429:7;;20548:10;-1:-1:-1;;;;;20548:26:5;;;;20575:29;;-1:-1:-1;;;20605:16:5;;;;;;20575:47;;;;;;:::i;:::-;;20548:75;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20748:16;;20665:20;;20523:100;;-1:-1:-1;20633:20:5;;871:4:4;;20657:107:5;;-1:-1:-1;;;20665:20:5;;1282:2;20658:74;;;20657:107;:::i;:::-;20656:134;;;;:::i;:::-;20633:157;-1:-1:-1;20808:29:5;20633:157;20808:14;:29;:::i;:::-;20801:36;20346:498;-1:-1:-1;;;;;20346:498:5:o;14569:598::-;14763:19;14758:403;14788:30;;;14758:403;;;14854:20;14849:302;14895:9;;14905:11;14895:22;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;14880:12;:44;14849:302;;;15003:1;14964:9;;14974:11;14964:22;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;14987:12;14964:36;;;;;;;:::i;:::-;;;;;;;:40;14960:177;;;15028:90;15051:10;15063:12;15077:11;15104:12;15090:27;;;;;;;;:::i;15028:90::-;;14960:177;14926:14;;;;:::i;:::-;;;;14849:302;;;-1:-1:-1;14820:13:5;;;;:::i;:::-;;;;14758:403;;;;14569:598;;;;:::o;14073:459::-;14248:27;14278:20;;;:8;:20;;;;;14329:14;;;:21;14278:20;;14360:166;14404:10;14390:11;:24;14360:166;;;14445:70;14468:10;14480:12;14494:11;14507:7;14445:22;:70::i;:::-;-1:-1:-1;14416:13:5;;;;:::i;:::-;;;;14360:166;;;;14238:294;;14073:459;;;:::o;6717:1433::-;-1:-1:-1;;;;;6829:38:5;;6803:23;6829:38;;;:14;:38;;;;;6885:20;;-1:-1:-1;;;6885:20:5;;;;6877:58;;;;-1:-1:-1;;;6877:58:5;;23515:2:7;6877:58:5;;;23497:21:7;23554:2;23534:18;;;23527:30;23593:23;23573:18;;;23566:51;23634:18;;6877:58:5;23313:345:7;6877:58:5;6953:29;;-1:-1:-1;;;6953:29:5;;6986:16;6953:29;;;:49;;6945:92;;;;-1:-1:-1;;;6945:92:5;;23865:2:7;6945:92:5;;;23847:21:7;23904:2;23884:18;;;23877:30;23943:32;23923:18;;;23916:60;23993:18;;6945:92:5;23663:354:7;6945:92:5;7047:48;;-1:-1:-1;;;;7047:48:5;;;;;7158:36;7171:22;7158:12;:36::i;:::-;7145:9;:49;;7137:94;;;;-1:-1:-1;;;7137:94:5;;24224:2:7;7137:94:5;;;24206:21:7;;;24243:18;;;24236:30;24302:34;24282:18;;;24275:62;24354:18;;7137:94:5;24022:356:7;7137:94:5;7354:16;;7271:20;;7242:17;;871:4:4;;7263:107:5;;7354:16;-1:-1:-1;;;7271:20:5;;1282:2;7264:74;;;7263:107;:::i;:::-;7262:134;;;;:::i;:::-;7242:154;;7425:9;7406:15;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;7445:17:5;;-1:-1:-1;;;;;;7465:10:5;:24;;7497:21;7509:9;7497;:21;:::i;:::-;7601:16;;815:1:4;;7571:29:5;;-1:-1:-1;;;7601:16:5;;;;7571:47;;;;;;;:::i;:::-;;7465:163;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7639:19;;;;:8;:19;;;;;;;;;:52;;7680:10;-1:-1:-1;;7639:52:5;;;;;;7701:26;;;:33;;-1:-1:-1;7701:33:5;;;;;;7744:41;;:74;;-1:-1:-1;;7744:74:5;-1:-1:-1;;;;;7744:74:5;;;;;7866:16;;7828:54;;;;;;;;;-1:-1:-1;;;7866:16:5;;;;;;;;-1:-1:-1;;;7828:54:5;;;;;;;;7973:16;;7942:59;;7973:16;;;;;;24555:36:7;;24607:18;;;24600:34;;;7639:19:5;;-1:-1:-1;7639:19:5;;-1:-1:-1;;;;;7950:10:5;7942:59;;;;24528:18:7;7942:59:5;;;;;;;8087:56;;;8121:10;24819:74:7;;24924:2;24909:18;;24902:34;;;-1:-1:-1;;;;;8087:56:5;;;;;24792:18:7;8087:56:5;;;;;;;6793:1357;;;6717:1433;:::o;24973:147::-;25077:36;;-1:-1:-1;;;25077:36:5;;;;;1844:25:7;;;25051:7:5;;25077:10;-1:-1:-1;;;;;25077:24:5;;;;1817:18:7;;25077:36:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25070:43;24973:147;-1:-1:-1;;24973:147:5:o;24452:484::-;24587:49;;:::i;:::-;24650:59;;:::i;:::-;24723:35;24805:20;;;:8;:20;;;;;:27;;:35;;24723;;24805:27;24833:6;;24805:35;;;;;;:::i;:::-;;;;;;;;;;;24783:57;;24858:5;:13;;24873:5;:20;;24895:5;:33;;;24850:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24850:79:5;;;;;;;;;;;;-1:-1:-1;24850:79:5;;-1:-1:-1;24850:79:5;;-1:-1:-1;24850:79:5;-1:-1:-1;24850:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24452:484;;;;;:::o;17641:138::-;1513:5;;;;;-1:-1:-1;;;;;1513:5:5;1499:10;:19;1491:28;;;;;;17718:5:::1;:17:::0;;-1:-1:-1;;17718:17:5::1;;-1:-1:-1::0;;;;;17718:17:5;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;17750:22:::1;::::0;::::1;::::0;-1:-1:-1;;17750:22:5::1;17641:138:::0;:::o;18486:231::-;1513:5;;;;;-1:-1:-1;;;;;1513:5:5;1499:10;:19;1491:28;;;;;;18594:22:::1;:49:::0;;;18658:52:::1;::::0;18619:24;;18658:52:::1;::::0;;;::::1;18486:231:::0;:::o;19069:261::-;1513:5;;;;;-1:-1:-1;;;;;1513:5:5;1499:10;:19;1491:28;;;;;;19187:27:::1;:59:::0;;;19261:62:::1;::::0;19217:29;;19261:62:::1;::::0;;;::::1;19069:261:::0;:::o;5227:504::-;-1:-1:-1;;;;;5340:38:5;;5314:23;5340:38;;;:14;:38;;;;;5410:13;;-1:-1:-1;;;;;5410:13:5;5396:10;:27;5388:76;;;;-1:-1:-1;;;5388:76:5;;25149:2:7;5388:76:5;;;25131:21:7;25188:2;25168:18;;;25161:30;25227:34;25207:18;;;25200:62;-1:-1:-1;;;25278:18:7;;;25271:34;25322:19;;5388:76:5;24947:400:7;5388:76:5;5482:29;;-1:-1:-1;;;5482:29:5;;;;:34;5474:100;;;;-1:-1:-1;;;5474:100:5;;25554:2:7;5474:100:5;;;25536:21:7;25593:2;25573:18;;;25566:30;25632:34;25612:18;;;25605:62;25703:23;25683:18;;;25676:51;25744:19;;5474:100:5;25352:417:7;5474:100:5;5642:27;;5624:45;;:15;:45;:::i;:::-;5585:85;;;;;;;-1:-1:-1;;;5585:85:5;-1:-1:-1;;;;5585:85:5;;;;;;5685:39;;-1:-1:-1;;;;;21599:35:7;;21581:54;;5685:39:5;;21569:2:7;21554:18;5685:39:5;;;;;;;;5304:427;5227:504;:::o;26383:852::-;26526:7;26579:20;;;:8;:20;;;;;26634:14;;;:21;26526:7;;26634:25;;26658:1;;26634:25;:::i;:::-;26609:50;;26669:23;26695:7;:14;;26710;26695:30;;;;;;;;:::i;:::-;;;;;;;;;;;26669:56;;26736:13;26801:7;26752:56;;;;;;;;:::i;:::-;26766:30;26785:10;26766:18;:30::i;:::-;26752:45;;;;;;;;:::i;:::-;:56;;;;;;;;:::i;:::-;;26736:72;;26818:18;26839:8;:59;;26876:22;;26839:59;;;26850:23;;26839:59;26818:80;;26909:19;26931:9;:24;;26964:7;26956:16;;;;;;;;:::i;:::-;26931:42;;;;;;;:::i;:::-;;;27067:23;;26931:42;;-1:-1:-1;26983:17:5;;27003:10;-1:-1:-1;;;;;27003:21:5;;;;27025:10;;27037:29;;-1:-1:-1;;;27067:23:5;;;;27037:54;;;;;;;:::i;:::-;;27003:89;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26983:109;-1:-1:-1;27102:17:5;871:4:4;27136:24:5;27149:10;26983:109;27136:24;:::i;:::-;27135:51;;;;:::i;:::-;27122:65;;:9;:65;:::i;:::-;27102:85;-1:-1:-1;27205:23:5;27217:11;27102:85;27205:23;:::i;:::-;27198:30;26383:852;-1:-1:-1;;;;;;;;;;;26383:852:5:o;4429:172::-;4569:10;-1:-1:-1;;;;;4536:58:5;4557:10;4545;-1:-1:-1;;;;;4536:58:5;;4581:12;;4536:58;;;;;;;:::i;:::-;;;;;;;;4429:172;;;:::o;5768:912::-;-1:-1:-1;;;;;5871:38:5;;5845:23;5871:38;;;:14;:38;;;;;5942:13;;-1:-1:-1;;;;;5942:13:5;5928:10;:27;5920:76;;;;-1:-1:-1;;;5920:76:5;;25149:2:7;5920:76:5;;;25131:21:7;25188:2;25168:18;;;25161:30;25227:34;25207:18;;;25200:62;-1:-1:-1;;;25278:18:7;;;25271:34;25322:19;;5920:76:5;24947:400:7;5920:76:5;6014:29;;-1:-1:-1;;;6014:29:5;;;;6006:85;;;;-1:-1:-1;;;6006:85:5;;26228:2:7;6006:85:5;;;26210:21:7;26267:2;26247:18;;;26240:30;26306:34;26286:18;;;26279:62;26377:8;26357:18;;;26350:36;26403:19;;6006:85:5;26026:402:7;6006:85:5;6122:29;;6155:15;-1:-1:-1;;;6122:29:5;;;;;:48;;6101:158;;;;-1:-1:-1;;;6101:158:5;;26635:2:7;6101:158:5;;;26617:21:7;26674:2;26654:18;;;26647:30;26713:34;26693:18;;;26686:62;26784:33;26764:18;;;26757:61;26835:19;;6101:158:5;26433:427:7;6101:158:5;6298:20;;6447:33;;;;;6578:40;;-1:-1:-1;;;6298:20:5;;;1282:2;6291:74;;;;6586:10;;6578:40;;;;;6291:74;;-1:-1:-1;6578:40:5;-1:-1:-1;6578:40:5;6291:74;6586:10;6578:40;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6633:40:5;;-1:-1:-1;;;;;21599:35:7;;21581:54;;6633:40:5;;21569:2:7;21554:18;6633:40:5;;;;;;;5835:845;;5768:912;:::o;18212:237::-;1513:5;;;;;-1:-1:-1;;;;;1513:5:5;1499:10;:19;1491:28;;;;;;18322:23:::1;:51:::0;;;18388:54:::1;::::0;18348:25;;18388:54:::1;::::0;;;::::1;18212:237:::0;:::o;21534:1296::-;21684:11;21769:20;;;:8;:20;;;;;21804:16;;21697:26;;21769:20;-1:-1:-1;;;21804:16:5;;;;21799:51;;21838:1;21822:28;;;;;21799:51;21881:14;;;:21;21940:15;;-1:-1:-1;;;21940:15:5;;;;21881:21;21976:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21966:37;;22018:19;22013:811;22057:10;22043:11;:24;22013:811;;;22135:28;815:1:4;22162::5;22135:28;:::i;:::-;22121:43;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22121:43:5;;22098:7;22106:11;22098:20;;;;;;;;:::i;:::-;;;;;;:66;;;;22179:19;22201:7;:14;;22216:11;22201:27;;;;;;;;:::i;:::-;;;;;;;;;;;22179:49;;22247:20;22242:572;815:1:4;22273:12:5;:40;22242:572;;22349:21;22373:182;22416:5;22443:12;22491;22477:27;;;;;;;;:::i;:::-;22526:11;22373:21;:182::i;:::-;22349:206;-1:-1:-1;22577:17:5;;22573:227;;22625:84;22647:5;22654:12;22682;22668:27;;;;;;;;:::i;22625:84::-;22618:91;;;;:::i;:::-;;;22768:13;22731:7;22739:11;22731:20;;;;;;;;:::i;:::-;;;;;;;22752:12;22731:34;;;;;;;;:::i;:::-;;;;;;:50;;;;;22573:227;-1:-1:-1;22315:14:5;;;;:::i;:::-;;;;22242:572;;;;22084:740;22069:13;;;;;:::i;:::-;;;;22013:811;;;;21729:1101;;;21534:1296;;;;;:::o;18019:156::-;1513:5;;;;;-1:-1:-1;;;;;1513:5:5;1499:10;:19;1491:28;;;;;;18102:8:::1;:23:::0;;-1:-1:-1;;18102:23:5::1;;-1:-1:-1::0;;;;;18102:23:5;::::1;::::0;;::::1;::::0;;;::::1;::::0;;18140:28:::1;::::0;18102:23;;18140:28:::1;::::0;::::1;18019:156:::0;:::o;25818:528::-;25973:7;25996:13;26032:7;26012:27;;;;;;;;:::i;:::-;:16;:27;;;;;;;;:::i;:::-;;;-1:-1:-1;26077:4:5;26049:25;26012:27;26112:59;;26149:22;;26112:59;;;26123:23;;26112:59;26091:80;-1:-1:-1;26302:35:5;871:4:4;26091:80:5;26302:35;:::i;:::-;26268:17;871:4:4;26217:22:5;;26191:23;;:48;;;;:::i;:::-;:73;;;;:::i;:::-;26190:95;;;;:::i;:::-;26189:149;;;;:::i;:::-;26181:158;25818:528;-1:-1:-1;;;;;;25818:528:5:o;17054:197::-;17125:15;;;17108:14;17150:19;;;;17179:8;;:21;;17125:15;;17179:8;;;;-1:-1:-1;;;;;17179:8:5;;:21;;;;;17125:15;;17179:21;;17108:14;17179:21;17125:15;17179:8;:21;;-1:-1:-1;;17215:29:5;;17237:6;;-1:-1:-1;17215:29:5;;-1:-1:-1;17215:29:5;;-1:-1:-1;17215:29:5;17098:153;17054:197::o;17288:117::-;1513:5;;;;;-1:-1:-1;;;;;1513:5:5;1499:10;:19;1491:28;;;;;;17379:19:::1;::::0;;-1:-1:-1;;17356:42:5;::::1;17379:19;::::0;;::::1;17378:20;17356:42;::::0;;17288:117::o;4638:552::-;-1:-1:-1;;;;;4755:38:5;;4729:23;4755:38;;;:14;:38;;;;;4825:13;;-1:-1:-1;;;;;4825:13:5;4811:10;:27;4803:86;;;;-1:-1:-1;;;4803:86:5;;27067:2:7;4803:86:5;;;27049:21:7;27106:2;27086:18;;;27079:30;27145:34;27125:18;;;27118:62;27216:16;27196:18;;;27189:44;27250:19;;4803:86:5;26865:410:7;4803:86:5;4932:87;;4963:9;1282:2;4963:55;;4932:87;;:20;;:87;;4963:55;;-1:-1:-1;;;4932:87:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5106:20:5;;5035:148;;;-1:-1:-1;;;;;27710:35:7;;27692:54;;-1:-1:-1;;;5106:20:5;;;1282:2;5098:75;;;;;27762:18:7;;;27755:34;5035:148:5;;27665:18:7;5035:148:5;27519:276:7;13472:564:5;13627:27;13657:20;;;:8;:20;;;;;13708:14;;;:21;13657:20;;13739:291;13783:10;13769:11;:24;13739:291;;;13829:20;13824:195;815:1:4;13855:12:5;:40;13824:195;;13929:90;13952:10;13964:12;13978:11;14005:12;13991:27;;;;;;;;:::i;13929:90::-;-1:-1:-1;13897:14:5;;;;:::i;:::-;;;;13824:195;;;-1:-1:-1;13795:13:5;;;;:::i;:::-;;;;13739:291;;18754:274;1513:5;;;;;-1:-1:-1;;;;;1513:5:5;1499:10;:19;1491:28;;;;;;18876:30:::1;:64:::0;;;18955:66:::1;::::0;18909:31;;18955:66:::1;::::0;;;::::1;18754:274:::0;:::o;15204:787::-;15394:14;15450:20;;;:8;:20;;;;;15488:16;;-1:-1:-1;;;15488:16:5;;;;15480:52;;;;-1:-1:-1;;;15480:52:5;;28002:2:7;15480:52:5;;;27984:21:7;28041:2;28021:18;;;28014:30;28080:25;28060:18;;;28053:53;28123:18;;15480:52:5;27800:347:7;15480:52:5;15543:19;15565:7;:14;;15580:12;15565:28;;;;;;;;:::i;:::-;;;;;;;;;;;15543:50;;15613:68;15635:5;15642:12;15656:7;15665;:15;;;;;;;;;;;;15613:21;:68::i;:::-;15604:77;-1:-1:-1;15696:11:5;;15692:293;;-1:-1:-1;;;;;15723:33:5;;15792:1;15723:33;;;;;;;;;;15779:7;15757:31;;;;;;;;:::i;:::-;15723:66;;;;;;;:::i;:::-;;:70;15807:25;;-1:-1:-1;;;;;15807:17:5;;;:25;;;;;15825:6;;15807:25;;;;15825:6;15807:17;:25;;;;;;;;15953:12;-1:-1:-1;;;;;15907:67:5;15930:12;15918:10;15907:67;15944:7;15967:6;15907:67;;;;;;;:::i;:::-;;;;;;;;15692:293;15410:581;;15204:787;;;;;;:::o;22902:1513::-;23089:14;23157:7;23181:14;;;23157:7;23196:20;;;;;;;;:::i;:::-;23181:36;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;23176:1233;;-1:-1:-1;;;;;23328:34:5;;:20;:34;;;;;;;;;;23371:11;23363:20;;;;;;;;:::i;:::-;23328:56;;;;;;;:::i;:::-;;;23319:65;;23176:1233;;;23492:12;23481:23;;;;;;;;:::i;:::-;:7;:23;;;;;;;;:::i;:::-;;23477:922;;;23641:1;23595:6;:21;;23625:11;23617:20;;;;;;;;:::i;:::-;23595:43;;;;;;;:::i;:::-;;;:47;:259;;23853:1;23595:259;;;23787:6;:21;;23817:11;23809:20;;;;;;;;:::i;:::-;23787:43;;;;;;;:::i;:::-;;;23725:34;;;;-1:-1:-1;;;;;23666:34:5;;:20;:34;;;;;;;;;;23709:11;23701:20;;;;;;;;:::i;:::-;23666:56;;;;;;;:::i;:::-;;;:93;;;;:::i;:::-;23665:165;;;;:::i;:::-;23586:268;;23477:922;;;23880:6;:14;;23917:12;23895:36;;;;;;;;:::i;:::-;23880:52;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;23875:524;;24329:54;;;;24241:61;;;;:142;;24329:54;24241:142;:::i;:::-;24182:34;;;;-1:-1:-1;;;;;24123:34:5;;:20;:34;;;;;;;;;;24166:11;24158:20;;;;;;;;:::i;:::-;24123:56;;;;;;;:::i;:::-;;;:93;;;;:::i;:::-;24122:262;;;;:::i;:::-;24093:291;;23875:524;23105:1310;22902:1513;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;203:175:7;270:20;;-1:-1:-1;;;;;319:34:7;;309:45;;299:73;;368:1;365;358:12;299:73;203:175;;;:::o;383:204::-;459:20;;-1:-1:-1;;;;;508:54:7;;498:65;;488:93;;577:1;574;567:12;592:274;667:6;675;728:2;716:9;707:7;703:23;699:32;696:52;;;744:1;741;734:12;696:52;767:28;785:9;767:28;:::i;:::-;757:38;;814:46;856:2;845:9;841:18;814:46;:::i;:::-;804:56;;592:274;;;;;:::o;871:154::-;950:20;;999:1;989:12;;979:40;;1015:1;1012;1005:12;1030:282;1115:6;1123;1176:2;1164:9;1155:7;1151:23;1147:32;1144:52;;;1192:1;1189;1182:12;1144:52;1228:9;1215:23;1205:33;;1257:49;1302:2;1291:9;1287:18;1257:49;:::i;1509:184::-;1567:6;1620:2;1608:9;1599:7;1595:23;1591:32;1588:52;;;1636:1;1633;1626:12;1588:52;1659:28;1677:9;1659:28;:::i;1880:180::-;1939:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:52;;;2008:1;2005;1998:12;1960:52;-1:-1:-1;2031:23:7;;1880:180;-1:-1:-1;1880:180:7:o;2065:348::-;2117:8;2127:6;2181:3;2174:4;2166:6;2162:17;2158:27;2148:55;;2199:1;2196;2189:12;2148:55;-1:-1:-1;2222:20:7;;2265:18;2254:30;;2251:50;;;2297:1;2294;2287:12;2251:50;2334:4;2326:6;2322:17;2310:29;;2386:3;2379:4;2370:6;2362;2358:19;2354:30;2351:39;2348:59;;;2403:1;2400;2393:12;2418:640;2504:6;2512;2520;2528;2581:2;2569:9;2560:7;2556:23;2552:32;2549:52;;;2597:1;2594;2587:12;2549:52;2637:9;2624:23;2670:18;2662:6;2659:30;2656:50;;;2702:1;2699;2692:12;2656:50;2741:59;2792:7;2783:6;2772:9;2768:22;2741:59;:::i;:::-;2819:8;;-1:-1:-1;2715:85:7;-1:-1:-1;;2904:2:7;2889:18;;2876:32;2948:4;2937:16;;2927:27;;2917:55;;2968:1;2965;2958:12;2917:55;2991:5;-1:-1:-1;3015:37:7;3048:2;3033:18;;3015:37;:::i;:::-;3005:47;;2418:640;;;;;;;:::o;3310:248::-;3378:6;3386;3439:2;3427:9;3418:7;3414:23;3410:32;3407:52;;;3455:1;3452;3445:12;3407:52;-1:-1:-1;;3478:23:7;;;3548:2;3533:18;;;3520:32;;-1:-1:-1;3310:248:7:o;3563:184::-;-1:-1:-1;;;3612:1:7;3605:88;3712:4;3709:1;3702:15;3736:4;3733:1;3726:15;3752:632;3817:5;3847:18;3888:2;3880:6;3877:14;3874:40;;;3894:18;;:::i;:::-;3969:2;3963:9;3937:2;4023:15;;-1:-1:-1;;4019:24:7;;;4045:2;4015:33;4011:42;3999:55;;;4069:18;;;4089:22;;;4066:46;4063:72;;;4115:18;;:::i;:::-;4155:10;4151:2;4144:22;4184:6;4175:15;;4214:6;4206;4199:22;4254:3;4245:6;4240:3;4236:16;4233:25;4230:45;;;4271:1;4268;4261:12;4230:45;4321:6;4316:3;4309:4;4301:6;4297:17;4284:44;4376:1;4369:4;4360:6;4352;4348:19;4344:30;4337:41;;;;3752:632;;;;;:::o;4389:806::-;4476:6;4484;4537:2;4525:9;4516:7;4512:23;4508:32;4505:52;;;4553:1;4550;4543:12;4505:52;4593:9;4580:23;4622:18;4663:2;4655:6;4652:14;4649:34;;;4679:1;4676;4669:12;4649:34;4717:6;4706:9;4702:22;4692:32;;4762:7;4755:4;4751:2;4747:13;4743:27;4733:55;;4784:1;4781;4774:12;4733:55;4807:76;4875:7;4870:2;4857:16;4850:4;4846:2;4842:13;4807:76;:::i;:::-;4797:86;;4936:4;4925:9;4921:20;4908:34;4892:50;;4967:2;4957:8;4954:16;4951:36;;;4983:1;4980;4973:12;4951:36;-1:-1:-1;5006:24:7;;5061:4;5053:13;;5049:27;-1:-1:-1;5039:55:7;;5090:1;5087;5080:12;5039:55;5113:76;5181:7;5176:2;5163:16;5156:4;5152:2;5148:13;5113:76;:::i;:::-;5103:86;;;4389:806;;;;;:::o;5354:471::-;5395:3;5433:5;5427:12;5460:6;5455:3;5448:19;5485:1;5495:162;5509:6;5506:1;5503:13;5495:162;;;5571:4;5627:13;;;5623:22;;5617:29;5599:11;;;5595:20;;5588:59;5524:12;5495:162;;;5675:6;5672:1;5669:13;5666:87;;;5741:1;5734:4;5725:6;5720:3;5716:16;5712:27;5705:38;5666:87;-1:-1:-1;5807:2:7;5786:15;-1:-1:-1;;5782:29:7;5773:39;;;;5814:4;5769:50;;5354:471;-1:-1:-1;;5354:471:7:o;5830:217::-;5977:2;5966:9;5959:21;5940:4;5997:44;6037:2;6026:9;6022:18;6014:6;5997:44;:::i;6052:184::-;-1:-1:-1;;;6101:1:7;6094:88;6201:4;6198:1;6191:15;6225:4;6222:1;6215:15;6241:298;6326:1;6319:5;6316:12;6306:200;;-1:-1:-1;;;6359:1:7;6352:88;6463:4;6460:1;6453:15;6491:4;6488:1;6481:15;6306:200;6515:18;;6241:298::o;6544:610::-;-1:-1:-1;;;;;6840:55:7;;6822:74;;6809:3;6794:19;;6905:57;6958:2;6943:18;;6935:6;6905:57;:::i;:::-;7010:4;6998:17;;;;6993:2;6978:18;;6971:45;7059:14;;7052:22;7047:2;7032:18;;7025:50;-1:-1:-1;;;;;7112:35:7;7106:3;7091:19;;;7084:64;6544:610;;-1:-1:-1;;6544:610:7:o;7412:800::-;7551:6;7559;7567;7575;7628:2;7616:9;7607:7;7603:23;7599:32;7596:52;;;7644:1;7641;7634:12;7596:52;7680:9;7667:23;7657:33;;7709:46;7751:2;7740:9;7736:18;7709:46;:::i;:::-;7699:56;;7806:2;7795:9;7791:18;7778:32;7829:18;7870:2;7862:6;7859:14;7856:34;;;7886:1;7883;7876:12;7856:34;7924:6;7913:9;7909:22;7899:32;;7969:7;7962:4;7958:2;7954:13;7950:27;7940:55;;7991:1;7988;7981:12;7940:55;8031:2;8018:16;8057:2;8049:6;8046:14;8043:34;;;8073:1;8070;8063:12;8043:34;8126:7;8121:2;8111:6;8108:1;8104:14;8100:2;8096:23;8092:32;8089:45;8086:65;;;8147:1;8144;8137:12;8086:65;7412:800;;;;-1:-1:-1;;8178:2:7;8170:11;;-1:-1:-1;;;7412:800:7:o;8217:372::-;8319:6;8327;8335;8388:2;8376:9;8367:7;8363:23;8359:32;8356:52;;;8404:1;8401;8394:12;8356:52;8440:9;8427:23;8417:33;;8469:46;8511:2;8500:9;8496:18;8469:46;:::i;:::-;8459:56;;8534:49;8579:2;8568:9;8564:18;8534:49;:::i;:::-;8524:59;;8217:372;;;;;:::o;9348:987::-;9624:3;9609:19;;9613:9;9705:6;9582:4;9739:210;9753:4;9750:1;9747:11;9739:210;;;9826:13;;9819:21;9812:29;9800:42;;9865:4;9889:12;;;;9924:15;;;;9773:1;9766:9;9739:210;;;9743:3;;;9986:2;9975:9;9971:18;10037:6;10063:1;10073:212;10089:4;10084:3;10081:13;10073:212;;;10154:15;;10140:30;;10193:4;10219:14;;;;10258:17;;;;10113:1;10104:11;10073:212;;;10077:3;;;10322:6;10316:3;10305:9;10301:19;10294:35;9348:987;;;;;;:::o;10340:202::-;10407:6;10460:2;10448:9;10439:7;10435:23;10431:32;10428:52;;;10476:1;10473;10466:12;10428:52;10499:37;10526:9;10499:37;:::i;10547:479::-;10627:6;10635;10643;10696:2;10684:9;10675:7;10671:23;10667:32;10664:52;;;10712:1;10709;10702:12;10664:52;10748:9;10735:23;10725:33;;10809:2;10798:9;10794:18;10781:32;10836:18;10828:6;10825:30;10822:50;;;10868:1;10865;10858:12;10822:50;10907:59;10958:7;10949:6;10938:9;10934:22;10907:59;:::i;:::-;10547:479;;10985:8;;-1:-1:-1;10881:85:7;;-1:-1:-1;;;;10547:479:7:o;11031:270::-;11107:6;11115;11168:2;11156:9;11147:7;11143:23;11139:32;11136:52;;;11184:1;11181;11174:12;11136:52;11220:9;11207:23;11197:33;;11249:46;11291:2;11280:9;11276:18;11249:46;:::i;11306:1363::-;11526:4;11574:2;11563:9;11559:18;11604:6;11593:9;11586:25;11630:2;11668;11663;11652:9;11648:18;11641:30;11691:6;11726;11720:13;11757:6;11749;11742:22;11795:2;11784:9;11780:18;11773:25;;11857:2;11847:6;11844:1;11840:14;11829:9;11825:30;11821:39;11807:53;;11895:2;11887:6;11883:15;11916:1;11937;11947:693;11963:6;11958:3;11955:15;11947:693;;;12032:22;;;-1:-1:-1;;12028:36:7;12016:49;;12088:13;;12162:9;;12184:24;;;12274:11;;;;12230:15;;;;12309:1;12323:209;12339:8;12334:3;12331:17;12323:209;;;12416:15;;12402:30;;12501:17;;;;12458:14;;;;12367:1;12358:11;12323:209;;;-1:-1:-1;12555:5:7;;-1:-1:-1;;;12618:12:7;;;;12583:15;;;;11989:1;11980:11;11947:693;;;-1:-1:-1;12657:6:7;;11306:1363;-1:-1:-1;;;;;;;;;11306:1363:7:o;12674:316::-;12776:6;12784;12837:2;12825:9;12816:7;12812:23;12808:32;12805:52;;;12853:1;12850;12843:12;12805:52;12876:40;12906:9;12876:40;:::i;:::-;12866:50;;12935:49;12980:2;12969:9;12965:18;12935:49;:::i;12995:441::-;13106:6;13114;13122;13130;13183:3;13171:9;13162:7;13158:23;13154:33;13151:53;;;13200:1;13197;13190:12;13151:53;13236:9;13223:23;13213:33;;13265:46;13307:2;13296:9;13292:18;13265:46;:::i;:::-;13255:56;;13358:2;13347:9;13343:18;13330:32;13320:42;;13381:49;13426:2;13415:9;13411:18;13381:49;:::i;14069:184::-;14139:6;14192:2;14180:9;14171:7;14167:23;14163:32;14160:52;;;14208:1;14205;14198:12;14160:52;-1:-1:-1;14231:16:7;;14069:184;-1:-1:-1;14069:184:7:o;14258:245::-;14337:6;14345;14398:2;14386:9;14377:7;14373:23;14369:32;14366:52;;;14414:1;14411;14404:12;14366:52;-1:-1:-1;;14437:16:7;;14493:2;14478:18;;;14472:25;14437:16;;14472:25;;-1:-1:-1;14258:245:7:o;14923:184::-;-1:-1:-1;;;14972:1:7;14965:88;15072:4;15069:1;15062:15;15096:4;15093:1;15086:15;15112:125;15152:4;15180:1;15177;15174:8;15171:34;;;15185:18;;:::i;:::-;-1:-1:-1;15222:9:7;;15112:125::o;15242:168::-;15282:7;15348:1;15344;15340:6;15336:14;15333:1;15330:21;15325:1;15318:9;15311:17;15307:45;15304:71;;;15355:18;;:::i;:::-;-1:-1:-1;15395:9:7;;15242:168::o;15415:274::-;15455:1;15481;15471:189;;-1:-1:-1;;;15513:1:7;15506:88;15617:4;15614:1;15607:15;15645:4;15642:1;15635:15;15471:189;-1:-1:-1;15674:9:7;;15415:274::o;15694:128::-;15734:3;15765:1;15761:6;15758:1;15755:13;15752:39;;;15771:18;;:::i;:::-;-1:-1:-1;15807:9:7;;15694:128::o;16253:184::-;-1:-1:-1;;;16302:1:7;16295:88;16402:4;16399:1;16392:15;16426:4;16423:1;16416:15;16442:437;16521:1;16517:12;;;;16564;;;16585:61;;16639:4;16631:6;16627:17;16617:27;;16585:61;16692:2;16684:6;16681:14;16661:18;16658:38;16655:218;;;-1:-1:-1;;;16726:1:7;16719:88;16830:4;16827:1;16820:15;16858:4;16855:1;16848:15;16655:218;;16442:437;;;:::o;17009:1096::-;17093:12;;17058:3;;17148:1;17168:18;;;;17221;;;;17248:61;;17302:4;17294:6;17290:17;17280:27;;17248:61;17328:2;17376;17368:6;17365:14;17345:18;17342:38;17339:218;;;-1:-1:-1;;;17410:1:7;17403:88;17514:4;17511:1;17504:15;17542:4;17539:1;17532:15;17339:218;5286:19;;;5338:4;5329:14;;17642:18;17669:104;;;;17787:1;17782:317;;;;17635:464;;17669:104;-1:-1:-1;;17704:24:7;;17690:39;;17749:14;;;;-1:-1:-1;17669:104:7;;17782:317;16956:1;16949:14;;;16993:4;16980:18;;17875:1;17889:167;17903:6;17900:1;17897:13;17889:167;;;17983:14;;17968:13;;;17961:37;18026:16;;;;17918:10;;17889:167;;;18076:13;;;-1:-1:-1;;17635:464:7;;;;;;;;17009:1096;;;;:::o;18110:293::-;18282:6;18271:9;18264:25;18325:2;18320;18309:9;18305:18;18298:30;18245:4;18345:52;18393:2;18382:9;18378:18;18370:6;18345:52;:::i;:::-;18337:60;18110:293;-1:-1:-1;;;;18110:293:7:o;18810:286::-;18987:2;18972:18;;18999:48;18976:9;19029:6;18999:48;:::i;:::-;19083:6;19078:2;19067:9;19063:18;19056:34;18810:286;;;;;:::o;19101:213::-;19139:3;-1:-1:-1;;;;;19224:2:7;19217:5;19213:14;19251:2;19242:7;19239:15;19236:41;;;19257:18;;:::i;:::-;19306:1;19293:15;;19101:213;-1:-1:-1;;;19101:213:7:o;19319:233::-;19358:4;-1:-1:-1;;;;;19459:10:7;;;;19429;;19481:12;;;19478:38;;;19496:18;;:::i;:::-;19533:13;;19319:233;-1:-1:-1;;;19319:233:7:o;20763:267::-;20852:6;20847:3;20840:19;20904:6;20897:5;20890:4;20885:3;20881:14;20868:43;-1:-1:-1;20956:1:7;20931:16;;;20949:4;20927:27;;;20920:38;;;;21012:2;20991:15;;;-1:-1:-1;;20987:29:7;20978:39;;;20974:50;;20763:267::o;21035:396::-;21246:2;21235:9;21228:21;21209:4;21266:62;21324:2;21313:9;21309:18;21301:6;21293;21266:62;:::i;:::-;21376:4;21364:17;;;;21359:2;21344:18;;21337:45;-1:-1:-1;21413:2:7;21398:18;21391:34;21258:70;21035:396;-1:-1:-1;;21035:396:7:o;21646:204::-;21684:3;21720:4;21717:1;21713:12;21752:4;21749:1;21745:12;21787:3;21781:4;21777:14;21772:3;21769:23;21766:49;;;21795:18;;:::i;:::-;21831:13;;21646:204;-1:-1:-1;;;21646:204:7:o;22216:175::-;22253:3;22297:4;22290:5;22286:16;22326:4;22317:7;22314:17;22311:43;;;22334:18;;:::i;:::-;22383:1;22370:15;;22216:175;-1:-1:-1;;22216:175:7:o;22396:222::-;22540:2;22529:9;22522:21;22503:4;22560:52;22608:2;22597:9;22593:18;22585:6;22560:52;:::i;22623:545::-;22716:4;22722:6;22782:11;22769:25;22876:2;22872:7;22861:8;22845:14;22841:29;22837:43;22817:18;22813:68;22803:96;;22895:1;22892;22885:12;22803:96;22922:33;;22974:20;;;-1:-1:-1;23017:18:7;23006:30;;23003:50;;;23049:1;23046;23039:12;23003:50;23082:4;23070:17;;-1:-1:-1;23133:1:7;23129:14;;;23113;23109:35;23099:46;;23096:66;;;23158:1;23155;23148:12;23173:135;23212:3;-1:-1:-1;;23233:17:7;;23230:43;;;23253:18;;:::i;:::-;-1:-1:-1;23300:1:7;23289:13;;23173:135::o;25774:247::-;25933:2;25922:9;25915:21;25896:4;25953:62;26011:2;26000:9;25996:18;25988:6;25980;25953:62;:::i;27280:234::-;27319:3;27347:16;27390:2;27387:1;27383:10;27420:2;27417:1;27413:10;27451:3;27447:2;27443:12;27438:3;27435:21;27432:47;;;27459:18;;:::i;:::-;27495:13;;27280:234;-1:-1:-1;;;;27280:234:7:o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "3240200",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "ARBITRATOR()": "infinite",
                "ARTICLE_WITHDRAWAL_TIMELOCK()": "2406",
                "LOSER_APPEAL_PERIOD_MULTIPLIER()": "2407",
                "LOSER_STAKE_MULTIPLIER()": "2362",
                "MULTIPLIER_DENOMINATOR()": "305",
                "NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE()": "262",
                "NUMBER_OF_RULING_OPTIONS()": "285",
                "TREASURY()": "2439",
                "VERSION()": "infinite",
                "WINNER_STAKE_MULTIPLIER()": "2406",
                "admin()": "2414",
                "appealFee(uint256)": "infinite",
                "articleStorage(uint80)": "2838",
                "categoryCounter()": "2372",
                "categoryToArbitratorExtraData(uint256)": "infinite",
                "challenge(uint80)": "infinite",
                "challengeFee(uint80)": "infinite",
                "challengeTaxRate()": "2383",
                "changeAdmin(address)": "27977",
                "changeArticleWithdrawalTimelock(uint256)": "25723",
                "changeLoserAppealPeriodMultiplier(uint256)": "25721",
                "changeLoserStakeMultiplier(uint256)": "25701",
                "changeTreasury(address)": "27975",
                "changeWinnerStakeMultiplier(uint256)": "25700",
                "disputes(uint256)": "4967",
                "findVacantStorageSlot(uint80)": "infinite",
                "fundAppeal(uint256,uint8)": "infinite",
                "getAmountRemainsToBeRaised(uint256,uint8)": "infinite",
                "getAppealPeriod(uint256,uint8)": "infinite",
                "getLastRoundWinner(uint256)": "infinite",
                "getReturnOfInvestmentRatio(uint8,uint8)": "infinite",
                "getRoundInfo(uint256,uint256)": "infinite",
                "getTotalWithdrawableAmount(uint256,address)": "infinite",
                "increaseBounty(uint80)": "32691",
                "initializeArticle(string,uint8,uint80)": "infinite",
                "initiateWithdrawal(uint80)": "32299",
                "newCategory(string,bytes)": "infinite",
                "rule(uint256,uint256)": "infinite",
                "submitEvidence(uint256,string)": "infinite",
                "switchPublishingLock()": "26602",
                "transferBalanceToTreasury()": "infinite",
                "transferOwnership(uint80,address)": "infinite",
                "treasuryBalance()": "2363",
                "updateChallengeTaxRate(uint256)": "25771",
                "withdraw(uint80)": "infinite",
                "withdrawFeesAndRewards(uint256,address,uint256,uint8)": "infinite",
                "withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)": "infinite",
                "withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)": "infinite",
                "withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])": "infinite"
              },
              "internal": {
                "getWithdrawableAmount(struct TruthPost.Round storage pointer,address,enum ITruthPost.RulingOptions,enum ITruthPost.RulingOptions)": "16585"
              }
            },
            "methodIdentifiers": {
              "ARBITRATOR()": "68871c9c",
              "ARTICLE_WITHDRAWAL_TIMELOCK()": "d3b476b1",
              "LOSER_APPEAL_PERIOD_MULTIPLIER()": "be467604",
              "LOSER_STAKE_MULTIPLIER()": "b34bfaa8",
              "MULTIPLIER_DENOMINATOR()": "fe6ca782",
              "NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE()": "d970d18c",
              "NUMBER_OF_RULING_OPTIONS()": "7597b3cb",
              "TREASURY()": "2d2c5565",
              "VERSION()": "ffa1ad74",
              "WINNER_STAKE_MULTIPLIER()": "e349ad30",
              "admin()": "f851a440",
              "appealFee(uint256)": "1e26de34",
              "articleStorage(uint80)": "78431ce9",
              "categoryCounter()": "03624fc0",
              "categoryToArbitratorExtraData(uint256)": "4de12db0",
              "challenge(uint80)": "736ed418",
              "challengeFee(uint80)": "64ff9dfa",
              "challengeTaxRate()": "fc0ac672",
              "changeAdmin(address)": "8f283970",
              "changeArticleWithdrawalTimelock(uint256)": "92e25925",
              "changeLoserAppealPeriodMultiplier(uint256)": "c94828f0",
              "changeLoserStakeMultiplier(uint256)": "92239dff",
              "changeTreasury(address)": "b14f2a39",
              "changeWinnerStakeMultiplier(uint256)": "adc7faba",
              "disputes(uint256)": "564a565d",
              "findVacantStorageSlot(uint80)": "15f36ebe",
              "fundAppeal(uint256,uint8)": "12b3a2c0",
              "getAmountRemainsToBeRaised(uint256,uint8)": "a509efeb",
              "getAppealPeriod(uint256,uint8)": "638af3da",
              "getLastRoundWinner(uint256)": "7f67bd6c",
              "getReturnOfInvestmentRatio(uint8,uint8)": "b4c70581",
              "getRoundInfo(uint256,uint256)": "8a9bb02a",
              "getTotalWithdrawableAmount(uint256,address)": "af4a9144",
              "increaseBounty(uint80)": "bc0936fd",
              "initializeArticle(string,uint8,uint80)": "29238089",
              "initiateWithdrawal(uint80)": "956dcbd2",
              "newCategory(string,bytes)": "4c55c000",
              "rule(uint256,uint256)": "311a6c56",
              "submitEvidence(uint256,string)": "a6a7f0eb",
              "switchPublishingLock()": "ba0ec60b",
              "transferBalanceToTreasury()": "b7bddc72",
              "transferOwnership(uint80,address)": "06bcbd73",
              "treasuryBalance()": "313dab20",
              "updateChallengeTaxRate(uint256)": "26804bef",
              "withdraw(uint80)": "ab9cd37e",
              "withdrawFeesAndRewards(uint256,address,uint256,uint8)": "dc227fc2",
              "withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)": "6760aeb0",
              "withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)": "c9330c0f",
              "withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])": "67284f21"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_arbitratorExtraData\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_metaevidenceIpfsUri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_articleWithdrawalTimelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_winnerStakeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loserStakeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"AdminUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newWithdrawalTimelock\",\"type\":\"uint256\"}],\"name\":\"ArticleWithdrawalTimelockUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"}],\"name\":\"ArticleWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotal\",\"type\":\"uint256\"}],\"name\":\"BalanceUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"challanger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"disputeID\",\"type\":\"uint256\"}],\"name\":\"Challenge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newTaxRate\",\"type\":\"uint256\"}],\"name\":\"ChallengeTaxRateUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"ruling\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"}],\"name\":\"Debunked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"}],\"name\":\"Dispute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_party\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"Evidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newLoserAppealPeriodMultiplier\",\"type\":\"uint256\"}],\"name\":\"LoserAppealPeriodMultiplierUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newLoserStakeMultiplier\",\"type\":\"uint256\"}],\"name\":\"LoserStakeMultiplierUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"MetaEvidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"articleID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"}],\"name\":\"NewArticle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"Ruling\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"ruling\",\"type\":\"uint8\"}],\"name\":\"RulingFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"articleAddress\",\"type\":\"uint256\"}],\"name\":\"TimelockStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_byAmount\",\"type\":\"uint256\"}],\"name\":\"TreasuryBalanceUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newWinnerStakeMultiplier\",\"type\":\"uint256\"}],\"name\":\"WinnerStakeMultiplierUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"ruling\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ARBITRATOR\",\"outputs\":[{\"internalType\":\"contract IArbitrator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ARTICLE_WITHDRAWAL_TIMELOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOSER_APPEAL_PERIOD_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOSER_STAKE_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MULTIPLIER_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NUMBER_OF_RULING_OPTIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WINNER_STAKE_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"appealFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"arbitrationFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"name\":\"articleStorage\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalPermittedAt\",\"type\":\"uint32\"},{\"internalType\":\"uint56\",\"name\":\"bountyAmount\",\"type\":\"uint56\"},{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"categoryCounter\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"categoryToArbitratorExtraData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_articleStorageAddress\",\"type\":\"uint80\"}],\"name\":\"challenge\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_articleStorageAddress\",\"type\":\"uint80\"}],\"name\":\"challengeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"challengeTaxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newArticleWithdrawalTimelock\",\"type\":\"uint256\"}],\"name\":\"changeArticleWithdrawalTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newLoserAppealPeriodMultiplier\",\"type\":\"uint256\"}],\"name\":\"changeLoserAppealPeriodMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newLoserStakeMultiplier\",\"type\":\"uint256\"}],\"name\":\"changeLoserStakeMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newTreasury\",\"type\":\"address\"}],\"name\":\"changeTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newWinnerStakeMultiplier\",\"type\":\"uint256\"}],\"name\":\"changeWinnerStakeMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputes\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"challenger\",\"type\":\"address\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"outcome\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"articleCategory\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"},{\"internalType\":\"uint80\",\"name\":\"articleStorageAddress\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_searchPointer\",\"type\":\"uint80\"}],\"name\":\"findVacantStorageSlot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vacantSlotIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_supportedRuling\",\"type\":\"uint8\"}],\"name\":\"fundAppeal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fullyFunded\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"getAmountRemainsToBeRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"getAppealPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"getLastRoundWinner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_lastRoundWinner\",\"type\":\"uint8\"}],\"name\":\"getReturnOfInvestmentRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"getRoundInfo\",\"outputs\":[{\"internalType\":\"bool[3]\",\"name\":\"hasPaid\",\"type\":\"bool[3]\"},{\"internalType\":\"uint256[3]\",\"name\":\"totalPerRuling\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimableAfterExpenses\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"getTotalWithdrawableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"},{\"internalType\":\"uint256[][]\",\"name\":\"amounts\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_articleStorageAddress\",\"type\":\"uint80\"}],\"name\":\"increaseBounty\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_articleID\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_category\",\"type\":\"uint8\"},{\"internalType\":\"uint80\",\"name\":\"_searchPointer\",\"type\":\"uint80\"}],\"name\":\"initializeArticle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_articleStorageAddress\",\"type\":\"uint80\"}],\"name\":\"initiateWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_metaevidenceIpfsUri\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_arbitratorExtraData\",\"type\":\"bytes\"}],\"name\":\"newCategory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"rule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_evidenceURI\",\"type\":\"string\"}],\"name\":\"submitEvidence\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"switchPublishingLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferBalanceToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_articleStorageAddress\",\"type\":\"uint80\"},{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newChallengeTaxRate\",\"type\":\"uint256\"}],\"name\":\"updateChallengeTaxRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_articleStorageAddress\",\"type\":\"uint80\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_roundNumber\",\"type\":\"uint256\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"withdrawFeesAndRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"enum ITruthPost.RulingOptions\",\"name\":\"_ruling\",\"type\":\"uint8\"}],\"name\":\"withdrawFeesAndRewardsForAllRounds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"withdrawFeesAndRewardsForAllRoundsAndAllRulings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256[][]\",\"name\":\"positions\",\"type\":\"uint256[][]\"}],\"name\":\"withdrawFeesAndRewardsForGivenPositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"https://github.com/proveuswrong<0xferit, gratestas>\",\"custom:approvals\":\"0xferit, gratestas\",\"details\":\"You should target ITruthPost interface contract for building on top. Otherwise you risk incompatibility across versions.         Articles are not addressed with their identifiers. That enables us to reuse same storage address for another article later.///         Arbitrator is fixed, but subcourts, jury size and metaevidence are not.         We prevent articles to get withdrawn immediately. This is to prevent submitter to escape punishment in case someone discovers an argument to debunk the article.         Bounty amounts are compressed with a lossy compression method to save on storage cost.\",\"kind\":\"dev\",\"methods\":{\"appealFee(uint256)\":{\"details\":\"Returns the total amount needs to be paid to appeal a dispute, including fees and stake deposit.\",\"params\":{\"_disputeID\":\"ID of the dispute as in arbitrator.\"}},\"challenge(uint80)\":{\"details\":\"Challenges the article at the given storage address. Emits Challenge.\",\"params\":{\"_articleStorageAddress\":\"The address of the article in the storage.\"}},\"challengeFee(uint80)\":{\"details\":\"Returns the total amount needs to be paid to challenge an article, including taxes if any.\",\"params\":{\"_articleStorageAddress\":\"The address of article in the storage.\"}},\"changeAdmin(address)\":{\"details\":\"Only the current administrator can call this function. Emits AdminUpdate.\",\"params\":{\"_newAdmin\":\"The address of the new administrator.\"}},\"changeArticleWithdrawalTimelock(uint256)\":{\"details\":\"Sets the timelock before an author can initiate the withdrawal of an article to a new value.       Emits ArticleWithdrawalTimelockUpdate.\",\"params\":{\"_newArticleWithdrawalTimelock\":\"The new value of ARTICLE_WITHDRAWAL_TIMELOCK.\"}},\"changeLoserAppealPeriodMultiplier(uint256)\":{\"details\":\"Sets the multiplier of the appeal window for the loser to a new value. Emits LoserAppealPeriodMultiplierUpdate.\",\"params\":{\"_newLoserAppealPeriodMultiplier\":\"The new value of LOSER_APPEAL_PERIOD_MULTIPLIER.\"}},\"changeLoserStakeMultiplier(uint256)\":{\"details\":\"Sets the multiplier of the arbitration cost that the loser has to pay as fee stake to a new value.       Emits LoserStakeMultiplierUpdate.\",\"params\":{\"_newLoserStakeMultiplier\":\"The new value of LOSER_STAKE_MULTIPLIER.\"}},\"changeTreasury(address)\":{\"details\":\"Only the current administrator can call this function. Emits TreasuryUpdate.\",\"params\":{\"_newTreasury\":\"The address of the new treasury.\"}},\"changeWinnerStakeMultiplier(uint256)\":{\"details\":\"Sets the multiplier of the arbitration cost that the winner has to pay as fee stake to a new value.       Emits WinnerStakeMultiplierUpdate.\",\"params\":{\"_newWinnerStakeMultiplier\":\"The new value of WINNER_STAKE_MULTIPLIER.\"}},\"findVacantStorageSlot(uint80)\":{\"details\":\"Helper function to find a vacant slot for article. Use this function before calling initialize to minimize your gas cost.\",\"params\":{\"_searchPointer\":\"Starting point of the search. If you do not have a guess, just pass 0.\"}},\"fundAppeal(uint256,uint8)\":{\"details\":\"Lets user to contribute funding of an appeal round. Emits Contribution. If fully funded, emits RulingFunded.\",\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"The ruling option to which the caller wants to contribute.\"},\"returns\":{\"fullyFunded\":\"True if the ruling option got fully funded as a result of this contribution.\"}},\"getAmountRemainsToBeRaised(uint256,uint8)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"The ruling option to query.\"},\"returns\":{\"_0\":\"Amount needs to be raised\"}},\"getAppealPeriod(uint256,uint8)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"The ruling option to query.\"},\"returns\":{\"_0\":\"Start\",\"_1\":\"End\"}},\"getLastRoundWinner(uint256)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\"},\"returns\":{\"_0\":\"Winning ruling option.\"}},\"getReturnOfInvestmentRatio(uint8,uint8)\":{\"details\":\"Purely depends on whether given ruling option is winner and stake multipliers.\",\"params\":{\"_lastRoundWinner\":\"Winner of the last round.\",\"_ruling\":\"The ruling option to query.\"},\"returns\":{\"_0\":\"Return of investment ratio, denominated by MULTIPLIER_DENOMINATOR.\"}},\"getRoundInfo(uint256,uint256)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_round\":\"Round ID.\"},\"returns\":{\"hasPaid\":\"Whether given ruling option was fully funded.\",\"totalClaimableAfterExpenses\":\"Total amount will be distributed back to winners, after deducting expenses.\",\"totalPerRuling\":\"The total raised per ruling option.\"}},\"getTotalWithdrawableAmount(uint256,address)\":{\"details\":\"Returns the sum of withdrawable amount and 2D array of positions[round][ruling].\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\"},\"returns\":{\"sum\":\"The total amount available to withdraw.\"}},\"increaseBounty(uint80)\":{\"details\":\"Lets author to increase a bounty of a live article. Emits BalanceUpdate.\",\"params\":{\"_articleStorageAddress\":\"The address of the article in the storage.\"}},\"initializeArticle(string,uint8,uint80)\":{\"details\":\"Do not confuse articleID with articleAddress. Emits NewArticle.\",\"params\":{\"_articleID\":\"Unique identifier of an article in IPFS content identifier format.\",\"_category\":\"The category code of this new article.\",\"_searchPointer\":\"Starting point of the search. Find a vacant storage slot before calling this function to minimize gas cost.\"}},\"initiateWithdrawal(uint80)\":{\"details\":\"Lets an author to start unpublishing process. Emits TimelockStarted.\",\"params\":{\"_articleStorageAddress\":\"The address of the article in the storage.\"}},\"newCategory(string,bytes)\":{\"params\":{\"_arbitratorExtraData\":\"Extra data of Kleros arbitrator, signaling subcourt and jury size selection.\",\"_metaevidenceIpfsUri\":\"IPFS content identifier for metaevidence.\"}},\"rule(uint256,uint256)\":{\"details\":\"This is only for arbitrator to use.\",\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"Winning ruling option.\"}},\"submitEvidence(uint256,string)\":{\"params\":{\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_evidenceURI\":\"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\"}},\"switchPublishingLock()\":{\"details\":\"Useful when it's no longer safe or secure to use this contract.         Prevents new articles to be published. Only intended for privileges users.\"},\"transferBalanceToTreasury()\":{\"details\":\"Allows the contract to send its entire balance to the treasury address.         It is important to ensure that the treasury address is set correctly.         If the transfer fails, an exception will be raised, and the funds will remain in the contract.         Emits TreasuryBalanceUpdate.\"},\"transferOwnership(uint80,address)\":{\"details\":\"Lets you to transfer ownership of an article.       This is useful when you want to change owner account without withdrawing and resubmitting.       Emits OwnershipTransfer.\",\"params\":{\"_articleStorageAddress\":\"The address of article in the storage.\",\"_newOwner\":\"The new owner of the article which resides in the storage address, provided by the previous parameter.\"}},\"updateChallengeTaxRate(uint256)\":{\"details\":\"The new challenge tax rate must be at most 25% based on MULTIPLIER_DENOMINATOR.         Only the current administrator can call this function. Emits ChallengeTaxRateUpdate.\",\"params\":{\"_newChallengeTaxRate\":\"The new challenge tax rate to be set.\"}},\"withdraw(uint80)\":{\"details\":\"Executes unpublishing of an article. Emits Withdrew.\",\"params\":{\"_articleStorageAddress\":\"The address of the article in the storage.\"}},\"withdrawFeesAndRewards(uint256,address,uint256,uint8)\":{\"details\":\"Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_round\":\"Number of the round that caller wants to execute withdraw on.\",\"_ruling\":\"A ruling option that caller wants to execute withdraw on.\"},\"returns\":{\"amount\":\"The amount that is going to be transferred to contributor as a result of this function call.\"}},\"withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)\":{\"details\":\"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\",\"_ruling\":\"Ruling option that caller wants to execute withdraw on.\"}},\"withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)\":{\"details\":\"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds and all rulings at once.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\"}},\"withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])\":{\"details\":\"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for given positions at once.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_disputeID\":\"The dispute ID as in arbitrator.\",\"positions\":\"[rounds][rulings].\"}}},\"title\":\"The Trust Post\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"appealFee(uint256)\":{\"notice\":\"Get required appeal fee and deposit.\"},\"challenge(uint80)\":{\"notice\":\"Challenge article.\"},\"challengeFee(uint80)\":{\"notice\":\"Get required challenge fee.\"},\"changeAdmin(address)\":{\"notice\":\"Changes the administrator of the contract to a new address.\"},\"changeArticleWithdrawalTimelock(uint256)\":{\"notice\":\"Update the timelock for the article withdtrawal.\"},\"changeLoserAppealPeriodMultiplier(uint256)\":{\"notice\":\"Update the appeal window for the loser.\"},\"changeLoserStakeMultiplier(uint256)\":{\"notice\":\"Update the arbitration cost for the loser.\"},\"changeTreasury(address)\":{\"notice\":\"Changes the treasury address of the contract to a new address.\"},\"changeWinnerStakeMultiplier(uint256)\":{\"notice\":\"Update the arbitration cost for the winner.\"},\"findVacantStorageSlot(uint80)\":{\"notice\":\"Find a vacant storage slot for an article.\"},\"fundAppeal(uint256,uint8)\":{\"notice\":\"Fund a crowdfunding appeal.\"},\"getAmountRemainsToBeRaised(uint256,uint8)\":{\"notice\":\"Learn about how much more needs to be raised for given ruling option.\"},\"getAppealPeriod(uint256,uint8)\":{\"notice\":\"Get appeal time window.\"},\"getLastRoundWinner(uint256)\":{\"notice\":\"Get last round's winner.\"},\"getReturnOfInvestmentRatio(uint8,uint8)\":{\"notice\":\"Get return of investment ratio.\"},\"getRoundInfo(uint256,uint256)\":{\"notice\":\"Learn about given dispute round.\"},\"getTotalWithdrawableAmount(uint256,address)\":{\"notice\":\"Learn the total amount of appeal crowdfunding balance available.\"},\"increaseBounty(uint80)\":{\"notice\":\"Increase bounty.\"},\"initializeArticle(string,uint8,uint80)\":{\"notice\":\"Publish an article.\"},\"initiateWithdrawal(uint80)\":{\"notice\":\"Initiate unpublishing process.\"},\"newCategory(string,bytes)\":{\"notice\":\"Initialize a category.\"},\"rule(uint256,uint256)\":{\"notice\":\"Execute a ruling\"},\"submitEvidence(uint256,string)\":{\"notice\":\"Submit an evidence.\"},\"switchPublishingLock()\":{\"notice\":\"Switches publishing lock.\"},\"transferBalanceToTreasury()\":{\"notice\":\"Transfers the balance of the contract to the treasury.\"},\"transferOwnership(uint80,address)\":{\"notice\":\"Transfer ownership of an article.\"},\"updateChallengeTaxRate(uint256)\":{\"notice\":\"Updates the challenge tax rate of the contract to a new value.\"},\"withdraw(uint80)\":{\"notice\":\"Execute unpublishing.\"},\"withdrawFeesAndRewards(uint256,address,uint256,uint8)\":{\"notice\":\"Withdraw appeal crowdfunding balance.\"},\"withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)\":{\"notice\":\"Withdraw appeal crowdfunding balance for given ruling option for all rounds.\"},\"withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)\":{\"notice\":\"Withdraw appeal crowdfunding balance for all ruling options and all rounds.\"},\"withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])\":{\"notice\":\"Withdraw appeal crowdfunding balance for given ruling option and for given rounds.\"}},\"notice\":\"Smart contract for a type of curation, where submitted items are on hold until they are withdrawn and the amount of security deposits are determined by submitters.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TruthPost.sol\":\"TruthPost\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/**\\n *  @authors: [@ferittuncer]\\n *  @reviewers: [@mtsalenc*, @hbarcelos*, @unknownunknown1, @MerlinEgalite, @fnanni-0*, @shalzz]\\n *  @auditors: []\\n *  @bounties: []\\n *  @deployments: []\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@kleros/erc-792/contracts/IArbitrable.sol\\\";\\nimport \\\"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\\\";\\nimport \\\"@kleros/erc-792/contracts/IArbitrator.sol\\\";\\n\\n/**\\n *  @title This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet.\\n    This interface is used in Dispute Resolver (resolve.kleros.io).\\n */\\nabstract contract IDisputeResolver is IArbitrable, IEvidence {\\n    string public constant VERSION = \\\"2.0.0\\\"; // Can be used to distinguish between multiple deployed versions, if necessary.\\n\\n    /** @dev Raised when a contribution is made, inside fundAppeal function.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _round The round number the contribution was made to.\\n     *  @param ruling Indicates the ruling option which got the contribution.\\n     *  @param _contributor Caller of fundAppeal function.\\n     *  @param _amount Contribution amount.\\n     */\\n    event Contribution(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 ruling, address indexed _contributor, uint256 _amount);\\n\\n    /** @dev Raised when a contributor withdraws non-zero value.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _round The round number the withdrawal was made from.\\n     *  @param _ruling Indicates the ruling option which contributor gets rewards from.\\n     *  @param _contributor The beneficiary of withdrawal.\\n     *  @param _reward Total amount of withdrawal, consists of reimbursed deposits plus rewards.\\n     */\\n    event Withdrawal(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 _ruling, address indexed _contributor, uint256 _reward);\\n\\n    /** @dev To be raised when a ruling option is fully funded for appeal.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _round Number of the round this ruling option was fully funded in.\\n     *  @param _ruling The ruling option which just got fully funded.\\n     */\\n    event RulingFunded(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 indexed _ruling);\\n\\n    /** @dev Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\\n     *  @param _externalDisputeID Dispute id as in arbitrator contract.\\n     *  @return localDisputeID Dispute id as in arbitrable contract.\\n     */\\n    function externalIDtoLocalID(uint256 _externalDisputeID) external virtual returns (uint256 localDisputeID);\\n\\n    /** @dev Returns number of possible ruling options. Valid rulings are [0, return value].\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @return count The number of ruling options.\\n     */\\n    function numberOfRulingOptions(uint256 _localDisputeID) external view virtual returns (uint256 count);\\n\\n    /** @dev Allows to submit evidence for a given dispute.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\\n     */\\n    function submitEvidence(uint256 _localDisputeID, string calldata _evidenceURI) external virtual;\\n\\n    /** @dev Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _ruling The ruling option to which the caller wants to contribute.\\n     *  @return fullyFunded True if the ruling option got fully funded as a result of this contribution.\\n     */\\n    function fundAppeal(uint256 _localDisputeID, uint256 _ruling) external payable virtual returns (bool fullyFunded);\\n\\n    /** @dev Returns appeal multipliers.\\n     *  @return winnerStakeMultiplier Winners stake multiplier.\\n     *  @return loserStakeMultiplier Losers stake multiplier.\\n     *  @return loserAppealPeriodMultiplier Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\\n     *  @return denominator Multiplier denominator in basis points.\\n     */\\n    function getMultipliers()\\n        external\\n        view\\n        virtual\\n        returns (\\n            uint256 winnerStakeMultiplier,\\n            uint256 loserStakeMultiplier,\\n            uint256 loserAppealPeriodMultiplier,\\n            uint256 denominator\\n        );\\n\\n    /** @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _contributor Beneficiary of withdraw operation.\\n     *  @param _round Number of the round that caller wants to execute withdraw on.\\n     *  @param _ruling A ruling option that caller wants to execute withdraw on.\\n     *  @return sum The amount that is going to be transferred to contributor as a result of this function call.\\n     */\\n    function withdrawFeesAndRewards(\\n        uint256 _localDisputeID,\\n        address payable _contributor,\\n        uint256 _round,\\n        uint256 _ruling\\n    ) external virtual returns (uint256 sum);\\n\\n    /** @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _contributor Beneficiary of withdraw operation.\\n     *  @param _ruling Ruling option that caller wants to execute withdraw on.\\n     */\\n    function withdrawFeesAndRewardsForAllRounds(\\n        uint256 _localDisputeID,\\n        address payable _contributor,\\n        uint256 _ruling\\n    ) external virtual;\\n\\n    /** @dev Returns the sum of withdrawable amount.\\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\\n     *  @param _contributor Beneficiary of withdraw operation.\\n     *  @param _ruling Ruling option that caller wants to get withdrawable amount from.\\n     *  @return sum The total amount available to withdraw.\\n     */\\n    function getTotalWithdrawableAmount(\\n        uint256 _localDisputeID,\\n        address payable _contributor,\\n        uint256 _ruling\\n    ) external view virtual returns (uint256 sum);\\n}\\n\",\"keccak256\":\"0x9174a37ba69e682381a3ae6e14582a17d69f29be879ff27433fce2b971f871ae\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/IArbitrable.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrator.sol\\\";\\n\\n/**\\n * @title IArbitrable\\n * Arbitrable interface.\\n * When developing arbitrable contracts, we need to:\\n * - Define the action taken when a ruling is received by the contract.\\n * - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);\\n */\\ninterface IArbitrable {\\n    /**\\n     * @dev To be raised when a ruling is given.\\n     * @param _arbitrator The arbitrator giving the ruling.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling The ruling which was given.\\n     */\\n    event Ruling(IArbitrator indexed _arbitrator, uint256 indexed _disputeID, uint256 _ruling);\\n\\n    /**\\n     * @dev Give a ruling for a dispute. Must be called by the arbitrator.\\n     * The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\\n     */\\n    function rule(uint256 _disputeID, uint256 _ruling) external;\\n}\\n\",\"keccak256\":\"0xf1a2c2d7ec1237ef8d3c5f580ac73f56ed58fe4d023817a188363885b3eeb9f2\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/IArbitrator.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrable.sol\\\";\\n\\n/**\\n * @title Arbitrator\\n * Arbitrator abstract contract.\\n * When developing arbitrator contracts we need to:\\n * - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\\n * - Define the functions for cost display (arbitrationCost and appealCost).\\n * - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\\n */\\ninterface IArbitrator {\\n    enum DisputeStatus {\\n        Waiting,\\n        Appealable,\\n        Solved\\n    }\\n\\n    /**\\n     * @dev To be emitted when a dispute is created.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event DisputeCreation(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when a dispute can be appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealPossible(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when the current ruling is appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealDecision(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev Create a dispute. Must be called by the arbitrable contract.\\n     * Must be paid at least arbitrationCost(_extraData).\\n     * @param _choices Amount of choices the arbitrator can make in this dispute.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return disputeID ID of the dispute created.\\n     */\\n    function createDispute(uint256 _choices, bytes calldata _extraData) external payable returns (uint256 disputeID);\\n\\n    /**\\n     * @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function arbitrationCost(bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give extra info on the appeal.\\n     */\\n    function appeal(uint256 _disputeID, bytes calldata _extraData) external payable;\\n\\n    /**\\n     * @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function appealCost(uint256 _disputeID, bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\\n     * @param _disputeID ID of the dispute.\\n     * @return start The start of the period.\\n     * @return end The end of the period.\\n     */\\n    function appealPeriod(uint256 _disputeID) external view returns (uint256 start, uint256 end);\\n\\n    /**\\n     * @dev Return the status of a dispute.\\n     * @param _disputeID ID of the dispute to rule.\\n     * @return status The status of the dispute.\\n     */\\n    function disputeStatus(uint256 _disputeID) external view returns (DisputeStatus status);\\n\\n    /**\\n     * @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\\n     * @param _disputeID ID of the dispute.\\n     * @return ruling The ruling which has been given or the one which will be given if there is no appeal.\\n     */\\n    function currentRuling(uint256 _disputeID) external view returns (uint256 ruling);\\n}\\n\",\"keccak256\":\"0xfd19582446ef635cfb02a035a18efae3bc242ccf1472bb9949cad3d291306333\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: []\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IArbitrator.sol\\\";\\n\\n/** @title IEvidence\\n *  ERC-1497: Evidence Standard\\n */\\ninterface IEvidence {\\n    /**\\n     * @dev To be emitted when meta-evidence is submitted.\\n     * @param _metaEvidenceID Unique identifier of meta-evidence.\\n     * @param _evidence IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'\\n     */\\n    event MetaEvidence(uint256 indexed _metaEvidenceID, string _evidence);\\n\\n    /**\\n     * @dev To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).\\n     * @param _arbitrator The arbitrator of the contract.\\n     * @param _evidenceGroupID Unique identifier of the evidence group the evidence belongs to.\\n     * @param _party The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\\n     * @param _evidence IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\\n     */\\n    event Evidence(\\n        IArbitrator indexed _arbitrator,\\n        uint256 indexed _evidenceGroupID,\\n        address indexed _party,\\n        string _evidence\\n    );\\n\\n    /**\\n     * @dev To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.\\n     * @param _arbitrator The arbitrator of the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _metaEvidenceID Unique identifier of meta-evidence.\\n     * @param _evidenceGroupID Unique identifier of the evidence group that is linked to this dispute.\\n     */\\n    event Dispute(\\n        IArbitrator indexed _arbitrator,\\n        uint256 indexed _disputeID,\\n        uint256 _metaEvidenceID,\\n        uint256 _evidenceGroupID\\n    );\\n}\\n\",\"keccak256\":\"0xf9f105a2cbf5e34cdc5ce71d877cded1b502437f1cd6d28173898f88542418af\",\"license\":\"MIT\"},\"contracts/ITruthPost.sol\":{\"content\":\"/// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.10;\\n\\n/// @title  The Truth Post: Accurate and Relevant News\\n/// @author https://github.com/proveuswrong<0xferit, gratestas>\\n/// @dev    This contract serves as a standard interface among multiple deployments of the Truth Post contracts.\\n///         You should target this interface contract for interactions, not the concrete contract; otherwise you risk incompatibility across versions.\\n/// @custom:approvals 0xferit, gratestas\\nabstract contract ITruthPost {\\n    string public constant VERSION = \\\"1.2.0\\\";\\n\\n    enum RulingOptions {\\n        Tied,\\n        ChallengeFailed,\\n        Debunked\\n    }\\n\\n    bool isPublishingEnabled = true;\\n    address payable public TREASURY;\\n    uint256 public treasuryBalance;\\n    uint256 public constant NUMBER_OF_RULING_OPTIONS = 2;\\n    uint256 public constant MULTIPLIER_DENOMINATOR = 1024; // Denominator for multipliers.\\n    uint256 public LOSER_APPEAL_PERIOD_MULTIPLIER = 512; // Multiplier of the appeal period for losers (any other ruling options) in basis points. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\\n    uint256 public ARTICLE_WITHDRAWAL_TIMELOCK; // To prevent authors to act fast and escape punishment.\\n    uint256 public WINNER_STAKE_MULTIPLIER; // Multiplier of the arbitration cost that the winner has to pay as fee stake for a round in basis points.\\n    uint256 public LOSER_STAKE_MULTIPLIER; // Multiplier of the arbitration cost that the loser has to pay as fee stake for a round in basis points.\\n    uint256 public challengeTaxRate = 16;\\n\\n    constructor(\\n        uint256 _articleWithdrawalTimelock,\\n        uint256 _winnerStakeMultiplier,\\n        uint256 _loserStakeMultiplier,\\n        address payable _treasury\\n    ) {\\n        ARTICLE_WITHDRAWAL_TIMELOCK = _articleWithdrawalTimelock;\\n        WINNER_STAKE_MULTIPLIER = _winnerStakeMultiplier;\\n        LOSER_STAKE_MULTIPLIER = _loserStakeMultiplier;\\n        TREASURY = _treasury;\\n    }\\n\\n    event NewArticle(string articleID, uint8 category, uint256 articleAddress);\\n    event Debunked(uint256 articleAddress);\\n    event ArticleWithdrawn(uint256 articleAddress);\\n    event BalanceUpdate(uint256 articleAddress, uint256 newTotal);\\n    event TimelockStarted(uint256 articleAddress);\\n    event Challenge(uint256 indexed articleAddress, address challanger, uint256 disputeID);\\n    event Contribution(\\n        uint256 indexed disputeId,\\n        uint256 indexed round,\\n        RulingOptions ruling,\\n        address indexed contributor,\\n        uint256 amount\\n    );\\n    event Withdrawal(\\n        uint256 indexed disputeId,\\n        uint256 indexed round,\\n        RulingOptions ruling,\\n        address indexed contributor,\\n        uint256 reward\\n    );\\n    event RulingFunded(uint256 indexed disputeId, uint256 indexed round, RulingOptions indexed ruling);\\n    event OwnershipTransfer(address indexed _newOwner);\\n    event AdminUpdate(address indexed _newAdmin);\\n    event WinnerStakeMultiplierUpdate(uint256 indexed _newWinnerStakeMultiplier);\\n    event LoserStakeMultiplierUpdate(uint256 indexed _newLoserStakeMultiplier);\\n    event LoserAppealPeriodMultiplierUpdate(uint256 indexed _newLoserAppealPeriodMultiplier);\\n    event ArticleWithdrawalTimelockUpdate(uint256 indexed _newWithdrawalTimelock);\\n    event ChallengeTaxRateUpdate(uint256 indexed _newTaxRate);\\n    event TreasuryUpdate(address indexed _newTreasury);\\n    event TreasuryBalanceUpdate(uint256 indexed _byAmount);\\n\\n\\n    /// @notice Submit an evidence.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\\n    function submitEvidence(uint256 _disputeID, string calldata _evidenceURI) external virtual;\\n\\n    /// @notice Fund a crowdfunding appeal.\\n    /// @dev Lets user to contribute funding of an appeal round. Emits Contribution. If fully funded, emits RulingFunded.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _ruling The ruling option to which the caller wants to contribute.\\n    /// @return fullyFunded True if the ruling option got fully funded as a result of this contribution.\\n    function fundAppeal(uint256 _disputeID, RulingOptions _ruling) external payable virtual returns (bool fullyFunded);\\n\\n    /// @notice Publish an article.\\n    /// @dev    Do not confuse articleID with articleAddress. Emits NewArticle.\\n    /// @param _articleID Unique identifier of an article in IPFS content identifier format.\\n    /// @param _category The category code of this new article.\\n    /// @param _searchPointer Starting point of the search. Find a vacant storage slot before calling this function to minimize gas cost.\\n    function initializeArticle(\\n        string calldata _articleID,\\n        uint8 _category,\\n        uint80 _searchPointer\\n    ) external payable virtual;\\n\\n    /// @notice Increase bounty.\\n    /// @dev Lets author to increase a bounty of a live article. Emits BalanceUpdate.\\n    /// @param _articleStorageAddress The address of the article in the storage.\\n    function increaseBounty(uint80 _articleStorageAddress) external payable virtual;\\n\\n    /// @notice Initiate unpublishing process.\\n    /// @dev Lets an author to start unpublishing process. Emits TimelockStarted.\\n    /// @param _articleStorageAddress The address of the article in the storage.\\n    function initiateWithdrawal(uint80 _articleStorageAddress) external virtual;\\n\\n    /// @notice Execute unpublishing.\\n    /// @dev Executes unpublishing of an article. Emits Withdrew.\\n    /// @param _articleStorageAddress The address of the article in the storage.\\n    function withdraw(uint80 _articleStorageAddress) external virtual;\\n\\n    /// @notice Challenge article.\\n    /// @dev Challenges the article at the given storage address. Emits Challenge.\\n    /// @param _articleStorageAddress The address of the article in the storage.\\n    function challenge(uint80 _articleStorageAddress) external payable virtual;\\n\\n    /// @notice Transfer ownership of an article.\\n    /// @dev Lets you to transfer ownership of an article. \\n    ///      This is useful when you want to change owner account without withdrawing and resubmitting. \\n    ///      Emits OwnershipTransfer.\\n    /// @param _articleStorageAddress The address of article in the storage.\\n    /// @param _newOwner The new owner of the article which resides in the storage address, provided by the previous parameter.\\n    function transferOwnership(uint80 _articleStorageAddress, address payable _newOwner) external virtual;\\n\\n    /// @notice Update the arbitration cost for the winner.\\n    /// @dev Sets the multiplier of the arbitration cost that the winner has to pay as fee stake to a new value. \\n    ///      Emits WinnerStakeMultiplierUpdate.\\n    /// @param _newWinnerStakeMultiplier The new value of WINNER_STAKE_MULTIPLIER.\\n    function changeWinnerStakeMultiplier(uint256 _newWinnerStakeMultiplier) external virtual;\\n\\n    /// @notice Update the arbitration cost for the loser.\\n    /// @dev Sets the multiplier of the arbitration cost that the loser has to pay as fee stake to a new value. \\n    ///      Emits LoserStakeMultiplierUpdate.\\n    /// @param _newLoserStakeMultiplier The new value of LOSER_STAKE_MULTIPLIER.\\n    \\n    function changeLoserStakeMultiplier(uint256 _newLoserStakeMultiplier) external virtual;\\n\\n    /// @notice Update the appeal window for the loser.\\n    /// @dev Sets the multiplier of the appeal window for the loser to a new value. Emits LoserAppealPeriodMultiplierUpdate.\\n    /// @param _newLoserAppealPeriodMultiplier The new value of LOSER_APPEAL_PERIOD_MULTIPLIER.\\n    function changeLoserAppealPeriodMultiplier(uint256 _newLoserAppealPeriodMultiplier) external virtual;\\n\\n    /// @notice Update the timelock for the article withdtrawal.\\n    /// @dev Sets the timelock before an author can initiate the withdrawal of an article to a new value. \\n    ///      Emits ArticleWithdrawalTimelockUpdate.\\n    /// @param _newArticleWithdrawalTimelock The new value of ARTICLE_WITHDRAWAL_TIMELOCK.\\n    function changeArticleWithdrawalTimelock(uint256 _newArticleWithdrawalTimelock) external virtual;\\n\\n    /// @notice Find a vacant storage slot for an article.\\n    /// @dev Helper function to find a vacant slot for article. Use this function before calling initialize to minimize your gas cost.\\n    /// @param _searchPointer Starting point of the search. If you do not have a guess, just pass 0.\\n    function findVacantStorageSlot(uint80 _searchPointer) external view virtual returns (uint256 vacantSlotIndex);\\n\\n    /// @notice Get required challenge fee.\\n    /// @dev Returns the total amount needs to be paid to challenge an article, including taxes if any.\\n    /// @param _articleStorageAddress The address of article in the storage.\\n    function challengeFee(uint80 _articleStorageAddress) public view virtual returns (uint256 challengeFee);\\n\\n    /// @notice Get required appeal fee and deposit.\\n    /// @dev Returns the total amount needs to be paid to appeal a dispute, including fees and stake deposit.\\n    /// @param _disputeID ID of the dispute as in arbitrator.\\n    function appealFee(uint256 _disputeID) external view virtual returns (uint256 arbitrationFee);\\n\\n    /// @notice Withdraw appeal crowdfunding balance.\\n    /// @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    /// @param _round Number of the round that caller wants to execute withdraw on.\\n    /// @param _ruling A ruling option that caller wants to execute withdraw on.\\n    /// @return sum The amount that is going to be transferred to contributor as a result of this function call.\\n    function withdrawFeesAndRewards(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        uint256 _round,\\n        RulingOptions _ruling\\n    ) external virtual returns (uint256 sum);\\n\\n    /// @notice Withdraw appeal crowdfunding balance for given ruling option for all rounds.\\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    /// @param _ruling Ruling option that caller wants to execute withdraw on.\\n    function withdrawFeesAndRewardsForAllRounds(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        RulingOptions _ruling\\n    ) external virtual;\\n\\n    /// @notice Withdraw appeal crowdfunding balance for given ruling option and for given rounds.\\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for given positions at once.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    /// @param positions [rounds][rulings].\\n    function withdrawFeesAndRewardsForGivenPositions(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        uint256[][] calldata positions\\n    ) external virtual;\\n\\n    /// @notice Withdraw appeal crowdfunding balance for all ruling options and all rounds.\\n    /// @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds and all rulings at once.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    function withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256 _disputeID, address payable _contributor)\\n        external\\n        virtual;\\n\\n    /// @notice Learn the total amount of appeal crowdfunding balance available.\\n    /// @dev Returns the sum of withdrawable amount and 2D array of positions[round][ruling].\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _contributor Beneficiary of withdraw operation.\\n    /// @return sum The total amount available to withdraw.\\n    function getTotalWithdrawableAmount(uint256 _disputeID, address payable _contributor)\\n        external\\n        view\\n        virtual\\n        returns (uint256 sum, uint256[][] memory positions);\\n\\n    /// @notice Learn about given dispute round.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _round Round ID.\\n    /// @return hasPaid Whether given ruling option was fully funded.\\n    /// @return totalPerRuling The total raised per ruling option.\\n    /// @return totalClaimableAfterExpenses Total amount will be distributed back to winners, after deducting expenses.\\n    function getRoundInfo(uint256 _disputeID, uint256 _round)\\n        external\\n        view\\n        virtual\\n        returns (\\n            bool[NUMBER_OF_RULING_OPTIONS + 1] memory hasPaid,\\n            uint256[NUMBER_OF_RULING_OPTIONS + 1] memory totalPerRuling,\\n            uint256 totalClaimableAfterExpenses\\n        );\\n\\n    /// @notice Learn about how much more needs to be raised for given ruling option.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _ruling The ruling option to query.\\n    /// @return Amount needs to be raised\\n    function getAmountRemainsToBeRaised(uint256 _disputeID, RulingOptions _ruling)\\n        external\\n        view\\n        virtual\\n        returns (uint256);\\n\\n    /// @notice Get return of investment ratio.\\n    /// @dev Purely depends on whether given ruling option is winner and stake multipliers.\\n    /// @param _ruling The ruling option to query.\\n    /// @param _lastRoundWinner Winner of the last round.\\n    /// @return Return of investment ratio, denominated by MULTIPLIER_DENOMINATOR.\\n    function getReturnOfInvestmentRatio(RulingOptions _ruling, RulingOptions _lastRoundWinner)\\n        external\\n        view\\n        virtual\\n        returns (uint256);\\n\\n    /// @notice Get appeal time window.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _ruling The ruling option to query.\\n    /// @return Start\\n    /// @return End\\n    function getAppealPeriod(uint256 _disputeID, RulingOptions _ruling)\\n        external\\n        view\\n        virtual\\n        returns (uint256, uint256);\\n\\n    /// @notice Get last round's winner.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @return Winning ruling option.\\n    function getLastRoundWinner(uint256 _disputeID) public view virtual returns (uint256);\\n\\n    /// @notice Switches publishing lock.\\n    /// @dev    Useful when it's no longer safe or secure to use this contract.\\n    ///         Prevents new articles to be published. Only intended for privileges users.\\n    function switchPublishingLock() public virtual;\\n}\\n\",\"keccak256\":\"0x82d3bf9448724c610414b8d1b13916a0157777665b3d6e68873c5f299d044c57\",\"license\":\"MIT\"},\"contracts/TruthPost.sol\":{\"content\":\"/// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.10;\\n\\nimport \\\"@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol\\\";\\nimport \\\"./ITruthPost.sol\\\";\\n\\n/// @title  The Trust Post\\n/// @author https://github.com/proveuswrong<0xferit, gratestas>\\n/// @notice Smart contract for a type of curation, where submitted items are on hold until they are withdrawn and the amount of security deposits are determined by submitters.\\n/// @dev    You should target ITruthPost interface contract for building on top. Otherwise you risk incompatibility across versions.\\n///         Articles are not addressed with their identifiers. That enables us to reuse same storage address for another article later.///         Arbitrator is fixed, but subcourts, jury size and metaevidence are not.\\n///         We prevent articles to get withdrawn immediately. This is to prevent submitter to escape punishment in case someone discovers an argument to debunk the article.\\n///         Bounty amounts are compressed with a lossy compression method to save on storage cost.\\n/// @custom:approvals 0xferit, gratestas\\ncontract TruthPost is ITruthPost, IArbitrable, IEvidence {\\n    IArbitrator public immutable ARBITRATOR;\\n    uint256 public constant NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE = 32; // To compress bounty amount to gain space in struct. Lossy compression.\\n\\n    uint8 public categoryCounter = 0;\\n\\n    address payable public admin = payable(msg.sender);\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin);\\n        _;\\n    }\\n\\n    struct DisputeData {\\n        address payable challenger;\\n        RulingOptions outcome;\\n        uint8 articleCategory;\\n        bool resolved; // To remove dependency to disputeStatus function of arbitrator. This function is likely to be removed in Kleros v2.\\n        uint80 articleStorageAddress; // 2^16 is sufficient. Just using extra available space.\\n        Round[] rounds; // Tracks each appeal round of a dispute.\\n    }\\n\\n    struct Round {\\n        mapping(address => uint256[NUMBER_OF_RULING_OPTIONS + 1]) contributions;\\n        bool[NUMBER_OF_RULING_OPTIONS + 1] hasPaid; // True if the fees for this particular answer has been fully paid in the form hasPaid[rulingOutcome].\\n        uint256[NUMBER_OF_RULING_OPTIONS + 1] totalPerRuling;\\n        uint256 totalClaimableAfterExpenses;\\n    }\\n\\n    struct Article {\\n        address payable owner;\\n        uint32 withdrawalPermittedAt; // Overflows in year 2106.\\n        uint56 bountyAmount; // 32-bits compression. Decompressed size is 88 bits.\\n        uint8 category;\\n    }\\n\\n    bytes[64] public categoryToArbitratorExtraData;\\n\\n    mapping(uint80 => Article) public articleStorage; // Key: Storage address of article. Articles are not addressed with their identifiers, to enable reusing a storage slot.\\n    mapping(uint256 => DisputeData) public disputes; // Key: Dispute ID as in arbitrator.\\n\\n    constructor(\\n        IArbitrator _arbitrator,\\n        bytes memory _arbitratorExtraData,\\n        string memory _metaevidenceIpfsUri,\\n        uint256 _articleWithdrawalTimelock,\\n        uint256 _winnerStakeMultiplier,\\n        uint256 _loserStakeMultiplier,\\n        address payable _treasury\\n    ) ITruthPost(_articleWithdrawalTimelock, _winnerStakeMultiplier, _loserStakeMultiplier, _treasury) {\\n        ARBITRATOR = _arbitrator;\\n        newCategory(_metaevidenceIpfsUri, _arbitratorExtraData);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function initializeArticle(\\n        string calldata _articleID,\\n        uint8 _category,\\n        uint80 _searchPointer\\n    ) external payable override {\\n        require(_category < categoryCounter, \\\"This category does not exist\\\");\\n\\n        Article storage article;\\n        do {\\n            article = articleStorage[_searchPointer++];\\n        } while (article.bountyAmount != 0);\\n\\n        article.owner = payable(msg.sender);\\n        article.bountyAmount = uint56(msg.value >> NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE);\\n        article.category = _category;\\n\\n        require(article.bountyAmount > 0, \\\"You can't initialize an article without putting a bounty.\\\");\\n\\n        uint256 articleStorageAddress = _searchPointer - 1;\\n        emit NewArticle(_articleID, _category, articleStorageAddress);\\n        emit BalanceUpdate(\\n            articleStorageAddress,\\n            uint256(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE\\n        );\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function submitEvidence(uint256 _disputeID, string calldata _evidenceURI) external override {\\n        emit Evidence(ARBITRATOR, _disputeID, msg.sender, _evidenceURI);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function increaseBounty(uint80 _articleStorageAddress) external payable override {\\n        Article storage article = articleStorage[_articleStorageAddress];\\n        require(msg.sender == article.owner, \\\"Only author can increase bounty of an article.\\\");\\n        // To prevent mistakes.\\n\\n        article.bountyAmount += uint56(msg.value >> NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE);\\n\\n        emit BalanceUpdate(\\n            _articleStorageAddress,\\n            uint256(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE\\n        );\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function initiateWithdrawal(uint80 _articleStorageAddress) external override {\\n        Article storage article = articleStorage[_articleStorageAddress];\\n        require(msg.sender == article.owner, \\\"Only author can withdraw an article.\\\");\\n        require(article.withdrawalPermittedAt == 0, \\\"Withdrawal already initiated or there is a challenge.\\\");\\n\\n        article.withdrawalPermittedAt = uint32(block.timestamp + ARTICLE_WITHDRAWAL_TIMELOCK);\\n        emit TimelockStarted(_articleStorageAddress);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function withdraw(uint80 _articleStorageAddress) external override {\\n        Article storage article = articleStorage[_articleStorageAddress];\\n\\n        require(msg.sender == article.owner, \\\"Only author can withdraw an article.\\\");\\n        require(article.withdrawalPermittedAt != 0, \\\"You need to initiate withdrawal first.\\\");\\n        require(\\n            article.withdrawalPermittedAt <= block.timestamp,\\n            \\\"You need to wait for timelock or wait until the challenge ends.\\\"\\n        );\\n\\n        uint256 withdrawal = uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE;\\n        article.bountyAmount = 0;\\n        // This is critical to reset.\\n        article.withdrawalPermittedAt = 0;\\n        // This too, otherwise new article inside the same slot can withdraw instantly.\\n        payable(msg.sender).transfer(withdrawal);\\n        emit ArticleWithdrawn(_articleStorageAddress);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function challenge(uint80 _articleStorageAddress) external payable override {\\n        Article storage article = articleStorage[_articleStorageAddress];\\n        require(article.bountyAmount > 0, \\\"Nothing to challenge.\\\");\\n        require(article.withdrawalPermittedAt != type(uint32).max, \\\"There is an ongoing challenge.\\\");\\n        article.withdrawalPermittedAt = type(uint32).max;\\n        // Mark as challenged.\\n\\n        require(msg.value >= challengeFee(_articleStorageAddress), \\\"Insufficient funds to challenge.\\\");\\n\\n        uint256 taxAmount = ((uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE) *\\n            challengeTaxRate) / MULTIPLIER_DENOMINATOR;\\n        treasuryBalance += taxAmount;\\n\\n        uint256 disputeID = ARBITRATOR.createDispute{value: msg.value - taxAmount}(\\n            NUMBER_OF_RULING_OPTIONS,\\n            categoryToArbitratorExtraData[article.category]\\n        );\\n\\n        disputes[disputeID].challenger = payable(msg.sender);\\n        disputes[disputeID].rounds.push();\\n        disputes[disputeID].articleStorageAddress = uint80(_articleStorageAddress);\\n        disputes[disputeID].articleCategory = article.category;\\n\\n        // Evidence group ID is dispute ID.\\n        emit Dispute(ARBITRATOR, disputeID, article.category, disputeID);\\n        // This event links the dispute to an article storage address.\\n        emit Challenge(_articleStorageAddress, msg.sender, disputeID);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function fundAppeal(uint256 _disputeID, RulingOptions _supportedRuling)\\n        external\\n        payable\\n        override\\n        returns (bool fullyFunded)\\n    {\\n        DisputeData storage dispute = disputes[_disputeID];\\n\\n        RulingOptions currentRuling = RulingOptions(ARBITRATOR.currentRuling(_disputeID));\\n        uint256 basicCost;\\n        uint256 totalCost;\\n        {\\n            (uint256 appealWindowStart, uint256 appealWindowEnd) = ARBITRATOR.appealPeriod(_disputeID);\\n\\n            uint256 multiplier;\\n\\n            if (_supportedRuling == currentRuling) {\\n                require(block.timestamp < appealWindowEnd, \\\"Funding must be made within the appeal period.\\\");\\n\\n                multiplier = WINNER_STAKE_MULTIPLIER;\\n            } else {\\n                require(\\n                    block.timestamp <\\n                        (appealWindowStart +\\n                            (((appealWindowEnd - appealWindowStart) * LOSER_APPEAL_PERIOD_MULTIPLIER) /\\n                                MULTIPLIER_DENOMINATOR)),\\n                    \\\"Funding must be made within the first half appeal period.\\\"\\n                );\\n\\n                multiplier = LOSER_STAKE_MULTIPLIER;\\n            }\\n\\n            basicCost = ARBITRATOR.appealCost(_disputeID, categoryToArbitratorExtraData[dispute.articleCategory]);\\n            totalCost = basicCost + ((basicCost * (multiplier)) / MULTIPLIER_DENOMINATOR);\\n        }\\n\\n        RulingOptions supportedRulingOutcome = RulingOptions(_supportedRuling);\\n\\n        uint256 lastRoundIndex = dispute.rounds.length - 1;\\n        Round storage lastRound = dispute.rounds[lastRoundIndex];\\n        require(!lastRound.hasPaid[uint256(supportedRulingOutcome)], \\\"Appeal fee has already been paid.\\\");\\n\\n        uint256 contribution;\\n        {\\n            uint256 paidSoFar = lastRound.totalPerRuling[uint256(supportedRulingOutcome)];\\n\\n            if (paidSoFar >= totalCost) {\\n                contribution = 0;\\n                // This can happen if arbitration fee gets lowered in between contributions.\\n            } else {\\n                contribution = totalCost - paidSoFar > msg.value ? msg.value : totalCost - paidSoFar;\\n            }\\n        }\\n\\n        emit Contribution(_disputeID, lastRoundIndex, _supportedRuling, msg.sender, contribution);\\n\\n        lastRound.contributions[msg.sender][uint256(supportedRulingOutcome)] += contribution;\\n        lastRound.totalPerRuling[uint256(supportedRulingOutcome)] += contribution;\\n\\n        if (lastRound.totalPerRuling[uint256(supportedRulingOutcome)] >= totalCost) {\\n            lastRound.totalClaimableAfterExpenses += lastRound.totalPerRuling[uint256(supportedRulingOutcome)];\\n            lastRound.hasPaid[uint256(supportedRulingOutcome)] = true;\\n            emit RulingFunded(_disputeID, lastRoundIndex, _supportedRuling);\\n        }\\n\\n        if (\\n            lastRound.hasPaid[uint256(RulingOptions.ChallengeFailed)] &&\\n            lastRound.hasPaid[uint256(RulingOptions.Debunked)]\\n        ) {\\n            dispute.rounds.push();\\n            lastRound.totalClaimableAfterExpenses -= basicCost;\\n            ARBITRATOR.appeal{value: basicCost}(_disputeID, categoryToArbitratorExtraData[dispute.articleCategory]);\\n        }\\n\\n        // Ignoring failure condition deliberately.\\n        if (msg.value - contribution > 0) payable(msg.sender).send(msg.value - contribution);\\n\\n        return lastRound.hasPaid[uint256(supportedRulingOutcome)];\\n    }\\n\\n    /// @notice Execute a ruling\\n    /// @dev This is only for arbitrator to use.\\n    /// @param _disputeID The dispute ID as in arbitrator.\\n    /// @param _ruling Winning ruling option.\\n    function rule(uint256 _disputeID, uint256 _ruling) external override {\\n        require(IArbitrator(msg.sender) == ARBITRATOR);\\n\\n        DisputeData storage dispute = disputes[_disputeID];\\n        Round storage lastRound = dispute.rounds[dispute.rounds.length - 1];\\n\\n        // Appeal overrides arbitrator ruling. If a ruling option was not fully funded and the counter ruling option was funded, funded ruling option wins by default.\\n        RulingOptions wonByDefault;\\n        if (lastRound.hasPaid[uint256(RulingOptions.ChallengeFailed)]) {\\n            wonByDefault = RulingOptions.ChallengeFailed;\\n        } else if (lastRound.hasPaid[uint256(RulingOptions.ChallengeFailed)]) {\\n            wonByDefault = RulingOptions.Debunked;\\n        }\\n\\n        RulingOptions actualRuling = wonByDefault != RulingOptions.Tied ? wonByDefault : RulingOptions(_ruling);\\n        dispute.outcome = actualRuling;\\n\\n        uint80 articleStorageAddress = dispute.articleStorageAddress;\\n\\n        Article storage article = articleStorage[articleStorageAddress];\\n\\n        if (actualRuling == RulingOptions.Debunked) {\\n            uint256 bounty = uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE;\\n            article.bountyAmount = 0;\\n\\n            emit Debunked(articleStorageAddress);\\n            disputes[_disputeID].challenger.send(bounty);\\n            // Ignoring failure condition deliberately.\\n        }\\n        // In case of tie, article stands.\\n        article.withdrawalPermittedAt = 0;\\n        // Unmark as challenged.\\n        dispute.resolved = true;\\n\\n        emit Ruling(IArbitrator(msg.sender), _disputeID, _ruling);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256 _disputeID, address payable _contributor)\\n        external\\n        override\\n    {\\n        DisputeData storage dispute = disputes[_disputeID];\\n        uint256 noOfRounds = dispute.rounds.length;\\n        for (uint256 roundNumber = 0; roundNumber < noOfRounds; roundNumber++) {\\n            for (uint256 rulingOption = 0; rulingOption <= NUMBER_OF_RULING_OPTIONS; rulingOption++)\\n                withdrawFeesAndRewards(_disputeID, _contributor, roundNumber, RulingOptions(rulingOption));\\n        }\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function withdrawFeesAndRewardsForAllRounds(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        RulingOptions _ruling\\n    ) external override {\\n        DisputeData storage dispute = disputes[_disputeID];\\n        uint256 noOfRounds = dispute.rounds.length;\\n        for (uint256 roundNumber = 0; roundNumber < noOfRounds; roundNumber++) {\\n            withdrawFeesAndRewards(_disputeID, _contributor, roundNumber, _ruling);\\n        }\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function withdrawFeesAndRewardsForGivenPositions(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        uint256[][] calldata positions\\n    ) external override {\\n        for (uint256 roundNumber = 0; roundNumber < positions.length; roundNumber++) {\\n            for (uint256 rulingOption = 0; rulingOption < positions[roundNumber].length; rulingOption++) {\\n                if (positions[roundNumber][rulingOption] > 0) {\\n                    withdrawFeesAndRewards(_disputeID, _contributor, roundNumber, RulingOptions(rulingOption));\\n                }\\n            }\\n        }\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function withdrawFeesAndRewards(\\n        uint256 _disputeID,\\n        address payable _contributor,\\n        uint256 _roundNumber,\\n        RulingOptions _ruling\\n    ) public override returns (uint256 amount) {\\n        DisputeData storage dispute = disputes[_disputeID];\\n        require(dispute.resolved, \\\"There is no ruling yet.\\\");\\n\\n        Round storage round = dispute.rounds[_roundNumber];\\n\\n        amount = getWithdrawableAmount(round, _contributor, _ruling, dispute.outcome);\\n\\n        if (amount != 0) {\\n            round.contributions[_contributor][uint256(RulingOptions(_ruling))] = 0;\\n            _contributor.send(amount);\\n            // Ignoring failure condition deliberately.\\n            emit Withdrawal(_disputeID, _roundNumber, _ruling, _contributor, amount);\\n        }\\n    }\\n\\n    /// @notice Updates the challenge tax rate of the contract to a new value.\\n    /// @dev    The new challenge tax rate must be at most 25% based on MULTIPLIER_DENOMINATOR.\\n    ///         Only the current administrator can call this function. Emits ChallengeTaxRateUpdate.\\n    /// @param _newChallengeTaxRate The new challenge tax rate to be set.\\n    function updateChallengeTaxRate(uint256 _newChallengeTaxRate) external onlyAdmin {\\n        require(_newChallengeTaxRate <= 256, \\\"The tax rate can only be increased by a maximum of 25%\\\");\\n        challengeTaxRate = _newChallengeTaxRate;\\n        emit ChallengeTaxRateUpdate(_newChallengeTaxRate);\\n    }\\n\\n    /// @notice Transfers the balance of the contract to the treasury.\\n    /// @dev    Allows the contract to send its entire balance to the treasury address.\\n    ///         It is important to ensure that the treasury address is set correctly.\\n    ///         If the transfer fails, an exception will be raised, and the funds will remain in the contract.\\n    ///         Emits TreasuryBalanceUpdate.\\n    function transferBalanceToTreasury() public {\\n        uint256 amount = treasuryBalance;\\n        treasuryBalance = 0;\\n        TREASURY.send(amount);\\n        emit TreasuryBalanceUpdate(amount);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function switchPublishingLock() public override onlyAdmin {\\n        isPublishingEnabled = !isPublishingEnabled;\\n    }\\n\\n    /// @notice Changes the administrator of the contract to a new address.\\n    /// @dev    Only the current administrator can call this function. Emits AdminUpdate.\\n    /// @param  _newAdmin The address of the new administrator.\\n    function changeAdmin(address payable _newAdmin) external onlyAdmin {\\n        admin = _newAdmin;\\n        emit AdminUpdate(_newAdmin);\\n    }\\n\\n    /// @notice Changes the treasury address of the contract to a new address.\\n    /// @dev    Only the current administrator can call this function. Emits TreasuryUpdate.\\n    /// @param  _newTreasury The address of the new treasury.\\n    function changeTreasury(address payable _newTreasury) external onlyAdmin {\\n        TREASURY = _newTreasury;\\n        emit TreasuryUpdate(_newTreasury);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function changeWinnerStakeMultiplier(uint256 _newWinnerStakeMultiplier) external override onlyAdmin {\\n        WINNER_STAKE_MULTIPLIER = _newWinnerStakeMultiplier;\\n        emit WinnerStakeMultiplierUpdate(_newWinnerStakeMultiplier);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function changeLoserStakeMultiplier(uint256 _newLoserStakeMultiplier) external override onlyAdmin {\\n        LOSER_STAKE_MULTIPLIER = _newLoserStakeMultiplier;\\n        emit LoserStakeMultiplierUpdate(_newLoserStakeMultiplier);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function changeLoserAppealPeriodMultiplier(uint256 _newLoserAppealPeriodMultiplier) external override onlyAdmin {\\n        LOSER_APPEAL_PERIOD_MULTIPLIER = _newLoserAppealPeriodMultiplier;\\n        emit LoserAppealPeriodMultiplierUpdate(_newLoserAppealPeriodMultiplier);\\n    }\\n    \\n    /// @inheritdoc ITruthPost\\n    function changeArticleWithdrawalTimelock(uint256 _newArticleWithdrawalTimelock) external override onlyAdmin {\\n        ARTICLE_WITHDRAWAL_TIMELOCK = _newArticleWithdrawalTimelock;\\n        emit ArticleWithdrawalTimelockUpdate(_newArticleWithdrawalTimelock);\\n    }\\n\\n\\n    /// @notice Initialize a category.\\n    /// @param _metaevidenceIpfsUri IPFS content identifier for metaevidence.\\n    /// @param _arbitratorExtraData Extra data of Kleros arbitrator, signaling subcourt and jury size selection.\\n    function newCategory(string memory _metaevidenceIpfsUri, bytes memory _arbitratorExtraData) public {\\n        require(categoryCounter + 1 != 0, \\\"No space left for a new category\\\");\\n        emit MetaEvidence(categoryCounter, _metaevidenceIpfsUri);\\n        categoryToArbitratorExtraData[categoryCounter] = _arbitratorExtraData;\\n\\n        categoryCounter++;\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function transferOwnership(uint80 _articleStorageAddress, address payable _newOwner) external override {\\n        Article storage article = articleStorage[_articleStorageAddress];\\n        require(msg.sender == article.owner, \\\"Only author can transfer ownership.\\\");\\n        article.owner = _newOwner;\\n        emit OwnershipTransfer(_newOwner);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function challengeFee(uint80 _articleStorageAddress) public view override returns (uint256) {\\n        Article storage article = articleStorage[_articleStorageAddress];\\n\\n        uint256 arbitrationFee = ARBITRATOR.arbitrationCost(categoryToArbitratorExtraData[article.category]);\\n        uint256 challengeTax = ((uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE) *\\n            challengeTaxRate) / MULTIPLIER_DENOMINATOR;\\n\\n        return arbitrationFee + challengeTax;\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function appealFee(uint256 _disputeID) external view override returns (uint256 arbitrationFee) {\\n        DisputeData storage dispute = disputes[_disputeID];\\n        arbitrationFee = ARBITRATOR.appealCost(_disputeID, categoryToArbitratorExtraData[dispute.articleCategory]);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function findVacantStorageSlot(uint80 _searchPointer) external view override returns (uint256 vacantSlotIndex) {\\n        Article storage article;\\n        do {\\n            article = articleStorage[_searchPointer++];\\n        } while (article.bountyAmount != 0);\\n\\n        return _searchPointer - 1;\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function getTotalWithdrawableAmount(uint256 _disputeID, address payable _contributor)\\n        external\\n        view\\n        override\\n        returns (uint256 sum, uint256[][] memory amounts)\\n    {\\n        DisputeData storage dispute = disputes[_disputeID];\\n        if (!dispute.resolved) return (uint256(0), amounts);\\n        uint256 noOfRounds = dispute.rounds.length;\\n        RulingOptions finalRuling = dispute.outcome;\\n\\n        amounts = new uint256[][](noOfRounds);\\n        for (uint256 roundNumber = 0; roundNumber < noOfRounds; roundNumber++) {\\n            amounts[roundNumber] = new uint256[](NUMBER_OF_RULING_OPTIONS + 1);\\n\\n            Round storage round = dispute.rounds[roundNumber];\\n            for (uint256 rulingOption = 0; rulingOption <= NUMBER_OF_RULING_OPTIONS; rulingOption++) {\\n                uint256 currentAmount = getWithdrawableAmount(\\n                    round,\\n                    _contributor,\\n                    RulingOptions(rulingOption),\\n                    finalRuling\\n                );\\n                if (currentAmount > 0) {\\n                    sum += getWithdrawableAmount(round, _contributor, RulingOptions(rulingOption), finalRuling);\\n                    amounts[roundNumber][rulingOption] = currentAmount;\\n                }\\n            }\\n        }\\n    }\\n\\n    /// @notice Returns withdrawable amount for given parameters.\\n    function getWithdrawableAmount(\\n        Round storage _round,\\n        address _contributor,\\n        RulingOptions _ruling,\\n        RulingOptions _finalRuling\\n    ) internal view returns (uint256 amount) {\\n        RulingOptions givenRuling = RulingOptions(_ruling);\\n\\n        if (!_round.hasPaid[uint256(givenRuling)]) {\\n            // Allow to reimburse if funding was unsuccessful for this ruling option.\\n            amount = _round.contributions[_contributor][uint256(givenRuling)];\\n        } else {\\n            // Funding was successful for this ruling option.\\n            if (_ruling == _finalRuling) {\\n                // This ruling option is the ultimate winner.\\n                amount = _round.totalPerRuling[uint256(givenRuling)] > 0\\n                    ? (_round.contributions[_contributor][uint256(givenRuling)] * _round.totalClaimableAfterExpenses) /\\n                        _round.totalPerRuling[uint256(givenRuling)]\\n                    : 0;\\n            } else if (!_round.hasPaid[uint256(RulingOptions(_finalRuling))]) {\\n                // The ultimate winner was not funded in this round. Contributions discounting the appeal fee are reimbursed proportionally.\\n                amount =\\n                    (_round.contributions[_contributor][uint256(givenRuling)] * _round.totalClaimableAfterExpenses) /\\n                    (_round.totalPerRuling[uint256(RulingOptions.ChallengeFailed)] +\\n                        _round.totalPerRuling[uint256(RulingOptions.Debunked)]);\\n            }\\n        }\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function getRoundInfo(uint256 _disputeID, uint256 _round)\\n        external\\n        view\\n        override\\n        returns (\\n            bool[NUMBER_OF_RULING_OPTIONS + 1] memory hasPaid,\\n            uint256[NUMBER_OF_RULING_OPTIONS + 1] memory totalPerRuling,\\n            uint256 totalClaimableAfterExpenses\\n        )\\n    {\\n        Round storage round = disputes[_disputeID].rounds[_round];\\n        return (round.hasPaid, round.totalPerRuling, round.totalClaimableAfterExpenses);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function getLastRoundWinner(uint256 _disputeID) public view override returns (uint256) {\\n        return ARBITRATOR.currentRuling(_disputeID);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function getAppealPeriod(uint256 _disputeID, RulingOptions _ruling)\\n        external\\n        view\\n        override\\n        returns (uint256, uint256)\\n    {\\n        (uint256 appealWindowStart, uint256 appealWindowEnd) = ARBITRATOR.appealPeriod(_disputeID);\\n        uint256 loserAppealWindowEnd = appealWindowStart +\\n            (((appealWindowEnd - appealWindowStart) * LOSER_APPEAL_PERIOD_MULTIPLIER) / MULTIPLIER_DENOMINATOR);\\n\\n        bool isWinner = RulingOptions(getLastRoundWinner(_disputeID)) == _ruling;\\n        return isWinner ? (appealWindowStart, appealWindowEnd) : (appealWindowStart, loserAppealWindowEnd);\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function getReturnOfInvestmentRatio(RulingOptions _ruling, RulingOptions _lastRoundWinner)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        bool isWinner = _lastRoundWinner == _ruling;\\n        uint256 DECIMAL_PRECISION = 1000;\\n        uint256 multiplier = isWinner ? WINNER_STAKE_MULTIPLIER : LOSER_STAKE_MULTIPLIER;\\n        return (((WINNER_STAKE_MULTIPLIER + LOSER_STAKE_MULTIPLIER + MULTIPLIER_DENOMINATOR) * DECIMAL_PRECISION) /\\n            (multiplier + MULTIPLIER_DENOMINATOR));\\n    }\\n\\n    /// @inheritdoc ITruthPost\\n    function getAmountRemainsToBeRaised(uint256 _disputeID, RulingOptions _ruling)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        DisputeData storage dispute = disputes[_disputeID];\\n        uint256 lastRoundIndex = dispute.rounds.length - 1;\\n        Round storage lastRound = dispute.rounds[lastRoundIndex];\\n\\n        bool isWinner = RulingOptions(getLastRoundWinner(_disputeID)) == _ruling;\\n        uint256 multiplier = isWinner ? WINNER_STAKE_MULTIPLIER : LOSER_STAKE_MULTIPLIER;\\n\\n        uint256 raisedSoFar = lastRound.totalPerRuling[uint256(_ruling)];\\n        uint256 basicCost = ARBITRATOR.appealCost(_disputeID, categoryToArbitratorExtraData[dispute.articleCategory]);\\n        uint256 totalCost = basicCost + ((basicCost * (multiplier)) / MULTIPLIER_DENOMINATOR);\\n\\n        return totalCost - raisedSoFar;\\n    }\\n\\n}\\n\",\"keccak256\":\"0x81053363e9d6d6641ea1580a7b2fd7671c6cf255c3732b9a5dfb48cd45dd9b37\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 298,
                "contract": "contracts/TruthPost.sol:TruthPost",
                "label": "isPublishingEnabled",
                "offset": 0,
                "slot": "0",
                "type": "t_bool"
              },
              {
                "astId": 300,
                "contract": "contracts/TruthPost.sol:TruthPost",
                "label": "TREASURY",
                "offset": 1,
                "slot": "0",
                "type": "t_address_payable"
              },
              {
                "astId": 302,
                "contract": "contracts/TruthPost.sol:TruthPost",
                "label": "treasuryBalance",
                "offset": 0,
                "slot": "1",
                "type": "t_uint256"
              },
              {
                "astId": 311,
                "contract": "contracts/TruthPost.sol:TruthPost",
                "label": "LOSER_APPEAL_PERIOD_MULTIPLIER",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 313,
                "contract": "contracts/TruthPost.sol:TruthPost",
                "label": "ARTICLE_WITHDRAWAL_TIMELOCK",
                "offset": 0,
                "slot": "3",
                "type": "t_uint256"
              },
              {
                "astId": 315,
                "contract": "contracts/TruthPost.sol:TruthPost",
                "label": "WINNER_STAKE_MULTIPLIER",
                "offset": 0,
                "slot": "4",
                "type": "t_uint256"
              },
              {
                "astId": 317,
                "contract": "contracts/TruthPost.sol:TruthPost",
                "label": "LOSER_STAKE_MULTIPLIER",
                "offset": 0,
                "slot": "5",
                "type": "t_uint256"
              },
              {
                "astId": 320,
                "contract": "contracts/TruthPost.sol:TruthPost",
                "label": "challengeTaxRate",
                "offset": 0,
                "slot": "6",
                "type": "t_uint256"
              },
              {
                "astId": 713,
                "contract": "contracts/TruthPost.sol:TruthPost",
                "label": "categoryCounter",
                "offset": 0,
                "slot": "7",
                "type": "t_uint8"
              },
              {
                "astId": 720,
                "contract": "contracts/TruthPost.sol:TruthPost",
                "label": "admin",
                "offset": 1,
                "slot": "7",
                "type": "t_address_payable"
              },
              {
                "astId": 783,
                "contract": "contracts/TruthPost.sol:TruthPost",
                "label": "categoryToArbitratorExtraData",
                "offset": 0,
                "slot": "8",
                "type": "t_array(t_bytes_storage)64_storage"
              },
              {
                "astId": 788,
                "contract": "contracts/TruthPost.sol:TruthPost",
                "label": "articleStorage",
                "offset": 0,
                "slot": "72",
                "type": "t_mapping(t_uint80,t_struct(Article)779_storage)"
              },
              {
                "astId": 793,
                "contract": "contracts/TruthPost.sol:TruthPost",
                "label": "disputes",
                "offset": 0,
                "slot": "73",
                "type": "t_mapping(t_uint256,t_struct(DisputeData)747_storage)"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_address_payable": {
                "encoding": "inplace",
                "label": "address payable",
                "numberOfBytes": "20"
              },
              "t_array(t_bool)3_storage": {
                "base": "t_bool",
                "encoding": "inplace",
                "label": "bool[3]",
                "numberOfBytes": "32"
              },
              "t_array(t_bytes_storage)64_storage": {
                "base": "t_bytes_storage",
                "encoding": "inplace",
                "label": "bytes[64]",
                "numberOfBytes": "2048"
              },
              "t_array(t_struct(Round)770_storage)dyn_storage": {
                "base": "t_struct(Round)770_storage",
                "encoding": "dynamic_array",
                "label": "struct TruthPost.Round[]",
                "numberOfBytes": "32"
              },
              "t_array(t_uint256)3_storage": {
                "base": "t_uint256",
                "encoding": "inplace",
                "label": "uint256[3]",
                "numberOfBytes": "96"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_bytes_storage": {
                "encoding": "bytes",
                "label": "bytes",
                "numberOfBytes": "32"
              },
              "t_enum(RulingOptions)295": {
                "encoding": "inplace",
                "label": "enum ITruthPost.RulingOptions",
                "numberOfBytes": "1"
              },
              "t_mapping(t_address,t_array(t_uint256)3_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256[3])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)3_storage"
              },
              "t_mapping(t_uint256,t_struct(DisputeData)747_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => struct TruthPost.DisputeData)",
                "numberOfBytes": "32",
                "value": "t_struct(DisputeData)747_storage"
              },
              "t_mapping(t_uint80,t_struct(Article)779_storage)": {
                "encoding": "mapping",
                "key": "t_uint80",
                "label": "mapping(uint80 => struct TruthPost.Article)",
                "numberOfBytes": "32",
                "value": "t_struct(Article)779_storage"
              },
              "t_struct(Article)779_storage": {
                "encoding": "inplace",
                "label": "struct TruthPost.Article",
                "members": [
                  {
                    "astId": 772,
                    "contract": "contracts/TruthPost.sol:TruthPost",
                    "label": "owner",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_address_payable"
                  },
                  {
                    "astId": 774,
                    "contract": "contracts/TruthPost.sol:TruthPost",
                    "label": "withdrawalPermittedAt",
                    "offset": 20,
                    "slot": "0",
                    "type": "t_uint32"
                  },
                  {
                    "astId": 776,
                    "contract": "contracts/TruthPost.sol:TruthPost",
                    "label": "bountyAmount",
                    "offset": 24,
                    "slot": "0",
                    "type": "t_uint56"
                  },
                  {
                    "astId": 778,
                    "contract": "contracts/TruthPost.sol:TruthPost",
                    "label": "category",
                    "offset": 31,
                    "slot": "0",
                    "type": "t_uint8"
                  }
                ],
                "numberOfBytes": "32"
              },
              "t_struct(DisputeData)747_storage": {
                "encoding": "inplace",
                "label": "struct TruthPost.DisputeData",
                "members": [
                  {
                    "astId": 733,
                    "contract": "contracts/TruthPost.sol:TruthPost",
                    "label": "challenger",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_address_payable"
                  },
                  {
                    "astId": 736,
                    "contract": "contracts/TruthPost.sol:TruthPost",
                    "label": "outcome",
                    "offset": 20,
                    "slot": "0",
                    "type": "t_enum(RulingOptions)295"
                  },
                  {
                    "astId": 738,
                    "contract": "contracts/TruthPost.sol:TruthPost",
                    "label": "articleCategory",
                    "offset": 21,
                    "slot": "0",
                    "type": "t_uint8"
                  },
                  {
                    "astId": 740,
                    "contract": "contracts/TruthPost.sol:TruthPost",
                    "label": "resolved",
                    "offset": 22,
                    "slot": "0",
                    "type": "t_bool"
                  },
                  {
                    "astId": 742,
                    "contract": "contracts/TruthPost.sol:TruthPost",
                    "label": "articleStorageAddress",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint80"
                  },
                  {
                    "astId": 746,
                    "contract": "contracts/TruthPost.sol:TruthPost",
                    "label": "rounds",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_array(t_struct(Round)770_storage)dyn_storage"
                  }
                ],
                "numberOfBytes": "96"
              },
              "t_struct(Round)770_storage": {
                "encoding": "inplace",
                "label": "struct TruthPost.Round",
                "members": [
                  {
                    "astId": 755,
                    "contract": "contracts/TruthPost.sol:TruthPost",
                    "label": "contributions",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_mapping(t_address,t_array(t_uint256)3_storage)"
                  },
                  {
                    "astId": 761,
                    "contract": "contracts/TruthPost.sol:TruthPost",
                    "label": "hasPaid",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_array(t_bool)3_storage"
                  },
                  {
                    "astId": 767,
                    "contract": "contracts/TruthPost.sol:TruthPost",
                    "label": "totalPerRuling",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_array(t_uint256)3_storage"
                  },
                  {
                    "astId": 769,
                    "contract": "contracts/TruthPost.sol:TruthPost",
                    "label": "totalClaimableAfterExpenses",
                    "offset": 0,
                    "slot": "5",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "192"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              },
              "t_uint32": {
                "encoding": "inplace",
                "label": "uint32",
                "numberOfBytes": "4"
              },
              "t_uint56": {
                "encoding": "inplace",
                "label": "uint56",
                "numberOfBytes": "7"
              },
              "t_uint8": {
                "encoding": "inplace",
                "label": "uint8",
                "numberOfBytes": "1"
              },
              "t_uint80": {
                "encoding": "inplace",
                "label": "uint80",
                "numberOfBytes": "10"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "appealFee(uint256)": {
                "notice": "Get required appeal fee and deposit."
              },
              "challenge(uint80)": {
                "notice": "Challenge article."
              },
              "challengeFee(uint80)": {
                "notice": "Get required challenge fee."
              },
              "changeAdmin(address)": {
                "notice": "Changes the administrator of the contract to a new address."
              },
              "changeArticleWithdrawalTimelock(uint256)": {
                "notice": "Update the timelock for the article withdtrawal."
              },
              "changeLoserAppealPeriodMultiplier(uint256)": {
                "notice": "Update the appeal window for the loser."
              },
              "changeLoserStakeMultiplier(uint256)": {
                "notice": "Update the arbitration cost for the loser."
              },
              "changeTreasury(address)": {
                "notice": "Changes the treasury address of the contract to a new address."
              },
              "changeWinnerStakeMultiplier(uint256)": {
                "notice": "Update the arbitration cost for the winner."
              },
              "findVacantStorageSlot(uint80)": {
                "notice": "Find a vacant storage slot for an article."
              },
              "fundAppeal(uint256,uint8)": {
                "notice": "Fund a crowdfunding appeal."
              },
              "getAmountRemainsToBeRaised(uint256,uint8)": {
                "notice": "Learn about how much more needs to be raised for given ruling option."
              },
              "getAppealPeriod(uint256,uint8)": {
                "notice": "Get appeal time window."
              },
              "getLastRoundWinner(uint256)": {
                "notice": "Get last round's winner."
              },
              "getReturnOfInvestmentRatio(uint8,uint8)": {
                "notice": "Get return of investment ratio."
              },
              "getRoundInfo(uint256,uint256)": {
                "notice": "Learn about given dispute round."
              },
              "getTotalWithdrawableAmount(uint256,address)": {
                "notice": "Learn the total amount of appeal crowdfunding balance available."
              },
              "increaseBounty(uint80)": {
                "notice": "Increase bounty."
              },
              "initializeArticle(string,uint8,uint80)": {
                "notice": "Publish an article."
              },
              "initiateWithdrawal(uint80)": {
                "notice": "Initiate unpublishing process."
              },
              "newCategory(string,bytes)": {
                "notice": "Initialize a category."
              },
              "rule(uint256,uint256)": {
                "notice": "Execute a ruling"
              },
              "submitEvidence(uint256,string)": {
                "notice": "Submit an evidence."
              },
              "switchPublishingLock()": {
                "notice": "Switches publishing lock."
              },
              "transferBalanceToTreasury()": {
                "notice": "Transfers the balance of the contract to the treasury."
              },
              "transferOwnership(uint80,address)": {
                "notice": "Transfer ownership of an article."
              },
              "updateChallengeTaxRate(uint256)": {
                "notice": "Updates the challenge tax rate of the contract to a new value."
              },
              "withdraw(uint80)": {
                "notice": "Execute unpublishing."
              },
              "withdrawFeesAndRewards(uint256,address,uint256,uint8)": {
                "notice": "Withdraw appeal crowdfunding balance."
              },
              "withdrawFeesAndRewardsForAllRounds(uint256,address,uint8)": {
                "notice": "Withdraw appeal crowdfunding balance for given ruling option for all rounds."
              },
              "withdrawFeesAndRewardsForAllRoundsAndAllRulings(uint256,address)": {
                "notice": "Withdraw appeal crowdfunding balance for all ruling options and all rounds."
              },
              "withdrawFeesAndRewardsForGivenPositions(uint256,address,uint256[][])": {
                "notice": "Withdraw appeal crowdfunding balance for given ruling option and for given rounds."
              }
            },
            "notice": "Smart contract for a type of curation, where submitted items are on hold until they are withdrawn and the amount of security deposits are determined by submitters.",
            "version": 1
          }
        }
      },
      "contracts/for-testing-purposes/Arbitrator.sol": {
        "Arbitrator": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "contract IArbitrable",
                  "name": "_arbitrable",
                  "type": "address"
                }
              ],
              "name": "AppealDecision",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "contract IArbitrable",
                  "name": "_arbitrable",
                  "type": "address"
                }
              ],
              "name": "AppealPossible",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "contract IArbitrable",
                  "name": "_arbitrable",
                  "type": "address"
                }
              ],
              "name": "DisputeCreation",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_extraData",
                  "type": "bytes"
                }
              ],
              "name": "appeal",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "appealCost",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                }
              ],
              "name": "appealPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "arbitrationCost",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_choices",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_extraData",
                  "type": "bytes"
                }
              ],
              "name": "createDispute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "disputeID",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                }
              ],
              "name": "currentRuling",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "ruling",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                }
              ],
              "name": "disputeStatus",
              "outputs": [
                {
                  "internalType": "enum IArbitrator.DisputeStatus",
                  "name": "status",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "disputes",
              "outputs": [
                {
                  "internalType": "contract IArbitrable",
                  "name": "arbitrated",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "appealDeadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "numberOfRulingOptions",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "ruling",
                  "type": "uint256"
                },
                {
                  "internalType": "enum IArbitrator.DisputeStatus",
                  "name": "status",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                }
              ],
              "name": "executeRuling",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeID",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_ruling",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_appealWindow",
                  "type": "uint256"
                }
              ],
              "name": "giveRuling",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "governor",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_arbitrationPrice",
                  "type": "uint256"
                }
              ],
              "name": "setArbitrationPrice",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "DON'T USE ON PRODUCTION.",
            "kind": "dev",
            "methods": {
              "appeal(uint256,bytes)": {
                "details": "Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.",
                "params": {
                  "_disputeID": "ID of the dispute to be appealed.",
                  "_extraData": "Can be used to give extra info on the appeal."
                }
              },
              "appealPeriod(uint256)": {
                "details": "Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).",
                "params": {
                  "_disputeID": "ID of the dispute."
                },
                "returns": {
                  "end": "The end of the period.",
                  "start": "The start of the period."
                }
              },
              "createDispute(uint256,bytes)": {
                "details": "Create a dispute. Must be called by the arbitrable contract. Must be paid at least arbitrationCost(_extraData).",
                "params": {
                  "_choices": "Amount of choices the arbitrator can make in this dispute.",
                  "_extraData": "Can be used to give additional info on the dispute to be created."
                },
                "returns": {
                  "disputeID": "ID of the dispute created."
                }
              },
              "currentRuling(uint256)": {
                "details": "Return the current ruling of a dispute. This is useful for parties to know if they should appeal.",
                "params": {
                  "_disputeID": "ID of the dispute."
                },
                "returns": {
                  "ruling": "The ruling which has been given or the one which will be given if there is no appeal."
                }
              },
              "disputeStatus(uint256)": {
                "details": "Return the status of a dispute.",
                "params": {
                  "_disputeID": "ID of the dispute to rule."
                },
                "returns": {
                  "status": "The status of the dispute."
                }
              }
            },
            "title": "An IArbitrator implemetation for testing purposes.",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052600080546001600160a01b03191633179055670de0b6b3a764000060015534801561002e57600080fd5b50610e258061003e6000396000f3fe6080604052600436106100c75760003560e01c8063afe15cfb11610074578063f23f16e61161004e578063f23f16e614610232578063f7434ea914610252578063ffb43c481461027457600080fd5b8063afe15cfb146101ca578063bc97d0f3146101ff578063c13517e11461021f57600080fd5b806349912f88116100a557806349912f8814610164578063564a565d146101795780638bb04875146101aa57600080fd5b80630c340a24146100cc57806310f169e8146101095780631c3db16d14610136575b600080fd5b3480156100d857600080fd5b506000546100ec906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011557600080fd5b50610129610124366004610ba5565b610294565b6040516101009190610bf6565b34801561014257600080fd5b50610156610151366004610ba5565b610349565b604051908152602001610100565b610177610172366004610ca7565b610377565b005b34801561018557600080fd5b50610199610194366004610ba5565b61054c565b604051610100959493929190610cee565b3480156101b657600080fd5b506101776101c5366004610ba5565b61059a565b3480156101d657600080fd5b506101ea6101e5366004610ba5565b610734565b60408051928352602083019190915201610100565b34801561020b57600080fd5b5061017761021a366004610d2b565b61076c565b61015661022d366004610ca7565b61093d565b34801561023e57600080fd5b5061015661024d366004610ca7565b610aef565b34801561025e57600080fd5b5061015661026d366004610d57565b5060015490565b34801561028057600080fd5b5061017761028f366004610ba5565b610b3a565b600080600283815481106102aa576102aa610d94565b6000918252602090912060059091020190506001600284815481106102d1576102d1610d94565b600091825260209091206004600590920201015460ff1660028111156102f9576102f9610bbe565b14801561030a575080600101544210155b156103185750600292915050565b6002838154811061032b5761032b610d94565b600091825260209091206004600590920201015460ff169392505050565b60006002828154811061035e5761035e610d94565b9060005260206000209060050201600301549050919050565b60006002838154811061038c5761038c610d94565b9060005260206000209060050201905060006103a88484610aef565b90506001600483015460ff1660028111156103c5576103c5610bbe565b146104175760405162461bcd60e51b815260206004820152601f60248201527f5468652064697370757465206d7573742062652061707065616c61626c652e0060448201526064015b60405180910390fd5b816001015442106104905760405162461bcd60e51b815260206004820152603a60248201527f5468652061707065616c206d757374206f63637572206265666f72652074686560448201527f20656e64206f66207468652061707065616c20706572696f642e000000000000606482015260840161040e565b803410156105065760405162461bcd60e51b815260206004820152602660248201527f56616c7565206973206c657373207468616e207265717569726564206170706560448201527f616c206665650000000000000000000000000000000000000000000000000000606482015260840161040e565b60006001830181905560048301805460ff19169055604051339186917f9c9b64db9e130f48381bf697abf638e73117dbfbfd7a4484f2da3ba188f4187d9190a350505050565b6002818154811061055c57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909160ff1685565b6000600282815481106105af576105af610d94565b6000918252602090912060059091020190506001600482015460ff1660028111156105dc576105dc610bbe565b146106295760405162461bcd60e51b815260206004820152601f60248201527f5468652064697370757465206d7573742062652061707065616c61626c652e00604482015260640161040e565b80600101544210156106a35760405162461bcd60e51b815260206004820152603f60248201527f5468652064697370757465206d7573742062652065786563757465642061667460448201527f6572206974732061707065616c20706572696f642068617320656e6465642e00606482015260840161040e565b6004818101805460ff19166002179055815460038301546040517f311a6c5600000000000000000000000000000000000000000000000000000000815292830185905260248301526001600160a01b03169063311a6c5690604401600060405180830381600087803b15801561071857600080fd5b505af115801561072c573d6000803e3d6000fd5b505050505050565b60008060006002848154811061074c5761074c610d94565b906000526020600020906005020190504281600101549250925050915091565b6000546001600160a01b031633146107d25760405162461bcd60e51b815260206004820152602360248201527f43616e206f6e6c792062652063616c6c65642062792074686520676f7665726e60448201526237b91760e91b606482015260840161040e565b6000600284815481106107e7576107e7610d94565b90600052602060002090600502019050806002015483111561084b5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c69642072756c696e672e0000000000000000000000000000000000604482015260640161040e565b6000600482015460ff16600281111561086657610866610bbe565b146108d95760405162461bcd60e51b815260206004820152602c60248201527f5468652064697370757465206d7573742062652077616974696e6720666f722060448201527f6172626974726174696f6e2e0000000000000000000000000000000000000000606482015260840161040e565b6003810183905560048101805460ff191660011790556108f98242610dc0565b600182015580546040516001600160a01b039091169085907fa5d41b970d849372be1da1481ffd78d162bfe57a7aa2fe4e5fb73481fa5ac24f90600090a350505050565b60008061094960015490565b9050803410156109c15760405162461bcd60e51b815260206004820152602c60248201527f56616c7565206973206c657373207468616e207265717569726564206172626960448201527f74726174696f6e206665652e0000000000000000000000000000000000000000606482015260840161040e565b60026040518060a00160405280336001600160a01b03168152602001600081526020018681526020016000815260200160006002811115610a0457610a04610bbe565b90528154600180820184556000938452602093849020835160059093020180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0390931692909217825592820151818401556040820151600280830191909155606083015160038301556080830151600483018054949593949193909260ff19909216918490811115610aa257610aa2610bbe565b021790555050600254610ab89150600190610dd8565b604051909250339083907f141dfc18aa6a56fc816f44f0e9e2f1ebc92b15ab167770e17db5b084c10ed99590600090a35092915050565b6000610b316040518060400160405280600681526020017f554e5553454400000000000000000000000000000000000000000000000000008152505060015490565b90505b92915050565b6000546001600160a01b03163314610ba05760405162461bcd60e51b815260206004820152602360248201527f43616e206f6e6c792062652063616c6c65642062792074686520676f7665726e60448201526237b91760e91b606482015260840161040e565b600155565b600060208284031215610bb757600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60038110610bf257634e487b7160e01b600052602160045260246000fd5b9052565b60208101610b348284610bd4565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c2b57600080fd5b813567ffffffffffffffff80821115610c4657610c46610c04565b604051601f8301601f19908116603f01168101908282118183101715610c6e57610c6e610c04565b81604052838152866020858801011115610c8757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610cba57600080fd5b82359150602083013567ffffffffffffffff811115610cd857600080fd5b610ce485828601610c1a565b9150509250929050565b600060a0820190506001600160a01b0387168252856020830152846040830152836060830152610d216080830184610bd4565b9695505050505050565b600080600060608486031215610d4057600080fd5b505081359360208301359350604090920135919050565b600060208284031215610d6957600080fd5b813567ffffffffffffffff811115610d8057600080fd5b610d8c84828501610c1a565b949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610dd357610dd3610daa565b500190565b600082821015610dea57610dea610daa565b50039056fea2646970667358221220472c92e1d2c5e786039b79d3630162920146d20f3d196fb944eeaf7ad122960864736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE25 DUP1 PUSH2 0x3E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFE15CFB GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xF23F16E6 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xF23F16E6 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xF7434EA9 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xFFB43C48 EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAFE15CFB EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xBC97D0F3 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xC13517E1 EQ PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x49912F88 GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0x49912F88 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x564A565D EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x8BB04875 EQ PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC340A24 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x10F169E8 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x1C3DB16D EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xEC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xBF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH2 0x156 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0xAEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0xD57 JUMP JUMPDEST POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH2 0x2AA PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2D1 JUMPI PUSH2 0x2D1 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2F9 JUMPI PUSH2 0x2F9 PUSH2 0xBBE JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x30A JUMPI POP DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x318 JUMPI POP PUSH1 0x2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x32B JUMPI PUSH2 0x32B PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x35E JUMPI PUSH2 0x35E PUSH2 0xD94 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x38C JUMPI PUSH2 0x38C PUSH2 0xD94 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0x3A8 DUP5 DUP5 PUSH2 0xAEF JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3C5 JUMPI PUSH2 0x3C5 PUSH2 0xBBE JUMP JUMPDEST EQ PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652064697370757465206D7573742062652061707065616C61626C652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP LT PUSH2 0x490 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652061707065616C206D757374206F63637572206265666F726520746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20656E64206F66207468652061707065616C20706572696F642E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0x506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C7565206973206C657373207468616E2072657175697265642061707065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C206665650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 DUP7 SWAP2 PUSH32 0x9C9B64DB9E130F48381BF697ABF638E73117DBFBFD7A4484F2DA3BA188F4187D SWAP2 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5AF JUMPI PUSH2 0x5AF PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5DC JUMPI PUSH2 0x5DC PUSH2 0xBBE JUMP JUMPDEST EQ PUSH2 0x629 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652064697370757465206D7573742062652061707065616C61626C652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652064697370757465206D75737420626520657865637574656420616674 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572206974732061707065616C20706572696F642068617320656E6465642E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE DUP2 SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x311A6C5600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP3 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x311A6C56 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x72C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x74C JUMPI PUSH2 0x74C PUSH2 0xD94 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP TIMESTAMP DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792062652063616C6C65642062792074686520676F7665726E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x37B917 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x7E7 JUMPI PUSH2 0x7E7 PUSH2 0xD94 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD DUP4 GT ISZERO PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642072756C696E672E0000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x866 JUMPI PUSH2 0x866 PUSH2 0xBBE JUMP JUMPDEST EQ PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652064697370757465206D7573742062652077616974696E6720666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6172626974726174696F6E2E0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x8F9 DUP3 TIMESTAMP PUSH2 0xDC0 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH32 0xA5D41B970D849372BE1DA1481FFD78D162BFE57A7AA2FE4E5FB73481FA5AC24F SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x949 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C7565206973206C657373207468616E2072657175697265642061726269 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74726174696F6E206665652E0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA04 JUMPI PUSH2 0xA04 PUSH2 0xBBE JUMP JUMPDEST SWAP1 MSTORE DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP1 SWAP4 MUL ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE SWAP3 DUP3 ADD MLOAD DUP2 DUP5 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD DUP1 SLOAD SWAP5 SWAP6 SWAP4 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0xAA2 JUMPI PUSH2 0xAA2 PUSH2 0xBBE JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH1 0x2 SLOAD PUSH2 0xAB8 SWAP2 POP PUSH1 0x1 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP3 POP CALLER SWAP1 DUP4 SWAP1 PUSH32 0x141DFC18AA6A56FC816F44F0E9E2F1EBC92B15AB167770E17DB5B084C10ED995 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB31 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x554E555345440000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792062652063616C6C65642062792074686520676F7665726E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x37B917 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xBF2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xB34 DUP3 DUP5 PUSH2 0xBD4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC46 JUMPI PUSH2 0xC46 PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC6E JUMPI PUSH2 0xC6E PUSH2 0xC04 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xC87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE4 DUP6 DUP3 DUP7 ADD PUSH2 0xC1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xD21 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xBD4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD8C DUP5 DUP3 DUP6 ADD PUSH2 0xC1A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDD3 JUMPI PUSH2 0xDD3 PUSH2 0xDAA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xDEA JUMPI PUSH2 0xDEA PUSH2 0xDAA JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0x2C SWAP3 0xE1 0xD2 0xC5 0xE7 DUP7 SUB SWAP12 PUSH26 0xD3630162920146D20F3D196FB944EEAF7AD122960864736F6C63 NUMBER STOP ADDMOD EXP STOP CALLER ",
              "sourceMap": "265:3837:6:-:0;;;304:36;;;-1:-1:-1;;;;;;304:36:6;330:10;304:36;;;380:25;304:36;344:61;265:3837;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@appealCost_2931": {
                  "entryPoint": 2799,
                  "id": 2931,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@appealPeriod_3246": {
                  "entryPoint": 1844,
                  "id": 3246,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "@appeal_3121": {
                  "entryPoint": 887,
                  "id": 3121,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@arbitrationCost_2916": {
                  "entryPoint": null,
                  "id": 2916,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@createDispute_2987": {
                  "entryPoint": 2365,
                  "id": 2987,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@currentRuling_3222": {
                  "entryPoint": 841,
                  "id": 3222,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@disputeStatus_3208": {
                  "entryPoint": 660,
                  "id": 3208,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@disputes_2893": {
                  "entryPoint": 1356,
                  "id": 2893,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@executeRuling_3169": {
                  "entryPoint": 1434,
                  "id": 3169,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@giveRuling_3051": {
                  "entryPoint": 1900,
                  "id": 3051,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@governor_2861": {
                  "entryPoint": null,
                  "id": 2861,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@setArbitrationPrice_2905": {
                  "entryPoint": 2874,
                  "id": 2905,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_bytes": {
                  "entryPoint": 3098,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes_memory_ptr": {
                  "entryPoint": 3415,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 2981,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256t_bytes_memory_ptr": {
                  "entryPoint": 3239,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256t_uint256t_uint256": {
                  "entryPoint": 3371,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_encode_enum_DisputeStatus": {
                  "entryPoint": 3028,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IArbitrable_$153_t_uint256_t_uint256_t_uint256_t_enum$_DisputeStatus_$161__to_t_address_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed": {
                  "entryPoint": 3310,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_enum$_DisputeStatus_$161__to_t_uint8__fromStack_reversed": {
                  "entryPoint": 3062,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_0a67387a01b638629562ce413604ca06df839cc408aaf6c072640f1a5c4f2346__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_4694def74d735a2c889563bbe682a7dedbe5ed436ba455a7b4f1b1153e6eb3c0__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_4ffb16c8c515bb19f47e2c39c4abe69591900df2f6712a42bdbaeaacd81aaa88__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_785e30534d9aba417fa2efee2cef6269679d346420799f1ee0b4c1d9e65f4259__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_ed65b2f49f93967b3a006e2788127dd02ebf255edcbc59f8b4e80c9299e6eca3__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 3520,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 3544,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 3498,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x21": {
                  "entryPoint": 3006,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 3476,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 3076,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:7940:7",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "115:125:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "125:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "182:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "190:42:7",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "178:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "178:55:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "160:74:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "160:74:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "84:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "95:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "106:4:7",
                            "type": ""
                          }
                        ],
                        "src": "14:226:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "315:110:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "361:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "370:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "373:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "363:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "363:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "363:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "336:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "345:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "332:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "332:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "357:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "328:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "328:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "325:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "386:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "409:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "396:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "396:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "386:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "281:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "292:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "304:6:7",
                            "type": ""
                          }
                        ],
                        "src": "245:180:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "462:152:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "479:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "482:77:7",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "472:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "472:88:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "472:88:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "576:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "579:4:7",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "569:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "569:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "569:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "600:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "603:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "593:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "593:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "593:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "430:184:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "674:243:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "716:168:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "737:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "740:77:7",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "730:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "730:88:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "730:88:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "838:1:7",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "841:4:7",
                                          "type": "",
                                          "value": "0x21"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "831:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "831:15:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "831:15:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "866:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "869:4:7",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "859:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "859:15:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "859:15:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "697:5:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "704:1:7",
                                        "type": "",
                                        "value": "3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "694:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "694:12:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "687:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "687:20:7"
                              },
                              "nodeType": "YulIf",
                              "src": "684:200:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "900:3:7"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "905:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "893:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "893:18:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "893:18:7"
                            }
                          ]
                        },
                        "name": "abi_encode_enum_DisputeStatus",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "658:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "665:3:7",
                            "type": ""
                          }
                        ],
                        "src": "619:298:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1038:99:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1048:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1060:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1071:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1056:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1056:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1048:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1113:6:7"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1121:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_enum_DisputeStatus",
                                  "nodeType": "YulIdentifier",
                                  "src": "1083:29:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1083:48:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1083:48:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_enum$_DisputeStatus_$161__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1007:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1018:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1029:4:7",
                            "type": ""
                          }
                        ],
                        "src": "922:215:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1243:76:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1253:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1265:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1276:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1261:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1261:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1253:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1295:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1306:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1288:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1288:25:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1288:25:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1212:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1223:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1234:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1142:177:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1356:152:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1373:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1376:77:7",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1366:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1366:88:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1366:88:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1470:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1473:4:7",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1463:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1463:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1463:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1494:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1497:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1487:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1487:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1487:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1324:184:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1565:666:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1614:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1623:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1626:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1616:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1616:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1616:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1593:6:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1601:4:7",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1589:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1589:17:7"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1608:3:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1585:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1585:27:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1578:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1578:35:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1575:55:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1639:30:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1662:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1649:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1649:20:7"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1643:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1678:28:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1688:18:7",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "1682:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1729:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1731:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1731:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1731:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1721:2:7"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1725:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1718:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1718:10:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1715:36:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1760:17:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1774:2:7",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1770:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1770:7:7"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "1764:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1786:23:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1806:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1800:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1800:9:7"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1790:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1818:71:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1840:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1864:2:7"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1868:4:7",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1860:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1860:13:7"
                                              },
                                              {
                                                "name": "_3",
                                                "nodeType": "YulIdentifier",
                                                "src": "1875:2:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "1856:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1856:22:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1880:2:7",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1852:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1852:31:7"
                                      },
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1885:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1848:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1848:40:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1836:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1836:53:7"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1822:10:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1948:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1950:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1950:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1950:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1907:10:7"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "1919:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1904:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1904:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1927:10:7"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1939:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1924:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1924:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "1901:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1901:46:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1898:72:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1986:2:7",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1990:10:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1979:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1979:22:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1979:22:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2017:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2025:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2010:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2010:18:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2010:18:7"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2076:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2085:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2088:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2078:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2078:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2078:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2051:6:7"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "2059:2:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2047:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2047:15:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2064:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2043:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2043:26:7"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "2071:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2040:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2040:35:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2037:55:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2118:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2126:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2114:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2114:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2137:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2145:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2133:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2133:17:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2152:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "2101:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2101:54:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2101:54:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "2179:6:7"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "2187:2:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2175:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2175:15:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2192:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2171:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2171:26:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2199:1:7",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2164:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2164:37:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2164:37:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2210:15:7",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2219:6:7"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "2210:5:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_bytes",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1539:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1547:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "1555:5:7",
                            "type": ""
                          }
                        ],
                        "src": "1513:718:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2332:292:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2378:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2387:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2390:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2380:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2380:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2380:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2353:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2362:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2349:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2349:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2374:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2345:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2345:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2342:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2403:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2426:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2413:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2413:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2403:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2445:46:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2476:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2487:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2472:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2472:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2459:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2459:32:7"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "2449:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2534:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2543:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2546:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2536:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2536:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2536:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2506:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2514:18:7",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2503:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2503:30:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2500:50:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2559:59:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2590:9:7"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2601:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2586:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2586:22:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2610:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "2569:16:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2569:49:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2559:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2290:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2301:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2313:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2321:6:7",
                            "type": ""
                          }
                        ],
                        "src": "2236:388:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2876:322:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2886:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2898:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2909:3:7",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2894:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2894:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2886:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2929:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2944:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2952:42:7",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2940:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2940:55:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2922:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2922:74:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2922:74:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3016:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3027:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3012:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3012:18:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3032:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3005:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3005:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3005:34:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3059:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3070:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3055:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3055:18:7"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "3075:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3048:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3048:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3048:34:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3102:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3113:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3098:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3098:18:7"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "3118:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3091:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3091:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3091:34:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "3164:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3176:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3187:3:7",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3172:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3172:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_enum_DisputeStatus",
                                  "nodeType": "YulIdentifier",
                                  "src": "3134:29:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3134:58:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3134:58:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IArbitrable_$153_t_uint256_t_uint256_t_uint256_t_enum$_DisputeStatus_$161__to_t_address_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2813:9:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "2824:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2832:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2840:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2848:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2856:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2867:4:7",
                            "type": ""
                          }
                        ],
                        "src": "2629:569:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3332:119:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3342:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3354:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3365:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3350:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3350:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3342:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3384:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3395:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3377:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3377:25:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3377:25:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3422:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3433:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3418:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3418:18:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3438:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3411:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3411:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3411:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3293:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3304:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3312:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3323:4:7",
                            "type": ""
                          }
                        ],
                        "src": "3203:248:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3560:212:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3606:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3615:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3618:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3608:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3608:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3608:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3581:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3590:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3577:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3577:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3602:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3573:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3573:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "3570:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3631:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3654:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3641:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3641:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3631:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3673:42:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3700:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3711:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3696:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3696:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3683:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3683:32:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3673:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3724:42:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3751:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3762:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3747:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3747:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3734:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3734:32:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3724:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3510:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3521:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3533:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3541:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3549:6:7",
                            "type": ""
                          }
                        ],
                        "src": "3456:316:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3856:241:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3902:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3911:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3914:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3904:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3904:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3904:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3877:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3886:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3873:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3873:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3898:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3869:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3869:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "3866:52:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3927:37:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3954:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3941:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3941:23:7"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "3931:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4007:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4016:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4019:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4009:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4009:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4009:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3979:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3987:18:7",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3976:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3976:30:7"
                              },
                              "nodeType": "YulIf",
                              "src": "3973:50:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4032:59:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4063:9:7"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4074:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4059:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4059:22:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4083:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "4042:16:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4042:49:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4032:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3822:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3833:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3845:6:7",
                            "type": ""
                          }
                        ],
                        "src": "3777:320:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4134:152:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4151:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4154:77:7",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4144:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4144:88:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4144:88:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4248:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4251:4:7",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4241:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4241:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4241:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4272:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4275:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4265:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4265:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4265:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4102:184:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4465:181:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4482:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4493:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4475:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4475:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4475:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4516:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4527:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4512:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4512:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4532:2:7",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4505:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4505:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4505:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4555:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4566:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4551:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4551:18:7"
                                  },
                                  {
                                    "hexValue": "5468652064697370757465206d7573742062652061707065616c61626c652e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4571:33:7",
                                    "type": "",
                                    "value": "The dispute must be appealable."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4544:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4544:61:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4544:61:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4614:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4626:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4637:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4622:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4622:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4614:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4442:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4456:4:7",
                            "type": ""
                          }
                        ],
                        "src": "4291:355:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4825:248:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4842:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4853:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4835:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4835:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4835:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4876:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4887:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4872:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4872:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4892:2:7",
                                    "type": "",
                                    "value": "58"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4865:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4865:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4865:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4915:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4926:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4911:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4911:18:7"
                                  },
                                  {
                                    "hexValue": "5468652061707065616c206d757374206f63637572206265666f726520746865",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4931:34:7",
                                    "type": "",
                                    "value": "The appeal must occur before the"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4904:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4904:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4904:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4986:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4997:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4982:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4982:18:7"
                                  },
                                  {
                                    "hexValue": "20656e64206f66207468652061707065616c20706572696f642e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5002:28:7",
                                    "type": "",
                                    "value": " end of the appeal period."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4975:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4975:56:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4975:56:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5040:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5052:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5063:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5048:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5048:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5040:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_785e30534d9aba417fa2efee2cef6269679d346420799f1ee0b4c1d9e65f4259__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4802:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4816:4:7",
                            "type": ""
                          }
                        ],
                        "src": "4651:422:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5252:228:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5269:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5280:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5262:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5262:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5262:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5303:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5314:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5299:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5299:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5319:2:7",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5292:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5292:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5292:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5342:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5353:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5338:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5338:18:7"
                                  },
                                  {
                                    "hexValue": "56616c7565206973206c657373207468616e2072657175697265642061707065",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5358:34:7",
                                    "type": "",
                                    "value": "Value is less than required appe"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5331:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5331:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5331:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5413:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5424:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5409:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5409:18:7"
                                  },
                                  {
                                    "hexValue": "616c20666565",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5429:8:7",
                                    "type": "",
                                    "value": "al fee"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5402:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5402:36:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5402:36:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5447:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5459:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5470:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5455:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5455:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5447:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4694def74d735a2c889563bbe682a7dedbe5ed436ba455a7b4f1b1153e6eb3c0__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5229:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5243:4:7",
                            "type": ""
                          }
                        ],
                        "src": "5078:402:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5659:253:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5676:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5687:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5669:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5669:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5669:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5710:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5721:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5706:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5706:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5726:2:7",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5699:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5699:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5699:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5749:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5760:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5745:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5745:18:7"
                                  },
                                  {
                                    "hexValue": "5468652064697370757465206d75737420626520657865637574656420616674",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5765:34:7",
                                    "type": "",
                                    "value": "The dispute must be executed aft"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5738:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5738:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5738:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5820:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5831:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5816:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5816:18:7"
                                  },
                                  {
                                    "hexValue": "6572206974732061707065616c20706572696f642068617320656e6465642e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5836:33:7",
                                    "type": "",
                                    "value": "er its appeal period has ended."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5809:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5809:61:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5809:61:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5879:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5891:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5902:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5887:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5887:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5879:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4ffb16c8c515bb19f47e2c39c4abe69591900df2f6712a42bdbaeaacd81aaa88__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5636:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5650:4:7",
                            "type": ""
                          }
                        ],
                        "src": "5485:427:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6091:225:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6108:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6119:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6101:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6101:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6101:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6142:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6153:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6138:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6138:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6158:2:7",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6131:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6131:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6131:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6181:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6192:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6177:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6177:18:7"
                                  },
                                  {
                                    "hexValue": "43616e206f6e6c792062652063616c6c65642062792074686520676f7665726e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6197:34:7",
                                    "type": "",
                                    "value": "Can only be called by the govern"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6170:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6170:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6170:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6252:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6263:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6248:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6248:18:7"
                                  },
                                  {
                                    "hexValue": "6f722e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6268:5:7",
                                    "type": "",
                                    "value": "or."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6241:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6241:33:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6241:33:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6283:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6295:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6306:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6291:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6291:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6283:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0a67387a01b638629562ce413604ca06df839cc408aaf6c072640f1a5c4f2346__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6068:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6082:4:7",
                            "type": ""
                          }
                        ],
                        "src": "5917:399:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6495:165:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6512:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6523:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6505:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6505:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6505:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6546:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6557:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6542:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6542:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6562:2:7",
                                    "type": "",
                                    "value": "15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6535:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6535:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6535:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6585:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6596:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6581:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6581:18:7"
                                  },
                                  {
                                    "hexValue": "496e76616c69642072756c696e672e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6601:17:7",
                                    "type": "",
                                    "value": "Invalid ruling."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6574:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6574:45:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6574:45:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6628:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6640:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6651:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6636:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6636:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6628:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6472:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6486:4:7",
                            "type": ""
                          }
                        ],
                        "src": "6321:339:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6839:234:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6856:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6867:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6849:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6849:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6849:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6890:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6901:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6886:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6886:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6906:2:7",
                                    "type": "",
                                    "value": "44"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6879:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6879:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6879:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6929:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6940:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6925:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6925:18:7"
                                  },
                                  {
                                    "hexValue": "5468652064697370757465206d7573742062652077616974696e6720666f7220",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6945:34:7",
                                    "type": "",
                                    "value": "The dispute must be waiting for "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6918:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6918:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6918:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7000:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7011:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6996:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6996:18:7"
                                  },
                                  {
                                    "hexValue": "6172626974726174696f6e2e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7016:14:7",
                                    "type": "",
                                    "value": "arbitration."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6989:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6989:42:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6989:42:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7040:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7052:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7063:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7048:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7048:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7040:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6816:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6830:4:7",
                            "type": ""
                          }
                        ],
                        "src": "6665:408:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7110:152:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7127:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7130:77:7",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7120:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7120:88:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7120:88:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7224:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7227:4:7",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7217:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7217:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7217:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7248:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7251:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7241:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7241:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7241:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "7078:184:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7315:80:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7342:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "7344:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7344:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7344:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7331:1:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "7338:1:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "7334:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7334:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7328:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7328:13:7"
                              },
                              "nodeType": "YulIf",
                              "src": "7325:39:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7373:16:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7384:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "7387:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7380:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7380:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "7373:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "7298:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "7301:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "7307:3:7",
                            "type": ""
                          }
                        ],
                        "src": "7267:128:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7574:234:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7591:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7602:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7584:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7584:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7584:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7625:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7636:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7621:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7621:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7641:2:7",
                                    "type": "",
                                    "value": "44"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7614:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7614:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7614:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7664:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7675:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7660:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7660:18:7"
                                  },
                                  {
                                    "hexValue": "56616c7565206973206c657373207468616e2072657175697265642061726269",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7680:34:7",
                                    "type": "",
                                    "value": "Value is less than required arbi"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7653:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7653:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7653:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7735:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7746:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7731:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7731:18:7"
                                  },
                                  {
                                    "hexValue": "74726174696f6e206665652e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7751:14:7",
                                    "type": "",
                                    "value": "tration fee."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7724:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7724:42:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7724:42:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7775:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7787:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7798:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7783:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7783:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7775:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ed65b2f49f93967b3a006e2788127dd02ebf255edcbc59f8b4e80c9299e6eca3__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7551:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7565:4:7",
                            "type": ""
                          }
                        ],
                        "src": "7400:408:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7862:76:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7884:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "7886:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7886:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7886:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7878:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "7881:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7875:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7875:8:7"
                              },
                              "nodeType": "YulIf",
                              "src": "7872:34:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7915:17:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7927:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "7930:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "7923:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7923:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "7915:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "7844:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "7847:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "7853:4:7",
                            "type": ""
                          }
                        ],
                        "src": "7813:125:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_DisputeStatus(value, pos)\n    {\n        if iszero(lt(value, 3))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_enum$_DisputeStatus_$161__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_DisputeStatus(value0, headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_contract$_IArbitrable_$153_t_uint256_t_uint256_t_uint256_t_enum$_DisputeStatus_$161__to_t_address_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        abi_encode_enum_DisputeStatus(value4, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"The dispute must be appealable.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_785e30534d9aba417fa2efee2cef6269679d346420799f1ee0b4c1d9e65f4259__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"The appeal must occur before the\")\n        mstore(add(headStart, 96), \" end of the appeal period.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4694def74d735a2c889563bbe682a7dedbe5ed436ba455a7b4f1b1153e6eb3c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Value is less than required appe\")\n        mstore(add(headStart, 96), \"al fee\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4ffb16c8c515bb19f47e2c39c4abe69591900df2f6712a42bdbaeaacd81aaa88__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"The dispute must be executed aft\")\n        mstore(add(headStart, 96), \"er its appeal period has ended.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0a67387a01b638629562ce413604ca06df839cc408aaf6c072640f1a5c4f2346__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Can only be called by the govern\")\n        mstore(add(headStart, 96), \"or.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid ruling.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"The dispute must be waiting for \")\n        mstore(add(headStart, 96), \"arbitration.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ed65b2f49f93967b3a006e2788127dd02ebf255edcbc59f8b4e80c9299e6eca3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Value is less than required arbi\")\n        mstore(add(headStart, 96), \"tration fee.\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106100c75760003560e01c8063afe15cfb11610074578063f23f16e61161004e578063f23f16e614610232578063f7434ea914610252578063ffb43c481461027457600080fd5b8063afe15cfb146101ca578063bc97d0f3146101ff578063c13517e11461021f57600080fd5b806349912f88116100a557806349912f8814610164578063564a565d146101795780638bb04875146101aa57600080fd5b80630c340a24146100cc57806310f169e8146101095780631c3db16d14610136575b600080fd5b3480156100d857600080fd5b506000546100ec906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011557600080fd5b50610129610124366004610ba5565b610294565b6040516101009190610bf6565b34801561014257600080fd5b50610156610151366004610ba5565b610349565b604051908152602001610100565b610177610172366004610ca7565b610377565b005b34801561018557600080fd5b50610199610194366004610ba5565b61054c565b604051610100959493929190610cee565b3480156101b657600080fd5b506101776101c5366004610ba5565b61059a565b3480156101d657600080fd5b506101ea6101e5366004610ba5565b610734565b60408051928352602083019190915201610100565b34801561020b57600080fd5b5061017761021a366004610d2b565b61076c565b61015661022d366004610ca7565b61093d565b34801561023e57600080fd5b5061015661024d366004610ca7565b610aef565b34801561025e57600080fd5b5061015661026d366004610d57565b5060015490565b34801561028057600080fd5b5061017761028f366004610ba5565b610b3a565b600080600283815481106102aa576102aa610d94565b6000918252602090912060059091020190506001600284815481106102d1576102d1610d94565b600091825260209091206004600590920201015460ff1660028111156102f9576102f9610bbe565b14801561030a575080600101544210155b156103185750600292915050565b6002838154811061032b5761032b610d94565b600091825260209091206004600590920201015460ff169392505050565b60006002828154811061035e5761035e610d94565b9060005260206000209060050201600301549050919050565b60006002838154811061038c5761038c610d94565b9060005260206000209060050201905060006103a88484610aef565b90506001600483015460ff1660028111156103c5576103c5610bbe565b146104175760405162461bcd60e51b815260206004820152601f60248201527f5468652064697370757465206d7573742062652061707065616c61626c652e0060448201526064015b60405180910390fd5b816001015442106104905760405162461bcd60e51b815260206004820152603a60248201527f5468652061707065616c206d757374206f63637572206265666f72652074686560448201527f20656e64206f66207468652061707065616c20706572696f642e000000000000606482015260840161040e565b803410156105065760405162461bcd60e51b815260206004820152602660248201527f56616c7565206973206c657373207468616e207265717569726564206170706560448201527f616c206665650000000000000000000000000000000000000000000000000000606482015260840161040e565b60006001830181905560048301805460ff19169055604051339186917f9c9b64db9e130f48381bf697abf638e73117dbfbfd7a4484f2da3ba188f4187d9190a350505050565b6002818154811061055c57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909160ff1685565b6000600282815481106105af576105af610d94565b6000918252602090912060059091020190506001600482015460ff1660028111156105dc576105dc610bbe565b146106295760405162461bcd60e51b815260206004820152601f60248201527f5468652064697370757465206d7573742062652061707065616c61626c652e00604482015260640161040e565b80600101544210156106a35760405162461bcd60e51b815260206004820152603f60248201527f5468652064697370757465206d7573742062652065786563757465642061667460448201527f6572206974732061707065616c20706572696f642068617320656e6465642e00606482015260840161040e565b6004818101805460ff19166002179055815460038301546040517f311a6c5600000000000000000000000000000000000000000000000000000000815292830185905260248301526001600160a01b03169063311a6c5690604401600060405180830381600087803b15801561071857600080fd5b505af115801561072c573d6000803e3d6000fd5b505050505050565b60008060006002848154811061074c5761074c610d94565b906000526020600020906005020190504281600101549250925050915091565b6000546001600160a01b031633146107d25760405162461bcd60e51b815260206004820152602360248201527f43616e206f6e6c792062652063616c6c65642062792074686520676f7665726e60448201526237b91760e91b606482015260840161040e565b6000600284815481106107e7576107e7610d94565b90600052602060002090600502019050806002015483111561084b5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c69642072756c696e672e0000000000000000000000000000000000604482015260640161040e565b6000600482015460ff16600281111561086657610866610bbe565b146108d95760405162461bcd60e51b815260206004820152602c60248201527f5468652064697370757465206d7573742062652077616974696e6720666f722060448201527f6172626974726174696f6e2e0000000000000000000000000000000000000000606482015260840161040e565b6003810183905560048101805460ff191660011790556108f98242610dc0565b600182015580546040516001600160a01b039091169085907fa5d41b970d849372be1da1481ffd78d162bfe57a7aa2fe4e5fb73481fa5ac24f90600090a350505050565b60008061094960015490565b9050803410156109c15760405162461bcd60e51b815260206004820152602c60248201527f56616c7565206973206c657373207468616e207265717569726564206172626960448201527f74726174696f6e206665652e0000000000000000000000000000000000000000606482015260840161040e565b60026040518060a00160405280336001600160a01b03168152602001600081526020018681526020016000815260200160006002811115610a0457610a04610bbe565b90528154600180820184556000938452602093849020835160059093020180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0390931692909217825592820151818401556040820151600280830191909155606083015160038301556080830151600483018054949593949193909260ff19909216918490811115610aa257610aa2610bbe565b021790555050600254610ab89150600190610dd8565b604051909250339083907f141dfc18aa6a56fc816f44f0e9e2f1ebc92b15ab167770e17db5b084c10ed99590600090a35092915050565b6000610b316040518060400160405280600681526020017f554e5553454400000000000000000000000000000000000000000000000000008152505060015490565b90505b92915050565b6000546001600160a01b03163314610ba05760405162461bcd60e51b815260206004820152602360248201527f43616e206f6e6c792062652063616c6c65642062792074686520676f7665726e60448201526237b91760e91b606482015260840161040e565b600155565b600060208284031215610bb757600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60038110610bf257634e487b7160e01b600052602160045260246000fd5b9052565b60208101610b348284610bd4565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c2b57600080fd5b813567ffffffffffffffff80821115610c4657610c46610c04565b604051601f8301601f19908116603f01168101908282118183101715610c6e57610c6e610c04565b81604052838152866020858801011115610c8757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610cba57600080fd5b82359150602083013567ffffffffffffffff811115610cd857600080fd5b610ce485828601610c1a565b9150509250929050565b600060a0820190506001600160a01b0387168252856020830152846040830152836060830152610d216080830184610bd4565b9695505050505050565b600080600060608486031215610d4057600080fd5b505081359360208301359350604090920135919050565b600060208284031215610d6957600080fd5b813567ffffffffffffffff811115610d8057600080fd5b610d8c84828501610c1a565b949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610dd357610dd3610daa565b500190565b600082821015610dea57610dea610daa565b50039056fea2646970667358221220472c92e1d2c5e786039b79d3630162920146d20f3d196fb944eeaf7ad122960864736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFE15CFB GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xF23F16E6 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xF23F16E6 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xF7434EA9 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xFFB43C48 EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAFE15CFB EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xBC97D0F3 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xC13517E1 EQ PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x49912F88 GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0x49912F88 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x564A565D EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x8BB04875 EQ PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC340A24 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x10F169E8 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x1C3DB16D EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xEC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xBF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH2 0x156 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0xAEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0xD57 JUMP JUMPDEST POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH2 0x2AA PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2D1 JUMPI PUSH2 0x2D1 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2F9 JUMPI PUSH2 0x2F9 PUSH2 0xBBE JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x30A JUMPI POP DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x318 JUMPI POP PUSH1 0x2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x32B JUMPI PUSH2 0x32B PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x35E JUMPI PUSH2 0x35E PUSH2 0xD94 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x38C JUMPI PUSH2 0x38C PUSH2 0xD94 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0x3A8 DUP5 DUP5 PUSH2 0xAEF JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3C5 JUMPI PUSH2 0x3C5 PUSH2 0xBBE JUMP JUMPDEST EQ PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652064697370757465206D7573742062652061707065616C61626C652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP LT PUSH2 0x490 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652061707065616C206D757374206F63637572206265666F726520746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20656E64206F66207468652061707065616C20706572696F642E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0x506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C7565206973206C657373207468616E2072657175697265642061707065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C206665650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 DUP7 SWAP2 PUSH32 0x9C9B64DB9E130F48381BF697ABF638E73117DBFBFD7A4484F2DA3BA188F4187D SWAP2 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5AF JUMPI PUSH2 0x5AF PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5DC JUMPI PUSH2 0x5DC PUSH2 0xBBE JUMP JUMPDEST EQ PUSH2 0x629 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652064697370757465206D7573742062652061707065616C61626C652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652064697370757465206D75737420626520657865637574656420616674 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572206974732061707065616C20706572696F642068617320656E6465642E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE DUP2 SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x311A6C5600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP3 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x311A6C56 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x72C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x74C JUMPI PUSH2 0x74C PUSH2 0xD94 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP TIMESTAMP DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792062652063616C6C65642062792074686520676F7665726E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x37B917 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x7E7 JUMPI PUSH2 0x7E7 PUSH2 0xD94 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD DUP4 GT ISZERO PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642072756C696E672E0000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x866 JUMPI PUSH2 0x866 PUSH2 0xBBE JUMP JUMPDEST EQ PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652064697370757465206D7573742062652077616974696E6720666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6172626974726174696F6E2E0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x8F9 DUP3 TIMESTAMP PUSH2 0xDC0 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH32 0xA5D41B970D849372BE1DA1481FFD78D162BFE57A7AA2FE4E5FB73481FA5AC24F SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x949 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C7565206973206C657373207468616E2072657175697265642061726269 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74726174696F6E206665652E0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA04 JUMPI PUSH2 0xA04 PUSH2 0xBBE JUMP JUMPDEST SWAP1 MSTORE DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP1 SWAP4 MUL ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE SWAP3 DUP3 ADD MLOAD DUP2 DUP5 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD DUP1 SLOAD SWAP5 SWAP6 SWAP4 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0xAA2 JUMPI PUSH2 0xAA2 PUSH2 0xBBE JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH1 0x2 SLOAD PUSH2 0xAB8 SWAP2 POP PUSH1 0x1 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP3 POP CALLER SWAP1 DUP4 SWAP1 PUSH32 0x141DFC18AA6A56FC816F44F0E9E2F1EBC92B15AB167770E17DB5B084C10ED995 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB31 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x554E555345440000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792062652063616C6C65642062792074686520676F7665726E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x37B917 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xBF2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xB34 DUP3 DUP5 PUSH2 0xBD4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC46 JUMPI PUSH2 0xC46 PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC6E JUMPI PUSH2 0xC6E PUSH2 0xC04 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xC87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE4 DUP6 DUP3 DUP7 ADD PUSH2 0xC1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xD21 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xBD4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD8C DUP5 DUP3 DUP6 ADD PUSH2 0xC1A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDD3 JUMPI PUSH2 0xDD3 PUSH2 0xDAA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xDEA JUMPI PUSH2 0xDEA PUSH2 0xDAA JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0x2C SWAP3 0xE1 0xD2 0xC5 0xE7 DUP7 SUB SWAP12 PUSH26 0xD3630162920146D20F3D196FB944EEAF7AD122960864736F6C63 NUMBER STOP ADDMOD EXP STOP CALLER ",
              "sourceMap": "265:3837:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:36;;;;;;;;;;-1:-1:-1;304:36:6;;;;-1:-1:-1;;;;;304:36:6;;;;;;-1:-1:-1;;;;;178:55:7;;;160:74;;148:2;133:18;304:36:6;;;;;;;;3309:438;;;;;;;;;;-1:-1:-1;3309:438:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3751:134::-;;;;;;;;;;-1:-1:-1;3751:134:6;;;;;:::i;:::-;;:::i;:::-;;;1288:25:7;;;1276:2;1261:18;3751:134:6;1142:177:7;2247:629:6;;;;;;:::i;:::-;;:::i;:::-;;687:25;;;;;;;;;;-1:-1:-1;687:25:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;2880:425::-;;;;;;;;;;-1:-1:-1;2880:425:6;;;;;:::i;:::-;;:::i;3889:211::-;;;;;;;;;;-1:-1:-1;3889:211:6;;;;;:::i;:::-;;:::i;:::-;;;;3377:25:7;;;3433:2;3418:18;;3411:34;;;;3350:18;3889:211:6;3203:248:7;1694:549:6;;;;;;;;;;-1:-1:-1;1694:549:6;;;;;:::i;:::-;;:::i;1099:591::-;;;;;;:::i;:::-;;:::i;966:129::-;;;;;;;;;;-1:-1:-1;966:129:6;;;;;:::i;:::-;;:::i;846:116::-;;;;;;;;;;-1:-1:-1;846:116:6;;;;;:::i;:::-;-1:-1:-1;941:16:6;;;846:116;717:125;;;;;;;;;;-1:-1:-1;717:125:6;;;;;:::i;:::-;;:::i;3309:438::-;3382:20;3410:23;3436:8;3445:10;3436:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;3497:24:6;3466:8;3475:10;3466:20;;;;;;;;:::i;:::-;;;;;;;;;:27;:20;;;;;:27;;;;:55;;;;;;;;:::i;:::-;;:100;;;;;3544:7;:22;;;3525:15;:41;;3466:100;3462:280;;;-1:-1:-1;3677:20:6;;3309:438;-1:-1:-1;;3309:438:6:o;3462:280::-;3715:8;3724:10;3715:20;;;;;;;;:::i;:::-;;;;;;;;;:27;:20;;;;;:27;;;;;3309:438;-1:-1:-1;;;3309:438:6:o;3751:134::-;3824:14;3853:8;3862:10;3853:20;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;3846:34;;3751:134;;;:::o;2247:629::-;2338:23;2364:8;2373:10;2364:20;;;;;;;;:::i;:::-;;;;;;;;;;;2338:46;;2390:17;2410:34;2421:10;2433;2410;:34::i;:::-;2390:54;-1:-1:-1;2476:24:6;2458:14;;;;;;:42;;;;;;;;:::i;:::-;;2450:86;;;;-1:-1:-1;;;2450:86:6;;4493:2:7;2450:86:6;;;4475:21:7;4532:2;4512:18;;;4505:30;4571:33;4551:18;;;4544:61;4622:18;;2450:86:6;;;;;;;;;2568:7;:22;;;2550:15;:40;2542:111;;;;-1:-1:-1;;;2542:111:6;;4853:2:7;2542:111:6;;;4835:21:7;4892:2;4872:18;;;4865:30;4931:34;4911:18;;;4904:62;5002:28;4982:18;;;4975:56;5048:19;;2542:111:6;4651:422:7;2542:111:6;2680:9;2667;:22;;2659:73;;;;-1:-1:-1;;;2659:73:6;;5280:2:7;2659:73:6;;;5262:21:7;5319:2;5299:18;;;5292:30;5358:34;5338:18;;;5331:62;5429:8;5409:18;;;5402:36;5455:19;;2659:73:6;5078:402:7;2659:73:6;2764:1;2739:22;;;:26;;;2771:14;;;:38;;-1:-1:-1;;2771:38:6;;;2820:51;;2859:10;;2835;;2820:51;;2764:1;2820:51;2332:544;;2247:629;;:::o;687:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;687:25:6;;;;-1:-1:-1;687:25:6;;;;;;;:::o;2880:425::-;2938:23;2964:8;2973:10;2964:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;3016:24:6;2998:14;;;;;;:42;;;;;;;;:::i;:::-;;2990:86;;;;-1:-1:-1;;;2990:86:6;;4493:2:7;2990:86:6;;;4475:21:7;4532:2;4512:18;;;4505:30;4571:33;4551:18;;;4544:61;4622:18;;2990:86:6;4291:355:7;2990:86:6;3109:7;:22;;;3090:15;:41;;3082:117;;;;-1:-1:-1;;;3082:117:6;;5687:2:7;3082:117:6;;;5669:21:7;5726:2;5706:18;;;5699:30;5765:34;5745:18;;;5738:62;5836:33;5816:18;;;5809:61;5887:19;;3082:117:6;5485:427:7;3082:117:6;3206:14;;;;:37;;-1:-1:-1;;3206:37:6;3223:20;3206:37;;;3249:18;;3285:14;;;;3249:51;;;;;;;;3377:25:7;;;3418:18;;;3411:34;-1:-1:-1;;;;;3249:18:6;;:23;;3350:18:7;;3249:51:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2932:373;2880:425;:::o;3889:211::-;3961:13;3976:11;3995:23;4021:8;4030:10;4021:20;;;;;;;;:::i;:::-;;;;;;;;;;;3995:46;;4055:15;4072:7;:22;;;4047:48;;;;;3889:211;;;:::o;1694:549::-;623:8;;-1:-1:-1;;;;;623:8:6;609:10;:22;601:70;;;;-1:-1:-1;;;601:70:6;;6119:2:7;601:70:6;;;6101:21:7;6158:2;6138:18;;;6131:30;6197:34;6177:18;;;6170:62;-1:-1:-1;;;6248:18:7;;;6241:33;6291:19;;601:70:6;5917:399:7;601:70:6;1818:23:::1;1844:8;1853:10;1844:20;;;;;;;;:::i;:::-;;;;;;;;;;;1818:46;;1889:7;:29;;;1878:7;:40;;1870:68;;;::::0;-1:-1:-1;;;1870:68:6;;6523:2:7;1870:68:6::1;::::0;::::1;6505:21:7::0;6562:2;6542:18;;;6535:30;6601:17;6581:18;;;6574:45;6636:18;;1870:68:6::1;6321:339:7::0;1870:68:6::1;1970:21;1952:14;::::0;::::1;::::0;::::1;;:39;::::0;::::1;;;;;;:::i;:::-;;1944:96;;;::::0;-1:-1:-1;;;1944:96:6;;6867:2:7;1944:96:6::1;::::0;::::1;6849:21:7::0;6906:2;6886:18;;;6879:30;6945:34;6925:18;;;6918:62;7016:14;6996:18;;;6989:42;7048:19;;1944:96:6::1;6665:408:7::0;1944:96:6::1;2047:14;::::0;::::1;:24:::0;;;2077:14:::1;::::0;::::1;:41:::0;;-1:-1:-1;;2077:41:6::1;2094:24;2077:41;::::0;;2149:31:::1;2167:13:::0;2149:15:::1;:31;:::i;:::-;2124:22;::::0;::::1;:56:::0;2219:18;;2192:46:::1;::::0;-1:-1:-1;;;;;2219:18:6;;::::1;::::0;2207:10;;2192:46:::1;::::0;2219:18:::1;::::0;2192:46:::1;1812:431;1694:549:::0;;;:::o;1099:591::-;1198:17;1223:22;1248:27;941:16;;;846:116;1248:27;1223:52;;1302:14;1289:9;:27;;1281:84;;;;-1:-1:-1;;;1281:84:6;;7602:2:7;1281:84:6;;;7584:21:7;7641:2;7621:18;;;7614:30;7680:34;7660:18;;;7653:62;7751:14;7731:18;;;7724:42;7783:19;;1281:84:6;7400:408:7;1281:84:6;1371:8;1392:188;;;;;;;;1434:10;-1:-1:-1;;;;;1392:188:6;;;;;1570:1;1392:188;;;;1478:8;1392:188;;;;1504:1;1392:188;;;;1523:21;1392:188;;;;;;;;:::i;:::-;;;1371:215;;;;;;;;-1:-1:-1;1371:215:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1371:215:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1371:215:6;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;1604:8:6;:15;:19;;-1:-1:-1;1622:1:6;;1604:19;:::i;:::-;1634:51;;1592:31;;-1:-1:-1;1673:10:6;;1592:31;;1634:51;;;;;1217:473;1099:591;;;;:::o;966:129::-;1039:11;1065:25;;;;;;;;;;;;;;;;;;-1:-1:-1;941:16:6;;;846:116;1065:25;1058:32;;966:129;;;;;:::o;717:125::-;623:8;;-1:-1:-1;;;;;623:8:6;609:10;:22;601:70;;;;-1:-1:-1;;;601:70:6;;6119:2:7;601:70:6;;;6101:21:7;6158:2;6138:18;;;6131:30;6197:34;6177:18;;;6170:62;-1:-1:-1;;;6248:18:7;;;6241:33;6291:19;;601:70:6;5917:399:7;601:70:6;801:16:::1;:36:::0;717:125::o;245:180:7:-;304:6;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;-1:-1:-1;396:23:7;;245:180;-1:-1:-1;245:180:7:o;430:184::-;-1:-1:-1;;;479:1:7;472:88;579:4;576:1;569:15;603:4;600:1;593:15;619:298;704:1;697:5;694:12;684:200;;-1:-1:-1;;;737:1:7;730:88;841:4;838:1;831:15;869:4;866:1;859:15;684:200;893:18;;619:298::o;922:215::-;1071:2;1056:18;;1083:48;1060:9;1113:6;1083:48;:::i;1324:184::-;-1:-1:-1;;;1373:1:7;1366:88;1473:4;1470:1;1463:15;1497:4;1494:1;1487:15;1513:718;1555:5;1608:3;1601:4;1593:6;1589:17;1585:27;1575:55;;1626:1;1623;1616:12;1575:55;1662:6;1649:20;1688:18;1725:2;1721;1718:10;1715:36;;;1731:18;;:::i;:::-;1806:2;1800:9;1774:2;1860:13;;-1:-1:-1;;1856:22:7;;;1880:2;1852:31;1848:40;1836:53;;;1904:18;;;1924:22;;;1901:46;1898:72;;;1950:18;;:::i;:::-;1990:10;1986:2;1979:22;2025:2;2017:6;2010:18;2071:3;2064:4;2059:2;2051:6;2047:15;2043:26;2040:35;2037:55;;;2088:1;2085;2078:12;2037:55;2152:2;2145:4;2137:6;2133:17;2126:4;2118:6;2114:17;2101:54;2199:1;2192:4;2187:2;2179:6;2175:15;2171:26;2164:37;2219:6;2210:15;;;;;;1513:718;;;;:::o;2236:388::-;2313:6;2321;2374:2;2362:9;2353:7;2349:23;2345:32;2342:52;;;2390:1;2387;2380:12;2342:52;2426:9;2413:23;2403:33;;2487:2;2476:9;2472:18;2459:32;2514:18;2506:6;2503:30;2500:50;;;2546:1;2543;2536:12;2500:50;2569:49;2610:7;2601:6;2590:9;2586:22;2569:49;:::i;:::-;2559:59;;;2236:388;;;;;:::o;2629:569::-;2867:4;2909:3;2898:9;2894:19;2886:27;;-1:-1:-1;;;;;2944:6:7;2940:55;2929:9;2922:74;3032:6;3027:2;3016:9;3012:18;3005:34;3075:6;3070:2;3059:9;3055:18;3048:34;3118:6;3113:2;3102:9;3098:18;3091:34;3134:58;3187:3;3176:9;3172:19;3164:6;3134:58;:::i;:::-;2629:569;;;;;;;;:::o;3456:316::-;3533:6;3541;3549;3602:2;3590:9;3581:7;3577:23;3573:32;3570:52;;;3618:1;3615;3608:12;3570:52;-1:-1:-1;;3641:23:7;;;3711:2;3696:18;;3683:32;;-1:-1:-1;3762:2:7;3747:18;;;3734:32;;3456:316;-1:-1:-1;3456:316:7:o;3777:320::-;3845:6;3898:2;3886:9;3877:7;3873:23;3869:32;3866:52;;;3914:1;3911;3904:12;3866:52;3954:9;3941:23;3987:18;3979:6;3976:30;3973:50;;;4019:1;4016;4009:12;3973:50;4042:49;4083:7;4074:6;4063:9;4059:22;4042:49;:::i;:::-;4032:59;3777:320;-1:-1:-1;;;;3777:320:7:o;4102:184::-;-1:-1:-1;;;4151:1:7;4144:88;4251:4;4248:1;4241:15;4275:4;4272:1;4265:15;7078:184;-1:-1:-1;;;7127:1:7;7120:88;7227:4;7224:1;7217:15;7251:4;7248:1;7241:15;7267:128;7307:3;7338:1;7334:6;7331:1;7328:13;7325:39;;;7344:18;;:::i;:::-;-1:-1:-1;7380:9:7;;7267:128::o;7813:125::-;7853:4;7881:1;7878;7875:8;7872:34;;;7886:18;;:::i;:::-;-1:-1:-1;7923:9:7;;7813:125::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "724200",
                "executionCost": "47101",
                "totalCost": "771301"
              },
              "external": {
                "appeal(uint256,bytes)": "infinite",
                "appealCost(uint256,bytes)": "infinite",
                "appealPeriod(uint256)": "4664",
                "arbitrationCost(bytes)": "infinite",
                "createDispute(uint256,bytes)": "infinite",
                "currentRuling(uint256)": "4662",
                "disputeStatus(uint256)": "13449",
                "disputes(uint256)": "13317",
                "executeRuling(uint256)": "infinite",
                "giveRuling(uint256,uint256,uint256)": "81132",
                "governor()": "2350",
                "setArbitrationPrice(uint256)": "24530"
              }
            },
            "methodIdentifiers": {
              "appeal(uint256,bytes)": "49912f88",
              "appealCost(uint256,bytes)": "f23f16e6",
              "appealPeriod(uint256)": "afe15cfb",
              "arbitrationCost(bytes)": "f7434ea9",
              "createDispute(uint256,bytes)": "c13517e1",
              "currentRuling(uint256)": "1c3db16d",
              "disputeStatus(uint256)": "10f169e8",
              "disputes(uint256)": "564a565d",
              "executeRuling(uint256)": "8bb04875",
              "giveRuling(uint256,uint256,uint256)": "bc97d0f3",
              "governor()": "0c340a24",
              "setArbitrationPrice(uint256)": "ffb43c48"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealDecision\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealPossible\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"DisputeCreation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"appeal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"appealCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"appealPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"arbitrationCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_choices\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"createDispute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeID\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"currentRuling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"disputeStatus\",\"outputs\":[{\"internalType\":\"enum IArbitrator.DisputeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputes\",\"outputs\":[{\"internalType\":\"contract IArbitrable\",\"name\":\"arbitrated\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"appealDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfRulingOptions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"},{\"internalType\":\"enum IArbitrator.DisputeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"executeRuling\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_appealWindow\",\"type\":\"uint256\"}],\"name\":\"giveRuling\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_arbitrationPrice\",\"type\":\"uint256\"}],\"name\":\"setArbitrationPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"DON'T USE ON PRODUCTION.\",\"kind\":\"dev\",\"methods\":{\"appeal(uint256,bytes)\":{\"details\":\"Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\",\"params\":{\"_disputeID\":\"ID of the dispute to be appealed.\",\"_extraData\":\"Can be used to give extra info on the appeal.\"}},\"appealPeriod(uint256)\":{\"details\":\"Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\",\"params\":{\"_disputeID\":\"ID of the dispute.\"},\"returns\":{\"end\":\"The end of the period.\",\"start\":\"The start of the period.\"}},\"createDispute(uint256,bytes)\":{\"details\":\"Create a dispute. Must be called by the arbitrable contract. Must be paid at least arbitrationCost(_extraData).\",\"params\":{\"_choices\":\"Amount of choices the arbitrator can make in this dispute.\",\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"disputeID\":\"ID of the dispute created.\"}},\"currentRuling(uint256)\":{\"details\":\"Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\",\"params\":{\"_disputeID\":\"ID of the dispute.\"},\"returns\":{\"ruling\":\"The ruling which has been given or the one which will be given if there is no appeal.\"}},\"disputeStatus(uint256)\":{\"details\":\"Return the status of a dispute.\",\"params\":{\"_disputeID\":\"ID of the dispute to rule.\"},\"returns\":{\"status\":\"The status of the dispute.\"}}},\"title\":\"An IArbitrator implemetation for testing purposes.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/for-testing-purposes/Arbitrator.sol\":\"Arbitrator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@kleros/erc-792/contracts/IArbitrable.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrator.sol\\\";\\n\\n/**\\n * @title IArbitrable\\n * Arbitrable interface.\\n * When developing arbitrable contracts, we need to:\\n * - Define the action taken when a ruling is received by the contract.\\n * - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);\\n */\\ninterface IArbitrable {\\n    /**\\n     * @dev To be raised when a ruling is given.\\n     * @param _arbitrator The arbitrator giving the ruling.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling The ruling which was given.\\n     */\\n    event Ruling(IArbitrator indexed _arbitrator, uint256 indexed _disputeID, uint256 _ruling);\\n\\n    /**\\n     * @dev Give a ruling for a dispute. Must be called by the arbitrator.\\n     * The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\\n     * @param _disputeID ID of the dispute in the Arbitrator contract.\\n     * @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\\n     */\\n    function rule(uint256 _disputeID, uint256 _ruling) external;\\n}\\n\",\"keccak256\":\"0xf1a2c2d7ec1237ef8d3c5f580ac73f56ed58fe4d023817a188363885b3eeb9f2\",\"license\":\"MIT\"},\"@kleros/erc-792/contracts/IArbitrator.sol\":{\"content\":\"/**\\n * @authors: [@ferittuncer, @hbarcelos]\\n * @reviewers: [@remedcu]\\n * @auditors: []\\n * @bounties: []\\n * @deployments: []\\n * SPDX-License-Identifier: MIT\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IArbitrable.sol\\\";\\n\\n/**\\n * @title Arbitrator\\n * Arbitrator abstract contract.\\n * When developing arbitrator contracts we need to:\\n * - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\\n * - Define the functions for cost display (arbitrationCost and appealCost).\\n * - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\\n */\\ninterface IArbitrator {\\n    enum DisputeStatus {\\n        Waiting,\\n        Appealable,\\n        Solved\\n    }\\n\\n    /**\\n     * @dev To be emitted when a dispute is created.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event DisputeCreation(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when a dispute can be appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealPossible(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev To be emitted when the current ruling is appealed.\\n     * @param _disputeID ID of the dispute.\\n     * @param _arbitrable The contract which created the dispute.\\n     */\\n    event AppealDecision(uint256 indexed _disputeID, IArbitrable indexed _arbitrable);\\n\\n    /**\\n     * @dev Create a dispute. Must be called by the arbitrable contract.\\n     * Must be paid at least arbitrationCost(_extraData).\\n     * @param _choices Amount of choices the arbitrator can make in this dispute.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return disputeID ID of the dispute created.\\n     */\\n    function createDispute(uint256 _choices, bytes calldata _extraData) external payable returns (uint256 disputeID);\\n\\n    /**\\n     * @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function arbitrationCost(bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give extra info on the appeal.\\n     */\\n    function appeal(uint256 _disputeID, bytes calldata _extraData) external payable;\\n\\n    /**\\n     * @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\\n     * @param _disputeID ID of the dispute to be appealed.\\n     * @param _extraData Can be used to give additional info on the dispute to be created.\\n     * @return cost Amount to be paid.\\n     */\\n    function appealCost(uint256 _disputeID, bytes calldata _extraData) external view returns (uint256 cost);\\n\\n    /**\\n     * @dev Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\\n     * @param _disputeID ID of the dispute.\\n     * @return start The start of the period.\\n     * @return end The end of the period.\\n     */\\n    function appealPeriod(uint256 _disputeID) external view returns (uint256 start, uint256 end);\\n\\n    /**\\n     * @dev Return the status of a dispute.\\n     * @param _disputeID ID of the dispute to rule.\\n     * @return status The status of the dispute.\\n     */\\n    function disputeStatus(uint256 _disputeID) external view returns (DisputeStatus status);\\n\\n    /**\\n     * @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\\n     * @param _disputeID ID of the dispute.\\n     * @return ruling The ruling which has been given or the one which will be given if there is no appeal.\\n     */\\n    function currentRuling(uint256 _disputeID) external view returns (uint256 ruling);\\n}\\n\",\"keccak256\":\"0xfd19582446ef635cfb02a035a18efae3bc242ccf1472bb9949cad3d291306333\",\"license\":\"MIT\"},\"contracts/for-testing-purposes/Arbitrator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.10;\\n\\nimport \\\"@kleros/erc-792/contracts/IArbitrable.sol\\\";\\nimport \\\"@kleros/erc-792/contracts/IArbitrator.sol\\\";\\n\\n/** @title An IArbitrator implemetation for testing purposes.\\n *  @dev DON'T USE ON PRODUCTION.\\n */\\ncontract Arbitrator is IArbitrator {\\n  address public governor = msg.sender;\\n  uint256 internal arbitrationPrice = 1_000_000_000_000_000_000;\\n\\n  struct Dispute {\\n    IArbitrable arbitrated;\\n    uint256 appealDeadline;\\n    uint256 numberOfRulingOptions;\\n    uint256 ruling;\\n    DisputeStatus status;\\n  }\\n\\n  modifier onlyGovernor() {\\n    require(msg.sender == governor, \\\"Can only be called by the governor.\\\");\\n    _;\\n  }\\n\\n  Dispute[] public disputes;\\n\\n  function setArbitrationPrice(uint256 _arbitrationPrice) external onlyGovernor {\\n    arbitrationPrice = _arbitrationPrice;\\n  }\\n\\n  function arbitrationCost(bytes memory) public view override returns (uint256 fee) {\\n    return arbitrationPrice;\\n  }\\n\\n  function appealCost(uint256, bytes memory) public view override returns (uint256 fee) {\\n    return arbitrationCost(\\\"UNUSED\\\");\\n  }\\n\\n  function createDispute(uint256 _choices, bytes memory _extraData) public payable override returns (uint256 disputeID) {\\n    uint256 arbitrationFee = arbitrationCost(_extraData);\\n    require(msg.value >= arbitrationFee, \\\"Value is less than required arbitration fee.\\\");\\n    disputes.push(\\n      Dispute({\\n        arbitrated: IArbitrable(msg.sender),\\n        numberOfRulingOptions: _choices,\\n        ruling: 0,\\n        status: DisputeStatus.Waiting,\\n        appealDeadline: 0\\n      })\\n    );\\n    disputeID = disputes.length - 1;\\n    emit DisputeCreation(disputeID, IArbitrable(msg.sender));\\n  }\\n\\n  function giveRuling(\\n    uint256 _disputeID,\\n    uint256 _ruling,\\n    uint256 _appealWindow\\n  ) external onlyGovernor {\\n    Dispute storage dispute = disputes[_disputeID];\\n    require(_ruling <= dispute.numberOfRulingOptions, \\\"Invalid ruling.\\\");\\n    require(dispute.status == DisputeStatus.Waiting, \\\"The dispute must be waiting for arbitration.\\\");\\n\\n    dispute.ruling = _ruling;\\n    dispute.status = DisputeStatus.Appealable;\\n    dispute.appealDeadline = block.timestamp + _appealWindow;\\n\\n    emit AppealPossible(_disputeID, dispute.arbitrated);\\n  }\\n\\n  function appeal(uint256 _disputeID, bytes memory _extraData) public payable override {\\n    Dispute storage dispute = disputes[_disputeID];\\n    uint256 appealFee = appealCost(_disputeID, _extraData);\\n    require(dispute.status == DisputeStatus.Appealable, \\\"The dispute must be appealable.\\\");\\n    require(block.timestamp < dispute.appealDeadline, \\\"The appeal must occur before the end of the appeal period.\\\");\\n    require(msg.value >= appealFee, \\\"Value is less than required appeal fee\\\");\\n\\n    dispute.appealDeadline = 0;\\n    dispute.status = DisputeStatus.Waiting;\\n    emit AppealDecision(_disputeID, IArbitrable(msg.sender));\\n  }\\n\\n  function executeRuling(uint256 _disputeID) external {\\n    Dispute storage dispute = disputes[_disputeID];\\n    require(dispute.status == DisputeStatus.Appealable, \\\"The dispute must be appealable.\\\");\\n    require(block.timestamp >= dispute.appealDeadline, \\\"The dispute must be executed after its appeal period has ended.\\\");\\n\\n    dispute.status = DisputeStatus.Solved;\\n    dispute.arbitrated.rule(_disputeID, dispute.ruling);\\n  }\\n\\n  function disputeStatus(uint256 _disputeID) public view override returns (DisputeStatus status) {\\n    Dispute storage dispute = disputes[_disputeID];\\n    if (disputes[_disputeID].status == DisputeStatus.Appealable && block.timestamp >= dispute.appealDeadline)\\n      // If the appeal period is over, consider it solved even if rule has not been called yet.\\n      return DisputeStatus.Solved;\\n    else return disputes[_disputeID].status;\\n  }\\n\\n  function currentRuling(uint256 _disputeID) public view override returns (uint256 ruling) {\\n    return disputes[_disputeID].ruling;\\n  }\\n\\n  function appealPeriod(uint256 _disputeID) public view override returns (uint256 start, uint256 end) {\\n    Dispute storage dispute = disputes[_disputeID];\\n    return (block.timestamp, dispute.appealDeadline);\\n  }\\n}\\n\",\"keccak256\":\"0x3ea0c607683f4b7a0d7739c2c9fed6cf1e80cae993914d0d10dcbd605b1f192a\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 2861,
                "contract": "contracts/for-testing-purposes/Arbitrator.sol:Arbitrator",
                "label": "governor",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 2864,
                "contract": "contracts/for-testing-purposes/Arbitrator.sol:Arbitrator",
                "label": "arbitrationPrice",
                "offset": 0,
                "slot": "1",
                "type": "t_uint256"
              },
              {
                "astId": 2893,
                "contract": "contracts/for-testing-purposes/Arbitrator.sol:Arbitrator",
                "label": "disputes",
                "offset": 0,
                "slot": "2",
                "type": "t_array(t_struct(Dispute)2877_storage)dyn_storage"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_struct(Dispute)2877_storage)dyn_storage": {
                "base": "t_struct(Dispute)2877_storage",
                "encoding": "dynamic_array",
                "label": "struct Arbitrator.Dispute[]",
                "numberOfBytes": "32"
              },
              "t_contract(IArbitrable)153": {
                "encoding": "inplace",
                "label": "contract IArbitrable",
                "numberOfBytes": "20"
              },
              "t_enum(DisputeStatus)161": {
                "encoding": "inplace",
                "label": "enum IArbitrator.DisputeStatus",
                "numberOfBytes": "1"
              },
              "t_struct(Dispute)2877_storage": {
                "encoding": "inplace",
                "label": "struct Arbitrator.Dispute",
                "members": [
                  {
                    "astId": 2867,
                    "contract": "contracts/for-testing-purposes/Arbitrator.sol:Arbitrator",
                    "label": "arbitrated",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_contract(IArbitrable)153"
                  },
                  {
                    "astId": 2869,
                    "contract": "contracts/for-testing-purposes/Arbitrator.sol:Arbitrator",
                    "label": "appealDeadline",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2871,
                    "contract": "contracts/for-testing-purposes/Arbitrator.sol:Arbitrator",
                    "label": "numberOfRulingOptions",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2873,
                    "contract": "contracts/for-testing-purposes/Arbitrator.sol:Arbitrator",
                    "label": "ruling",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2876,
                    "contract": "contracts/for-testing-purposes/Arbitrator.sol:Arbitrator",
                    "label": "status",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_enum(DisputeStatus)161"
                  }
                ],
                "numberOfBytes": "160"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "3149",
        "formattedMessage": "Warning: The result type of the shift operation is equal to the type of the first operand (uint96) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.\n   --> contracts/TruthPost.sol:137:30:\n    |\n137 |         uint256 withdrawal = uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE;\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
        "message": "The result type of the shift operation is equal to the type of the first operand (uint96) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.",
        "severity": "warning",
        "sourceLocation": {
          "end": 6365,
          "file": "contracts/TruthPost.sol",
          "start": 6291
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "3149",
        "formattedMessage": "Warning: The result type of the shift operation is equal to the type of the first operand (uint96) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.\n   --> contracts/TruthPost.sol:156:31:\n    |\n156 |         uint256 taxAmount = ((uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE) *\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
        "message": "The result type of the shift operation is equal to the type of the first operand (uint96) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.",
        "severity": "warning",
        "sourceLocation": {
          "end": 7338,
          "file": "contracts/TruthPost.sol",
          "start": 7264
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5878",
        "formattedMessage": "Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n   --> contracts/TruthPost.sol:252:43:\n    |\n252 |         if (msg.value - contribution > 0) payable(msg.sender).send(msg.value - contribution);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
        "message": "Failure condition of 'send' ignored. Consider using 'transfer' instead.",
        "severity": "warning",
        "sourceLocation": {
          "end": 11529,
          "file": "contracts/TruthPost.sol",
          "start": 11479
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "3149",
        "formattedMessage": "Warning: The result type of the shift operation is equal to the type of the first operand (uint96) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.\n   --> contracts/TruthPost.sol:283:30:\n    |\n283 |             uint256 bounty = uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE;\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
        "message": "The result type of the shift operation is equal to the type of the first operand (uint96) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.",
        "severity": "warning",
        "sourceLocation": {
          "end": 12995,
          "file": "contracts/TruthPost.sol",
          "start": 12921
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5878",
        "formattedMessage": "Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n   --> contracts/TruthPost.sol:287:13:\n    |\n287 |             disputes[_disputeID].challenger.send(bounty);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
        "message": "Failure condition of 'send' ignored. Consider using 'transfer' instead.",
        "severity": "warning",
        "sourceLocation": {
          "end": 13142,
          "file": "contracts/TruthPost.sol",
          "start": 13098
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5878",
        "formattedMessage": "Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n   --> contracts/TruthPost.sol:355:13:\n    |\n355 |             _contributor.send(amount);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
        "message": "Failure condition of 'send' ignored. Consider using 'transfer' instead.",
        "severity": "warning",
        "sourceLocation": {
          "end": 15832,
          "file": "contracts/TruthPost.sol",
          "start": 15807
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5878",
        "formattedMessage": "Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n   --> contracts/TruthPost.sol:379:9:\n    |\n379 |         TREASURY.send(amount);\n    |         ^^^^^^^^^^^^^^^^^^^^^\n\n",
        "message": "Failure condition of 'send' ignored. Consider using 'transfer' instead.",
        "severity": "warning",
        "sourceLocation": {
          "end": 17200,
          "file": "contracts/TruthPost.sol",
          "start": 17179
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "3149",
        "formattedMessage": "Warning: The result type of the shift operation is equal to the type of the first operand (uint96) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.\n   --> contracts/TruthPost.sol:453:34:\n    |\n453 |         uint256 challengeTax = ((uint96(article.bountyAmount) << NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE) *\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
        "message": "The result type of the shift operation is equal to the type of the first operand (uint96) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.",
        "severity": "warning",
        "sourceLocation": {
          "end": 20732,
          "file": "contracts/TruthPost.sol",
          "start": 20658
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol": {
        "ast": {
          "absolutePath": "@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol",
          "exportedSymbols": {
            "IArbitrable": [
              153
            ],
            "IArbitrator": [
              249
            ],
            "IDisputeResolver": [
              130
            ],
            "IEvidence": [
              285
            ]
          },
          "id": 131,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "225:23:0"
            },
            {
              "absolutePath": "@kleros/erc-792/contracts/IArbitrable.sol",
              "file": "@kleros/erc-792/contracts/IArbitrable.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 131,
              "sourceUnit": 154,
              "src": "250:51:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@kleros/erc-792/contracts/erc-1497/IEvidence.sol",
              "file": "@kleros/erc-792/contracts/erc-1497/IEvidence.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 131,
              "sourceUnit": 286,
              "src": "302:58:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@kleros/erc-792/contracts/IArbitrator.sol",
              "file": "@kleros/erc-792/contracts/IArbitrator.sol",
              "id": 4,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 131,
              "sourceUnit": 250,
              "src": "361:51:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 6,
                    "name": "IArbitrable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 153,
                    "src": "700:11:0"
                  },
                  "id": 7,
                  "nodeType": "InheritanceSpecifier",
                  "src": "700:11:0"
                },
                {
                  "baseName": {
                    "id": 8,
                    "name": "IEvidence",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 285,
                    "src": "713:9:0"
                  },
                  "id": 9,
                  "nodeType": "InheritanceSpecifier",
                  "src": "713:9:0"
                }
              ],
              "canonicalName": "IDisputeResolver",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 5,
                "nodeType": "StructuredDocumentation",
                "src": "414:247:0",
                "text": "  @title This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet.\nThis interface is used in Dispute Resolver (resolve.kleros.io)."
              },
              "fullyImplemented": false,
              "id": 130,
              "linearizedBaseContracts": [
                130,
                285,
                153
              ],
              "name": "IDisputeResolver",
              "nameLocation": "680:16:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "ffa1ad74",
                  "id": 12,
                  "mutability": "constant",
                  "name": "VERSION",
                  "nameLocation": "752:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "729:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "322e302e30",
                    "id": 11,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "762:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b4bcb154e38601c389396fa918314da42d4626f13ef6d0ceb07e5f5d26b2fbc3",
                      "typeString": "literal_string \"2.0.0\""
                    },
                    "value": "2.0.0"
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 13,
                    "nodeType": "StructuredDocumentation",
                    "src": "856:489:0",
                    "text": "@dev Raised when a contribution is made, inside fundAppeal function.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _round The round number the contribution was made to.\n  @param ruling Indicates the ruling option which got the contribution.\n  @param _contributor Caller of fundAppeal function.\n  @param _amount Contribution amount."
                  },
                  "id": 25,
                  "name": "Contribution",
                  "nameLocation": "1356:12:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 24,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 15,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_localDisputeID",
                        "nameLocation": "1385:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "1369:31:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 14,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1369:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 17,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_round",
                        "nameLocation": "1418:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "1402:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 16,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1402:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 19,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ruling",
                        "nameLocation": "1434:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "1426:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1426:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 21,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_contributor",
                        "nameLocation": "1458:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "1442:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 20,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1442:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 23,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "1480:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "1472:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 22,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1472:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1368:120:0"
                  },
                  "src": "1350:139:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 26,
                    "nodeType": "StructuredDocumentation",
                    "src": "1495:540:0",
                    "text": "@dev Raised when a contributor withdraws non-zero value.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _round The round number the withdrawal was made from.\n  @param _ruling Indicates the ruling option which contributor gets rewards from.\n  @param _contributor The beneficiary of withdrawal.\n  @param _reward Total amount of withdrawal, consists of reimbursed deposits plus rewards."
                  },
                  "id": 38,
                  "name": "Withdrawal",
                  "nameLocation": "2046:10:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 37,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 28,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_localDisputeID",
                        "nameLocation": "2073:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 38,
                        "src": "2057:31:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2057:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 30,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_round",
                        "nameLocation": "2106:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 38,
                        "src": "2090:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 29,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2090:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 32,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "2122:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 38,
                        "src": "2114:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2114:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 34,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_contributor",
                        "nameLocation": "2147:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 38,
                        "src": "2131:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2131:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 36,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_reward",
                        "nameLocation": "2169:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 38,
                        "src": "2161:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 35,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2161:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2056:121:0"
                  },
                  "src": "2040:138:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 39,
                    "nodeType": "StructuredDocumentation",
                    "src": "2184:389:0",
                    "text": "@dev To be raised when a ruling option is fully funded for appeal.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _round Number of the round this ruling option was fully funded in.\n  @param _ruling The ruling option which just got fully funded."
                  },
                  "id": 47,
                  "name": "RulingFunded",
                  "nameLocation": "2584:12:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 41,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_localDisputeID",
                        "nameLocation": "2613:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 47,
                        "src": "2597:31:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 40,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2597:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 43,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_round",
                        "nameLocation": "2646:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 47,
                        "src": "2630:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 42,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2630:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 45,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "2670:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 47,
                        "src": "2654:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2654:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2596:82:0"
                  },
                  "src": "2578:101:0"
                },
                {
                  "documentation": {
                    "id": 48,
                    "nodeType": "StructuredDocumentation",
                    "src": "2685:234:0",
                    "text": "@dev Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\n  @param _externalDisputeID Dispute id as in arbitrator contract.\n  @return localDisputeID Dispute id as in arbitrable contract."
                  },
                  "functionSelector": "c21ae061",
                  "id": 55,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "externalIDtoLocalID",
                  "nameLocation": "2933:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 50,
                        "mutability": "mutable",
                        "name": "_externalDisputeID",
                        "nameLocation": "2961:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 55,
                        "src": "2953:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2953:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2952:28:0"
                  },
                  "returnParameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 53,
                        "mutability": "mutable",
                        "name": "localDisputeID",
                        "nameLocation": "3015:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 55,
                        "src": "3007:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 52,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3007:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3006:24:0"
                  },
                  "scope": 130,
                  "src": "2924:107:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 56,
                    "nodeType": "StructuredDocumentation",
                    "src": "3037:307:0",
                    "text": "@dev Returns number of possible ruling options. Valid rulings are [0, return value].\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @return count The number of ruling options."
                  },
                  "functionSelector": "8d8b2d7e",
                  "id": 63,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "numberOfRulingOptions",
                  "nameLocation": "3358:21:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 59,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 58,
                        "mutability": "mutable",
                        "name": "_localDisputeID",
                        "nameLocation": "3388:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 63,
                        "src": "3380:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 57,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3380:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3379:25:0"
                  },
                  "returnParameters": {
                    "id": 62,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 61,
                        "mutability": "mutable",
                        "name": "count",
                        "nameLocation": "3444:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 63,
                        "src": "3436:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 60,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3436:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3435:15:0"
                  },
                  "scope": 130,
                  "src": "3349:102:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 64,
                    "nodeType": "StructuredDocumentation",
                    "src": "3457:351:0",
                    "text": "@dev Allows to submit evidence for a given dispute.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'"
                  },
                  "functionSelector": "a6a7f0eb",
                  "id": 71,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "submitEvidence",
                  "nameLocation": "3822:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 66,
                        "mutability": "mutable",
                        "name": "_localDisputeID",
                        "nameLocation": "3845:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 71,
                        "src": "3837:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 65,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3837:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 68,
                        "mutability": "mutable",
                        "name": "_evidenceURI",
                        "nameLocation": "3878:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 71,
                        "src": "3862:28:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 67,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3862:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3836:55:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3908:0:0"
                  },
                  "scope": 130,
                  "src": "3813:96:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 72,
                    "nodeType": "StructuredDocumentation",
                    "src": "3915:502:0",
                    "text": "@dev Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _ruling The ruling option to which the caller wants to contribute.\n  @return fullyFunded True if the ruling option got fully funded as a result of this contribution."
                  },
                  "functionSelector": "4b2f0ea0",
                  "id": 81,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fundAppeal",
                  "nameLocation": "4431:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 77,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 74,
                        "mutability": "mutable",
                        "name": "_localDisputeID",
                        "nameLocation": "4450:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "4442:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4442:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 76,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "4475:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "4467:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 75,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4467:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4441:42:0"
                  },
                  "returnParameters": {
                    "id": 80,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 79,
                        "mutability": "mutable",
                        "name": "fullyFunded",
                        "nameLocation": "4523:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "4518:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 78,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4518:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4517:18:0"
                  },
                  "scope": 130,
                  "src": "4422:114:0",
                  "stateMutability": "payable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 82,
                    "nodeType": "StructuredDocumentation",
                    "src": "4542:417:0",
                    "text": "@dev Returns appeal multipliers.\n  @return winnerStakeMultiplier Winners stake multiplier.\n  @return loserStakeMultiplier Losers stake multiplier.\n  @return loserAppealPeriodMultiplier Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\n  @return denominator Multiplier denominator in basis points."
                  },
                  "functionSelector": "79873f8a",
                  "id": 93,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getMultipliers",
                  "nameLocation": "4973:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 83,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4987:2:0"
                  },
                  "returnParameters": {
                    "id": 92,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 85,
                        "mutability": "mutable",
                        "name": "winnerStakeMultiplier",
                        "nameLocation": "5074:21:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "5066:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 84,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5066:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 87,
                        "mutability": "mutable",
                        "name": "loserStakeMultiplier",
                        "nameLocation": "5117:20:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "5109:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 86,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5109:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 89,
                        "mutability": "mutable",
                        "name": "loserAppealPeriodMultiplier",
                        "nameLocation": "5159:27:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "5151:35:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 88,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5151:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 91,
                        "mutability": "mutable",
                        "name": "denominator",
                        "nameLocation": "5208:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "5200:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5200:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5052:177:0"
                  },
                  "scope": 130,
                  "src": "4964:266:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 94,
                    "nodeType": "StructuredDocumentation",
                    "src": "5236:601:0",
                    "text": "@dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _contributor Beneficiary of withdraw operation.\n  @param _round Number of the round that caller wants to execute withdraw on.\n  @param _ruling A ruling option that caller wants to execute withdraw on.\n  @return sum The amount that is going to be transferred to contributor as a result of this function call."
                  },
                  "functionSelector": "362c3479",
                  "id": 107,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawFeesAndRewards",
                  "nameLocation": "5851:22:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "_localDisputeID",
                        "nameLocation": "5891:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 107,
                        "src": "5883:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5883:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 98,
                        "mutability": "mutable",
                        "name": "_contributor",
                        "nameLocation": "5932:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 107,
                        "src": "5916:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5916:15:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 100,
                        "mutability": "mutable",
                        "name": "_round",
                        "nameLocation": "5962:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 107,
                        "src": "5954:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 99,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5954:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 102,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "5986:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 107,
                        "src": "5978:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 101,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5978:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5873:126:0"
                  },
                  "returnParameters": {
                    "id": 106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 105,
                        "mutability": "mutable",
                        "name": "sum",
                        "nameLocation": "6034:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 107,
                        "src": "6026:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 104,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6026:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6025:13:0"
                  },
                  "scope": 130,
                  "src": "5842:197:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 108,
                    "nodeType": "StructuredDocumentation",
                    "src": "6045:425:0",
                    "text": "@dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _contributor Beneficiary of withdraw operation.\n  @param _ruling Ruling option that caller wants to execute withdraw on."
                  },
                  "functionSelector": "fe2dddeb",
                  "id": 117,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawFeesAndRewardsForAllRounds",
                  "nameLocation": "6484:34:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 110,
                        "mutability": "mutable",
                        "name": "_localDisputeID",
                        "nameLocation": "6536:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 117,
                        "src": "6528:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6528:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 112,
                        "mutability": "mutable",
                        "name": "_contributor",
                        "nameLocation": "6577:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 117,
                        "src": "6561:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 111,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6561:15:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 114,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "6607:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 117,
                        "src": "6599:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6599:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6518:102:0"
                  },
                  "returnParameters": {
                    "id": 116,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6637:0:0"
                  },
                  "scope": 130,
                  "src": "6475:163:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 118,
                    "nodeType": "StructuredDocumentation",
                    "src": "6644:426:0",
                    "text": "@dev Returns the sum of withdrawable amount.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _contributor Beneficiary of withdraw operation.\n  @param _ruling Ruling option that caller wants to get withdrawable amount from.\n  @return sum The total amount available to withdraw."
                  },
                  "functionSelector": "ec85635b",
                  "id": 129,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalWithdrawableAmount",
                  "nameLocation": "7084:26:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 125,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "_localDisputeID",
                        "nameLocation": "7128:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 129,
                        "src": "7120:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7120:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 122,
                        "mutability": "mutable",
                        "name": "_contributor",
                        "nameLocation": "7169:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 129,
                        "src": "7153:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 121,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7153:15:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 124,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "7199:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 129,
                        "src": "7191:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 123,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7191:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7110:102:0"
                  },
                  "returnParameters": {
                    "id": 128,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 127,
                        "mutability": "mutable",
                        "name": "sum",
                        "nameLocation": "7252:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 129,
                        "src": "7244:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 126,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7244:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7243:13:0"
                  },
                  "scope": 130,
                  "src": "7075:182:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                }
              ],
              "scope": 131,
              "src": "662:6597:0",
              "usedErrors": []
            }
          ],
          "src": "225:7035:0"
        },
        "id": 0
      },
      "@kleros/erc-792/contracts/IArbitrable.sol": {
        "ast": {
          "absolutePath": "@kleros/erc-792/contracts/IArbitrable.sol",
          "exportedSymbols": {
            "IArbitrable": [
              153
            ],
            "IArbitrator": [
              249
            ]
          },
          "id": 154,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 132,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "160:23:1"
            },
            {
              "absolutePath": "@kleros/erc-792/contracts/IArbitrator.sol",
              "file": "./IArbitrator.sol",
              "id": 133,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 154,
              "sourceUnit": 250,
              "src": "185:27:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IArbitrable",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 134,
                "nodeType": "StructuredDocumentation",
                "src": "214:298:1",
                "text": " @title IArbitrable\n Arbitrable interface.\n When developing arbitrable contracts, we need to:\n - Define the action taken when a ruling is received by the contract.\n - Allow dispute creation. For this a function must call arbitrator.createDispute{value: _fee}(_choices,_extraData);"
              },
              "fullyImplemented": false,
              "id": 153,
              "linearizedBaseContracts": [
                153
              ],
              "name": "IArbitrable",
              "nameLocation": "523:11:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 135,
                    "nodeType": "StructuredDocumentation",
                    "src": "541:241:1",
                    "text": " @dev To be raised when a ruling is given.\n @param _arbitrator The arbitrator giving the ruling.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling The ruling which was given."
                  },
                  "id": 144,
                  "name": "Ruling",
                  "nameLocation": "793:6:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 143,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 138,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_arbitrator",
                        "nameLocation": "820:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 144,
                        "src": "800:31:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrator_$249",
                          "typeString": "contract IArbitrator"
                        },
                        "typeName": {
                          "id": 137,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 136,
                            "name": "IArbitrator",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 249,
                            "src": "800:11:1"
                          },
                          "referencedDeclaration": 249,
                          "src": "800:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IArbitrator_$249",
                            "typeString": "contract IArbitrator"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 140,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "849:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 144,
                        "src": "833:26:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 139,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "833:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 142,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "869:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 144,
                        "src": "861:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 141,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "799:78:1"
                  },
                  "src": "787:91:1"
                },
                {
                  "documentation": {
                    "id": 145,
                    "nodeType": "StructuredDocumentation",
                    "src": "884:394:1",
                    "text": " @dev Give a ruling for a dispute. Must be called by the arbitrator.\n The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\"."
                  },
                  "functionSelector": "311a6c56",
                  "id": 152,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "rule",
                  "nameLocation": "1292:4:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 147,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "1305:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 152,
                        "src": "1297:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 146,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1297:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 149,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "1325:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 152,
                        "src": "1317:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1317:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1296:37:1"
                  },
                  "returnParameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1342:0:1"
                  },
                  "scope": 153,
                  "src": "1283:60:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 154,
              "src": "513:832:1",
              "usedErrors": []
            }
          ],
          "src": "160:1186:1"
        },
        "id": 1
      },
      "@kleros/erc-792/contracts/IArbitrator.sol": {
        "ast": {
          "absolutePath": "@kleros/erc-792/contracts/IArbitrator.sol",
          "exportedSymbols": {
            "IArbitrable": [
              153
            ],
            "IArbitrator": [
              249
            ]
          },
          "id": 250,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 155,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "161:23:2"
            },
            {
              "absolutePath": "@kleros/erc-792/contracts/IArbitrable.sol",
              "file": "./IArbitrable.sol",
              "id": 156,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 250,
              "sourceUnit": 154,
              "src": "186:27:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IArbitrator",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 157,
                "nodeType": "StructuredDocumentation",
                "src": "215:473:2",
                "text": " @title Arbitrator\n Arbitrator abstract contract.\n When developing arbitrator contracts we need to:\n - Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\n - Define the functions for cost display (arbitrationCost and appealCost).\n - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling)."
              },
              "fullyImplemented": false,
              "id": 249,
              "linearizedBaseContracts": [
                249
              ],
              "name": "IArbitrator",
              "nameLocation": "699:11:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IArbitrator.DisputeStatus",
                  "id": 161,
                  "members": [
                    {
                      "id": 158,
                      "name": "Waiting",
                      "nameLocation": "746:7:2",
                      "nodeType": "EnumValue",
                      "src": "746:7:2"
                    },
                    {
                      "id": 159,
                      "name": "Appealable",
                      "nameLocation": "763:10:2",
                      "nodeType": "EnumValue",
                      "src": "763:10:2"
                    },
                    {
                      "id": 160,
                      "name": "Solved",
                      "nameLocation": "783:6:2",
                      "nodeType": "EnumValue",
                      "src": "783:6:2"
                    }
                  ],
                  "name": "DisputeStatus",
                  "nameLocation": "722:13:2",
                  "nodeType": "EnumDefinition",
                  "src": "717:78:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 162,
                    "nodeType": "StructuredDocumentation",
                    "src": "801:174:2",
                    "text": " @dev To be emitted when a dispute is created.\n @param _disputeID ID of the dispute.\n @param _arbitrable The contract which created the dispute."
                  },
                  "id": 169,
                  "name": "DisputeCreation",
                  "nameLocation": "986:15:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 164,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "1018:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "1002:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1002:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 167,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_arbitrable",
                        "nameLocation": "1050:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "1030:31:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$153",
                          "typeString": "contract IArbitrable"
                        },
                        "typeName": {
                          "id": 166,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 165,
                            "name": "IArbitrable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 153,
                            "src": "1030:11:2"
                          },
                          "referencedDeclaration": 153,
                          "src": "1030:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IArbitrable_$153",
                            "typeString": "contract IArbitrable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1001:61:2"
                  },
                  "src": "980:83:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 170,
                    "nodeType": "StructuredDocumentation",
                    "src": "1069:179:2",
                    "text": " @dev To be emitted when a dispute can be appealed.\n @param _disputeID ID of the dispute.\n @param _arbitrable The contract which created the dispute."
                  },
                  "id": 177,
                  "name": "AppealPossible",
                  "nameLocation": "1259:14:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "1290:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 177,
                        "src": "1274:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1274:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 175,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_arbitrable",
                        "nameLocation": "1322:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 177,
                        "src": "1302:31:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$153",
                          "typeString": "contract IArbitrable"
                        },
                        "typeName": {
                          "id": 174,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 173,
                            "name": "IArbitrable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 153,
                            "src": "1302:11:2"
                          },
                          "referencedDeclaration": 153,
                          "src": "1302:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IArbitrable_$153",
                            "typeString": "contract IArbitrable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1273:61:2"
                  },
                  "src": "1253:82:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 178,
                    "nodeType": "StructuredDocumentation",
                    "src": "1341:184:2",
                    "text": " @dev To be emitted when the current ruling is appealed.\n @param _disputeID ID of the dispute.\n @param _arbitrable The contract which created the dispute."
                  },
                  "id": 185,
                  "name": "AppealDecision",
                  "nameLocation": "1536:14:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 184,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 180,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "1567:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 185,
                        "src": "1551:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1551:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 183,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_arbitrable",
                        "nameLocation": "1599:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 185,
                        "src": "1579:31:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$153",
                          "typeString": "contract IArbitrable"
                        },
                        "typeName": {
                          "id": 182,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 181,
                            "name": "IArbitrable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 153,
                            "src": "1579:11:2"
                          },
                          "referencedDeclaration": 153,
                          "src": "1579:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IArbitrable_$153",
                            "typeString": "contract IArbitrable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1550:61:2"
                  },
                  "src": "1530:82:2"
                },
                {
                  "documentation": {
                    "id": 186,
                    "nodeType": "StructuredDocumentation",
                    "src": "1618:367:2",
                    "text": " @dev Create a dispute. Must be called by the arbitrable contract.\n Must be paid at least arbitrationCost(_extraData).\n @param _choices Amount of choices the arbitrator can make in this dispute.\n @param _extraData Can be used to give additional info on the dispute to be created.\n @return disputeID ID of the dispute created."
                  },
                  "functionSelector": "c13517e1",
                  "id": 195,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createDispute",
                  "nameLocation": "1999:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 188,
                        "mutability": "mutable",
                        "name": "_choices",
                        "nameLocation": "2021:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "2013:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 187,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2013:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "_extraData",
                        "nameLocation": "2046:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "2031:25:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2031:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2012:45:2"
                  },
                  "returnParameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 193,
                        "mutability": "mutable",
                        "name": "disputeID",
                        "nameLocation": "2092:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "2084:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2084:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2083:19:2"
                  },
                  "scope": 249,
                  "src": "1990:113:2",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 196,
                    "nodeType": "StructuredDocumentation",
                    "src": "2109:333:2",
                    "text": " @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n @param _extraData Can be used to give additional info on the dispute to be created.\n @return cost Amount to be paid."
                  },
                  "functionSelector": "f7434ea9",
                  "id": 203,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "arbitrationCost",
                  "nameLocation": "2456:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "_extraData",
                        "nameLocation": "2487:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "2472:25:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2472:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2471:27:2"
                  },
                  "returnParameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "cost",
                        "nameLocation": "2530:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "2522:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2522:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2521:14:2"
                  },
                  "scope": 249,
                  "src": "2447:89:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 204,
                    "nodeType": "StructuredDocumentation",
                    "src": "2542:243:2",
                    "text": " @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\n @param _disputeID ID of the dispute to be appealed.\n @param _extraData Can be used to give extra info on the appeal."
                  },
                  "functionSelector": "49912f88",
                  "id": 211,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "appeal",
                  "nameLocation": "2799:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 209,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 206,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "2814:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 211,
                        "src": "2806:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 205,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2806:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 208,
                        "mutability": "mutable",
                        "name": "_extraData",
                        "nameLocation": "2841:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 211,
                        "src": "2826:25:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 207,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2826:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2805:47:2"
                  },
                  "returnParameters": {
                    "id": 210,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2869:0:2"
                  },
                  "scope": 249,
                  "src": "2790:80:2",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 212,
                    "nodeType": "StructuredDocumentation",
                    "src": "2876:386:2",
                    "text": " @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n @param _disputeID ID of the dispute to be appealed.\n @param _extraData Can be used to give additional info on the dispute to be created.\n @return cost Amount to be paid."
                  },
                  "functionSelector": "f23f16e6",
                  "id": 221,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "appealCost",
                  "nameLocation": "3276:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "3295:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 221,
                        "src": "3287:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3287:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 216,
                        "mutability": "mutable",
                        "name": "_extraData",
                        "nameLocation": "3322:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 221,
                        "src": "3307:25:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 215,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3307:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3286:47:2"
                  },
                  "returnParameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "cost",
                        "nameLocation": "3365:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 221,
                        "src": "3357:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3357:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3356:14:2"
                  },
                  "scope": 249,
                  "src": "3267:104:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 222,
                    "nodeType": "StructuredDocumentation",
                    "src": "3377:302:2",
                    "text": " @dev Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\n @param _disputeID ID of the dispute.\n @return start The start of the period.\n @return end The end of the period."
                  },
                  "functionSelector": "afe15cfb",
                  "id": 231,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "appealPeriod",
                  "nameLocation": "3693:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "3714:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "3706:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3706:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3705:20:2"
                  },
                  "returnParameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "start",
                        "nameLocation": "3757:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "3749:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 226,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3749:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "end",
                        "nameLocation": "3772:3:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "3764:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3764:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3748:28:2"
                  },
                  "scope": 249,
                  "src": "3684:93:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 232,
                    "nodeType": "StructuredDocumentation",
                    "src": "3783:156:2",
                    "text": " @dev Return the status of a dispute.\n @param _disputeID ID of the dispute to rule.\n @return status The status of the dispute."
                  },
                  "functionSelector": "10f169e8",
                  "id": 240,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "disputeStatus",
                  "nameLocation": "3953:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "3975:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 240,
                        "src": "3967:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3967:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3966:20:2"
                  },
                  "returnParameters": {
                    "id": 239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 238,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "4024:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 240,
                        "src": "4010:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum IArbitrator.DisputeStatus"
                        },
                        "typeName": {
                          "id": 237,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 236,
                            "name": "DisputeStatus",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 161,
                            "src": "4010:13:2"
                          },
                          "referencedDeclaration": 161,
                          "src": "4010:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum IArbitrator.DisputeStatus"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4009:22:2"
                  },
                  "scope": 249,
                  "src": "3944:88:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 241,
                    "nodeType": "StructuredDocumentation",
                    "src": "4038:273:2",
                    "text": " @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\n @param _disputeID ID of the dispute.\n @return ruling The ruling which has been given or the one which will be given if there is no appeal."
                  },
                  "functionSelector": "1c3db16d",
                  "id": 248,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "currentRuling",
                  "nameLocation": "4325:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "4347:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 248,
                        "src": "4339:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4339:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4338:20:2"
                  },
                  "returnParameters": {
                    "id": 247,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 246,
                        "mutability": "mutable",
                        "name": "ruling",
                        "nameLocation": "4390:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 248,
                        "src": "4382:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 245,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4382:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4381:16:2"
                  },
                  "scope": 249,
                  "src": "4316:82:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 250,
              "src": "689:3711:2",
              "usedErrors": []
            }
          ],
          "src": "161:4240:2"
        },
        "id": 2
      },
      "@kleros/erc-792/contracts/erc-1497/IEvidence.sol": {
        "ast": {
          "absolutePath": "@kleros/erc-792/contracts/erc-1497/IEvidence.sol",
          "exportedSymbols": {
            "IArbitrable": [
              153
            ],
            "IArbitrator": [
              249
            ],
            "IEvidence": [
              285
            ]
          },
          "id": 286,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 251,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "152:23:3"
            },
            {
              "absolutePath": "@kleros/erc-792/contracts/IArbitrator.sol",
              "file": "../IArbitrator.sol",
              "id": 252,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 286,
              "sourceUnit": 250,
              "src": "177:28:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IEvidence",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 253,
                "nodeType": "StructuredDocumentation",
                "src": "207:56:3",
                "text": "@title IEvidence\n  ERC-1497: Evidence Standard"
              },
              "fullyImplemented": true,
              "id": 285,
              "linearizedBaseContracts": [
                285
              ],
              "name": "IEvidence",
              "nameLocation": "274:9:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 254,
                    "nodeType": "StructuredDocumentation",
                    "src": "290:269:3",
                    "text": " @dev To be emitted when meta-evidence is submitted.\n @param _metaEvidenceID Unique identifier of meta-evidence.\n @param _evidence IPFS path to metaevidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/metaevidence.json'"
                  },
                  "id": 260,
                  "name": "MetaEvidence",
                  "nameLocation": "570:12:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 256,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_metaEvidenceID",
                        "nameLocation": "599:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "583:31:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "583:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 258,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_evidence",
                        "nameLocation": "623:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "616:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "616:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "582:51:3"
                  },
                  "src": "564:70:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 261,
                    "nodeType": "StructuredDocumentation",
                    "src": "640:572:3",
                    "text": " @dev To be raised when evidence is submitted. Should point to the resource (evidences are not to be stored on chain due to gas considerations).\n @param _arbitrator The arbitrator of the contract.\n @param _evidenceGroupID Unique identifier of the evidence group the evidence belongs to.\n @param _party The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\n @param _evidence IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'"
                  },
                  "id": 272,
                  "name": "Evidence",
                  "nameLocation": "1223:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 271,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_arbitrator",
                        "nameLocation": "1261:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "1241:31:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrator_$249",
                          "typeString": "contract IArbitrator"
                        },
                        "typeName": {
                          "id": 263,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 262,
                            "name": "IArbitrator",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 249,
                            "src": "1241:11:3"
                          },
                          "referencedDeclaration": 249,
                          "src": "1241:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IArbitrator_$249",
                            "typeString": "contract IArbitrator"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 266,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_evidenceGroupID",
                        "nameLocation": "1298:16:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "1282:32:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1282:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 268,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_party",
                        "nameLocation": "1340:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "1324:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1324:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 270,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_evidence",
                        "nameLocation": "1363:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "1356:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1356:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1231:147:3"
                  },
                  "src": "1217:162:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 273,
                    "nodeType": "StructuredDocumentation",
                    "src": "1385:413:3",
                    "text": " @dev To be emitted when a dispute is created to link the correct meta-evidence to the disputeID.\n @param _arbitrator The arbitrator of the contract.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _metaEvidenceID Unique identifier of meta-evidence.\n @param _evidenceGroupID Unique identifier of the evidence group that is linked to this dispute."
                  },
                  "id": 284,
                  "name": "Dispute",
                  "nameLocation": "1809:7:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 283,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 276,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_arbitrator",
                        "nameLocation": "1846:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 284,
                        "src": "1826:31:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrator_$249",
                          "typeString": "contract IArbitrator"
                        },
                        "typeName": {
                          "id": 275,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 274,
                            "name": "IArbitrator",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 249,
                            "src": "1826:11:3"
                          },
                          "referencedDeclaration": 249,
                          "src": "1826:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IArbitrator_$249",
                            "typeString": "contract IArbitrator"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 278,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "1883:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 284,
                        "src": "1867:26:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1867:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 280,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_metaEvidenceID",
                        "nameLocation": "1911:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 284,
                        "src": "1903:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 279,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1903:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 282,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_evidenceGroupID",
                        "nameLocation": "1944:16:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 284,
                        "src": "1936:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 281,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1936:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1816:150:3"
                  },
                  "src": "1803:164:3"
                }
              ],
              "scope": 286,
              "src": "264:1705:3",
              "usedErrors": []
            }
          ],
          "src": "152:1818:3"
        },
        "id": 3
      },
      "contracts/ITruthPost.sol": {
        "ast": {
          "absolutePath": "contracts/ITruthPost.sol",
          "exportedSymbols": {
            "ITruthPost": [
              693
            ]
          },
          "id": 694,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 287,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "34:24:4"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ITruthPost",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 288,
                "nodeType": "StructuredDocumentation",
                "src": "60:424:4",
                "text": "@title  The Truth Post: Accurate and Relevant News\n @author https://github.com/proveuswrong<0xferit, gratestas>\n @dev    This contract serves as a standard interface among multiple deployments of the Truth Post contracts.\n         You should target this interface contract for interactions, not the concrete contract; otherwise you risk incompatibility across versions.\n @custom:approvals 0xferit, gratestas"
              },
              "fullyImplemented": false,
              "id": 693,
              "linearizedBaseContracts": [
                693
              ],
              "name": "ITruthPost",
              "nameLocation": "502:10:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "ffa1ad74",
                  "id": 291,
                  "mutability": "constant",
                  "name": "VERSION",
                  "nameLocation": "542:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "519:40:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "312e322e30",
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "552:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e374587661e69268352d25204d81b23ce801573f4b09f3545e69536dc085a37a",
                      "typeString": "literal_string \"1.2.0\""
                    },
                    "value": "1.2.0"
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ITruthPost.RulingOptions",
                  "id": 295,
                  "members": [
                    {
                      "id": 292,
                      "name": "Tied",
                      "nameLocation": "595:4:4",
                      "nodeType": "EnumValue",
                      "src": "595:4:4"
                    },
                    {
                      "id": 293,
                      "name": "ChallengeFailed",
                      "nameLocation": "609:15:4",
                      "nodeType": "EnumValue",
                      "src": "609:15:4"
                    },
                    {
                      "id": 294,
                      "name": "Debunked",
                      "nameLocation": "634:8:4",
                      "nodeType": "EnumValue",
                      "src": "634:8:4"
                    }
                  ],
                  "name": "RulingOptions",
                  "nameLocation": "571:13:4",
                  "nodeType": "EnumDefinition",
                  "src": "566:82:4"
                },
                {
                  "constant": false,
                  "id": 298,
                  "mutability": "mutable",
                  "name": "isPublishingEnabled",
                  "nameLocation": "659:19:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "654:31:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "74727565",
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "681:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "2d2c5565",
                  "id": 300,
                  "mutability": "mutable",
                  "name": "TREASURY",
                  "nameLocation": "714:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "691:31:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "313dab20",
                  "id": 302,
                  "mutability": "mutable",
                  "name": "treasuryBalance",
                  "nameLocation": "743:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "728:30:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "7597b3cb",
                  "id": 305,
                  "mutability": "constant",
                  "name": "NUMBER_OF_RULING_OPTIONS",
                  "nameLocation": "788:24:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "764:52:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "815:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "fe6ca782",
                  "id": 308,
                  "mutability": "constant",
                  "name": "MULTIPLIER_DENOMINATOR",
                  "nameLocation": "846:22:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "822:53:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31303234",
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "871:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1024_by_1",
                      "typeString": "int_const 1024"
                    },
                    "value": "1024"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "be467604",
                  "id": 311,
                  "mutability": "mutable",
                  "name": "LOSER_APPEAL_PERIOD_MULTIPLIER",
                  "nameLocation": "928:30:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "913:51:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353132",
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "961:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_512_by_1",
                      "typeString": "int_const 512"
                    },
                    "value": "512"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d3b476b1",
                  "id": 313,
                  "mutability": "mutable",
                  "name": "ARTICLE_WITHDRAWAL_TIMELOCK",
                  "nameLocation": "1177:27:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "1162:42:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1162:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e349ad30",
                  "id": 315,
                  "mutability": "mutable",
                  "name": "WINNER_STAKE_MULTIPLIER",
                  "nameLocation": "1282:23:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "1267:38:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1267:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "b34bfaa8",
                  "id": 317,
                  "mutability": "mutable",
                  "name": "LOSER_STAKE_MULTIPLIER",
                  "nameLocation": "1433:22:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "1418:37:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fc0ac672",
                  "id": 320,
                  "mutability": "mutable",
                  "name": "challengeTaxRate",
                  "nameLocation": "1582:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "1567:36:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1567:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3136",
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1601:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_16_by_1",
                      "typeString": "int_const 16"
                    },
                    "value": "16"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 347,
                    "nodeType": "Block",
                    "src": "1786:217:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 331,
                            "name": "ARTICLE_WITHDRAWAL_TIMELOCK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "1796:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 332,
                            "name": "_articleWithdrawalTimelock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "1826:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1796:56:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 334,
                        "nodeType": "ExpressionStatement",
                        "src": "1796:56:4"
                      },
                      {
                        "expression": {
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 335,
                            "name": "WINNER_STAKE_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "1862:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 336,
                            "name": "_winnerStakeMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "1888:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1862:48:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 338,
                        "nodeType": "ExpressionStatement",
                        "src": "1862:48:4"
                      },
                      {
                        "expression": {
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 339,
                            "name": "LOSER_STAKE_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "1920:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 340,
                            "name": "_loserStakeMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 326,
                            "src": "1945:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1920:46:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 342,
                        "nodeType": "ExpressionStatement",
                        "src": "1920:46:4"
                      },
                      {
                        "expression": {
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 343,
                            "name": "TREASURY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "1976:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 344,
                            "name": "_treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 328,
                            "src": "1987:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1976:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 346,
                        "nodeType": "ExpressionStatement",
                        "src": "1976:20:4"
                      }
                    ]
                  },
                  "id": 348,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 322,
                        "mutability": "mutable",
                        "name": "_articleWithdrawalTimelock",
                        "nameLocation": "1639:26:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 348,
                        "src": "1631:34:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1631:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "_winnerStakeMultiplier",
                        "nameLocation": "1683:22:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 348,
                        "src": "1675:30:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1675:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 326,
                        "mutability": "mutable",
                        "name": "_loserStakeMultiplier",
                        "nameLocation": "1723:21:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 348,
                        "src": "1715:29:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 325,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1715:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 328,
                        "mutability": "mutable",
                        "name": "_treasury",
                        "nameLocation": "1770:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 348,
                        "src": "1754:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 327,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:15:4",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:164:4"
                  },
                  "returnParameters": {
                    "id": 330,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1786:0:4"
                  },
                  "scope": 693,
                  "src": "1610:393:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "id": 356,
                  "name": "NewArticle",
                  "nameLocation": "2015:10:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 355,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 350,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "articleID",
                        "nameLocation": "2033:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 356,
                        "src": "2026:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 349,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2026:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 352,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "category",
                        "nameLocation": "2050:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 356,
                        "src": "2044:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 351,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2044:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 354,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "articleAddress",
                        "nameLocation": "2068:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 356,
                        "src": "2060:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 353,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2060:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2025:58:4"
                  },
                  "src": "2009:75:4"
                },
                {
                  "anonymous": false,
                  "id": 360,
                  "name": "Debunked",
                  "nameLocation": "2095:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 358,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "articleAddress",
                        "nameLocation": "2112:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 360,
                        "src": "2104:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2104:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2103:24:4"
                  },
                  "src": "2089:39:4"
                },
                {
                  "anonymous": false,
                  "id": 364,
                  "name": "ArticleWithdrawn",
                  "nameLocation": "2139:16:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 363,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 362,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "articleAddress",
                        "nameLocation": "2164:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 364,
                        "src": "2156:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 361,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2156:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2155:24:4"
                  },
                  "src": "2133:47:4"
                },
                {
                  "anonymous": false,
                  "id": 370,
                  "name": "BalanceUpdate",
                  "nameLocation": "2191:13:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 369,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 366,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "articleAddress",
                        "nameLocation": "2213:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "2205:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2205:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 368,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newTotal",
                        "nameLocation": "2237:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "2229:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 367,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2229:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2204:42:4"
                  },
                  "src": "2185:62:4"
                },
                {
                  "anonymous": false,
                  "id": 374,
                  "name": "TimelockStarted",
                  "nameLocation": "2258:15:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 373,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 372,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "articleAddress",
                        "nameLocation": "2282:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 374,
                        "src": "2274:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2274:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2273:24:4"
                  },
                  "src": "2252:46:4"
                },
                {
                  "anonymous": false,
                  "id": 382,
                  "name": "Challenge",
                  "nameLocation": "2309:9:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 381,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 376,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "articleAddress",
                        "nameLocation": "2335:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 382,
                        "src": "2319:30:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 375,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2319:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 378,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "challanger",
                        "nameLocation": "2359:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 382,
                        "src": "2351:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2351:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 380,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "disputeID",
                        "nameLocation": "2379:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 382,
                        "src": "2371:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 379,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2371:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2318:71:4"
                  },
                  "src": "2303:87:4"
                },
                {
                  "anonymous": false,
                  "id": 395,
                  "name": "Contribution",
                  "nameLocation": "2401:12:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 384,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "disputeId",
                        "nameLocation": "2439:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 395,
                        "src": "2423:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2423:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 386,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "round",
                        "nameLocation": "2474:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 395,
                        "src": "2458:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 385,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2458:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 389,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ruling",
                        "nameLocation": "2503:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 395,
                        "src": "2489:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 388,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 387,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "2489:13:4"
                          },
                          "referencedDeclaration": 295,
                          "src": "2489:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 391,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "contributor",
                        "nameLocation": "2535:11:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 395,
                        "src": "2519:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 390,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2519:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 393,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2564:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 395,
                        "src": "2556:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2556:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2413:163:4"
                  },
                  "src": "2395:182:4"
                },
                {
                  "anonymous": false,
                  "id": 408,
                  "name": "Withdrawal",
                  "nameLocation": "2588:10:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 407,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 397,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "disputeId",
                        "nameLocation": "2624:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "2608:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 396,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2608:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 399,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "round",
                        "nameLocation": "2659:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "2643:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 398,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2643:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 402,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ruling",
                        "nameLocation": "2688:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "2674:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 401,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 400,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "2674:13:4"
                          },
                          "referencedDeclaration": 295,
                          "src": "2674:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 404,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "contributor",
                        "nameLocation": "2720:11:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "2704:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 403,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2704:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 406,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reward",
                        "nameLocation": "2749:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "2741:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 405,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2741:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2598:163:4"
                  },
                  "src": "2582:180:4"
                },
                {
                  "anonymous": false,
                  "id": 417,
                  "name": "RulingFunded",
                  "nameLocation": "2773:12:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 416,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 410,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "disputeId",
                        "nameLocation": "2802:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "2786:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 409,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2786:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 412,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "round",
                        "nameLocation": "2829:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "2813:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2813:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 415,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "ruling",
                        "nameLocation": "2858:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "2836:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 414,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 413,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "2836:13:4"
                          },
                          "referencedDeclaration": 295,
                          "src": "2836:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2785:80:4"
                  },
                  "src": "2767:99:4"
                },
                {
                  "anonymous": false,
                  "id": 421,
                  "name": "OwnershipTransfer",
                  "nameLocation": "2877:17:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 420,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 419,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_newOwner",
                        "nameLocation": "2911:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 421,
                        "src": "2895:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 418,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2895:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2894:27:4"
                  },
                  "src": "2871:51:4"
                },
                {
                  "anonymous": false,
                  "id": 425,
                  "name": "AdminUpdate",
                  "nameLocation": "2933:11:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 424,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 423,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_newAdmin",
                        "nameLocation": "2961:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 425,
                        "src": "2945:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 422,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2945:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2944:27:4"
                  },
                  "src": "2927:45:4"
                },
                {
                  "anonymous": false,
                  "id": 429,
                  "name": "WinnerStakeMultiplierUpdate",
                  "nameLocation": "2983:27:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 428,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 427,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_newWinnerStakeMultiplier",
                        "nameLocation": "3027:25:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 429,
                        "src": "3011:41:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 426,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3011:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3010:43:4"
                  },
                  "src": "2977:77:4"
                },
                {
                  "anonymous": false,
                  "id": 433,
                  "name": "LoserStakeMultiplierUpdate",
                  "nameLocation": "3065:26:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 431,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_newLoserStakeMultiplier",
                        "nameLocation": "3108:24:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 433,
                        "src": "3092:40:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3092:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3091:42:4"
                  },
                  "src": "3059:75:4"
                },
                {
                  "anonymous": false,
                  "id": 437,
                  "name": "LoserAppealPeriodMultiplierUpdate",
                  "nameLocation": "3145:33:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 436,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 435,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_newLoserAppealPeriodMultiplier",
                        "nameLocation": "3195:31:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 437,
                        "src": "3179:47:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 434,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3179:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3178:49:4"
                  },
                  "src": "3139:89:4"
                },
                {
                  "anonymous": false,
                  "id": 441,
                  "name": "ArticleWithdrawalTimelockUpdate",
                  "nameLocation": "3239:31:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 440,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 439,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_newWithdrawalTimelock",
                        "nameLocation": "3287:22:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 441,
                        "src": "3271:38:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 438,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3271:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3270:40:4"
                  },
                  "src": "3233:78:4"
                },
                {
                  "anonymous": false,
                  "id": 445,
                  "name": "ChallengeTaxRateUpdate",
                  "nameLocation": "3322:22:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 444,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 443,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_newTaxRate",
                        "nameLocation": "3361:11:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 445,
                        "src": "3345:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 442,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3345:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3344:29:4"
                  },
                  "src": "3316:58:4"
                },
                {
                  "anonymous": false,
                  "id": 449,
                  "name": "TreasuryUpdate",
                  "nameLocation": "3385:14:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 448,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 447,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_newTreasury",
                        "nameLocation": "3416:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 449,
                        "src": "3400:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 446,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3400:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3399:30:4"
                  },
                  "src": "3379:51:4"
                },
                {
                  "anonymous": false,
                  "id": 453,
                  "name": "TreasuryBalanceUpdate",
                  "nameLocation": "3441:21:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 452,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 451,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_byAmount",
                        "nameLocation": "3479:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "3463:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 450,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3463:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3462:27:4"
                  },
                  "src": "3435:55:4"
                },
                {
                  "documentation": {
                    "id": 454,
                    "nodeType": "StructuredDocumentation",
                    "src": "3497:219:4",
                    "text": "@notice Submit an evidence.\n @param _disputeID The dispute ID as in arbitrator.\n @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'"
                  },
                  "functionSelector": "a6a7f0eb",
                  "id": 461,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "submitEvidence",
                  "nameLocation": "3730:14:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 459,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 456,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "3753:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 461,
                        "src": "3745:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 455,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3745:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 458,
                        "mutability": "mutable",
                        "name": "_evidenceURI",
                        "nameLocation": "3781:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 461,
                        "src": "3765:28:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 457,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3765:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3744:50:4"
                  },
                  "returnParameters": {
                    "id": 460,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3811:0:4"
                  },
                  "scope": 693,
                  "src": "3721:91:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 462,
                    "nodeType": "StructuredDocumentation",
                    "src": "3818:407:4",
                    "text": "@notice Fund a crowdfunding appeal.\n @dev Lets user to contribute funding of an appeal round. Emits Contribution. If fully funded, emits RulingFunded.\n @param _disputeID The dispute ID as in arbitrator.\n @param _ruling The ruling option to which the caller wants to contribute.\n @return fullyFunded True if the ruling option got fully funded as a result of this contribution."
                  },
                  "functionSelector": "12b3a2c0",
                  "id": 472,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fundAppeal",
                  "nameLocation": "4239:10:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 468,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 464,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "4258:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 472,
                        "src": "4250:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 463,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4250:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 467,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "4284:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 472,
                        "src": "4270:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 466,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 465,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "4270:13:4"
                          },
                          "referencedDeclaration": 295,
                          "src": "4270:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4249:43:4"
                  },
                  "returnParameters": {
                    "id": 471,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 470,
                        "mutability": "mutable",
                        "name": "fullyFunded",
                        "nameLocation": "4332:11:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 472,
                        "src": "4327:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 469,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4327:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4326:18:4"
                  },
                  "scope": 693,
                  "src": "4230:115:4",
                  "stateMutability": "payable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 473,
                    "nodeType": "StructuredDocumentation",
                    "src": "4351:406:4",
                    "text": "@notice Publish an article.\n @dev    Do not confuse articleID with articleAddress. Emits NewArticle.\n @param _articleID Unique identifier of an article in IPFS content identifier format.\n @param _category The category code of this new article.\n @param _searchPointer Starting point of the search. Find a vacant storage slot before calling this function to minimize gas cost."
                  },
                  "functionSelector": "29238089",
                  "id": 482,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initializeArticle",
                  "nameLocation": "4771:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 480,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 475,
                        "mutability": "mutable",
                        "name": "_articleID",
                        "nameLocation": "4814:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4798:26:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 474,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4798:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 477,
                        "mutability": "mutable",
                        "name": "_category",
                        "nameLocation": "4840:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4834:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 476,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4834:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 479,
                        "mutability": "mutable",
                        "name": "_searchPointer",
                        "nameLocation": "4866:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4859:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "4859:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4788:98:4"
                  },
                  "returnParameters": {
                    "id": 481,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4911:0:4"
                  },
                  "scope": 693,
                  "src": "4762:150:4",
                  "stateMutability": "payable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 483,
                    "nodeType": "StructuredDocumentation",
                    "src": "4918:195:4",
                    "text": "@notice Increase bounty.\n @dev Lets author to increase a bounty of a live article. Emits BalanceUpdate.\n @param _articleStorageAddress The address of the article in the storage."
                  },
                  "functionSelector": "bc0936fd",
                  "id": 488,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseBounty",
                  "nameLocation": "5127:14:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 486,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "_articleStorageAddress",
                        "nameLocation": "5149:22:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "5142:29:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "5142:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5141:31:4"
                  },
                  "returnParameters": {
                    "id": 487,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5197:0:4"
                  },
                  "scope": 693,
                  "src": "5118:80:4",
                  "stateMutability": "payable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 489,
                    "nodeType": "StructuredDocumentation",
                    "src": "5204:205:4",
                    "text": "@notice Initiate unpublishing process.\n @dev Lets an author to start unpublishing process. Emits TimelockStarted.\n @param _articleStorageAddress The address of the article in the storage."
                  },
                  "functionSelector": "956dcbd2",
                  "id": 494,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initiateWithdrawal",
                  "nameLocation": "5423:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 492,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 491,
                        "mutability": "mutable",
                        "name": "_articleStorageAddress",
                        "nameLocation": "5449:22:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 494,
                        "src": "5442:29:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 490,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "5442:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5441:31:4"
                  },
                  "returnParameters": {
                    "id": 493,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5489:0:4"
                  },
                  "scope": 693,
                  "src": "5414:76:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 495,
                    "nodeType": "StructuredDocumentation",
                    "src": "5496:180:4",
                    "text": "@notice Execute unpublishing.\n @dev Executes unpublishing of an article. Emits Withdrew.\n @param _articleStorageAddress The address of the article in the storage."
                  },
                  "functionSelector": "ab9cd37e",
                  "id": 500,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "5690:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 498,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 497,
                        "mutability": "mutable",
                        "name": "_articleStorageAddress",
                        "nameLocation": "5706:22:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 500,
                        "src": "5699:29:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 496,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "5699:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5698:31:4"
                  },
                  "returnParameters": {
                    "id": 499,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5746:0:4"
                  },
                  "scope": 693,
                  "src": "5681:66:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 501,
                    "nodeType": "StructuredDocumentation",
                    "src": "5753:194:4",
                    "text": "@notice Challenge article.\n @dev Challenges the article at the given storage address. Emits Challenge.\n @param _articleStorageAddress The address of the article in the storage."
                  },
                  "functionSelector": "736ed418",
                  "id": 506,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "challenge",
                  "nameLocation": "5961:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 504,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 503,
                        "mutability": "mutable",
                        "name": "_articleStorageAddress",
                        "nameLocation": "5978:22:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 506,
                        "src": "5971:29:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 502,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "5971:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5970:31:4"
                  },
                  "returnParameters": {
                    "id": 505,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6026:0:4"
                  },
                  "scope": 693,
                  "src": "5952:75:4",
                  "stateMutability": "payable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 507,
                    "nodeType": "StructuredDocumentation",
                    "src": "6033:453:4",
                    "text": "@notice Transfer ownership of an article.\n @dev Lets you to transfer ownership of an article. \n      This is useful when you want to change owner account without withdrawing and resubmitting. \n      Emits OwnershipTransfer.\n @param _articleStorageAddress The address of article in the storage.\n @param _newOwner The new owner of the article which resides in the storage address, provided by the previous parameter."
                  },
                  "functionSelector": "06bcbd73",
                  "id": 514,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferOwnership",
                  "nameLocation": "6500:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 512,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 509,
                        "mutability": "mutable",
                        "name": "_articleStorageAddress",
                        "nameLocation": "6525:22:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6518:29:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 508,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "6518:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 511,
                        "mutability": "mutable",
                        "name": "_newOwner",
                        "nameLocation": "6565:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6549:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 510,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6549:15:4",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6517:58:4"
                  },
                  "returnParameters": {
                    "id": 513,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6592:0:4"
                  },
                  "scope": 693,
                  "src": "6491:102:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 515,
                    "nodeType": "StructuredDocumentation",
                    "src": "6599:300:4",
                    "text": "@notice Update the arbitration cost for the winner.\n @dev Sets the multiplier of the arbitration cost that the winner has to pay as fee stake to a new value. \n      Emits WinnerStakeMultiplierUpdate.\n @param _newWinnerStakeMultiplier The new value of WINNER_STAKE_MULTIPLIER."
                  },
                  "functionSelector": "adc7faba",
                  "id": 520,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeWinnerStakeMultiplier",
                  "nameLocation": "6913:27:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 518,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 517,
                        "mutability": "mutable",
                        "name": "_newWinnerStakeMultiplier",
                        "nameLocation": "6949:25:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 520,
                        "src": "6941:33:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 516,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6941:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6940:35:4"
                  },
                  "returnParameters": {
                    "id": 519,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6992:0:4"
                  },
                  "scope": 693,
                  "src": "6904:89:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 521,
                    "nodeType": "StructuredDocumentation",
                    "src": "6999:295:4",
                    "text": "@notice Update the arbitration cost for the loser.\n @dev Sets the multiplier of the arbitration cost that the loser has to pay as fee stake to a new value. \n      Emits LoserStakeMultiplierUpdate.\n @param _newLoserStakeMultiplier The new value of LOSER_STAKE_MULTIPLIER."
                  },
                  "functionSelector": "92239dff",
                  "id": 526,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeLoserStakeMultiplier",
                  "nameLocation": "7313:26:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 524,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 523,
                        "mutability": "mutable",
                        "name": "_newLoserStakeMultiplier",
                        "nameLocation": "7348:24:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 526,
                        "src": "7340:32:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 522,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7340:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7339:34:4"
                  },
                  "returnParameters": {
                    "id": 525,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7390:0:4"
                  },
                  "scope": 693,
                  "src": "7304:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 527,
                    "nodeType": "StructuredDocumentation",
                    "src": "7397:272:4",
                    "text": "@notice Update the appeal window for the loser.\n @dev Sets the multiplier of the appeal window for the loser to a new value. Emits LoserAppealPeriodMultiplierUpdate.\n @param _newLoserAppealPeriodMultiplier The new value of LOSER_APPEAL_PERIOD_MULTIPLIER."
                  },
                  "functionSelector": "c94828f0",
                  "id": 532,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeLoserAppealPeriodMultiplier",
                  "nameLocation": "7683:33:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 530,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 529,
                        "mutability": "mutable",
                        "name": "_newLoserAppealPeriodMultiplier",
                        "nameLocation": "7725:31:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "7717:39:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 528,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7717:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7716:41:4"
                  },
                  "returnParameters": {
                    "id": 531,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7774:0:4"
                  },
                  "scope": 693,
                  "src": "7674:101:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 533,
                    "nodeType": "StructuredDocumentation",
                    "src": "7781:310:4",
                    "text": "@notice Update the timelock for the article withdtrawal.\n @dev Sets the timelock before an author can initiate the withdrawal of an article to a new value. \n      Emits ArticleWithdrawalTimelockUpdate.\n @param _newArticleWithdrawalTimelock The new value of ARTICLE_WITHDRAWAL_TIMELOCK."
                  },
                  "functionSelector": "92e25925",
                  "id": 538,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeArticleWithdrawalTimelock",
                  "nameLocation": "8105:31:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 536,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 535,
                        "mutability": "mutable",
                        "name": "_newArticleWithdrawalTimelock",
                        "nameLocation": "8145:29:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "8137:37:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 534,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8137:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8136:39:4"
                  },
                  "returnParameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8192:0:4"
                  },
                  "scope": 693,
                  "src": "8096:97:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 539,
                    "nodeType": "StructuredDocumentation",
                    "src": "8199:290:4",
                    "text": "@notice Find a vacant storage slot for an article.\n @dev Helper function to find a vacant slot for article. Use this function before calling initialize to minimize your gas cost.\n @param _searchPointer Starting point of the search. If you do not have a guess, just pass 0."
                  },
                  "functionSelector": "15f36ebe",
                  "id": 546,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "findVacantStorageSlot",
                  "nameLocation": "8503:21:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 542,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 541,
                        "mutability": "mutable",
                        "name": "_searchPointer",
                        "nameLocation": "8532:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 546,
                        "src": "8525:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 540,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "8525:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8524:23:4"
                  },
                  "returnParameters": {
                    "id": 545,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 544,
                        "mutability": "mutable",
                        "name": "vacantSlotIndex",
                        "nameLocation": "8587:15:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 546,
                        "src": "8579:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 543,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8579:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8578:25:4"
                  },
                  "scope": 693,
                  "src": "8494:110:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 547,
                    "nodeType": "StructuredDocumentation",
                    "src": "8610:220:4",
                    "text": "@notice Get required challenge fee.\n @dev Returns the total amount needs to be paid to challenge an article, including taxes if any.\n @param _articleStorageAddress The address of article in the storage."
                  },
                  "functionSelector": "64ff9dfa",
                  "id": 554,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "challengeFee",
                  "nameLocation": "8844:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 550,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 549,
                        "mutability": "mutable",
                        "name": "_articleStorageAddress",
                        "nameLocation": "8864:22:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 554,
                        "src": "8857:29:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 548,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "8857:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8856:31:4"
                  },
                  "returnParameters": {
                    "id": 553,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 552,
                        "mutability": "mutable",
                        "name": "challengeFee",
                        "nameLocation": "8925:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 554,
                        "src": "8917:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 551,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8917:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8916:22:4"
                  },
                  "scope": 693,
                  "src": "8835:104:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 555,
                    "nodeType": "StructuredDocumentation",
                    "src": "8945:220:4",
                    "text": "@notice Get required appeal fee and deposit.\n @dev Returns the total amount needs to be paid to appeal a dispute, including fees and stake deposit.\n @param _disputeID ID of the dispute as in arbitrator."
                  },
                  "functionSelector": "1e26de34",
                  "id": 562,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "appealFee",
                  "nameLocation": "9179:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 558,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 557,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "9197:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "9189:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 556,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9189:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9188:20:4"
                  },
                  "returnParameters": {
                    "id": 561,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 560,
                        "mutability": "mutable",
                        "name": "arbitrationFee",
                        "nameLocation": "9248:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "9240:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 559,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9240:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9239:24:4"
                  },
                  "scope": 693,
                  "src": "9170:94:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 563,
                    "nodeType": "StructuredDocumentation",
                    "src": "9270:547:4",
                    "text": "@notice Withdraw appeal crowdfunding balance.\n @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\n @param _disputeID The dispute ID as in arbitrator.\n @param _contributor Beneficiary of withdraw operation.\n @param _round Number of the round that caller wants to execute withdraw on.\n @param _ruling A ruling option that caller wants to execute withdraw on.\n @return sum The amount that is going to be transferred to contributor as a result of this function call."
                  },
                  "functionSelector": "dc227fc2",
                  "id": 577,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawFeesAndRewards",
                  "nameLocation": "9831:22:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 573,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 565,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "9871:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 577,
                        "src": "9863:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 564,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9863:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 567,
                        "mutability": "mutable",
                        "name": "_contributor",
                        "nameLocation": "9907:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 577,
                        "src": "9891:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 566,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9891:15:4",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 569,
                        "mutability": "mutable",
                        "name": "_round",
                        "nameLocation": "9937:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 577,
                        "src": "9929:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 568,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9929:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 572,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "9967:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 577,
                        "src": "9953:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 571,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 570,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "9953:13:4"
                          },
                          "referencedDeclaration": 295,
                          "src": "9953:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9853:127:4"
                  },
                  "returnParameters": {
                    "id": 576,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 575,
                        "mutability": "mutable",
                        "name": "sum",
                        "nameLocation": "10015:3:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 577,
                        "src": "10007:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 574,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10007:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10006:13:4"
                  },
                  "scope": 693,
                  "src": "9822:198:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 578,
                    "nodeType": "StructuredDocumentation",
                    "src": "10026:410:4",
                    "text": "@notice Withdraw appeal crowdfunding balance for given ruling option for all rounds.\n @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\n @param _disputeID The dispute ID as in arbitrator.\n @param _contributor Beneficiary of withdraw operation.\n @param _ruling Ruling option that caller wants to execute withdraw on."
                  },
                  "functionSelector": "6760aeb0",
                  "id": 588,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawFeesAndRewardsForAllRounds",
                  "nameLocation": "10450:34:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 586,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "10502:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "10494:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10494:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 582,
                        "mutability": "mutable",
                        "name": "_contributor",
                        "nameLocation": "10538:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "10522:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10522:15:4",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 585,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "10574:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "10560:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 584,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 583,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "10560:13:4"
                          },
                          "referencedDeclaration": 295,
                          "src": "10560:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10484:103:4"
                  },
                  "returnParameters": {
                    "id": 587,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10604:0:4"
                  },
                  "scope": 693,
                  "src": "10441:164:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 589,
                    "nodeType": "StructuredDocumentation",
                    "src": "10611:386:4",
                    "text": "@notice Withdraw appeal crowdfunding balance for given ruling option and for given rounds.\n @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for given positions at once.\n @param _disputeID The dispute ID as in arbitrator.\n @param _contributor Beneficiary of withdraw operation.\n @param positions [rounds][rulings]."
                  },
                  "functionSelector": "67284f21",
                  "id": 600,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawFeesAndRewardsForGivenPositions",
                  "nameLocation": "11011:39:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 598,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 591,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "11068:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "11060:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 590,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11060:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 593,
                        "mutability": "mutable",
                        "name": "_contributor",
                        "nameLocation": "11104:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "11088:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 592,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11088:15:4",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 597,
                        "mutability": "mutable",
                        "name": "positions",
                        "nameLocation": "11147:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "11126:30:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "uint256[][]"
                        },
                        "typeName": {
                          "baseType": {
                            "baseType": {
                              "id": 594,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11126:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 595,
                            "nodeType": "ArrayTypeName",
                            "src": "11126:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                              "typeString": "uint256[]"
                            }
                          },
                          "id": 596,
                          "nodeType": "ArrayTypeName",
                          "src": "11126:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                            "typeString": "uint256[][]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11050:112:4"
                  },
                  "returnParameters": {
                    "id": 599,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11179:0:4"
                  },
                  "scope": 693,
                  "src": "11002:178:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 601,
                    "nodeType": "StructuredDocumentation",
                    "src": "11186:346:4",
                    "text": "@notice Withdraw appeal crowdfunding balance for all ruling options and all rounds.\n @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds and all rulings at once.\n @param _disputeID The dispute ID as in arbitrator.\n @param _contributor Beneficiary of withdraw operation."
                  },
                  "functionSelector": "c9330c0f",
                  "id": 608,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawFeesAndRewardsForAllRoundsAndAllRulings",
                  "nameLocation": "11546:47:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 606,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 603,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "11602:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 608,
                        "src": "11594:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 602,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11594:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 605,
                        "mutability": "mutable",
                        "name": "_contributor",
                        "nameLocation": "11630:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 608,
                        "src": "11614:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 604,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11614:15:4",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11593:50:4"
                  },
                  "returnParameters": {
                    "id": 607,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11676:0:4"
                  },
                  "scope": 693,
                  "src": "11537:140:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 609,
                    "nodeType": "StructuredDocumentation",
                    "src": "11683:352:4",
                    "text": "@notice Learn the total amount of appeal crowdfunding balance available.\n @dev Returns the sum of withdrawable amount and 2D array of positions[round][ruling].\n @param _disputeID The dispute ID as in arbitrator.\n @param _contributor Beneficiary of withdraw operation.\n @return sum The total amount available to withdraw."
                  },
                  "functionSelector": "af4a9144",
                  "id": 622,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalWithdrawableAmount",
                  "nameLocation": "12049:26:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 614,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "12084:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "12076:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12076:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 613,
                        "mutability": "mutable",
                        "name": "_contributor",
                        "nameLocation": "12112:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "12096:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 612,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12096:15:4",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12075:50:4"
                  },
                  "returnParameters": {
                    "id": 621,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 616,
                        "mutability": "mutable",
                        "name": "sum",
                        "nameLocation": "12197:3:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "12189:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 615,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12189:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 620,
                        "mutability": "mutable",
                        "name": "positions",
                        "nameLocation": "12221:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "12202:28:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[][]"
                        },
                        "typeName": {
                          "baseType": {
                            "baseType": {
                              "id": 617,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12202:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 618,
                            "nodeType": "ArrayTypeName",
                            "src": "12202:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                              "typeString": "uint256[]"
                            }
                          },
                          "id": 619,
                          "nodeType": "ArrayTypeName",
                          "src": "12202:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                            "typeString": "uint256[][]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12188:43:4"
                  },
                  "scope": 693,
                  "src": "12040:192:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 623,
                    "nodeType": "StructuredDocumentation",
                    "src": "12238:392:4",
                    "text": "@notice Learn about given dispute round.\n @param _disputeID The dispute ID as in arbitrator.\n @param _round Round ID.\n @return hasPaid Whether given ruling option was fully funded.\n @return totalPerRuling The total raised per ruling option.\n @return totalClaimableAfterExpenses Total amount will be distributed back to winners, after deducting expenses."
                  },
                  "functionSelector": "8a9bb02a",
                  "id": 644,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoundInfo",
                  "nameLocation": "12644:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 625,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "12665:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 644,
                        "src": "12657:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 624,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12657:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 627,
                        "mutability": "mutable",
                        "name": "_round",
                        "nameLocation": "12685:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 644,
                        "src": "12677:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 626,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12677:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12656:36:4"
                  },
                  "returnParameters": {
                    "id": 643,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 634,
                        "mutability": "mutable",
                        "name": "hasPaid",
                        "nameLocation": "12811:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 644,
                        "src": "12769:49:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$3_memory_ptr",
                          "typeString": "bool[3]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 629,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "12769:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 633,
                          "length": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 630,
                              "name": "NUMBER_OF_RULING_OPTIONS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "12774:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12801:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12774:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "12769:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$3_storage_ptr",
                            "typeString": "bool[3]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 640,
                        "mutability": "mutable",
                        "name": "totalPerRuling",
                        "nameLocation": "12877:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 644,
                        "src": "12832:59:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 635,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12832:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 639,
                          "length": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 636,
                              "name": "NUMBER_OF_RULING_OPTIONS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "12840:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12867:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12840:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "12832:37:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                            "typeString": "uint256[3]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 642,
                        "mutability": "mutable",
                        "name": "totalClaimableAfterExpenses",
                        "nameLocation": "12913:27:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 644,
                        "src": "12905:35:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 641,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12905:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12755:195:4"
                  },
                  "scope": 693,
                  "src": "12635:316:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 645,
                    "nodeType": "StructuredDocumentation",
                    "src": "12957:233:4",
                    "text": "@notice Learn about how much more needs to be raised for given ruling option.\n @param _disputeID The dispute ID as in arbitrator.\n @param _ruling The ruling option to query.\n @return Amount needs to be raised"
                  },
                  "functionSelector": "a509efeb",
                  "id": 655,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountRemainsToBeRaised",
                  "nameLocation": "13204:26:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 651,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 647,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "13239:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 655,
                        "src": "13231:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 646,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13231:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 650,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "13265:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 655,
                        "src": "13251:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 649,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 648,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "13251:13:4"
                          },
                          "referencedDeclaration": 295,
                          "src": "13251:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13230:43:4"
                  },
                  "returnParameters": {
                    "id": 654,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 653,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 655,
                        "src": "13337:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 652,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13337:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13336:9:4"
                  },
                  "scope": 693,
                  "src": "13195:151:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 656,
                    "nodeType": "StructuredDocumentation",
                    "src": "13352:327:4",
                    "text": "@notice Get return of investment ratio.\n @dev Purely depends on whether given ruling option is winner and stake multipliers.\n @param _ruling The ruling option to query.\n @param _lastRoundWinner Winner of the last round.\n @return Return of investment ratio, denominated by MULTIPLIER_DENOMINATOR."
                  },
                  "functionSelector": "b4c70581",
                  "id": 667,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReturnOfInvestmentRatio",
                  "nameLocation": "13693:26:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 659,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "13734:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 667,
                        "src": "13720:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 658,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 657,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "13720:13:4"
                          },
                          "referencedDeclaration": 295,
                          "src": "13720:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 662,
                        "mutability": "mutable",
                        "name": "_lastRoundWinner",
                        "nameLocation": "13757:16:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 667,
                        "src": "13743:30:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 661,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 660,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "13743:13:4"
                          },
                          "referencedDeclaration": 295,
                          "src": "13743:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13719:55:4"
                  },
                  "returnParameters": {
                    "id": 666,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 665,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 667,
                        "src": "13838:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 664,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13838:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13837:9:4"
                  },
                  "scope": 693,
                  "src": "13684:163:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 668,
                    "nodeType": "StructuredDocumentation",
                    "src": "13853:187:4",
                    "text": "@notice Get appeal time window.\n @param _disputeID The dispute ID as in arbitrator.\n @param _ruling The ruling option to query.\n @return Start\n @return End"
                  },
                  "functionSelector": "638af3da",
                  "id": 680,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAppealPeriod",
                  "nameLocation": "14054:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 674,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 670,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "14078:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 680,
                        "src": "14070:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 669,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14070:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 673,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "14104:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 680,
                        "src": "14090:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 672,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 671,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "14090:13:4"
                          },
                          "referencedDeclaration": 295,
                          "src": "14090:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14069:43:4"
                  },
                  "returnParameters": {
                    "id": 679,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 676,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 680,
                        "src": "14176:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 675,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14176:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 678,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 680,
                        "src": "14185:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 677,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14185:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14175:18:4"
                  },
                  "scope": 693,
                  "src": "14045:149:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 681,
                    "nodeType": "StructuredDocumentation",
                    "src": "14200:134:4",
                    "text": "@notice Get last round's winner.\n @param _disputeID The dispute ID as in arbitrator.\n @return Winning ruling option."
                  },
                  "functionSelector": "7f67bd6c",
                  "id": 688,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLastRoundWinner",
                  "nameLocation": "14348:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 684,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 683,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "14375:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 688,
                        "src": "14367:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 682,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14367:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14366:20:4"
                  },
                  "returnParameters": {
                    "id": 687,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 686,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 688,
                        "src": "14416:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 685,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14416:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14415:9:4"
                  },
                  "scope": 693,
                  "src": "14339:86:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 689,
                    "nodeType": "StructuredDocumentation",
                    "src": "14431:208:4",
                    "text": "@notice Switches publishing lock.\n @dev    Useful when it's no longer safe or secure to use this contract.\n         Prevents new articles to be published. Only intended for privileges users."
                  },
                  "functionSelector": "ba0ec60b",
                  "id": 692,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "switchPublishingLock",
                  "nameLocation": "14653:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 690,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14673:2:4"
                  },
                  "returnParameters": {
                    "id": 691,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14690:0:4"
                  },
                  "scope": 693,
                  "src": "14644:47:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 694,
              "src": "484:14209:4",
              "usedErrors": []
            }
          ],
          "src": "34:14660:4"
        },
        "id": 4
      },
      "contracts/TruthPost.sol": {
        "ast": {
          "absolutePath": "contracts/TruthPost.sol",
          "exportedSymbols": {
            "IArbitrable": [
              153
            ],
            "IArbitrator": [
              249
            ],
            "IDisputeResolver": [
              130
            ],
            "IEvidence": [
              285
            ],
            "ITruthPost": [
              693
            ],
            "TruthPost": [
              2850
            ]
          },
          "id": 2851,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 695,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "34:24:5"
            },
            {
              "absolutePath": "@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol",
              "file": "@kleros/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol",
              "id": 696,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2851,
              "sourceUnit": 131,
              "src": "60:84:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ITruthPost.sol",
              "file": "./ITruthPost.sol",
              "id": 697,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2851,
              "sourceUnit": 694,
              "src": "145:26:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 699,
                    "name": "ITruthPost",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 693,
                    "src": "1127:10:5"
                  },
                  "id": 700,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1127:10:5"
                },
                {
                  "baseName": {
                    "id": 701,
                    "name": "IArbitrable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 153,
                    "src": "1139:11:5"
                  },
                  "id": 702,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1139:11:5"
                },
                {
                  "baseName": {
                    "id": 703,
                    "name": "IEvidence",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 285,
                    "src": "1152:9:5"
                  },
                  "id": 704,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1152:9:5"
                }
              ],
              "canonicalName": "TruthPost",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 698,
                "nodeType": "StructuredDocumentation",
                "src": "173:932:5",
                "text": "@title  The Trust Post\n @author https://github.com/proveuswrong<0xferit, gratestas>\n @notice Smart contract for a type of curation, where submitted items are on hold until they are withdrawn and the amount of security deposits are determined by submitters.\n @dev    You should target ITruthPost interface contract for building on top. Otherwise you risk incompatibility across versions.\n         Articles are not addressed with their identifiers. That enables us to reuse same storage address for another article later.///         Arbitrator is fixed, but subcourts, jury size and metaevidence are not.\n         We prevent articles to get withdrawn immediately. This is to prevent submitter to escape punishment in case someone discovers an argument to debunk the article.\n         Bounty amounts are compressed with a lossy compression method to save on storage cost.\n @custom:approvals 0xferit, gratestas"
              },
              "fullyImplemented": true,
              "id": 2850,
              "linearizedBaseContracts": [
                2850,
                285,
                153,
                693
              ],
              "name": "TruthPost",
              "nameLocation": "1114:9:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "68871c9c",
                  "id": 707,
                  "mutability": "immutable",
                  "name": "ARBITRATOR",
                  "nameLocation": "1197:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "1168:39:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IArbitrator_$249",
                    "typeString": "contract IArbitrator"
                  },
                  "typeName": {
                    "id": 706,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 705,
                      "name": "IArbitrator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 249,
                      "src": "1168:11:5"
                    },
                    "referencedDeclaration": 249,
                    "src": "1168:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IArbitrator_$249",
                      "typeString": "contract IArbitrator"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "d970d18c",
                  "id": 710,
                  "mutability": "constant",
                  "name": "NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE",
                  "nameLocation": "1237:42:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "1213:71:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3332",
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1282:2:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "03624fc0",
                  "id": 713,
                  "mutability": "mutable",
                  "name": "categoryCounter",
                  "nameLocation": "1377:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "1364:32:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 711,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1364:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1395:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f851a440",
                  "id": 720,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "1426:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "1403:50:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 717,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1442:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1442:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1434:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 715,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1434:8:5",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1434:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 730,
                    "nodeType": "Block",
                    "src": "1481:56:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 723,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1499:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1499:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 725,
                                "name": "admin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 720,
                                "src": "1513:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1499:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 722,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1491:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1491:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 728,
                        "nodeType": "ExpressionStatement",
                        "src": "1491:28:5"
                      },
                      {
                        "id": 729,
                        "nodeType": "PlaceholderStatement",
                        "src": "1529:1:5"
                      }
                    ]
                  },
                  "id": 731,
                  "name": "onlyAdmin",
                  "nameLocation": "1469:9:5",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 721,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1478:2:5"
                  },
                  "src": "1460:77:5",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "canonicalName": "TruthPost.DisputeData",
                  "id": 747,
                  "members": [
                    {
                      "constant": false,
                      "id": 733,
                      "mutability": "mutable",
                      "name": "challenger",
                      "nameLocation": "1588:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 747,
                      "src": "1572:26:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 732,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1572:15:5",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 736,
                      "mutability": "mutable",
                      "name": "outcome",
                      "nameLocation": "1622:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 747,
                      "src": "1608:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RulingOptions_$295",
                        "typeString": "enum ITruthPost.RulingOptions"
                      },
                      "typeName": {
                        "id": 735,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 734,
                          "name": "RulingOptions",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 295,
                          "src": "1608:13:5"
                        },
                        "referencedDeclaration": 295,
                        "src": "1608:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 738,
                      "mutability": "mutable",
                      "name": "articleCategory",
                      "nameLocation": "1645:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 747,
                      "src": "1639:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 737,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1639:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 740,
                      "mutability": "mutable",
                      "name": "resolved",
                      "nameLocation": "1675:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 747,
                      "src": "1670:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 739,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1670:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 742,
                      "mutability": "mutable",
                      "name": "articleStorageAddress",
                      "nameLocation": "1817:21:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 747,
                      "src": "1810:28:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 741,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "1810:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 746,
                      "mutability": "mutable",
                      "name": "rounds",
                      "nameLocation": "1913:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 747,
                      "src": "1905:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Round_$770_storage_$dyn_storage_ptr",
                        "typeString": "struct TruthPost.Round[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 744,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 743,
                            "name": "Round",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 770,
                            "src": "1905:5:5"
                          },
                          "referencedDeclaration": 770,
                          "src": "1905:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                            "typeString": "struct TruthPost.Round"
                          }
                        },
                        "id": 745,
                        "nodeType": "ArrayTypeName",
                        "src": "1905:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Round_$770_storage_$dyn_storage_ptr",
                          "typeString": "struct TruthPost.Round[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "DisputeData",
                  "nameLocation": "1550:11:5",
                  "nodeType": "StructDefinition",
                  "scope": 2850,
                  "src": "1543:425:5",
                  "visibility": "public"
                },
                {
                  "canonicalName": "TruthPost.Round",
                  "id": 770,
                  "members": [
                    {
                      "constant": false,
                      "id": 755,
                      "mutability": "mutable",
                      "name": "contributions",
                      "nameLocation": "2055:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 770,
                      "src": "1997:71:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$3_storage_$",
                        "typeString": "mapping(address => uint256[3])"
                      },
                      "typeName": {
                        "id": 754,
                        "keyType": {
                          "id": 748,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2005:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1997:57:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$3_storage_$",
                          "typeString": "mapping(address => uint256[3])"
                        },
                        "valueType": {
                          "baseType": {
                            "id": 749,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2016:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 753,
                          "length": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 750,
                              "name": "NUMBER_OF_RULING_OPTIONS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "2024:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2051:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2024:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "2016:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                            "typeString": "uint256[3]"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 761,
                      "mutability": "mutable",
                      "name": "hasPaid",
                      "nameLocation": "2113:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 770,
                      "src": "2078:42:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$3_storage_ptr",
                        "typeString": "bool[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 756,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2078:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 760,
                        "length": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 757,
                            "name": "NUMBER_OF_RULING_OPTIONS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2083:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2110:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2083:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "2078:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$3_storage_ptr",
                          "typeString": "bool[3]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 767,
                      "mutability": "mutable",
                      "name": "totalPerRuling",
                      "nameLocation": "2271:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 770,
                      "src": "2233:52:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                        "typeString": "uint256[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 762,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2233:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 766,
                        "length": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 763,
                            "name": "NUMBER_OF_RULING_OPTIONS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2241:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2268:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2241:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "2233:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                          "typeString": "uint256[3]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 769,
                      "mutability": "mutable",
                      "name": "totalClaimableAfterExpenses",
                      "nameLocation": "2303:27:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 770,
                      "src": "2295:35:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 768,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2295:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Round",
                  "nameLocation": "1981:5:5",
                  "nodeType": "StructDefinition",
                  "scope": 2850,
                  "src": "1974:363:5",
                  "visibility": "public"
                },
                {
                  "canonicalName": "TruthPost.Article",
                  "id": 779,
                  "members": [
                    {
                      "constant": false,
                      "id": 772,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2384:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "2368:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 771,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2368:15:5",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 774,
                      "mutability": "mutable",
                      "name": "withdrawalPermittedAt",
                      "nameLocation": "2406:21:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "2399:28:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 773,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2399:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 776,
                      "mutability": "mutable",
                      "name": "bountyAmount",
                      "nameLocation": "2471:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "2464:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint56",
                        "typeString": "uint56"
                      },
                      "typeName": {
                        "id": 775,
                        "name": "uint56",
                        "nodeType": "ElementaryTypeName",
                        "src": "2464:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint56",
                          "typeString": "uint56"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 778,
                      "mutability": "mutable",
                      "name": "category",
                      "nameLocation": "2553:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "2547:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 777,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2547:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Article",
                  "nameLocation": "2350:7:5",
                  "nodeType": "StructDefinition",
                  "scope": 2850,
                  "src": "2343:225:5",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "4de12db0",
                  "id": 783,
                  "mutability": "mutable",
                  "name": "categoryToArbitratorExtraData",
                  "nameLocation": "2591:29:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "2574:46:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_storage_$64_storage",
                    "typeString": "bytes[64]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 780,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2574:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 782,
                    "length": {
                      "hexValue": "3634",
                      "id": 781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2580:2:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_64_by_1",
                        "typeString": "int_const 64"
                      },
                      "value": "64"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2574:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$64_storage_ptr",
                      "typeString": "bytes[64]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "78431ce9",
                  "id": 788,
                  "mutability": "mutable",
                  "name": "articleStorage",
                  "nameLocation": "2661:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "2627:48:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Article_$779_storage_$",
                    "typeString": "mapping(uint80 => struct TruthPost.Article)"
                  },
                  "typeName": {
                    "id": 787,
                    "keyType": {
                      "id": 784,
                      "name": "uint80",
                      "nodeType": "ElementaryTypeName",
                      "src": "2635:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2627:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Article_$779_storage_$",
                      "typeString": "mapping(uint80 => struct TruthPost.Article)"
                    },
                    "valueType": {
                      "id": 786,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 785,
                        "name": "Article",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 779,
                        "src": "2645:7:5"
                      },
                      "referencedDeclaration": 779,
                      "src": "2645:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                        "typeString": "struct TruthPost.Article"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "564a565d",
                  "id": 793,
                  "mutability": "mutable",
                  "name": "disputes",
                  "nameLocation": "2841:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "2802:47:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$",
                    "typeString": "mapping(uint256 => struct TruthPost.DisputeData)"
                  },
                  "typeName": {
                    "id": 792,
                    "keyType": {
                      "id": 789,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2810:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2802:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$",
                      "typeString": "mapping(uint256 => struct TruthPost.DisputeData)"
                    },
                    "valueType": {
                      "id": 791,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 790,
                        "name": "DisputeData",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 747,
                        "src": "2821:11:5"
                      },
                      "referencedDeclaration": 747,
                      "src": "2821:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                        "typeString": "struct TruthPost.DisputeData"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 826,
                    "nodeType": "Block",
                    "src": "3286:106:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 817,
                            "name": "ARBITRATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 707,
                            "src": "3296:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrator_$249",
                              "typeString": "contract IArbitrator"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 818,
                            "name": "_arbitrator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 796,
                            "src": "3309:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrator_$249",
                              "typeString": "contract IArbitrator"
                            }
                          },
                          "src": "3296:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IArbitrator_$249",
                            "typeString": "contract IArbitrator"
                          }
                        },
                        "id": 820,
                        "nodeType": "ExpressionStatement",
                        "src": "3296:24:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 822,
                              "name": "_metaevidenceIpfsUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 800,
                              "src": "3342:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 823,
                              "name": "_arbitratorExtraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 798,
                              "src": "3364:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 821,
                            "name": "newCategory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2185,
                            "src": "3330:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (string memory,bytes memory)"
                            }
                          },
                          "id": 824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3330:55:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 825,
                        "nodeType": "ExpressionStatement",
                        "src": "3330:55:5"
                      }
                    ]
                  },
                  "id": 827,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 811,
                          "name": "_articleWithdrawalTimelock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 802,
                          "src": "3200:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 812,
                          "name": "_winnerStakeMultiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "3228:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 813,
                          "name": "_loserStakeMultiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 806,
                          "src": "3252:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 814,
                          "name": "_treasury",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 808,
                          "src": "3275:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "id": 815,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 810,
                        "name": "ITruthPost",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 693,
                        "src": "3189:10:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3189:96:5"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 809,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 796,
                        "mutability": "mutable",
                        "name": "_arbitrator",
                        "nameLocation": "2926:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 827,
                        "src": "2914:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrator_$249",
                          "typeString": "contract IArbitrator"
                        },
                        "typeName": {
                          "id": 795,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 794,
                            "name": "IArbitrator",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 249,
                            "src": "2914:11:5"
                          },
                          "referencedDeclaration": 249,
                          "src": "2914:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IArbitrator_$249",
                            "typeString": "contract IArbitrator"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 798,
                        "mutability": "mutable",
                        "name": "_arbitratorExtraData",
                        "nameLocation": "2960:20:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 827,
                        "src": "2947:33:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 797,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2947:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 800,
                        "mutability": "mutable",
                        "name": "_metaevidenceIpfsUri",
                        "nameLocation": "3004:20:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 827,
                        "src": "2990:34:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 799,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2990:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 802,
                        "mutability": "mutable",
                        "name": "_articleWithdrawalTimelock",
                        "nameLocation": "3042:26:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 827,
                        "src": "3034:34:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 801,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3034:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 804,
                        "mutability": "mutable",
                        "name": "_winnerStakeMultiplier",
                        "nameLocation": "3086:22:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 827,
                        "src": "3078:30:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 803,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3078:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 806,
                        "mutability": "mutable",
                        "name": "_loserStakeMultiplier",
                        "nameLocation": "3126:21:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 827,
                        "src": "3118:29:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 805,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3118:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 808,
                        "mutability": "mutable",
                        "name": "_treasury",
                        "nameLocation": "3173:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 827,
                        "src": "3157:25:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 807,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3157:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2904:284:5"
                  },
                  "returnParameters": {
                    "id": 816,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3286:0:5"
                  },
                  "scope": 2850,
                  "src": "2893:499:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    482
                  ],
                  "body": {
                    "id": 921,
                    "nodeType": "Block",
                    "src": "3580:812:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 839,
                                "name": "_category",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 832,
                                "src": "3598:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 840,
                                "name": "categoryCounter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 713,
                                "src": "3610:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "3598:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546869732063617465676f727920646f6573206e6f74206578697374",
                              "id": 842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3627:30:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_de142eb746bdd0d0ef7f42e32a89b1f8be902652448bd9ef60b61b168c6d9194",
                                "typeString": "literal_string \"This category does not exist\""
                              },
                              "value": "This category does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_de142eb746bdd0d0ef7f42e32a89b1f8be902652448bd9ef60b61b168c6d9194",
                                "typeString": "literal_string \"This category does not exist\""
                              }
                            ],
                            "id": 838,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3590:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3590:68:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 844,
                        "nodeType": "ExpressionStatement",
                        "src": "3590:68:5"
                      },
                      {
                        "assignments": [
                          847
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 847,
                            "mutability": "mutable",
                            "name": "article",
                            "nameLocation": "3685:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 921,
                            "src": "3669:23:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                              "typeString": "struct TruthPost.Article"
                            },
                            "typeName": {
                              "id": 846,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 845,
                                "name": "Article",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 779,
                                "src": "3669:7:5"
                              },
                              "referencedDeclaration": 779,
                              "src": "3669:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 848,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3669:23:5"
                      },
                      {
                        "body": {
                          "id": 856,
                          "nodeType": "Block",
                          "src": "3705:67:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 849,
                                  "name": "article",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 847,
                                  "src": "3719:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                    "typeString": "struct TruthPost.Article storage pointer"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 850,
                                    "name": "articleStorage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 788,
                                    "src": "3729:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Article_$779_storage_$",
                                      "typeString": "mapping(uint80 => struct TruthPost.Article storage ref)"
                                    }
                                  },
                                  "id": 853,
                                  "indexExpression": {
                                    "id": 852,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "3744:16:5",
                                    "subExpression": {
                                      "id": 851,
                                      "name": "_searchPointer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 834,
                                      "src": "3744:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint80",
                                        "typeString": "uint80"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint80",
                                      "typeString": "uint80"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3729:32:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage",
                                    "typeString": "struct TruthPost.Article storage ref"
                                  }
                                },
                                "src": "3719:42:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                  "typeString": "struct TruthPost.Article storage pointer"
                                }
                              },
                              "id": 855,
                              "nodeType": "ExpressionStatement",
                              "src": "3719:42:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint56",
                            "typeString": "uint56"
                          },
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 857,
                              "name": "article",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "3780:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article storage pointer"
                              }
                            },
                            "id": 858,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "bountyAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 776,
                            "src": "3780:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint56",
                              "typeString": "uint56"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3804:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3780:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 861,
                        "nodeType": "DoWhileStatement",
                        "src": "3702:105:5"
                      },
                      {
                        "expression": {
                          "id": 870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 862,
                              "name": "article",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "3817:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article storage pointer"
                              }
                            },
                            "id": 864,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 772,
                            "src": "3817:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 867,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3841:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 868,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3841:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3833:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 865,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3833:8:5",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3833:19:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3817:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 871,
                        "nodeType": "ExpressionStatement",
                        "src": "3817:35:5"
                      },
                      {
                        "expression": {
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 872,
                              "name": "article",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "3862:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article storage pointer"
                              }
                            },
                            "id": 874,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "bountyAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 776,
                            "src": "3862:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint56",
                              "typeString": "uint56"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 877,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3892:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 878,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "3892:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "id": 879,
                                  "name": "NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 710,
                                  "src": "3905:42:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3892:55:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3885:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint56_$",
                                "typeString": "type(uint56)"
                              },
                              "typeName": {
                                "id": 875,
                                "name": "uint56",
                                "nodeType": "ElementaryTypeName",
                                "src": "3885:6:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3885:63:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint56",
                              "typeString": "uint56"
                            }
                          },
                          "src": "3862:86:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint56",
                            "typeString": "uint56"
                          }
                        },
                        "id": 883,
                        "nodeType": "ExpressionStatement",
                        "src": "3862:86:5"
                      },
                      {
                        "expression": {
                          "id": 888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 884,
                              "name": "article",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "3958:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article storage pointer"
                              }
                            },
                            "id": 886,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "category",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 778,
                            "src": "3958:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 887,
                            "name": "_category",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 832,
                            "src": "3977:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3958:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 889,
                        "nodeType": "ExpressionStatement",
                        "src": "3958:28:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint56",
                                "typeString": "uint56"
                              },
                              "id": 894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 891,
                                  "name": "article",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 847,
                                  "src": "4005:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                    "typeString": "struct TruthPost.Article storage pointer"
                                  }
                                },
                                "id": 892,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bountyAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 776,
                                "src": "4005:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint56",
                                  "typeString": "uint56"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 893,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4028:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4005:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f752063616e277420696e697469616c697a6520616e2061727469636c6520776974686f75742070757474696e67206120626f756e74792e",
                              "id": 895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4031:59:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_735d504b2c5de2f29425b794cdb33103551951bc0508e48cdd57a296c3d28554",
                                "typeString": "literal_string \"You can't initialize an article without putting a bounty.\""
                              },
                              "value": "You can't initialize an article without putting a bounty."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_735d504b2c5de2f29425b794cdb33103551951bc0508e48cdd57a296c3d28554",
                                "typeString": "literal_string \"You can't initialize an article without putting a bounty.\""
                              }
                            ],
                            "id": 890,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3997:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3997:94:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 897,
                        "nodeType": "ExpressionStatement",
                        "src": "3997:94:5"
                      },
                      {
                        "assignments": [
                          899
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 899,
                            "mutability": "mutable",
                            "name": "articleStorageAddress",
                            "nameLocation": "4110:21:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 921,
                            "src": "4102:29:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 898,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4102:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 903,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 900,
                            "name": "_searchPointer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 834,
                            "src": "4134:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4151:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4134:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4102:50:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 905,
                              "name": "_articleID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 830,
                              "src": "4178:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "id": 906,
                              "name": "_category",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "4190:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 907,
                              "name": "articleStorageAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "4201:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 904,
                            "name": "NewArticle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "4167:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint8_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint8,uint256)"
                            }
                          },
                          "id": 908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4167:56:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 909,
                        "nodeType": "EmitStatement",
                        "src": "4162:61:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 911,
                              "name": "articleStorageAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "4265:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 914,
                                      "name": "article",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 847,
                                      "src": "4308:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                        "typeString": "struct TruthPost.Article storage pointer"
                                      }
                                    },
                                    "id": 915,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "bountyAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 776,
                                    "src": "4308:20:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint56",
                                      "typeString": "uint56"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint56",
                                      "typeString": "uint56"
                                    }
                                  ],
                                  "id": 913,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4300:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 912,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4300:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 916,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4300:29:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<<",
                              "rightExpression": {
                                "id": 917,
                                "name": "NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 710,
                                "src": "4333:42:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4300:75:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 910,
                            "name": "BalanceUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 370,
                            "src": "4238:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4238:147:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 920,
                        "nodeType": "EmitStatement",
                        "src": "4233:152:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 828,
                    "nodeType": "StructuredDocumentation",
                    "src": "3398:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "29238089",
                  "id": 922,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initializeArticle",
                  "nameLocation": "3438:17:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 836,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3571:8:5"
                  },
                  "parameters": {
                    "id": 835,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 830,
                        "mutability": "mutable",
                        "name": "_articleID",
                        "nameLocation": "3481:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 922,
                        "src": "3465:26:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 829,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3465:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "_category",
                        "nameLocation": "3507:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 922,
                        "src": "3501:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 831,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3501:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 834,
                        "mutability": "mutable",
                        "name": "_searchPointer",
                        "nameLocation": "3533:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 922,
                        "src": "3526:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 833,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "3526:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3455:98:5"
                  },
                  "returnParameters": {
                    "id": 837,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3580:0:5"
                  },
                  "scope": 2850,
                  "src": "3429:963:5",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    461
                  ],
                  "body": {
                    "id": 939,
                    "nodeType": "Block",
                    "src": "4521:80:5",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 932,
                              "name": "ARBITRATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 707,
                              "src": "4545:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitrator_$249",
                                "typeString": "contract IArbitrator"
                              }
                            },
                            {
                              "id": 933,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "4557:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 934,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4569:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4569:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 936,
                              "name": "_evidenceURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 927,
                              "src": "4581:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IArbitrator_$249",
                                "typeString": "contract IArbitrator"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 931,
                            "name": "Evidence",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 272,
                            "src": "4536:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IArbitrator_$249_$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (contract IArbitrator,uint256,address,string memory)"
                            }
                          },
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4536:58:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 938,
                        "nodeType": "EmitStatement",
                        "src": "4531:63:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 923,
                    "nodeType": "StructuredDocumentation",
                    "src": "4398:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "a6a7f0eb",
                  "id": 940,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "submitEvidence",
                  "nameLocation": "4438:14:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 929,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4512:8:5"
                  },
                  "parameters": {
                    "id": 928,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 925,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "4461:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 940,
                        "src": "4453:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 924,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4453:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 927,
                        "mutability": "mutable",
                        "name": "_evidenceURI",
                        "nameLocation": "4489:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 940,
                        "src": "4473:28:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 926,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4473:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4452:50:5"
                  },
                  "returnParameters": {
                    "id": 930,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4521:0:5"
                  },
                  "scope": 2850,
                  "src": "4429:172:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    488
                  ],
                  "body": {
                    "id": 986,
                    "nodeType": "Block",
                    "src": "4719:471:5",
                    "statements": [
                      {
                        "assignments": [
                          949
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 949,
                            "mutability": "mutable",
                            "name": "article",
                            "nameLocation": "4745:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 986,
                            "src": "4729:23:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                              "typeString": "struct TruthPost.Article"
                            },
                            "typeName": {
                              "id": 948,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 947,
                                "name": "Article",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 779,
                                "src": "4729:7:5"
                              },
                              "referencedDeclaration": 779,
                              "src": "4729:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 953,
                        "initialValue": {
                          "baseExpression": {
                            "id": 950,
                            "name": "articleStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 788,
                            "src": "4755:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Article_$779_storage_$",
                              "typeString": "mapping(uint80 => struct TruthPost.Article storage ref)"
                            }
                          },
                          "id": 952,
                          "indexExpression": {
                            "id": 951,
                            "name": "_articleStorageAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 943,
                            "src": "4770:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4755:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Article_$779_storage",
                            "typeString": "struct TruthPost.Article storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4729:64:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 955,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4811:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 956,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4811:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 957,
                                  "name": "article",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 949,
                                  "src": "4825:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                    "typeString": "struct TruthPost.Article storage pointer"
                                  }
                                },
                                "id": 958,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 772,
                                "src": "4825:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "4811:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920617574686f722063616e20696e63726561736520626f756e7479206f6620616e2061727469636c652e",
                              "id": 960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4840:48:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a40667c3d5ae3c08746fe24fceae1033d89d0e1de162ecdda7e68141465d7af7",
                                "typeString": "literal_string \"Only author can increase bounty of an article.\""
                              },
                              "value": "Only author can increase bounty of an article."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a40667c3d5ae3c08746fe24fceae1033d89d0e1de162ecdda7e68141465d7af7",
                                "typeString": "literal_string \"Only author can increase bounty of an article.\""
                              }
                            ],
                            "id": 954,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4803:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4803:86:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 962,
                        "nodeType": "ExpressionStatement",
                        "src": "4803:86:5"
                      },
                      {
                        "expression": {
                          "id": 973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 963,
                              "name": "article",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 949,
                              "src": "4932:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article storage pointer"
                              }
                            },
                            "id": 965,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "bountyAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 776,
                            "src": "4932:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint56",
                              "typeString": "uint56"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 971,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 968,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4963:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 969,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "4963:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "id": 970,
                                  "name": "NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 710,
                                  "src": "4976:42:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4963:55:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4956:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint56_$",
                                "typeString": "type(uint56)"
                              },
                              "typeName": {
                                "id": 966,
                                "name": "uint56",
                                "nodeType": "ElementaryTypeName",
                                "src": "4956:6:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4956:63:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint56",
                              "typeString": "uint56"
                            }
                          },
                          "src": "4932:87:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint56",
                            "typeString": "uint56"
                          }
                        },
                        "id": 974,
                        "nodeType": "ExpressionStatement",
                        "src": "4932:87:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 976,
                              "name": "_articleStorageAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 943,
                              "src": "5062:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 979,
                                      "name": "article",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 949,
                                      "src": "5106:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                        "typeString": "struct TruthPost.Article storage pointer"
                                      }
                                    },
                                    "id": 980,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "bountyAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 776,
                                    "src": "5106:20:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint56",
                                      "typeString": "uint56"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint56",
                                      "typeString": "uint56"
                                    }
                                  ],
                                  "id": 978,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5098:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 977,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5098:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 981,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5098:29:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<<",
                              "rightExpression": {
                                "id": 982,
                                "name": "NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 710,
                                "src": "5131:42:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5098:75:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 975,
                            "name": "BalanceUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 370,
                            "src": "5035:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5035:148:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 985,
                        "nodeType": "EmitStatement",
                        "src": "5030:153:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 941,
                    "nodeType": "StructuredDocumentation",
                    "src": "4607:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "bc0936fd",
                  "id": 987,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseBounty",
                  "nameLocation": "4647:14:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 945,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4710:8:5"
                  },
                  "parameters": {
                    "id": 944,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 943,
                        "mutability": "mutable",
                        "name": "_articleStorageAddress",
                        "nameLocation": "4669:22:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 987,
                        "src": "4662:29:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 942,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "4662:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4661:31:5"
                  },
                  "returnParameters": {
                    "id": 946,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4719:0:5"
                  },
                  "scope": 2850,
                  "src": "4638:552:5",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    494
                  ],
                  "body": {
                    "id": 1034,
                    "nodeType": "Block",
                    "src": "5304:427:5",
                    "statements": [
                      {
                        "assignments": [
                          996
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 996,
                            "mutability": "mutable",
                            "name": "article",
                            "nameLocation": "5330:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1034,
                            "src": "5314:23:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                              "typeString": "struct TruthPost.Article"
                            },
                            "typeName": {
                              "id": 995,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 994,
                                "name": "Article",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 779,
                                "src": "5314:7:5"
                              },
                              "referencedDeclaration": 779,
                              "src": "5314:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1000,
                        "initialValue": {
                          "baseExpression": {
                            "id": 997,
                            "name": "articleStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 788,
                            "src": "5340:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Article_$779_storage_$",
                              "typeString": "mapping(uint80 => struct TruthPost.Article storage ref)"
                            }
                          },
                          "id": 999,
                          "indexExpression": {
                            "id": 998,
                            "name": "_articleStorageAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 990,
                            "src": "5355:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5340:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Article_$779_storage",
                            "typeString": "struct TruthPost.Article storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5314:64:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1002,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5396:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5396:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1004,
                                  "name": "article",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 996,
                                  "src": "5410:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                    "typeString": "struct TruthPost.Article storage pointer"
                                  }
                                },
                                "id": 1005,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 772,
                                "src": "5410:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "5396:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920617574686f722063616e20776974686472617720616e2061727469636c652e",
                              "id": 1007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5425:38:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6a7ac09dd6d1a595ef63e3c006cc799fa0704d926f43c9ba8a2701161a095cea",
                                "typeString": "literal_string \"Only author can withdraw an article.\""
                              },
                              "value": "Only author can withdraw an article."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6a7ac09dd6d1a595ef63e3c006cc799fa0704d926f43c9ba8a2701161a095cea",
                                "typeString": "literal_string \"Only author can withdraw an article.\""
                              }
                            ],
                            "id": 1001,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5388:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5388:76:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1009,
                        "nodeType": "ExpressionStatement",
                        "src": "5388:76:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 1014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1011,
                                  "name": "article",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 996,
                                  "src": "5482:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                    "typeString": "struct TruthPost.Article storage pointer"
                                  }
                                },
                                "id": 1012,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "withdrawalPermittedAt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 774,
                                "src": "5482:29:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1013,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5515:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5482:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5769746864726177616c20616c726561647920696e69746961746564206f722074686572652069732061206368616c6c656e67652e",
                              "id": 1015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5518:55:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_09736bc764ff8f7b07f5d004c384a229ed4912017c53bd247c8e39209b9ae7f6",
                                "typeString": "literal_string \"Withdrawal already initiated or there is a challenge.\""
                              },
                              "value": "Withdrawal already initiated or there is a challenge."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_09736bc764ff8f7b07f5d004c384a229ed4912017c53bd247c8e39209b9ae7f6",
                                "typeString": "literal_string \"Withdrawal already initiated or there is a challenge.\""
                              }
                            ],
                            "id": 1010,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5474:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5474:100:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1017,
                        "nodeType": "ExpressionStatement",
                        "src": "5474:100:5"
                      },
                      {
                        "expression": {
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1018,
                              "name": "article",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 996,
                              "src": "5585:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article storage pointer"
                              }
                            },
                            "id": 1020,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "withdrawalPermittedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 774,
                            "src": "5585:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1026,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1023,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5624:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1024,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5624:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1025,
                                  "name": "ARTICLE_WITHDRAWAL_TIMELOCK",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 313,
                                  "src": "5642:27:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5624:45:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5617:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint32_$",
                                "typeString": "type(uint32)"
                              },
                              "typeName": {
                                "id": 1021,
                                "name": "uint32",
                                "nodeType": "ElementaryTypeName",
                                "src": "5617:6:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5617:53:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "5585:85:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 1029,
                        "nodeType": "ExpressionStatement",
                        "src": "5585:85:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1031,
                              "name": "_articleStorageAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 990,
                              "src": "5701:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            ],
                            "id": 1030,
                            "name": "TimelockStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "5685:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5685:39:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1033,
                        "nodeType": "EmitStatement",
                        "src": "5680:44:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 988,
                    "nodeType": "StructuredDocumentation",
                    "src": "5196:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "956dcbd2",
                  "id": 1035,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initiateWithdrawal",
                  "nameLocation": "5236:18:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 992,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5295:8:5"
                  },
                  "parameters": {
                    "id": 991,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 990,
                        "mutability": "mutable",
                        "name": "_articleStorageAddress",
                        "nameLocation": "5262:22:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1035,
                        "src": "5255:29:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 989,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "5255:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5254:31:5"
                  },
                  "returnParameters": {
                    "id": 993,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5304:0:5"
                  },
                  "scope": 2850,
                  "src": "5227:504:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    500
                  ],
                  "body": {
                    "id": 1110,
                    "nodeType": "Block",
                    "src": "5835:845:5",
                    "statements": [
                      {
                        "assignments": [
                          1044
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1044,
                            "mutability": "mutable",
                            "name": "article",
                            "nameLocation": "5861:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1110,
                            "src": "5845:23:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                              "typeString": "struct TruthPost.Article"
                            },
                            "typeName": {
                              "id": 1043,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1042,
                                "name": "Article",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 779,
                                "src": "5845:7:5"
                              },
                              "referencedDeclaration": 779,
                              "src": "5845:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1048,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1045,
                            "name": "articleStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 788,
                            "src": "5871:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Article_$779_storage_$",
                              "typeString": "mapping(uint80 => struct TruthPost.Article storage ref)"
                            }
                          },
                          "id": 1047,
                          "indexExpression": {
                            "id": 1046,
                            "name": "_articleStorageAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1038,
                            "src": "5886:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5871:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Article_$779_storage",
                            "typeString": "struct TruthPost.Article storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5845:64:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1050,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5928:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1051,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5928:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1052,
                                  "name": "article",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1044,
                                  "src": "5942:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                    "typeString": "struct TruthPost.Article storage pointer"
                                  }
                                },
                                "id": 1053,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 772,
                                "src": "5942:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "5928:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920617574686f722063616e20776974686472617720616e2061727469636c652e",
                              "id": 1055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5957:38:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6a7ac09dd6d1a595ef63e3c006cc799fa0704d926f43c9ba8a2701161a095cea",
                                "typeString": "literal_string \"Only author can withdraw an article.\""
                              },
                              "value": "Only author can withdraw an article."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6a7ac09dd6d1a595ef63e3c006cc799fa0704d926f43c9ba8a2701161a095cea",
                                "typeString": "literal_string \"Only author can withdraw an article.\""
                              }
                            ],
                            "id": 1049,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5920:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5920:76:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1057,
                        "nodeType": "ExpressionStatement",
                        "src": "5920:76:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 1062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1059,
                                  "name": "article",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1044,
                                  "src": "6014:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                    "typeString": "struct TruthPost.Article storage pointer"
                                  }
                                },
                                "id": 1060,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "withdrawalPermittedAt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 774,
                                "src": "6014:29:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1061,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6047:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6014:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f75206e65656420746f20696e697469617465207769746864726177616c2066697273742e",
                              "id": 1063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6050:40:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_646d3354d32a4e6f10f97f8e4dafb31e5ad3c387e7ce2b3b8fd9a6cf92aec955",
                                "typeString": "literal_string \"You need to initiate withdrawal first.\""
                              },
                              "value": "You need to initiate withdrawal first."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_646d3354d32a4e6f10f97f8e4dafb31e5ad3c387e7ce2b3b8fd9a6cf92aec955",
                                "typeString": "literal_string \"You need to initiate withdrawal first.\""
                              }
                            ],
                            "id": 1058,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6006:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6006:85:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1065,
                        "nodeType": "ExpressionStatement",
                        "src": "6006:85:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1067,
                                  "name": "article",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1044,
                                  "src": "6122:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                    "typeString": "struct TruthPost.Article storage pointer"
                                  }
                                },
                                "id": 1068,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "withdrawalPermittedAt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 774,
                                "src": "6122:29:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1069,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6155:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1070,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6155:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6122:48:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f75206e65656420746f207761697420666f722074696d656c6f636b206f72207761697420756e74696c20746865206368616c6c656e676520656e64732e",
                              "id": 1072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6184:65:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7c0c82b0d480101a30f3ad2e3ccc7970d31d7e8da6ac4e66c07d00ffcf930f48",
                                "typeString": "literal_string \"You need to wait for timelock or wait until the challenge ends.\""
                              },
                              "value": "You need to wait for timelock or wait until the challenge ends."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7c0c82b0d480101a30f3ad2e3ccc7970d31d7e8da6ac4e66c07d00ffcf930f48",
                                "typeString": "literal_string \"You need to wait for timelock or wait until the challenge ends.\""
                              }
                            ],
                            "id": 1066,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6101:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6101:158:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1074,
                        "nodeType": "ExpressionStatement",
                        "src": "6101:158:5"
                      },
                      {
                        "assignments": [
                          1076
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1076,
                            "mutability": "mutable",
                            "name": "withdrawal",
                            "nameLocation": "6278:10:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1110,
                            "src": "6270:18:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1075,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6270:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1084,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          "id": 1083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1079,
                                  "name": "article",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1044,
                                  "src": "6298:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                    "typeString": "struct TruthPost.Article storage pointer"
                                  }
                                },
                                "id": 1080,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bountyAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 776,
                                "src": "6298:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint56",
                                  "typeString": "uint56"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint56",
                                  "typeString": "uint56"
                                }
                              ],
                              "id": 1078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6291:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint96_$",
                                "typeString": "type(uint96)"
                              },
                              "typeName": {
                                "id": 1077,
                                "name": "uint96",
                                "nodeType": "ElementaryTypeName",
                                "src": "6291:6:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6291:28:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<<",
                          "rightExpression": {
                            "id": 1082,
                            "name": "NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 710,
                            "src": "6323:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6291:74:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6270:95:5"
                      },
                      {
                        "expression": {
                          "id": 1089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1085,
                              "name": "article",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1044,
                              "src": "6375:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article storage pointer"
                              }
                            },
                            "id": 1087,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "bountyAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 776,
                            "src": "6375:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint56",
                              "typeString": "uint56"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6398:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6375:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint56",
                            "typeString": "uint56"
                          }
                        },
                        "id": 1090,
                        "nodeType": "ExpressionStatement",
                        "src": "6375:24:5"
                      },
                      {
                        "expression": {
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1091,
                              "name": "article",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1044,
                              "src": "6447:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article storage pointer"
                              }
                            },
                            "id": 1093,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "withdrawalPermittedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 774,
                            "src": "6447:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6479:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6447:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 1096,
                        "nodeType": "ExpressionStatement",
                        "src": "6447:33:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1103,
                              "name": "withdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1076,
                              "src": "6607:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1099,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6586:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1100,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6586:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1098,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6578:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1097,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6578:8:5",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6578:19:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6578:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6578:40:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1105,
                        "nodeType": "ExpressionStatement",
                        "src": "6578:40:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1107,
                              "name": "_articleStorageAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1038,
                              "src": "6650:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            ],
                            "id": 1106,
                            "name": "ArticleWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "6633:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6633:40:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1109,
                        "nodeType": "EmitStatement",
                        "src": "6628:45:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1036,
                    "nodeType": "StructuredDocumentation",
                    "src": "5737:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "ab9cd37e",
                  "id": 1111,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "5777:8:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1040,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5826:8:5"
                  },
                  "parameters": {
                    "id": 1039,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1038,
                        "mutability": "mutable",
                        "name": "_articleStorageAddress",
                        "nameLocation": "5793:22:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1111,
                        "src": "5786:29:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 1037,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "5786:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5785:31:5"
                  },
                  "returnParameters": {
                    "id": 1041,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5835:0:5"
                  },
                  "scope": 2850,
                  "src": "5768:912:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    506
                  ],
                  "body": {
                    "id": 1252,
                    "nodeType": "Block",
                    "src": "6793:1357:5",
                    "statements": [
                      {
                        "assignments": [
                          1120
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1120,
                            "mutability": "mutable",
                            "name": "article",
                            "nameLocation": "6819:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1252,
                            "src": "6803:23:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                              "typeString": "struct TruthPost.Article"
                            },
                            "typeName": {
                              "id": 1119,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1118,
                                "name": "Article",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 779,
                                "src": "6803:7:5"
                              },
                              "referencedDeclaration": 779,
                              "src": "6803:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1124,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1121,
                            "name": "articleStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 788,
                            "src": "6829:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Article_$779_storage_$",
                              "typeString": "mapping(uint80 => struct TruthPost.Article storage ref)"
                            }
                          },
                          "id": 1123,
                          "indexExpression": {
                            "id": 1122,
                            "name": "_articleStorageAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1114,
                            "src": "6844:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6829:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Article_$779_storage",
                            "typeString": "struct TruthPost.Article storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6803:64:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint56",
                                "typeString": "uint56"
                              },
                              "id": 1129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1126,
                                  "name": "article",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1120,
                                  "src": "6885:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                    "typeString": "struct TruthPost.Article storage pointer"
                                  }
                                },
                                "id": 1127,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bountyAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 776,
                                "src": "6885:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint56",
                                  "typeString": "uint56"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6908:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6885:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7468696e6720746f206368616c6c656e67652e",
                              "id": 1130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6911:23:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0fb9b5de11a486bb1b8d34864ad6b246b0b983476450ee45857735429bd77eb9",
                                "typeString": "literal_string \"Nothing to challenge.\""
                              },
                              "value": "Nothing to challenge."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0fb9b5de11a486bb1b8d34864ad6b246b0b983476450ee45857735429bd77eb9",
                                "typeString": "literal_string \"Nothing to challenge.\""
                              }
                            ],
                            "id": 1125,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6877:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6877:58:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1132,
                        "nodeType": "ExpressionStatement",
                        "src": "6877:58:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 1141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1134,
                                  "name": "article",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1120,
                                  "src": "6953:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                    "typeString": "struct TruthPost.Article storage pointer"
                                  }
                                },
                                "id": 1135,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "withdrawalPermittedAt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 774,
                                "src": "6953:29:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1138,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6991:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint32_$",
                                        "typeString": "type(uint32)"
                                      },
                                      "typeName": {
                                        "id": 1137,
                                        "name": "uint32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6991:6:5",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_uint32_$",
                                        "typeString": "type(uint32)"
                                      }
                                    ],
                                    "id": 1136,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "6986:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 1139,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6986:12:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_uint32",
                                    "typeString": "type(uint32)"
                                  }
                                },
                                "id": 1140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "max",
                                "nodeType": "MemberAccess",
                                "src": "6986:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "src": "6953:49:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546865726520697320616e206f6e676f696e67206368616c6c656e67652e",
                              "id": 1142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7004:32:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b54a59a715146ed6c99f49691f55e62e941bfed713a75eda7bc62bf50148d555",
                                "typeString": "literal_string \"There is an ongoing challenge.\""
                              },
                              "value": "There is an ongoing challenge."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b54a59a715146ed6c99f49691f55e62e941bfed713a75eda7bc62bf50148d555",
                                "typeString": "literal_string \"There is an ongoing challenge.\""
                              }
                            ],
                            "id": 1133,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6945:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6945:92:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1144,
                        "nodeType": "ExpressionStatement",
                        "src": "6945:92:5"
                      },
                      {
                        "expression": {
                          "id": 1153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1145,
                              "name": "article",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1120,
                              "src": "7047:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article storage pointer"
                              }
                            },
                            "id": 1147,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "withdrawalPermittedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 774,
                            "src": "7047:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1150,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7084:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint32_$",
                                    "typeString": "type(uint32)"
                                  },
                                  "typeName": {
                                    "id": 1149,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7084:6:5",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint32_$",
                                    "typeString": "type(uint32)"
                                  }
                                ],
                                "id": 1148,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "7079:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7079:12:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint32",
                                "typeString": "type(uint32)"
                              }
                            },
                            "id": 1152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "7079:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "7047:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 1154,
                        "nodeType": "ExpressionStatement",
                        "src": "7047:48:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1156,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7145:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "7145:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 1159,
                                    "name": "_articleStorageAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1114,
                                    "src": "7171:22:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint80",
                                      "typeString": "uint80"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint80",
                                      "typeString": "uint80"
                                    }
                                  ],
                                  "id": 1158,
                                  "name": "challengeFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    2268
                                  ],
                                  "referencedDeclaration": 2268,
                                  "src": "7158:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint80_$returns$_t_uint256_$",
                                    "typeString": "function (uint80) view returns (uint256)"
                                  }
                                },
                                "id": 1160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7158:36:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7145:49:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e742066756e647320746f206368616c6c656e67652e",
                              "id": 1162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7196:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0c03e9d393d30f62793e04d553e45144120700c0c39d75130bccb90781d9e9e5",
                                "typeString": "literal_string \"Insufficient funds to challenge.\""
                              },
                              "value": "Insufficient funds to challenge."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0c03e9d393d30f62793e04d553e45144120700c0c39d75130bccb90781d9e9e5",
                                "typeString": "literal_string \"Insufficient funds to challenge.\""
                              }
                            ],
                            "id": 1155,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7137:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7137:94:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1164,
                        "nodeType": "ExpressionStatement",
                        "src": "7137:94:5"
                      },
                      {
                        "assignments": [
                          1166
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1166,
                            "mutability": "mutable",
                            "name": "taxAmount",
                            "nameLocation": "7250:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1252,
                            "src": "7242:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1165,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7242:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1180,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      },
                                      "id": 1173,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 1169,
                                              "name": "article",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1120,
                                              "src": "7271:7:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                                "typeString": "struct TruthPost.Article storage pointer"
                                              }
                                            },
                                            "id": 1170,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "bountyAmount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 776,
                                            "src": "7271:20:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint56",
                                              "typeString": "uint56"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint56",
                                              "typeString": "uint56"
                                            }
                                          ],
                                          "id": 1168,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "7264:6:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint96_$",
                                            "typeString": "type(uint96)"
                                          },
                                          "typeName": {
                                            "id": 1167,
                                            "name": "uint96",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "7264:6:5",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1171,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7264:28:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<<",
                                      "rightExpression": {
                                        "id": 1172,
                                        "name": "NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 710,
                                        "src": "7296:42:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7264:74:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      }
                                    }
                                  ],
                                  "id": 1174,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7263:76:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1175,
                                  "name": "challengeTaxRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 320,
                                  "src": "7354:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7263:107:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1177,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7262:109:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1178,
                            "name": "MULTIPLIER_DENOMINATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 308,
                            "src": "7374:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7262:134:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7242:154:5"
                      },
                      {
                        "expression": {
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1181,
                            "name": "treasuryBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "7406:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1182,
                            "name": "taxAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1166,
                            "src": "7425:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7406:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1184,
                        "nodeType": "ExpressionStatement",
                        "src": "7406:28:5"
                      },
                      {
                        "assignments": [
                          1186
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1186,
                            "mutability": "mutable",
                            "name": "disputeID",
                            "nameLocation": "7453:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1252,
                            "src": "7445:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1185,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7445:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1200,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1194,
                              "name": "NUMBER_OF_RULING_OPTIONS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "7533:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1195,
                                "name": "categoryToArbitratorExtraData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 783,
                                "src": "7571:29:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_storage_$64_storage",
                                  "typeString": "bytes storage ref[64] storage ref"
                                }
                              },
                              "id": 1198,
                              "indexExpression": {
                                "expression": {
                                  "id": 1196,
                                  "name": "article",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1120,
                                  "src": "7601:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                    "typeString": "struct TruthPost.Article storage pointer"
                                  }
                                },
                                "id": 1197,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "category",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 778,
                                "src": "7601:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7571:47:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              ],
                              "expression": {
                                "id": 1187,
                                "name": "ARBITRATOR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 707,
                                "src": "7465:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IArbitrator_$249",
                                  "typeString": "contract IArbitrator"
                                }
                              },
                              "id": 1188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "createDispute",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 195,
                              "src": "7465:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (uint256,bytes memory) payable external returns (uint256)"
                              }
                            },
                            "id": 1193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1189,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "7497:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1190,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "7497:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1191,
                                  "name": "taxAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1166,
                                  "src": "7509:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7497:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "7465:54:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$value",
                              "typeString": "function (uint256,bytes memory) payable external returns (uint256)"
                            }
                          },
                          "id": 1199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7465:163:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7445:183:5"
                      },
                      {
                        "expression": {
                          "id": 1210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1201,
                                "name": "disputes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 793,
                                "src": "7639:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$",
                                  "typeString": "mapping(uint256 => struct TruthPost.DisputeData storage ref)"
                                }
                              },
                              "id": 1203,
                              "indexExpression": {
                                "id": 1202,
                                "name": "disputeID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1186,
                                "src": "7648:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7639:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage",
                                "typeString": "struct TruthPost.DisputeData storage ref"
                              }
                            },
                            "id": 1204,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "challenger",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 733,
                            "src": "7639:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1207,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7680:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7680:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7672:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 1205,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7672:8:5",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7672:19:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "7639:52:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1211,
                        "nodeType": "ExpressionStatement",
                        "src": "7639:52:5"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1212,
                                  "name": "disputes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 793,
                                  "src": "7701:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$",
                                    "typeString": "mapping(uint256 => struct TruthPost.DisputeData storage ref)"
                                  }
                                },
                                "id": 1214,
                                "indexExpression": {
                                  "id": 1213,
                                  "name": "disputeID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1186,
                                  "src": "7710:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7701:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DisputeData_$747_storage",
                                  "typeString": "struct TruthPost.DisputeData storage ref"
                                }
                              },
                              "id": 1215,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rounds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 746,
                              "src": "7701:26:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Round_$770_storage_$dyn_storage",
                                "typeString": "struct TruthPost.Round storage ref[] storage ref"
                              }
                            },
                            "id": 1216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "7701:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Round_$770_storage_$dyn_storage_ptr_$returns$_t_struct$_Round_$770_storage_$bound_to$_t_array$_t_struct$_Round_$770_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct TruthPost.Round storage ref[] storage pointer) returns (struct TruthPost.Round storage ref)"
                            }
                          },
                          "id": 1217,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7701:33:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$770_storage",
                            "typeString": "struct TruthPost.Round storage ref"
                          }
                        },
                        "id": 1218,
                        "nodeType": "ExpressionStatement",
                        "src": "7701:33:5"
                      },
                      {
                        "expression": {
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1219,
                                "name": "disputes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 793,
                                "src": "7744:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$",
                                  "typeString": "mapping(uint256 => struct TruthPost.DisputeData storage ref)"
                                }
                              },
                              "id": 1221,
                              "indexExpression": {
                                "id": 1220,
                                "name": "disputeID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1186,
                                "src": "7753:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7744:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage",
                                "typeString": "struct TruthPost.DisputeData storage ref"
                              }
                            },
                            "id": 1222,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "articleStorageAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 742,
                            "src": "7744:41:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1225,
                                "name": "_articleStorageAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1114,
                                "src": "7795:22:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              ],
                              "id": 1224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7788:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint80_$",
                                "typeString": "type(uint80)"
                              },
                              "typeName": {
                                "id": 1223,
                                "name": "uint80",
                                "nodeType": "ElementaryTypeName",
                                "src": "7788:6:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7788:30:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "src": "7744:74:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "id": 1228,
                        "nodeType": "ExpressionStatement",
                        "src": "7744:74:5"
                      },
                      {
                        "expression": {
                          "id": 1235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1229,
                                "name": "disputes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 793,
                                "src": "7828:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$",
                                  "typeString": "mapping(uint256 => struct TruthPost.DisputeData storage ref)"
                                }
                              },
                              "id": 1231,
                              "indexExpression": {
                                "id": 1230,
                                "name": "disputeID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1186,
                                "src": "7837:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7828:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage",
                                "typeString": "struct TruthPost.DisputeData storage ref"
                              }
                            },
                            "id": 1232,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "articleCategory",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 738,
                            "src": "7828:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1233,
                              "name": "article",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1120,
                              "src": "7866:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article storage pointer"
                              }
                            },
                            "id": 1234,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "category",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 778,
                            "src": "7866:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "7828:54:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 1236,
                        "nodeType": "ExpressionStatement",
                        "src": "7828:54:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1238,
                              "name": "ARBITRATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 707,
                              "src": "7950:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitrator_$249",
                                "typeString": "contract IArbitrator"
                              }
                            },
                            {
                              "id": 1239,
                              "name": "disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1186,
                              "src": "7962:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1240,
                                "name": "article",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1120,
                                "src": "7973:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                  "typeString": "struct TruthPost.Article storage pointer"
                                }
                              },
                              "id": 1241,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "category",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 778,
                              "src": "7973:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 1242,
                              "name": "disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1186,
                              "src": "7991:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IArbitrator_$249",
                                "typeString": "contract IArbitrator"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1237,
                            "name": "Dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 284,
                            "src": "7942:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IArbitrator_$249_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IArbitrator,uint256,uint256,uint256)"
                            }
                          },
                          "id": 1243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7942:59:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1244,
                        "nodeType": "EmitStatement",
                        "src": "7937:64:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1246,
                              "name": "_articleStorageAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1114,
                              "src": "8097:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            {
                              "expression": {
                                "id": 1247,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8121:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8121:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1249,
                              "name": "disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1186,
                              "src": "8133:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1245,
                            "name": "Challenge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 382,
                            "src": "8087:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 1250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8087:56:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1251,
                        "nodeType": "EmitStatement",
                        "src": "8082:61:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1112,
                    "nodeType": "StructuredDocumentation",
                    "src": "6686:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "736ed418",
                  "id": 1253,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "challenge",
                  "nameLocation": "6726:9:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1116,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6784:8:5"
                  },
                  "parameters": {
                    "id": 1115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1114,
                        "mutability": "mutable",
                        "name": "_articleStorageAddress",
                        "nameLocation": "6743:22:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1253,
                        "src": "6736:29:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "6736:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6735:31:5"
                  },
                  "returnParameters": {
                    "id": 1117,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6793:0:5"
                  },
                  "scope": 2850,
                  "src": "6717:1433:5",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    472
                  ],
                  "body": {
                    "id": 1586,
                    "nodeType": "Block",
                    "src": "8348:3256:5",
                    "statements": [
                      {
                        "assignments": [
                          1267
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1267,
                            "mutability": "mutable",
                            "name": "dispute",
                            "nameLocation": "8378:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1586,
                            "src": "8358:27:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                              "typeString": "struct TruthPost.DisputeData"
                            },
                            "typeName": {
                              "id": 1266,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1265,
                                "name": "DisputeData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 747,
                                "src": "8358:11:5"
                              },
                              "referencedDeclaration": 747,
                              "src": "8358:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1271,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1268,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "8388:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$",
                              "typeString": "mapping(uint256 => struct TruthPost.DisputeData storage ref)"
                            }
                          },
                          "id": 1270,
                          "indexExpression": {
                            "id": 1269,
                            "name": "_disputeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "8397:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8388:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DisputeData_$747_storage",
                            "typeString": "struct TruthPost.DisputeData storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8358:50:5"
                      },
                      {
                        "assignments": [
                          1274
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1274,
                            "mutability": "mutable",
                            "name": "currentRuling",
                            "nameLocation": "8433:13:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1586,
                            "src": "8419:27:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            },
                            "typeName": {
                              "id": 1273,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1272,
                                "name": "RulingOptions",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 295,
                                "src": "8419:13:5"
                              },
                              "referencedDeclaration": 295,
                              "src": "8419:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                "typeString": "enum ITruthPost.RulingOptions"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1281,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1278,
                                  "name": "_disputeID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1256,
                                  "src": "8488:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1276,
                                  "name": "ARBITRATOR",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 707,
                                  "src": "8463:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IArbitrator_$249",
                                    "typeString": "contract IArbitrator"
                                  }
                                },
                                "id": 1277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "currentRuling",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 248,
                                "src": "8463:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view external returns (uint256)"
                                }
                              },
                              "id": 1279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8463:36:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1275,
                            "name": "RulingOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 295,
                            "src": "8449:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                              "typeString": "type(enum ITruthPost.RulingOptions)"
                            }
                          },
                          "id": 1280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8449:51:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8419:81:5"
                      },
                      {
                        "assignments": [
                          1283
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1283,
                            "mutability": "mutable",
                            "name": "basicCost",
                            "nameLocation": "8518:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1586,
                            "src": "8510:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1282,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8510:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1284,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8510:17:5"
                      },
                      {
                        "assignments": [
                          1286
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1286,
                            "mutability": "mutable",
                            "name": "totalCost",
                            "nameLocation": "8545:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1586,
                            "src": "8537:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1285,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8537:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1287,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8537:17:5"
                      },
                      {
                        "id": 1366,
                        "nodeType": "Block",
                        "src": "8564:1032:5",
                        "statements": [
                          {
                            "assignments": [
                              1289,
                              1291
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1289,
                                "mutability": "mutable",
                                "name": "appealWindowStart",
                                "nameLocation": "8587:17:5",
                                "nodeType": "VariableDeclaration",
                                "scope": 1366,
                                "src": "8579:25:5",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1288,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8579:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              },
                              {
                                "constant": false,
                                "id": 1291,
                                "mutability": "mutable",
                                "name": "appealWindowEnd",
                                "nameLocation": "8614:15:5",
                                "nodeType": "VariableDeclaration",
                                "scope": 1366,
                                "src": "8606:23:5",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1290,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8606:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1296,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 1294,
                                  "name": "_disputeID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1256,
                                  "src": "8657:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1292,
                                  "name": "ARBITRATOR",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 707,
                                  "src": "8633:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IArbitrator_$249",
                                    "typeString": "contract IArbitrator"
                                  }
                                },
                                "id": 1293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "appealPeriod",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 231,
                                "src": "8633:23:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                  "typeString": "function (uint256) view external returns (uint256,uint256)"
                                }
                              },
                              "id": 1295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8633:35:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                "typeString": "tuple(uint256,uint256)"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "8578:90:5"
                          },
                          {
                            "assignments": [
                              1298
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1298,
                                "mutability": "mutable",
                                "name": "multiplier",
                                "nameLocation": "8691:10:5",
                                "nodeType": "VariableDeclaration",
                                "scope": 1366,
                                "src": "8683:18:5",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1297,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8683:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1299,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "8683:18:5"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                "typeString": "enum ITruthPost.RulingOptions"
                              },
                              "id": 1302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1300,
                                "name": "_supportedRuling",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1259,
                                "src": "8720:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RulingOptions_$295",
                                  "typeString": "enum ITruthPost.RulingOptions"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1301,
                                "name": "currentRuling",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1274,
                                "src": "8740:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RulingOptions_$295",
                                  "typeString": "enum ITruthPost.RulingOptions"
                                }
                              },
                              "src": "8720:33:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 1340,
                              "nodeType": "Block",
                              "src": "8941:438:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1332,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 1317,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "8988:5:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 1318,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "src": "8988:15:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1330,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1319,
                                                "name": "appealWindowStart",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1289,
                                                "src": "9031:17:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "+",
                                              "rightExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 1328,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "components": [
                                                        {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "id": 1325,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "components": [
                                                              {
                                                                "commonType": {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                },
                                                                "id": 1322,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                  "id": 1320,
                                                                  "name": "appealWindowEnd",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 1291,
                                                                  "src": "9082:15:5",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                  }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "-",
                                                                "rightExpression": {
                                                                  "id": 1321,
                                                                  "name": "appealWindowStart",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 1289,
                                                                  "src": "9100:17:5",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                  }
                                                                },
                                                                "src": "9082:35:5",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              }
                                                            ],
                                                            "id": 1323,
                                                            "isConstant": false,
                                                            "isInlineArray": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "TupleExpression",
                                                            "src": "9081:37:5",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "*",
                                                          "rightExpression": {
                                                            "id": 1324,
                                                            "name": "LOSER_APPEAL_PERIOD_MULTIPLIER",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 311,
                                                            "src": "9121:30:5",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "src": "9081:70:5",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        }
                                                      ],
                                                      "id": 1326,
                                                      "isConstant": false,
                                                      "isInlineArray": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "TupleExpression",
                                                      "src": "9080:72:5",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "/",
                                                    "rightExpression": {
                                                      "id": 1327,
                                                      "name": "MULTIPLIER_DENOMINATOR",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 308,
                                                      "src": "9187:22:5",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "9080:129:5",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 1329,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "9079:131:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "9031:179:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 1331,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "9030:181:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "8988:223:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      {
                                        "hexValue": "46756e64696e67206d757374206265206d6164652077697468696e207468652066697273742068616c662061707065616c20706572696f642e",
                                        "id": 1333,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9233:59:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_f3418d70ac679d1f67a83336adc36c46a5610f9d2455f76fc28495336bbc06ed",
                                          "typeString": "literal_string \"Funding must be made within the first half appeal period.\""
                                        },
                                        "value": "Funding must be made within the first half appeal period."
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_f3418d70ac679d1f67a83336adc36c46a5610f9d2455f76fc28495336bbc06ed",
                                          "typeString": "literal_string \"Funding must be made within the first half appeal period.\""
                                        }
                                      ],
                                      "id": 1316,
                                      "name": "require",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -18,
                                        -18
                                      ],
                                      "referencedDeclaration": -18,
                                      "src": "8959:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (bool,string memory) pure"
                                      }
                                    },
                                    "id": 1334,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8959:351:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1335,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8959:351:5"
                                },
                                {
                                  "expression": {
                                    "id": 1338,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 1336,
                                      "name": "multiplier",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1298,
                                      "src": "9329:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "id": 1337,
                                      "name": "LOSER_STAKE_MULTIPLIER",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 317,
                                      "src": "9342:22:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "9329:35:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1339,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9329:35:5"
                                }
                              ]
                            },
                            "id": 1341,
                            "nodeType": "IfStatement",
                            "src": "8716:663:5",
                            "trueBody": {
                              "id": 1315,
                              "nodeType": "Block",
                              "src": "8755:180:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1307,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 1304,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "8781:5:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 1305,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "src": "8781:15:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "id": 1306,
                                          "name": "appealWindowEnd",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1291,
                                          "src": "8799:15:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "8781:33:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      {
                                        "hexValue": "46756e64696e67206d757374206265206d6164652077697468696e207468652061707065616c20706572696f642e",
                                        "id": 1308,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8816:48:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_0345b6b07b3f7ea23ce7c0682ae193a7b3933d232b736d656630025e0007450f",
                                          "typeString": "literal_string \"Funding must be made within the appeal period.\""
                                        },
                                        "value": "Funding must be made within the appeal period."
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_0345b6b07b3f7ea23ce7c0682ae193a7b3933d232b736d656630025e0007450f",
                                          "typeString": "literal_string \"Funding must be made within the appeal period.\""
                                        }
                                      ],
                                      "id": 1303,
                                      "name": "require",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -18,
                                        -18
                                      ],
                                      "referencedDeclaration": -18,
                                      "src": "8773:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (bool,string memory) pure"
                                      }
                                    },
                                    "id": 1309,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8773:92:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1310,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8773:92:5"
                                },
                                {
                                  "expression": {
                                    "id": 1313,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 1311,
                                      "name": "multiplier",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1298,
                                      "src": "8884:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "id": 1312,
                                      "name": "WINNER_STAKE_MULTIPLIER",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 315,
                                      "src": "8897:23:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8884:36:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1314,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8884:36:5"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "id": 1351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1342,
                                "name": "basicCost",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1283,
                                "src": "9393:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 1345,
                                    "name": "_disputeID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1256,
                                    "src": "9427:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1346,
                                      "name": "categoryToArbitratorExtraData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 783,
                                      "src": "9439:29:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bytes_storage_$64_storage",
                                        "typeString": "bytes storage ref[64] storage ref"
                                      }
                                    },
                                    "id": 1349,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 1347,
                                        "name": "dispute",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1267,
                                        "src": "9469:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                          "typeString": "struct TruthPost.DisputeData storage pointer"
                                        }
                                      },
                                      "id": 1348,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "articleCategory",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 738,
                                      "src": "9469:23:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9439:54:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1343,
                                    "name": "ARBITRATOR",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 707,
                                    "src": "9405:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IArbitrator_$249",
                                      "typeString": "contract IArbitrator"
                                    }
                                  },
                                  "id": 1344,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "appealCost",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 221,
                                  "src": "9405:21:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,bytes memory) view external returns (uint256)"
                                  }
                                },
                                "id": 1350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9405:89:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9393:101:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1352,
                            "nodeType": "ExpressionStatement",
                            "src": "9393:101:5"
                          },
                          {
                            "expression": {
                              "id": 1364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1353,
                                "name": "totalCost",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1286,
                                "src": "9508:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1363,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1354,
                                  "name": "basicCost",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "9520:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1361,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1358,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1355,
                                              "name": "basicCost",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1283,
                                              "src": "9534:9:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "components": [
                                                {
                                                  "id": 1356,
                                                  "name": "multiplier",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1298,
                                                  "src": "9547:10:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 1357,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "9546:12:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "9534:24:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1359,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "9533:26:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 1360,
                                        "name": "MULTIPLIER_DENOMINATOR",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 308,
                                        "src": "9562:22:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9533:51:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1362,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9532:53:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9520:65:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9508:77:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1365,
                            "nodeType": "ExpressionStatement",
                            "src": "9508:77:5"
                          }
                        ]
                      },
                      {
                        "assignments": [
                          1369
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1369,
                            "mutability": "mutable",
                            "name": "supportedRulingOutcome",
                            "nameLocation": "9620:22:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1586,
                            "src": "9606:36:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            },
                            "typeName": {
                              "id": 1368,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1367,
                                "name": "RulingOptions",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 295,
                                "src": "9606:13:5"
                              },
                              "referencedDeclaration": 295,
                              "src": "9606:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                "typeString": "enum ITruthPost.RulingOptions"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1373,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1371,
                              "name": "_supportedRuling",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1259,
                              "src": "9659:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                "typeString": "enum ITruthPost.RulingOptions"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                "typeString": "enum ITruthPost.RulingOptions"
                              }
                            ],
                            "id": 1370,
                            "name": "RulingOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 295,
                            "src": "9645:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                              "typeString": "type(enum ITruthPost.RulingOptions)"
                            }
                          },
                          "id": 1372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9645:31:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9606:70:5"
                      },
                      {
                        "assignments": [
                          1375
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1375,
                            "mutability": "mutable",
                            "name": "lastRoundIndex",
                            "nameLocation": "9695:14:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1586,
                            "src": "9687:22:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1374,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9687:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1381,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1376,
                                "name": "dispute",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1267,
                                "src": "9712:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                  "typeString": "struct TruthPost.DisputeData storage pointer"
                                }
                              },
                              "id": 1377,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rounds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 746,
                              "src": "9712:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Round_$770_storage_$dyn_storage",
                                "typeString": "struct TruthPost.Round storage ref[] storage ref"
                              }
                            },
                            "id": 1378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9712:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9736:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "9712:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9687:50:5"
                      },
                      {
                        "assignments": [
                          1384
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1384,
                            "mutability": "mutable",
                            "name": "lastRound",
                            "nameLocation": "9761:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1586,
                            "src": "9747:23:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                              "typeString": "struct TruthPost.Round"
                            },
                            "typeName": {
                              "id": 1383,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1382,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 770,
                                "src": "9747:5:5"
                              },
                              "referencedDeclaration": 770,
                              "src": "9747:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                "typeString": "struct TruthPost.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1389,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 1385,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1267,
                              "src": "9773:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData storage pointer"
                              }
                            },
                            "id": 1386,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rounds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 746,
                            "src": "9773:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Round_$770_storage_$dyn_storage",
                              "typeString": "struct TruthPost.Round storage ref[] storage ref"
                            }
                          },
                          "id": 1388,
                          "indexExpression": {
                            "id": 1387,
                            "name": "lastRoundIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1375,
                            "src": "9788:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9773:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$770_storage",
                            "typeString": "struct TruthPost.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9747:56:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "9821:51:5",
                              "subExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 1391,
                                    "name": "lastRound",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1384,
                                    "src": "9822:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                      "typeString": "struct TruthPost.Round storage pointer"
                                    }
                                  },
                                  "id": 1392,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "hasPaid",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 761,
                                  "src": "9822:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bool_$3_storage",
                                    "typeString": "bool[3] storage ref"
                                  }
                                },
                                "id": 1397,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 1395,
                                      "name": "supportedRulingOutcome",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1369,
                                      "src": "9848:22:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_RulingOptions_$295",
                                        "typeString": "enum ITruthPost.RulingOptions"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_RulingOptions_$295",
                                        "typeString": "enum ITruthPost.RulingOptions"
                                      }
                                    ],
                                    "id": 1394,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9840:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1393,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9840:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1396,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9840:31:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9822:50:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "41707065616c206665652068617320616c7265616479206265656e20706169642e",
                              "id": 1399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9874:35:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c2f2256a77e1cd7cdc564a3b966df4f3e5bfbdc15f00156637ffbff138e529be",
                                "typeString": "literal_string \"Appeal fee has already been paid.\""
                              },
                              "value": "Appeal fee has already been paid."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c2f2256a77e1cd7cdc564a3b966df4f3e5bfbdc15f00156637ffbff138e529be",
                                "typeString": "literal_string \"Appeal fee has already been paid.\""
                              }
                            ],
                            "id": 1390,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9813:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9813:97:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1401,
                        "nodeType": "ExpressionStatement",
                        "src": "9813:97:5"
                      },
                      {
                        "assignments": [
                          1403
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1403,
                            "mutability": "mutable",
                            "name": "contribution",
                            "nameLocation": "9929:12:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1586,
                            "src": "9921:20:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1402,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9921:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1404,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9921:20:5"
                      },
                      {
                        "id": 1440,
                        "nodeType": "Block",
                        "src": "9951:409:5",
                        "statements": [
                          {
                            "assignments": [
                              1406
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1406,
                                "mutability": "mutable",
                                "name": "paidSoFar",
                                "nameLocation": "9973:9:5",
                                "nodeType": "VariableDeclaration",
                                "scope": 1440,
                                "src": "9965:17:5",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1405,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9965:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1414,
                            "initialValue": {
                              "baseExpression": {
                                "expression": {
                                  "id": 1407,
                                  "name": "lastRound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1384,
                                  "src": "9985:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                    "typeString": "struct TruthPost.Round storage pointer"
                                  }
                                },
                                "id": 1408,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalPerRuling",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 767,
                                "src": "9985:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                  "typeString": "uint256[3] storage ref"
                                }
                              },
                              "id": 1413,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 1411,
                                    "name": "supportedRulingOutcome",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1369,
                                    "src": "10018:22:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RulingOptions_$295",
                                      "typeString": "enum ITruthPost.RulingOptions"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_RulingOptions_$295",
                                      "typeString": "enum ITruthPost.RulingOptions"
                                    }
                                  ],
                                  "id": 1410,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10010:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1409,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10010:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10010:31:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9985:57:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "9965:77:5"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1415,
                                "name": "paidSoFar",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1406,
                                "src": "10061:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1416,
                                "name": "totalCost",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1286,
                                "src": "10074:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10061:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 1438,
                              "nodeType": "Block",
                              "src": "10233:117:5",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1436,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 1423,
                                      "name": "contribution",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1403,
                                      "src": "10251:12:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1429,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1426,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1424,
                                            "name": "totalCost",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1286,
                                            "src": "10266:9:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 1425,
                                            "name": "paidSoFar",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1406,
                                            "src": "10278:9:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "10266:21:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 1427,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "10290:3:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1428,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "value",
                                          "nodeType": "MemberAccess",
                                          "src": "10290:9:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10266:33:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1434,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1432,
                                          "name": "totalCost",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1286,
                                          "src": "10314:9:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 1433,
                                          "name": "paidSoFar",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1406,
                                          "src": "10326:9:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10314:21:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1435,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "10266:69:5",
                                      "trueExpression": {
                                        "expression": {
                                          "id": 1430,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "10302:3:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1431,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "value",
                                        "nodeType": "MemberAccess",
                                        "src": "10302:9:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "10251:84:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1437,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10251:84:5"
                                }
                              ]
                            },
                            "id": 1439,
                            "nodeType": "IfStatement",
                            "src": "10057:293:5",
                            "trueBody": {
                              "id": 1422,
                              "nodeType": "Block",
                              "src": "10085:142:5",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1420,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 1418,
                                      "name": "contribution",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1403,
                                      "src": "10103:12:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "hexValue": "30",
                                      "id": 1419,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10118:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "10103:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1421,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10103:16:5"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1442,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1256,
                              "src": "10388:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1443,
                              "name": "lastRoundIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "10400:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1444,
                              "name": "_supportedRuling",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1259,
                              "src": "10416:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                "typeString": "enum ITruthPost.RulingOptions"
                              }
                            },
                            {
                              "expression": {
                                "id": 1445,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10434:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10434:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1447,
                              "name": "contribution",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1403,
                              "src": "10446:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                "typeString": "enum ITruthPost.RulingOptions"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1441,
                            "name": "Contribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 395,
                            "src": "10375:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_enum$_RulingOptions_$295_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,enum ITruthPost.RulingOptions,address,uint256)"
                            }
                          },
                          "id": 1448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10375:84:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1449,
                        "nodeType": "EmitStatement",
                        "src": "10370:89:5"
                      },
                      {
                        "expression": {
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 1450,
                                  "name": "lastRound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1384,
                                  "src": "10470:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                    "typeString": "struct TruthPost.Round storage pointer"
                                  }
                                },
                                "id": 1458,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "contributions",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 755,
                                "src": "10470:23:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$3_storage_$",
                                  "typeString": "mapping(address => uint256[3] storage ref)"
                                }
                              },
                              "id": 1459,
                              "indexExpression": {
                                "expression": {
                                  "id": 1452,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10494:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1453,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "10494:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10470:35:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                "typeString": "uint256[3] storage ref"
                              }
                            },
                            "id": 1460,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 1456,
                                  "name": "supportedRulingOutcome",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1369,
                                  "src": "10514:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                ],
                                "id": 1455,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10506:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1454,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10506:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10506:31:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10470:68:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1461,
                            "name": "contribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1403,
                            "src": "10542:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10470:84:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1463,
                        "nodeType": "ExpressionStatement",
                        "src": "10470:84:5"
                      },
                      {
                        "expression": {
                          "id": 1473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1464,
                                "name": "lastRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1384,
                                "src": "10564:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                  "typeString": "struct TruthPost.Round storage pointer"
                                }
                              },
                              "id": 1470,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalPerRuling",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 767,
                              "src": "10564:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                "typeString": "uint256[3] storage ref"
                              }
                            },
                            "id": 1471,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 1468,
                                  "name": "supportedRulingOutcome",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1369,
                                  "src": "10597:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                ],
                                "id": 1467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10589:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1466,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10589:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10589:31:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10564:57:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1472,
                            "name": "contribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1403,
                            "src": "10625:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10564:73:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1474,
                        "nodeType": "ExpressionStatement",
                        "src": "10564:73:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 1475,
                                "name": "lastRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1384,
                                "src": "10652:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                  "typeString": "struct TruthPost.Round storage pointer"
                                }
                              },
                              "id": 1476,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalPerRuling",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 767,
                              "src": "10652:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                "typeString": "uint256[3] storage ref"
                              }
                            },
                            "id": 1481,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 1479,
                                  "name": "supportedRulingOutcome",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1369,
                                  "src": "10685:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                ],
                                "id": 1478,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10677:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1477,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10677:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10677:31:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10652:57:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1482,
                            "name": "totalCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1286,
                            "src": "10713:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10652:70:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1514,
                        "nodeType": "IfStatement",
                        "src": "10648:347:5",
                        "trueBody": {
                          "id": 1513,
                          "nodeType": "Block",
                          "src": "10724:271:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 1494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1484,
                                    "name": "lastRound",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1384,
                                    "src": "10738:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                      "typeString": "struct TruthPost.Round storage pointer"
                                    }
                                  },
                                  "id": 1486,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "totalClaimableAfterExpenses",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 769,
                                  "src": "10738:37:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1487,
                                      "name": "lastRound",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1384,
                                      "src": "10779:9:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                        "typeString": "struct TruthPost.Round storage pointer"
                                      }
                                    },
                                    "id": 1488,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalPerRuling",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 767,
                                    "src": "10779:24:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                      "typeString": "uint256[3] storage ref"
                                    }
                                  },
                                  "id": 1493,
                                  "indexExpression": {
                                    "arguments": [
                                      {
                                        "id": 1491,
                                        "name": "supportedRulingOutcome",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1369,
                                        "src": "10812:22:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                                          "typeString": "enum ITruthPost.RulingOptions"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                                          "typeString": "enum ITruthPost.RulingOptions"
                                        }
                                      ],
                                      "id": 1490,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10804:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 1489,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10804:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1492,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10804:31:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10779:57:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10738:98:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1495,
                              "nodeType": "ExpressionStatement",
                              "src": "10738:98:5"
                            },
                            {
                              "expression": {
                                "id": 1505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1496,
                                      "name": "lastRound",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1384,
                                      "src": "10850:9:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                        "typeString": "struct TruthPost.Round storage pointer"
                                      }
                                    },
                                    "id": 1502,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "hasPaid",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 761,
                                    "src": "10850:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$3_storage",
                                      "typeString": "bool[3] storage ref"
                                    }
                                  },
                                  "id": 1503,
                                  "indexExpression": {
                                    "arguments": [
                                      {
                                        "id": 1500,
                                        "name": "supportedRulingOutcome",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1369,
                                        "src": "10876:22:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                                          "typeString": "enum ITruthPost.RulingOptions"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                                          "typeString": "enum ITruthPost.RulingOptions"
                                        }
                                      ],
                                      "id": 1499,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10868:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 1498,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10868:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1501,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10868:31:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10850:50:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1504,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10903:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "10850:57:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1506,
                              "nodeType": "ExpressionStatement",
                              "src": "10850:57:5"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1508,
                                    "name": "_disputeID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1256,
                                    "src": "10939:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1509,
                                    "name": "lastRoundIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1375,
                                    "src": "10951:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1510,
                                    "name": "_supportedRuling",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1259,
                                    "src": "10967:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RulingOptions_$295",
                                      "typeString": "enum ITruthPost.RulingOptions"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_RulingOptions_$295",
                                      "typeString": "enum ITruthPost.RulingOptions"
                                    }
                                  ],
                                  "id": 1507,
                                  "name": "RulingFunded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 417,
                                  "src": "10926:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_enum$_RulingOptions_$295_$returns$__$",
                                    "typeString": "function (uint256,uint256,enum ITruthPost.RulingOptions)"
                                  }
                                },
                                "id": 1511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10926:58:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1512,
                              "nodeType": "EmitStatement",
                              "src": "10921:63:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 1515,
                                "name": "lastRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1384,
                                "src": "11022:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                  "typeString": "struct TruthPost.Round storage pointer"
                                }
                              },
                              "id": 1516,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "hasPaid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 761,
                              "src": "11022:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$3_storage",
                                "typeString": "bool[3] storage ref"
                              }
                            },
                            "id": 1522,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1519,
                                    "name": "RulingOptions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 295,
                                    "src": "11048:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                      "typeString": "type(enum ITruthPost.RulingOptions)"
                                    }
                                  },
                                  "id": 1520,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ChallengeFailed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 293,
                                  "src": "11048:29:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                ],
                                "id": 1518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11040:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1517,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11040:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11040:38:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11022:57:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 1523,
                                "name": "lastRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1384,
                                "src": "11095:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                  "typeString": "struct TruthPost.Round storage pointer"
                                }
                              },
                              "id": 1524,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "hasPaid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 761,
                              "src": "11095:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$3_storage",
                                "typeString": "bool[3] storage ref"
                              }
                            },
                            "id": 1530,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1527,
                                    "name": "RulingOptions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 295,
                                    "src": "11121:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                      "typeString": "type(enum ITruthPost.RulingOptions)"
                                    }
                                  },
                                  "id": 1528,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Debunked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 294,
                                  "src": "11121:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                ],
                                "id": 1526,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11113:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1525,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11113:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11113:31:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11095:50:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11022:123:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1558,
                        "nodeType": "IfStatement",
                        "src": "11005:378:5",
                        "trueBody": {
                          "id": 1557,
                          "nodeType": "Block",
                          "src": "11156:227:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "expression": {
                                      "id": 1532,
                                      "name": "dispute",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1267,
                                      "src": "11170:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                        "typeString": "struct TruthPost.DisputeData storage pointer"
                                      }
                                    },
                                    "id": 1535,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rounds",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 746,
                                    "src": "11170:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Round_$770_storage_$dyn_storage",
                                      "typeString": "struct TruthPost.Round storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "11170:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Round_$770_storage_$dyn_storage_ptr_$returns$_t_struct$_Round_$770_storage_$bound_to$_t_array$_t_struct$_Round_$770_storage_$dyn_storage_ptr_$",
                                    "typeString": "function (struct TruthPost.Round storage ref[] storage pointer) returns (struct TruthPost.Round storage ref)"
                                  }
                                },
                                "id": 1537,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11170:21:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$770_storage",
                                  "typeString": "struct TruthPost.Round storage ref"
                                }
                              },
                              "id": 1538,
                              "nodeType": "ExpressionStatement",
                              "src": "11170:21:5"
                            },
                            {
                              "expression": {
                                "id": 1543,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1539,
                                    "name": "lastRound",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1384,
                                    "src": "11205:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                      "typeString": "struct TruthPost.Round storage pointer"
                                    }
                                  },
                                  "id": 1541,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "totalClaimableAfterExpenses",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 769,
                                  "src": "11205:37:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 1542,
                                  "name": "basicCost",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "11246:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11205:50:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1544,
                              "nodeType": "ExpressionStatement",
                              "src": "11205:50:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1550,
                                    "name": "_disputeID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1256,
                                    "src": "11305:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1551,
                                      "name": "categoryToArbitratorExtraData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 783,
                                      "src": "11317:29:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bytes_storage_$64_storage",
                                        "typeString": "bytes storage ref[64] storage ref"
                                      }
                                    },
                                    "id": 1554,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 1552,
                                        "name": "dispute",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1267,
                                        "src": "11347:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                          "typeString": "struct TruthPost.DisputeData storage pointer"
                                        }
                                      },
                                      "id": 1553,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "articleCategory",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 738,
                                      "src": "11347:23:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11317:54:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes_storage",
                                        "typeString": "bytes storage ref"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1545,
                                      "name": "ARBITRATOR",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 707,
                                      "src": "11269:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IArbitrator_$249",
                                        "typeString": "contract IArbitrator"
                                      }
                                    },
                                    "id": 1547,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "appeal",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 211,
                                    "src": "11269:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                      "typeString": "function (uint256,bytes memory) payable external"
                                    }
                                  },
                                  "id": 1549,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1548,
                                      "name": "basicCost",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1283,
                                      "src": "11294:9:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "11269:35:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$value",
                                    "typeString": "function (uint256,bytes memory) payable external"
                                  }
                                },
                                "id": 1555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11269:103:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1556,
                              "nodeType": "ExpressionStatement",
                              "src": "11269:103:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1559,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11449:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "11449:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1561,
                              "name": "contribution",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1403,
                              "src": "11461:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11449:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11476:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11449:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1577,
                        "nodeType": "IfStatement",
                        "src": "11445:84:5",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1574,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1571,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "11504:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1572,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "11504:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1573,
                                  "name": "contribution",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1403,
                                  "src": "11516:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11504:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1567,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "11487:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1568,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "11487:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1566,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11479:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1565,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11479:8:5",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11479:19:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "send",
                              "nodeType": "MemberAccess",
                              "src": "11479:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (uint256) returns (bool)"
                              }
                            },
                            "id": 1575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11479:50:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1576,
                          "nodeType": "ExpressionStatement",
                          "src": "11479:50:5"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "id": 1578,
                              "name": "lastRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1384,
                              "src": "11547:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                "typeString": "struct TruthPost.Round storage pointer"
                              }
                            },
                            "id": 1579,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hasPaid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 761,
                            "src": "11547:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$3_storage",
                              "typeString": "bool[3] storage ref"
                            }
                          },
                          "id": 1584,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 1582,
                                "name": "supportedRulingOutcome",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "11573:22:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RulingOptions_$295",
                                  "typeString": "enum ITruthPost.RulingOptions"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_RulingOptions_$295",
                                  "typeString": "enum ITruthPost.RulingOptions"
                                }
                              ],
                              "id": 1581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11565:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1580,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11565:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11565:31:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11547:50:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1264,
                        "id": 1585,
                        "nodeType": "Return",
                        "src": "11540:57:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1254,
                    "nodeType": "StructuredDocumentation",
                    "src": "8156:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "12b3a2c0",
                  "id": 1587,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fundAppeal",
                  "nameLocation": "8196:10:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1261,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "8300:8:5"
                  },
                  "parameters": {
                    "id": 1260,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1256,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "8215:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1587,
                        "src": "8207:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8207:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1259,
                        "mutability": "mutable",
                        "name": "_supportedRuling",
                        "nameLocation": "8241:16:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1587,
                        "src": "8227:30:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 1258,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1257,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "8227:13:5"
                          },
                          "referencedDeclaration": 295,
                          "src": "8227:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8206:52:5"
                  },
                  "returnParameters": {
                    "id": 1264,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1263,
                        "mutability": "mutable",
                        "name": "fullyFunded",
                        "nameLocation": "8331:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1587,
                        "src": "8326:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1262,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8326:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8325:18:5"
                  },
                  "scope": 2850,
                  "src": "8187:3417:5",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    152
                  ],
                  "body": {
                    "id": 1744,
                    "nodeType": "Block",
                    "src": "11866:1569:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_contract$_IArbitrator_$249",
                                "typeString": "contract IArbitrator"
                              },
                              "id": 1602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1598,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "11896:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1599,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "11896:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1597,
                                  "name": "IArbitrator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 249,
                                  "src": "11884:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IArbitrator_$249_$",
                                    "typeString": "type(contract IArbitrator)"
                                  }
                                },
                                "id": 1600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11884:23:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IArbitrator_$249",
                                  "typeString": "contract IArbitrator"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1601,
                                "name": "ARBITRATOR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 707,
                                "src": "11911:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IArbitrator_$249",
                                  "typeString": "contract IArbitrator"
                                }
                              },
                              "src": "11884:37:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1596,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11876:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11876:46:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1604,
                        "nodeType": "ExpressionStatement",
                        "src": "11876:46:5"
                      },
                      {
                        "assignments": [
                          1607
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1607,
                            "mutability": "mutable",
                            "name": "dispute",
                            "nameLocation": "11953:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1744,
                            "src": "11933:27:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                              "typeString": "struct TruthPost.DisputeData"
                            },
                            "typeName": {
                              "id": 1606,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1605,
                                "name": "DisputeData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 747,
                                "src": "11933:11:5"
                              },
                              "referencedDeclaration": 747,
                              "src": "11933:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1611,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1608,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "11963:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$",
                              "typeString": "mapping(uint256 => struct TruthPost.DisputeData storage ref)"
                            }
                          },
                          "id": 1610,
                          "indexExpression": {
                            "id": 1609,
                            "name": "_disputeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1590,
                            "src": "11972:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11963:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DisputeData_$747_storage",
                            "typeString": "struct TruthPost.DisputeData storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11933:50:5"
                      },
                      {
                        "assignments": [
                          1614
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1614,
                            "mutability": "mutable",
                            "name": "lastRound",
                            "nameLocation": "12007:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1744,
                            "src": "11993:23:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                              "typeString": "struct TruthPost.Round"
                            },
                            "typeName": {
                              "id": 1613,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1612,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 770,
                                "src": "11993:5:5"
                              },
                              "referencedDeclaration": 770,
                              "src": "11993:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                "typeString": "struct TruthPost.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1623,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 1615,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1607,
                              "src": "12019:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData storage pointer"
                              }
                            },
                            "id": 1616,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rounds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 746,
                            "src": "12019:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Round_$770_storage_$dyn_storage",
                              "typeString": "struct TruthPost.Round storage ref[] storage ref"
                            }
                          },
                          "id": 1622,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "id": 1617,
                                  "name": "dispute",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1607,
                                  "src": "12034:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                    "typeString": "struct TruthPost.DisputeData storage pointer"
                                  }
                                },
                                "id": 1618,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rounds",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 746,
                                "src": "12034:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Round_$770_storage_$dyn_storage",
                                  "typeString": "struct TruthPost.Round storage ref[] storage ref"
                                }
                              },
                              "id": 1619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "12034:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12058:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12034:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12019:41:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$770_storage",
                            "typeString": "struct TruthPost.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11993:67:5"
                      },
                      {
                        "assignments": [
                          1626
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1626,
                            "mutability": "mutable",
                            "name": "wonByDefault",
                            "nameLocation": "12252:12:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1744,
                            "src": "12238:26:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            },
                            "typeName": {
                              "id": 1625,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1624,
                                "name": "RulingOptions",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 295,
                                "src": "12238:13:5"
                              },
                              "referencedDeclaration": 295,
                              "src": "12238:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                "typeString": "enum ITruthPost.RulingOptions"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1627,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12238:26:5"
                      },
                      {
                        "condition": {
                          "baseExpression": {
                            "expression": {
                              "id": 1628,
                              "name": "lastRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1614,
                              "src": "12278:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                "typeString": "struct TruthPost.Round storage pointer"
                              }
                            },
                            "id": 1629,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hasPaid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 761,
                            "src": "12278:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$3_storage",
                              "typeString": "bool[3] storage ref"
                            }
                          },
                          "id": 1635,
                          "indexExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1632,
                                  "name": "RulingOptions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 295,
                                  "src": "12304:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                    "typeString": "type(enum ITruthPost.RulingOptions)"
                                  }
                                },
                                "id": 1633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ChallengeFailed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 293,
                                "src": "12304:29:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RulingOptions_$295",
                                  "typeString": "enum ITruthPost.RulingOptions"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_RulingOptions_$295",
                                  "typeString": "enum ITruthPost.RulingOptions"
                                }
                              ],
                              "id": 1631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12296:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1630,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "12296:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12296:38:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12278:57:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "baseExpression": {
                              "expression": {
                                "id": 1642,
                                "name": "lastRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1614,
                                "src": "12416:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                  "typeString": "struct TruthPost.Round storage pointer"
                                }
                              },
                              "id": 1643,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "hasPaid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 761,
                              "src": "12416:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$3_storage",
                                "typeString": "bool[3] storage ref"
                              }
                            },
                            "id": 1649,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1646,
                                    "name": "RulingOptions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 295,
                                    "src": "12442:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                      "typeString": "type(enum ITruthPost.RulingOptions)"
                                    }
                                  },
                                  "id": 1647,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ChallengeFailed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 293,
                                  "src": "12442:29:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                ],
                                "id": 1645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12434:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1644,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12434:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12434:38:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12416:57:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1656,
                          "nodeType": "IfStatement",
                          "src": "12412:125:5",
                          "trueBody": {
                            "id": 1655,
                            "nodeType": "Block",
                            "src": "12475:62:5",
                            "statements": [
                              {
                                "expression": {
                                  "id": 1653,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1650,
                                    "name": "wonByDefault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1626,
                                    "src": "12489:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RulingOptions_$295",
                                      "typeString": "enum ITruthPost.RulingOptions"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 1651,
                                      "name": "RulingOptions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 295,
                                      "src": "12504:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                        "typeString": "type(enum ITruthPost.RulingOptions)"
                                      }
                                    },
                                    "id": 1652,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "Debunked",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 294,
                                    "src": "12504:22:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RulingOptions_$295",
                                      "typeString": "enum ITruthPost.RulingOptions"
                                    }
                                  },
                                  "src": "12489:37:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                },
                                "id": 1654,
                                "nodeType": "ExpressionStatement",
                                "src": "12489:37:5"
                              }
                            ]
                          }
                        },
                        "id": 1657,
                        "nodeType": "IfStatement",
                        "src": "12274:263:5",
                        "trueBody": {
                          "id": 1641,
                          "nodeType": "Block",
                          "src": "12337:69:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 1639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1636,
                                  "name": "wonByDefault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1626,
                                  "src": "12351:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1637,
                                    "name": "RulingOptions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 295,
                                    "src": "12366:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                      "typeString": "type(enum ITruthPost.RulingOptions)"
                                    }
                                  },
                                  "id": 1638,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ChallengeFailed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 293,
                                  "src": "12366:29:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                },
                                "src": "12351:44:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RulingOptions_$295",
                                  "typeString": "enum ITruthPost.RulingOptions"
                                }
                              },
                              "id": 1640,
                              "nodeType": "ExpressionStatement",
                              "src": "12351:44:5"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1660
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1660,
                            "mutability": "mutable",
                            "name": "actualRuling",
                            "nameLocation": "12561:12:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1744,
                            "src": "12547:26:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            },
                            "typeName": {
                              "id": 1659,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1658,
                                "name": "RulingOptions",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 295,
                                "src": "12547:13:5"
                              },
                              "referencedDeclaration": 295,
                              "src": "12547:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                "typeString": "enum ITruthPost.RulingOptions"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1670,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            },
                            "id": 1664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1661,
                              "name": "wonByDefault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1626,
                              "src": "12576:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                "typeString": "enum ITruthPost.RulingOptions"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 1662,
                                "name": "RulingOptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 295,
                                "src": "12592:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                  "typeString": "type(enum ITruthPost.RulingOptions)"
                                }
                              },
                              "id": 1663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Tied",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 292,
                              "src": "12592:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                "typeString": "enum ITruthPost.RulingOptions"
                              }
                            },
                            "src": "12576:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [
                              {
                                "id": 1667,
                                "name": "_ruling",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1592,
                                "src": "12642:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1666,
                              "name": "RulingOptions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 295,
                              "src": "12628:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                "typeString": "type(enum ITruthPost.RulingOptions)"
                              }
                            },
                            "id": 1668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12628:22:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            }
                          },
                          "id": 1669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "12576:74:5",
                          "trueExpression": {
                            "id": 1665,
                            "name": "wonByDefault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1626,
                            "src": "12613:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12547:103:5"
                      },
                      {
                        "expression": {
                          "id": 1675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1671,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1607,
                              "src": "12660:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData storage pointer"
                              }
                            },
                            "id": 1673,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "outcome",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 736,
                            "src": "12660:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1674,
                            "name": "actualRuling",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1660,
                            "src": "12678:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            }
                          },
                          "src": "12660:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "id": 1676,
                        "nodeType": "ExpressionStatement",
                        "src": "12660:30:5"
                      },
                      {
                        "assignments": [
                          1678
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1678,
                            "mutability": "mutable",
                            "name": "articleStorageAddress",
                            "nameLocation": "12708:21:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1744,
                            "src": "12701:28:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            },
                            "typeName": {
                              "id": 1677,
                              "name": "uint80",
                              "nodeType": "ElementaryTypeName",
                              "src": "12701:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1681,
                        "initialValue": {
                          "expression": {
                            "id": 1679,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1607,
                            "src": "12732:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                              "typeString": "struct TruthPost.DisputeData storage pointer"
                            }
                          },
                          "id": 1680,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "articleStorageAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 742,
                          "src": "12732:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12701:60:5"
                      },
                      {
                        "assignments": [
                          1684
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1684,
                            "mutability": "mutable",
                            "name": "article",
                            "nameLocation": "12788:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1744,
                            "src": "12772:23:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                              "typeString": "struct TruthPost.Article"
                            },
                            "typeName": {
                              "id": 1683,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1682,
                                "name": "Article",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 779,
                                "src": "12772:7:5"
                              },
                              "referencedDeclaration": 779,
                              "src": "12772:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1688,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1685,
                            "name": "articleStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 788,
                            "src": "12798:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Article_$779_storage_$",
                              "typeString": "mapping(uint80 => struct TruthPost.Article storage ref)"
                            }
                          },
                          "id": 1687,
                          "indexExpression": {
                            "id": 1686,
                            "name": "articleStorageAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1678,
                            "src": "12813:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12798:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Article_$779_storage",
                            "typeString": "struct TruthPost.Article storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12772:63:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          },
                          "id": 1692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1689,
                            "name": "actualRuling",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1660,
                            "src": "12850:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1690,
                              "name": "RulingOptions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 295,
                              "src": "12866:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                "typeString": "type(enum ITruthPost.RulingOptions)"
                              }
                            },
                            "id": 1691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Debunked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 294,
                            "src": "12866:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            }
                          },
                          "src": "12850:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1722,
                        "nodeType": "IfStatement",
                        "src": "12846:363:5",
                        "trueBody": {
                          "id": 1721,
                          "nodeType": "Block",
                          "src": "12890:319:5",
                          "statements": [
                            {
                              "assignments": [
                                1694
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1694,
                                  "mutability": "mutable",
                                  "name": "bounty",
                                  "nameLocation": "12912:6:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1721,
                                  "src": "12904:14:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1693,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12904:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1702,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                },
                                "id": 1701,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1697,
                                        "name": "article",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1684,
                                        "src": "12928:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                          "typeString": "struct TruthPost.Article storage pointer"
                                        }
                                      },
                                      "id": 1698,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "bountyAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 776,
                                      "src": "12928:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint56",
                                        "typeString": "uint56"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint56",
                                        "typeString": "uint56"
                                      }
                                    ],
                                    "id": 1696,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "12921:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint96_$",
                                      "typeString": "type(uint96)"
                                    },
                                    "typeName": {
                                      "id": 1695,
                                      "name": "uint96",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "12921:6:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1699,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12921:28:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<<",
                                "rightExpression": {
                                  "id": 1700,
                                  "name": "NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 710,
                                  "src": "12953:42:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12921:74:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "12904:91:5"
                            },
                            {
                              "expression": {
                                "id": 1707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1703,
                                    "name": "article",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1684,
                                    "src": "13009:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                      "typeString": "struct TruthPost.Article storage pointer"
                                    }
                                  },
                                  "id": 1705,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "bountyAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 776,
                                  "src": "13009:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint56",
                                    "typeString": "uint56"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1706,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13032:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "13009:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint56",
                                  "typeString": "uint56"
                                }
                              },
                              "id": 1708,
                              "nodeType": "ExpressionStatement",
                              "src": "13009:24:5"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1710,
                                    "name": "articleStorageAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1678,
                                    "src": "13062:21:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint80",
                                      "typeString": "uint80"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint80",
                                      "typeString": "uint80"
                                    }
                                  ],
                                  "id": 1709,
                                  "name": "Debunked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 360,
                                  "src": "13053:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13053:31:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1712,
                              "nodeType": "EmitStatement",
                              "src": "13048:36:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1718,
                                    "name": "bounty",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1694,
                                    "src": "13135:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1713,
                                        "name": "disputes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 793,
                                        "src": "13098:8:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$",
                                          "typeString": "mapping(uint256 => struct TruthPost.DisputeData storage ref)"
                                        }
                                      },
                                      "id": 1715,
                                      "indexExpression": {
                                        "id": 1714,
                                        "name": "_disputeID",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1590,
                                        "src": "13107:10:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "13098:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DisputeData_$747_storage",
                                        "typeString": "struct TruthPost.DisputeData storage ref"
                                      }
                                    },
                                    "id": 1716,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "challenger",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 733,
                                    "src": "13098:31:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 1717,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "send",
                                  "nodeType": "MemberAccess",
                                  "src": "13098:36:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (uint256) returns (bool)"
                                  }
                                },
                                "id": 1719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13098:44:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1720,
                              "nodeType": "ExpressionStatement",
                              "src": "13098:44:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1723,
                              "name": "article",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1684,
                              "src": "13261:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article storage pointer"
                              }
                            },
                            "id": 1725,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "withdrawalPermittedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 774,
                            "src": "13261:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13293:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13261:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 1728,
                        "nodeType": "ExpressionStatement",
                        "src": "13261:33:5"
                      },
                      {
                        "expression": {
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1729,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1607,
                              "src": "13337:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData storage pointer"
                              }
                            },
                            "id": 1731,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "resolved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 740,
                            "src": "13337:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13356:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "13337:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1734,
                        "nodeType": "ExpressionStatement",
                        "src": "13337:23:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1737,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "13395:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1738,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "13395:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1736,
                                "name": "IArbitrator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 249,
                                "src": "13383:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IArbitrator_$249_$",
                                  "typeString": "type(contract IArbitrator)"
                                }
                              },
                              "id": 1739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13383:23:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitrator_$249",
                                "typeString": "contract IArbitrator"
                              }
                            },
                            {
                              "id": 1740,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1590,
                              "src": "13408:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1741,
                              "name": "_ruling",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1592,
                              "src": "13420:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IArbitrator_$249",
                                "typeString": "contract IArbitrator"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1735,
                            "name": "Ruling",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "13376:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IArbitrator_$249_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IArbitrator,uint256,uint256)"
                            }
                          },
                          "id": 1742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13376:52:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1743,
                        "nodeType": "EmitStatement",
                        "src": "13371:57:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1588,
                    "nodeType": "StructuredDocumentation",
                    "src": "11610:182:5",
                    "text": "@notice Execute a ruling\n @dev This is only for arbitrator to use.\n @param _disputeID The dispute ID as in arbitrator.\n @param _ruling Winning ruling option."
                  },
                  "functionSelector": "311a6c56",
                  "id": 1745,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "rule",
                  "nameLocation": "11806:4:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1594,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "11857:8:5"
                  },
                  "parameters": {
                    "id": 1593,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1590,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "11819:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1745,
                        "src": "11811:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1589,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11811:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1592,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "11839:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1745,
                        "src": "11831:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1591,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11831:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11810:37:5"
                  },
                  "returnParameters": {
                    "id": 1595,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11866:0:5"
                  },
                  "scope": 2850,
                  "src": "11797:1638:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    608
                  ],
                  "body": {
                    "id": 1799,
                    "nodeType": "Block",
                    "src": "13617:419:5",
                    "statements": [
                      {
                        "assignments": [
                          1756
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1756,
                            "mutability": "mutable",
                            "name": "dispute",
                            "nameLocation": "13647:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1799,
                            "src": "13627:27:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                              "typeString": "struct TruthPost.DisputeData"
                            },
                            "typeName": {
                              "id": 1755,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1754,
                                "name": "DisputeData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 747,
                                "src": "13627:11:5"
                              },
                              "referencedDeclaration": 747,
                              "src": "13627:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1760,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1757,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "13657:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$",
                              "typeString": "mapping(uint256 => struct TruthPost.DisputeData storage ref)"
                            }
                          },
                          "id": 1759,
                          "indexExpression": {
                            "id": 1758,
                            "name": "_disputeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1748,
                            "src": "13666:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13657:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DisputeData_$747_storage",
                            "typeString": "struct TruthPost.DisputeData storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13627:50:5"
                      },
                      {
                        "assignments": [
                          1762
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1762,
                            "mutability": "mutable",
                            "name": "noOfRounds",
                            "nameLocation": "13695:10:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1799,
                            "src": "13687:18:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1761,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13687:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1766,
                        "initialValue": {
                          "expression": {
                            "expression": {
                              "id": 1763,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1756,
                              "src": "13708:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData storage pointer"
                              }
                            },
                            "id": 1764,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rounds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 746,
                            "src": "13708:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Round_$770_storage_$dyn_storage",
                              "typeString": "struct TruthPost.Round storage ref[] storage ref"
                            }
                          },
                          "id": 1765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "13708:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13687:42:5"
                      },
                      {
                        "body": {
                          "id": 1797,
                          "nodeType": "Block",
                          "src": "13810:220:5",
                          "statements": [
                            {
                              "body": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1788,
                                      "name": "_disputeID",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1748,
                                      "src": "13952:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1789,
                                      "name": "_contributor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1750,
                                      "src": "13964:12:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    {
                                      "id": 1790,
                                      "name": "roundNumber",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1768,
                                      "src": "13978:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 1792,
                                          "name": "rulingOption",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1778,
                                          "src": "14005:12:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1791,
                                        "name": "RulingOptions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 295,
                                        "src": "13991:13:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                          "typeString": "type(enum ITruthPost.RulingOptions)"
                                        }
                                      },
                                      "id": 1793,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13991:27:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_RulingOptions_$295",
                                        "typeString": "enum ITruthPost.RulingOptions"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_enum$_RulingOptions_$295",
                                        "typeString": "enum ITruthPost.RulingOptions"
                                      }
                                    ],
                                    "id": 1787,
                                    "name": "withdrawFeesAndRewards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1987,
                                    "src": "13929:22:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_payable_$_t_uint256_$_t_enum$_RulingOptions_$295_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,address payable,uint256,enum ITruthPost.RulingOptions) returns (uint256)"
                                    }
                                  },
                                  "id": 1794,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13929:90:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1795,
                                "nodeType": "ExpressionStatement",
                                "src": "13929:90:5"
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1781,
                                  "name": "rulingOption",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1778,
                                  "src": "13855:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1782,
                                  "name": "NUMBER_OF_RULING_OPTIONS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 305,
                                  "src": "13871:24:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13855:40:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1796,
                              "initializationExpression": {
                                "assignments": [
                                  1778
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 1778,
                                    "mutability": "mutable",
                                    "name": "rulingOption",
                                    "nameLocation": "13837:12:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1796,
                                    "src": "13829:20:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 1777,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13829:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 1780,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 1779,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13852:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "13829:24:5"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 1785,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "13897:14:5",
                                  "subExpression": {
                                    "id": 1784,
                                    "name": "rulingOption",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1778,
                                    "src": "13897:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1786,
                                "nodeType": "ExpressionStatement",
                                "src": "13897:14:5"
                              },
                              "nodeType": "ForStatement",
                              "src": "13824:195:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1771,
                            "name": "roundNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1768,
                            "src": "13769:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1772,
                            "name": "noOfRounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1762,
                            "src": "13783:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13769:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1798,
                        "initializationExpression": {
                          "assignments": [
                            1768
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1768,
                              "mutability": "mutable",
                              "name": "roundNumber",
                              "nameLocation": "13752:11:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 1798,
                              "src": "13744:19:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1767,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "13744:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1770,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13766:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13744:23:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "13795:13:5",
                            "subExpression": {
                              "id": 1774,
                              "name": "roundNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1768,
                              "src": "13795:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1776,
                          "nodeType": "ExpressionStatement",
                          "src": "13795:13:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "13739:291:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1746,
                    "nodeType": "StructuredDocumentation",
                    "src": "13441:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "c9330c0f",
                  "id": 1800,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawFeesAndRewardsForAllRoundsAndAllRulings",
                  "nameLocation": "13481:47:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1752,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "13604:8:5"
                  },
                  "parameters": {
                    "id": 1751,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1748,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "13537:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1800,
                        "src": "13529:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1747,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13529:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1750,
                        "mutability": "mutable",
                        "name": "_contributor",
                        "nameLocation": "13565:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1800,
                        "src": "13549:28:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1749,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13549:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13528:50:5"
                  },
                  "returnParameters": {
                    "id": 1753,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13617:0:5"
                  },
                  "scope": 2850,
                  "src": "13472:564:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    588
                  ],
                  "body": {
                    "id": 1844,
                    "nodeType": "Block",
                    "src": "14238:294:5",
                    "statements": [
                      {
                        "assignments": [
                          1814
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1814,
                            "mutability": "mutable",
                            "name": "dispute",
                            "nameLocation": "14268:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1844,
                            "src": "14248:27:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                              "typeString": "struct TruthPost.DisputeData"
                            },
                            "typeName": {
                              "id": 1813,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1812,
                                "name": "DisputeData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 747,
                                "src": "14248:11:5"
                              },
                              "referencedDeclaration": 747,
                              "src": "14248:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1818,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1815,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "14278:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$",
                              "typeString": "mapping(uint256 => struct TruthPost.DisputeData storage ref)"
                            }
                          },
                          "id": 1817,
                          "indexExpression": {
                            "id": 1816,
                            "name": "_disputeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1803,
                            "src": "14287:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14278:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DisputeData_$747_storage",
                            "typeString": "struct TruthPost.DisputeData storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14248:50:5"
                      },
                      {
                        "assignments": [
                          1820
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1820,
                            "mutability": "mutable",
                            "name": "noOfRounds",
                            "nameLocation": "14316:10:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1844,
                            "src": "14308:18:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1819,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14308:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1824,
                        "initialValue": {
                          "expression": {
                            "expression": {
                              "id": 1821,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1814,
                              "src": "14329:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData storage pointer"
                              }
                            },
                            "id": 1822,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rounds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 746,
                            "src": "14329:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Round_$770_storage_$dyn_storage",
                              "typeString": "struct TruthPost.Round storage ref[] storage ref"
                            }
                          },
                          "id": 1823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "14329:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14308:42:5"
                      },
                      {
                        "body": {
                          "id": 1842,
                          "nodeType": "Block",
                          "src": "14431:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1836,
                                    "name": "_disputeID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1803,
                                    "src": "14468:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1837,
                                    "name": "_contributor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1805,
                                    "src": "14480:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "id": 1838,
                                    "name": "roundNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1826,
                                    "src": "14494:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1839,
                                    "name": "_ruling",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1808,
                                    "src": "14507:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RulingOptions_$295",
                                      "typeString": "enum ITruthPost.RulingOptions"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_RulingOptions_$295",
                                      "typeString": "enum ITruthPost.RulingOptions"
                                    }
                                  ],
                                  "id": 1835,
                                  "name": "withdrawFeesAndRewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1987,
                                  "src": "14445:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_payable_$_t_uint256_$_t_enum$_RulingOptions_$295_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,address payable,uint256,enum ITruthPost.RulingOptions) returns (uint256)"
                                  }
                                },
                                "id": 1840,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14445:70:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1841,
                              "nodeType": "ExpressionStatement",
                              "src": "14445:70:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1829,
                            "name": "roundNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1826,
                            "src": "14390:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1830,
                            "name": "noOfRounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1820,
                            "src": "14404:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14390:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1843,
                        "initializationExpression": {
                          "assignments": [
                            1826
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1826,
                              "mutability": "mutable",
                              "name": "roundNumber",
                              "nameLocation": "14373:11:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 1843,
                              "src": "14365:19:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1825,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "14365:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1828,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14387:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "14365:23:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "14416:13:5",
                            "subExpression": {
                              "id": 1832,
                              "name": "roundNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1826,
                              "src": "14416:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1834,
                          "nodeType": "ExpressionStatement",
                          "src": "14416:13:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "14360:166:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1801,
                    "nodeType": "StructuredDocumentation",
                    "src": "14042:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "6760aeb0",
                  "id": 1845,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawFeesAndRewardsForAllRounds",
                  "nameLocation": "14082:34:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1810,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "14229:8:5"
                  },
                  "parameters": {
                    "id": 1809,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1803,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "14134:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1845,
                        "src": "14126:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1802,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14126:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1805,
                        "mutability": "mutable",
                        "name": "_contributor",
                        "nameLocation": "14170:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1845,
                        "src": "14154:28:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1804,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14154:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1808,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "14206:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1845,
                        "src": "14192:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 1807,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1806,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "14192:13:5"
                          },
                          "referencedDeclaration": 295,
                          "src": "14192:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14116:103:5"
                  },
                  "returnParameters": {
                    "id": 1811,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14238:0:5"
                  },
                  "scope": 2850,
                  "src": "14073:459:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    600
                  ],
                  "body": {
                    "id": 1904,
                    "nodeType": "Block",
                    "src": "14748:419:5",
                    "statements": [
                      {
                        "body": {
                          "id": 1902,
                          "nodeType": "Block",
                          "src": "14835:326:5",
                          "statements": [
                            {
                              "body": {
                                "id": 1900,
                                "nodeType": "Block",
                                "src": "14942:209:5",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1888,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 1882,
                                            "name": "positions",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1854,
                                            "src": "14964:9:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                                              "typeString": "uint256[] calldata[] calldata"
                                            }
                                          },
                                          "id": 1884,
                                          "indexExpression": {
                                            "id": 1883,
                                            "name": "roundNumber",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1859,
                                            "src": "14974:11:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "14964:22:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                            "typeString": "uint256[] calldata"
                                          }
                                        },
                                        "id": 1886,
                                        "indexExpression": {
                                          "id": 1885,
                                          "name": "rulingOption",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1870,
                                          "src": "14987:12:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "14964:36:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 1887,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "15003:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "14964:40:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1899,
                                    "nodeType": "IfStatement",
                                    "src": "14960:177:5",
                                    "trueBody": {
                                      "id": 1898,
                                      "nodeType": "Block",
                                      "src": "15006:131:5",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 1890,
                                                "name": "_disputeID",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1848,
                                                "src": "15051:10:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              {
                                                "id": 1891,
                                                "name": "_contributor",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1850,
                                                "src": "15063:12:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                }
                                              },
                                              {
                                                "id": 1892,
                                                "name": "roundNumber",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1859,
                                                "src": "15077:11:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 1894,
                                                    "name": "rulingOption",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1870,
                                                    "src": "15104:12:5",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "id": 1893,
                                                  "name": "RulingOptions",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 295,
                                                  "src": "15090:13:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                                    "typeString": "type(enum ITruthPost.RulingOptions)"
                                                  }
                                                },
                                                "id": 1895,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "15090:27:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                  "typeString": "enum ITruthPost.RulingOptions"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                  "typeString": "enum ITruthPost.RulingOptions"
                                                }
                                              ],
                                              "id": 1889,
                                              "name": "withdrawFeesAndRewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1987,
                                              "src": "15028:22:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_payable_$_t_uint256_$_t_enum$_RulingOptions_$295_$returns$_t_uint256_$",
                                                "typeString": "function (uint256,address payable,uint256,enum ITruthPost.RulingOptions) returns (uint256)"
                                              }
                                            },
                                            "id": 1896,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "15028:90:5",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1897,
                                          "nodeType": "ExpressionStatement",
                                          "src": "15028:90:5"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1878,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1873,
                                  "name": "rulingOption",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1870,
                                  "src": "14880:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1874,
                                      "name": "positions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1854,
                                      "src": "14895:9:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata[] calldata"
                                      }
                                    },
                                    "id": 1876,
                                    "indexExpression": {
                                      "id": 1875,
                                      "name": "roundNumber",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1859,
                                      "src": "14905:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14895:22:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                      "typeString": "uint256[] calldata"
                                    }
                                  },
                                  "id": 1877,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "14895:29:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14880:44:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1901,
                              "initializationExpression": {
                                "assignments": [
                                  1870
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 1870,
                                    "mutability": "mutable",
                                    "name": "rulingOption",
                                    "nameLocation": "14862:12:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1901,
                                    "src": "14854:20:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 1869,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14854:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 1872,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 1871,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14877:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "14854:24:5"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 1880,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "14926:14:5",
                                  "subExpression": {
                                    "id": 1879,
                                    "name": "rulingOption",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1870,
                                    "src": "14926:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1881,
                                "nodeType": "ExpressionStatement",
                                "src": "14926:14:5"
                              },
                              "nodeType": "ForStatement",
                              "src": "14849:302:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1862,
                            "name": "roundNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1859,
                            "src": "14788:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1863,
                              "name": "positions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1854,
                              "src": "14802:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata[] calldata"
                              }
                            },
                            "id": 1864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "14802:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14788:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1903,
                        "initializationExpression": {
                          "assignments": [
                            1859
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1859,
                              "mutability": "mutable",
                              "name": "roundNumber",
                              "nameLocation": "14771:11:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 1903,
                              "src": "14763:19:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1858,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "14763:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1861,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14785:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "14763:23:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "14820:13:5",
                            "subExpression": {
                              "id": 1866,
                              "name": "roundNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1859,
                              "src": "14820:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1868,
                          "nodeType": "ExpressionStatement",
                          "src": "14820:13:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "14758:403:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1846,
                    "nodeType": "StructuredDocumentation",
                    "src": "14538:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "67284f21",
                  "id": 1905,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawFeesAndRewardsForGivenPositions",
                  "nameLocation": "14578:39:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1856,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "14739:8:5"
                  },
                  "parameters": {
                    "id": 1855,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1848,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "14635:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1905,
                        "src": "14627:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1847,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14627:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1850,
                        "mutability": "mutable",
                        "name": "_contributor",
                        "nameLocation": "14671:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1905,
                        "src": "14655:28:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1849,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14655:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1854,
                        "mutability": "mutable",
                        "name": "positions",
                        "nameLocation": "14714:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1905,
                        "src": "14693:30:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "uint256[][]"
                        },
                        "typeName": {
                          "baseType": {
                            "baseType": {
                              "id": 1851,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14693:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1852,
                            "nodeType": "ArrayTypeName",
                            "src": "14693:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                              "typeString": "uint256[]"
                            }
                          },
                          "id": 1853,
                          "nodeType": "ArrayTypeName",
                          "src": "14693:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                            "typeString": "uint256[][]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14617:112:5"
                  },
                  "returnParameters": {
                    "id": 1857,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14748:0:5"
                  },
                  "scope": 2850,
                  "src": "14569:598:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    577
                  ],
                  "body": {
                    "id": 1986,
                    "nodeType": "Block",
                    "src": "15410:581:5",
                    "statements": [
                      {
                        "assignments": [
                          1923
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1923,
                            "mutability": "mutable",
                            "name": "dispute",
                            "nameLocation": "15440:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1986,
                            "src": "15420:27:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                              "typeString": "struct TruthPost.DisputeData"
                            },
                            "typeName": {
                              "id": 1922,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1921,
                                "name": "DisputeData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 747,
                                "src": "15420:11:5"
                              },
                              "referencedDeclaration": 747,
                              "src": "15420:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1927,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1924,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "15450:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$",
                              "typeString": "mapping(uint256 => struct TruthPost.DisputeData storage ref)"
                            }
                          },
                          "id": 1926,
                          "indexExpression": {
                            "id": 1925,
                            "name": "_disputeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1908,
                            "src": "15459:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15450:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DisputeData_$747_storage",
                            "typeString": "struct TruthPost.DisputeData storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15420:50:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1929,
                                "name": "dispute",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1923,
                                "src": "15488:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                  "typeString": "struct TruthPost.DisputeData storage pointer"
                                }
                              },
                              "id": 1930,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "resolved",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 740,
                              "src": "15488:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5468657265206973206e6f2072756c696e67207965742e",
                              "id": 1931,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15506:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9591a49cf5d9e3ba9b3aea5505a2b8a639d2f239a0cb6a9059466b60c54a080f",
                                "typeString": "literal_string \"There is no ruling yet.\""
                              },
                              "value": "There is no ruling yet."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9591a49cf5d9e3ba9b3aea5505a2b8a639d2f239a0cb6a9059466b60c54a080f",
                                "typeString": "literal_string \"There is no ruling yet.\""
                              }
                            ],
                            "id": 1928,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15480:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15480:52:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1933,
                        "nodeType": "ExpressionStatement",
                        "src": "15480:52:5"
                      },
                      {
                        "assignments": [
                          1936
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1936,
                            "mutability": "mutable",
                            "name": "round",
                            "nameLocation": "15557:5:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1986,
                            "src": "15543:19:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                              "typeString": "struct TruthPost.Round"
                            },
                            "typeName": {
                              "id": 1935,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1934,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 770,
                                "src": "15543:5:5"
                              },
                              "referencedDeclaration": 770,
                              "src": "15543:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                "typeString": "struct TruthPost.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1941,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 1937,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1923,
                              "src": "15565:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData storage pointer"
                              }
                            },
                            "id": 1938,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rounds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 746,
                            "src": "15565:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Round_$770_storage_$dyn_storage",
                              "typeString": "struct TruthPost.Round storage ref[] storage ref"
                            }
                          },
                          "id": 1940,
                          "indexExpression": {
                            "id": 1939,
                            "name": "_roundNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1912,
                            "src": "15580:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15565:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$770_storage",
                            "typeString": "struct TruthPost.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15543:50:5"
                      },
                      {
                        "expression": {
                          "id": 1950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1942,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1919,
                            "src": "15604:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1944,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1936,
                                "src": "15635:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                  "typeString": "struct TruthPost.Round storage pointer"
                                }
                              },
                              {
                                "id": 1945,
                                "name": "_contributor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1910,
                                "src": "15642:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 1946,
                                "name": "_ruling",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1915,
                                "src": "15656:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RulingOptions_$295",
                                  "typeString": "enum ITruthPost.RulingOptions"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1947,
                                  "name": "dispute",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1923,
                                  "src": "15665:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                    "typeString": "struct TruthPost.DisputeData storage pointer"
                                  }
                                },
                                "id": 1948,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "outcome",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 736,
                                "src": "15665:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RulingOptions_$295",
                                  "typeString": "enum ITruthPost.RulingOptions"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                  "typeString": "struct TruthPost.Round storage pointer"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_enum$_RulingOptions_$295",
                                  "typeString": "enum ITruthPost.RulingOptions"
                                },
                                {
                                  "typeIdentifier": "t_enum$_RulingOptions_$295",
                                  "typeString": "enum ITruthPost.RulingOptions"
                                }
                              ],
                              "id": 1943,
                              "name": "getWithdrawableAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2596,
                              "src": "15613:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_Round_$770_storage_ptr_$_t_address_$_t_enum$_RulingOptions_$295_$_t_enum$_RulingOptions_$295_$returns$_t_uint256_$",
                                "typeString": "function (struct TruthPost.Round storage pointer,address,enum ITruthPost.RulingOptions,enum ITruthPost.RulingOptions) view returns (uint256)"
                              }
                            },
                            "id": 1949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15613:68:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15604:77:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1951,
                        "nodeType": "ExpressionStatement",
                        "src": "15604:77:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1952,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1919,
                            "src": "15696:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15706:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15696:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1985,
                        "nodeType": "IfStatement",
                        "src": "15692:293:5",
                        "trueBody": {
                          "id": 1984,
                          "nodeType": "Block",
                          "src": "15709:276:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 1968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 1955,
                                        "name": "round",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1936,
                                        "src": "15723:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                          "typeString": "struct TruthPost.Round storage pointer"
                                        }
                                      },
                                      "id": 1964,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "contributions",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 755,
                                      "src": "15723:19:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$3_storage_$",
                                        "typeString": "mapping(address => uint256[3] storage ref)"
                                      }
                                    },
                                    "id": 1965,
                                    "indexExpression": {
                                      "id": 1957,
                                      "name": "_contributor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1910,
                                      "src": "15743:12:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15723:33:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                      "typeString": "uint256[3] storage ref"
                                    }
                                  },
                                  "id": 1966,
                                  "indexExpression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 1961,
                                            "name": "_ruling",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1915,
                                            "src": "15779:7:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                                              "typeString": "enum ITruthPost.RulingOptions"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                                              "typeString": "enum ITruthPost.RulingOptions"
                                            }
                                          ],
                                          "id": 1960,
                                          "name": "RulingOptions",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 295,
                                          "src": "15765:13:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                            "typeString": "type(enum ITruthPost.RulingOptions)"
                                          }
                                        },
                                        "id": 1962,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "15765:22:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                                          "typeString": "enum ITruthPost.RulingOptions"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                                          "typeString": "enum ITruthPost.RulingOptions"
                                        }
                                      ],
                                      "id": 1959,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "15757:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 1958,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "15757:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1963,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15757:31:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "15723:66:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1967,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15792:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "15723:70:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1969,
                              "nodeType": "ExpressionStatement",
                              "src": "15723:70:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1973,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1919,
                                    "src": "15825:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1970,
                                    "name": "_contributor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1910,
                                    "src": "15807:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 1972,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "send",
                                  "nodeType": "MemberAccess",
                                  "src": "15807:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (uint256) returns (bool)"
                                  }
                                },
                                "id": 1974,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15807:25:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1975,
                              "nodeType": "ExpressionStatement",
                              "src": "15807:25:5"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1977,
                                    "name": "_disputeID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1908,
                                    "src": "15918:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1978,
                                    "name": "_roundNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1912,
                                    "src": "15930:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1979,
                                    "name": "_ruling",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1915,
                                    "src": "15944:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RulingOptions_$295",
                                      "typeString": "enum ITruthPost.RulingOptions"
                                    }
                                  },
                                  {
                                    "id": 1980,
                                    "name": "_contributor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1910,
                                    "src": "15953:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "id": 1981,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1919,
                                    "src": "15967:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_RulingOptions_$295",
                                      "typeString": "enum ITruthPost.RulingOptions"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1976,
                                  "name": "Withdrawal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 408,
                                  "src": "15907:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_enum$_RulingOptions_$295_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256,enum ITruthPost.RulingOptions,address,uint256)"
                                  }
                                },
                                "id": 1982,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15907:67:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1983,
                              "nodeType": "EmitStatement",
                              "src": "15902:72:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1906,
                    "nodeType": "StructuredDocumentation",
                    "src": "15173:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "dc227fc2",
                  "id": 1987,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawFeesAndRewards",
                  "nameLocation": "15213:22:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1917,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "15376:8:5"
                  },
                  "parameters": {
                    "id": 1916,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1908,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "15253:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1987,
                        "src": "15245:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1907,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15245:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1910,
                        "mutability": "mutable",
                        "name": "_contributor",
                        "nameLocation": "15289:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1987,
                        "src": "15273:28:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1909,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15273:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1912,
                        "mutability": "mutable",
                        "name": "_roundNumber",
                        "nameLocation": "15319:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1987,
                        "src": "15311:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1911,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15311:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1915,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "15355:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1987,
                        "src": "15341:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 1914,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1913,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "15341:13:5"
                          },
                          "referencedDeclaration": 295,
                          "src": "15341:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15235:133:5"
                  },
                  "returnParameters": {
                    "id": 1920,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1919,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "15402:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1987,
                        "src": "15394:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1918,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15394:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15393:16:5"
                  },
                  "scope": 2850,
                  "src": "15204:787:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2010,
                    "nodeType": "Block",
                    "src": "16428:219:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1996,
                                "name": "_newChallengeTaxRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1990,
                                "src": "16446:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "323536",
                                "id": 1997,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16470:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_256_by_1",
                                  "typeString": "int_const 256"
                                },
                                "value": "256"
                              },
                              "src": "16446:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5468652074617820726174652063616e206f6e6c7920626520696e637265617365642062792061206d6178696d756d206f6620323525",
                              "id": 1999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16475:56:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5943b819c05c7059125985bc4ac5cf738c94c0822c506b598ab2eced554e2f50",
                                "typeString": "literal_string \"The tax rate can only be increased by a maximum of 25%\""
                              },
                              "value": "The tax rate can only be increased by a maximum of 25%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5943b819c05c7059125985bc4ac5cf738c94c0822c506b598ab2eced554e2f50",
                                "typeString": "literal_string \"The tax rate can only be increased by a maximum of 25%\""
                              }
                            ],
                            "id": 1995,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16438:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16438:94:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2001,
                        "nodeType": "ExpressionStatement",
                        "src": "16438:94:5"
                      },
                      {
                        "expression": {
                          "id": 2004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2002,
                            "name": "challengeTaxRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "16542:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2003,
                            "name": "_newChallengeTaxRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1990,
                            "src": "16561:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16542:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2005,
                        "nodeType": "ExpressionStatement",
                        "src": "16542:39:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2007,
                              "name": "_newChallengeTaxRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1990,
                              "src": "16619:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2006,
                            "name": "ChallengeTaxRateUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 445,
                            "src": "16596:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16596:44:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2009,
                        "nodeType": "EmitStatement",
                        "src": "16591:49:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1988,
                    "nodeType": "StructuredDocumentation",
                    "src": "15997:345:5",
                    "text": "@notice Updates the challenge tax rate of the contract to a new value.\n @dev    The new challenge tax rate must be at most 25% based on MULTIPLIER_DENOMINATOR.\n         Only the current administrator can call this function. Emits ChallengeTaxRateUpdate.\n @param _newChallengeTaxRate The new challenge tax rate to be set."
                  },
                  "functionSelector": "26804bef",
                  "id": 2011,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1993,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1992,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 731,
                        "src": "16418:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16418:9:5"
                    }
                  ],
                  "name": "updateChallengeTaxRate",
                  "nameLocation": "16356:22:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1991,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1990,
                        "mutability": "mutable",
                        "name": "_newChallengeTaxRate",
                        "nameLocation": "16387:20:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2011,
                        "src": "16379:28:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1989,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16379:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16378:30:5"
                  },
                  "returnParameters": {
                    "id": 1994,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16428:0:5"
                  },
                  "scope": 2850,
                  "src": "16347:300:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2033,
                    "nodeType": "Block",
                    "src": "17098:153:5",
                    "statements": [
                      {
                        "assignments": [
                          2016
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2016,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "17116:6:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2033,
                            "src": "17108:14:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2015,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "17108:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2018,
                        "initialValue": {
                          "id": 2017,
                          "name": "treasuryBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 302,
                          "src": "17125:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17108:32:5"
                      },
                      {
                        "expression": {
                          "id": 2021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2019,
                            "name": "treasuryBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "17150:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17168:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17150:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2022,
                        "nodeType": "ExpressionStatement",
                        "src": "17150:19:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2026,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2016,
                              "src": "17193:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2023,
                              "name": "TREASURY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 300,
                              "src": "17179:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "send",
                            "nodeType": "MemberAccess",
                            "src": "17179:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) returns (bool)"
                            }
                          },
                          "id": 2027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17179:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2028,
                        "nodeType": "ExpressionStatement",
                        "src": "17179:21:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2030,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2016,
                              "src": "17237:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2029,
                            "name": "TreasuryBalanceUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "17215:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17215:29:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2032,
                        "nodeType": "EmitStatement",
                        "src": "17210:34:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2012,
                    "nodeType": "StructuredDocumentation",
                    "src": "16653:396:5",
                    "text": "@notice Transfers the balance of the contract to the treasury.\n @dev    Allows the contract to send its entire balance to the treasury address.\n         It is important to ensure that the treasury address is set correctly.\n         If the transfer fails, an exception will be raised, and the funds will remain in the contract.\n         Emits TreasuryBalanceUpdate."
                  },
                  "functionSelector": "b7bddc72",
                  "id": 2034,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferBalanceToTreasury",
                  "nameLocation": "17063:25:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2013,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17088:2:5"
                  },
                  "returnParameters": {
                    "id": 2014,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17098:0:5"
                  },
                  "scope": 2850,
                  "src": "17054:197:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    692
                  ],
                  "body": {
                    "id": 2046,
                    "nodeType": "Block",
                    "src": "17346:59:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 2044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2041,
                            "name": "isPublishingEnabled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "17356:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "17378:20:5",
                            "subExpression": {
                              "id": 2042,
                              "name": "isPublishingEnabled",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 298,
                              "src": "17379:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "17356:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2045,
                        "nodeType": "ExpressionStatement",
                        "src": "17356:42:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2035,
                    "nodeType": "StructuredDocumentation",
                    "src": "17257:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "ba0ec60b",
                  "id": 2047,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2039,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2038,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 731,
                        "src": "17336:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "17336:9:5"
                    }
                  ],
                  "name": "switchPublishingLock",
                  "nameLocation": "17297:20:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2037,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17327:8:5"
                  },
                  "parameters": {
                    "id": 2036,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17317:2:5"
                  },
                  "returnParameters": {
                    "id": 2040,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17346:0:5"
                  },
                  "scope": 2850,
                  "src": "17288:117:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2063,
                    "nodeType": "Block",
                    "src": "17708:71:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 2057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2055,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "17718:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2056,
                            "name": "_newAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2050,
                            "src": "17726:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "17718:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2058,
                        "nodeType": "ExpressionStatement",
                        "src": "17718:17:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2060,
                              "name": "_newAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2050,
                              "src": "17762:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 2059,
                            "name": "AdminUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 425,
                            "src": "17750:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17750:22:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2062,
                        "nodeType": "EmitStatement",
                        "src": "17745:27:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2048,
                    "nodeType": "StructuredDocumentation",
                    "src": "17411:225:5",
                    "text": "@notice Changes the administrator of the contract to a new address.\n @dev    Only the current administrator can call this function. Emits AdminUpdate.\n @param  _newAdmin The address of the new administrator."
                  },
                  "functionSelector": "8f283970",
                  "id": 2064,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2053,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2052,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 731,
                        "src": "17698:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "17698:9:5"
                    }
                  ],
                  "name": "changeAdmin",
                  "nameLocation": "17650:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2051,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2050,
                        "mutability": "mutable",
                        "name": "_newAdmin",
                        "nameLocation": "17678:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2064,
                        "src": "17662:25:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 2049,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17662:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17661:27:5"
                  },
                  "returnParameters": {
                    "id": 2054,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17708:0:5"
                  },
                  "scope": 2850,
                  "src": "17641:138:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2080,
                    "nodeType": "Block",
                    "src": "18092:83:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 2074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2072,
                            "name": "TREASURY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "18102:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2073,
                            "name": "_newTreasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2067,
                            "src": "18113:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "18102:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2075,
                        "nodeType": "ExpressionStatement",
                        "src": "18102:23:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2077,
                              "name": "_newTreasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2067,
                              "src": "18155:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 2076,
                            "name": "TreasuryUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 449,
                            "src": "18140:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18140:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2079,
                        "nodeType": "EmitStatement",
                        "src": "18135:33:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2065,
                    "nodeType": "StructuredDocumentation",
                    "src": "17785:229:5",
                    "text": "@notice Changes the treasury address of the contract to a new address.\n @dev    Only the current administrator can call this function. Emits TreasuryUpdate.\n @param  _newTreasury The address of the new treasury."
                  },
                  "functionSelector": "b14f2a39",
                  "id": 2081,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2070,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2069,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 731,
                        "src": "18082:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "18082:9:5"
                    }
                  ],
                  "name": "changeTreasury",
                  "nameLocation": "18028:14:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2068,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2067,
                        "mutability": "mutable",
                        "name": "_newTreasury",
                        "nameLocation": "18059:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2081,
                        "src": "18043:28:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 2066,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18043:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18042:30:5"
                  },
                  "returnParameters": {
                    "id": 2071,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18092:0:5"
                  },
                  "scope": 2850,
                  "src": "18019:156:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    520
                  ],
                  "body": {
                    "id": 2098,
                    "nodeType": "Block",
                    "src": "18312:137:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 2092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2090,
                            "name": "WINNER_STAKE_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "18322:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2091,
                            "name": "_newWinnerStakeMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2084,
                            "src": "18348:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18322:51:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2093,
                        "nodeType": "ExpressionStatement",
                        "src": "18322:51:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2095,
                              "name": "_newWinnerStakeMultiplier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2084,
                              "src": "18416:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2094,
                            "name": "WinnerStakeMultiplierUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 429,
                            "src": "18388:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18388:54:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2097,
                        "nodeType": "EmitStatement",
                        "src": "18383:59:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2082,
                    "nodeType": "StructuredDocumentation",
                    "src": "18181:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "adc7faba",
                  "id": 2099,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2088,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2087,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 731,
                        "src": "18302:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "18302:9:5"
                    }
                  ],
                  "name": "changeWinnerStakeMultiplier",
                  "nameLocation": "18221:27:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2086,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "18293:8:5"
                  },
                  "parameters": {
                    "id": 2085,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2084,
                        "mutability": "mutable",
                        "name": "_newWinnerStakeMultiplier",
                        "nameLocation": "18257:25:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2099,
                        "src": "18249:33:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2083,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18249:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18248:35:5"
                  },
                  "returnParameters": {
                    "id": 2089,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18312:0:5"
                  },
                  "scope": 2850,
                  "src": "18212:237:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    526
                  ],
                  "body": {
                    "id": 2116,
                    "nodeType": "Block",
                    "src": "18584:133:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 2110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2108,
                            "name": "LOSER_STAKE_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "18594:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2109,
                            "name": "_newLoserStakeMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2102,
                            "src": "18619:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18594:49:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2111,
                        "nodeType": "ExpressionStatement",
                        "src": "18594:49:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2113,
                              "name": "_newLoserStakeMultiplier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2102,
                              "src": "18685:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2112,
                            "name": "LoserStakeMultiplierUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "18658:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18658:52:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2115,
                        "nodeType": "EmitStatement",
                        "src": "18653:57:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2100,
                    "nodeType": "StructuredDocumentation",
                    "src": "18455:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "92239dff",
                  "id": 2117,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2106,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2105,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 731,
                        "src": "18574:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "18574:9:5"
                    }
                  ],
                  "name": "changeLoserStakeMultiplier",
                  "nameLocation": "18495:26:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2104,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "18565:8:5"
                  },
                  "parameters": {
                    "id": 2103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2102,
                        "mutability": "mutable",
                        "name": "_newLoserStakeMultiplier",
                        "nameLocation": "18530:24:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2117,
                        "src": "18522:32:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2101,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18522:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18521:34:5"
                  },
                  "returnParameters": {
                    "id": 2107,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18584:0:5"
                  },
                  "scope": 2850,
                  "src": "18486:231:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    532
                  ],
                  "body": {
                    "id": 2134,
                    "nodeType": "Block",
                    "src": "18866:162:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 2128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2126,
                            "name": "LOSER_APPEAL_PERIOD_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 311,
                            "src": "18876:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2127,
                            "name": "_newLoserAppealPeriodMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2120,
                            "src": "18909:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18876:64:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2129,
                        "nodeType": "ExpressionStatement",
                        "src": "18876:64:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2131,
                              "name": "_newLoserAppealPeriodMultiplier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2120,
                              "src": "18989:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2130,
                            "name": "LoserAppealPeriodMultiplierUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 437,
                            "src": "18955:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18955:66:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2133,
                        "nodeType": "EmitStatement",
                        "src": "18950:71:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2118,
                    "nodeType": "StructuredDocumentation",
                    "src": "18723:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "c94828f0",
                  "id": 2135,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2124,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2123,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 731,
                        "src": "18856:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "18856:9:5"
                    }
                  ],
                  "name": "changeLoserAppealPeriodMultiplier",
                  "nameLocation": "18763:33:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2122,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "18847:8:5"
                  },
                  "parameters": {
                    "id": 2121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2120,
                        "mutability": "mutable",
                        "name": "_newLoserAppealPeriodMultiplier",
                        "nameLocation": "18805:31:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2135,
                        "src": "18797:39:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2119,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18797:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18796:41:5"
                  },
                  "returnParameters": {
                    "id": 2125,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18866:0:5"
                  },
                  "scope": 2850,
                  "src": "18754:274:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    538
                  ],
                  "body": {
                    "id": 2152,
                    "nodeType": "Block",
                    "src": "19177:153:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 2146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2144,
                            "name": "ARTICLE_WITHDRAWAL_TIMELOCK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "19187:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2145,
                            "name": "_newArticleWithdrawalTimelock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2138,
                            "src": "19217:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19187:59:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2147,
                        "nodeType": "ExpressionStatement",
                        "src": "19187:59:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2149,
                              "name": "_newArticleWithdrawalTimelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2138,
                              "src": "19293:29:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2148,
                            "name": "ArticleWithdrawalTimelockUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 441,
                            "src": "19261:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19261:62:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2151,
                        "nodeType": "EmitStatement",
                        "src": "19256:67:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2136,
                    "nodeType": "StructuredDocumentation",
                    "src": "19038:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "92e25925",
                  "id": 2153,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2142,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2141,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 731,
                        "src": "19167:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "19167:9:5"
                    }
                  ],
                  "name": "changeArticleWithdrawalTimelock",
                  "nameLocation": "19078:31:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2140,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "19158:8:5"
                  },
                  "parameters": {
                    "id": 2139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2138,
                        "mutability": "mutable",
                        "name": "_newArticleWithdrawalTimelock",
                        "nameLocation": "19118:29:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2153,
                        "src": "19110:37:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2137,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19110:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19109:39:5"
                  },
                  "returnParameters": {
                    "id": 2143,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19177:0:5"
                  },
                  "scope": 2850,
                  "src": "19069:261:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2184,
                    "nodeType": "Block",
                    "src": "19666:259:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 2166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 2164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2162,
                                  "name": "categoryCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 713,
                                  "src": "19684:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2163,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19702:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "19684:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19707:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "19684:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f207370616365206c65667420666f722061206e65772063617465676f7279",
                              "id": 2167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19710:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e23f3e71c05305a9182237d48ba9b404f0c1c59aaff27a9576fb3eb02eaabde6",
                                "typeString": "literal_string \"No space left for a new category\""
                              },
                              "value": "No space left for a new category"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e23f3e71c05305a9182237d48ba9b404f0c1c59aaff27a9576fb3eb02eaabde6",
                                "typeString": "literal_string \"No space left for a new category\""
                              }
                            ],
                            "id": 2161,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19676:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19676:69:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2169,
                        "nodeType": "ExpressionStatement",
                        "src": "19676:69:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2171,
                              "name": "categoryCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 713,
                              "src": "19773:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 2172,
                              "name": "_metaevidenceIpfsUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2156,
                              "src": "19790:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 2170,
                            "name": "MetaEvidence",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 260,
                            "src": "19760:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory)"
                            }
                          },
                          "id": 2173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19760:51:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2174,
                        "nodeType": "EmitStatement",
                        "src": "19755:56:5"
                      },
                      {
                        "expression": {
                          "id": 2179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2175,
                              "name": "categoryToArbitratorExtraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 783,
                              "src": "19821:29:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_storage_$64_storage",
                                "typeString": "bytes storage ref[64] storage ref"
                              }
                            },
                            "id": 2177,
                            "indexExpression": {
                              "id": 2176,
                              "name": "categoryCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 713,
                              "src": "19851:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19821:46:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2178,
                            "name": "_arbitratorExtraData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2158,
                            "src": "19870:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "19821:69:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 2180,
                        "nodeType": "ExpressionStatement",
                        "src": "19821:69:5"
                      },
                      {
                        "expression": {
                          "id": 2182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "19901:17:5",
                          "subExpression": {
                            "id": 2181,
                            "name": "categoryCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 713,
                            "src": "19901:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 2183,
                        "nodeType": "ExpressionStatement",
                        "src": "19901:17:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2154,
                    "nodeType": "StructuredDocumentation",
                    "src": "19337:225:5",
                    "text": "@notice Initialize a category.\n @param _metaevidenceIpfsUri IPFS content identifier for metaevidence.\n @param _arbitratorExtraData Extra data of Kleros arbitrator, signaling subcourt and jury size selection."
                  },
                  "functionSelector": "4c55c000",
                  "id": 2185,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "newCategory",
                  "nameLocation": "19576:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2156,
                        "mutability": "mutable",
                        "name": "_metaevidenceIpfsUri",
                        "nameLocation": "19602:20:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2185,
                        "src": "19588:34:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2155,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "19588:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2158,
                        "mutability": "mutable",
                        "name": "_arbitratorExtraData",
                        "nameLocation": "19637:20:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2185,
                        "src": "19624:33:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2157,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "19624:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19587:71:5"
                  },
                  "returnParameters": {
                    "id": 2160,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19666:0:5"
                  },
                  "scope": 2850,
                  "src": "19567:358:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    514
                  ],
                  "body": {
                    "id": 2220,
                    "nodeType": "Block",
                    "src": "20065:244:5",
                    "statements": [
                      {
                        "assignments": [
                          2196
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2196,
                            "mutability": "mutable",
                            "name": "article",
                            "nameLocation": "20091:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2220,
                            "src": "20075:23:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                              "typeString": "struct TruthPost.Article"
                            },
                            "typeName": {
                              "id": 2195,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2194,
                                "name": "Article",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 779,
                                "src": "20075:7:5"
                              },
                              "referencedDeclaration": 779,
                              "src": "20075:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2200,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2197,
                            "name": "articleStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 788,
                            "src": "20101:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Article_$779_storage_$",
                              "typeString": "mapping(uint80 => struct TruthPost.Article storage ref)"
                            }
                          },
                          "id": 2199,
                          "indexExpression": {
                            "id": 2198,
                            "name": "_articleStorageAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2188,
                            "src": "20116:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20101:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Article_$779_storage",
                            "typeString": "struct TruthPost.Article storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20075:64:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2202,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "20157:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "20157:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2204,
                                  "name": "article",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2196,
                                  "src": "20171:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                    "typeString": "struct TruthPost.Article storage pointer"
                                  }
                                },
                                "id": 2205,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 772,
                                "src": "20171:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "20157:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920617574686f722063616e207472616e73666572206f776e6572736869702e",
                              "id": 2207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20186:37:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_264afed15e2abe1afd48e9529ae4102fd34dc15becf22ac12086d34e9bca14d5",
                                "typeString": "literal_string \"Only author can transfer ownership.\""
                              },
                              "value": "Only author can transfer ownership."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_264afed15e2abe1afd48e9529ae4102fd34dc15becf22ac12086d34e9bca14d5",
                                "typeString": "literal_string \"Only author can transfer ownership.\""
                              }
                            ],
                            "id": 2201,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20149:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20149:75:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2209,
                        "nodeType": "ExpressionStatement",
                        "src": "20149:75:5"
                      },
                      {
                        "expression": {
                          "id": 2214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2210,
                              "name": "article",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2196,
                              "src": "20234:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article storage pointer"
                              }
                            },
                            "id": 2212,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 772,
                            "src": "20234:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2213,
                            "name": "_newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2190,
                            "src": "20250:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "20234:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2215,
                        "nodeType": "ExpressionStatement",
                        "src": "20234:25:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2217,
                              "name": "_newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2190,
                              "src": "20292:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 2216,
                            "name": "OwnershipTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "20274:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20274:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2219,
                        "nodeType": "EmitStatement",
                        "src": "20269:33:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2186,
                    "nodeType": "StructuredDocumentation",
                    "src": "19931:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "06bcbd73",
                  "id": 2221,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferOwnership",
                  "nameLocation": "19971:17:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2192,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "20056:8:5"
                  },
                  "parameters": {
                    "id": 2191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2188,
                        "mutability": "mutable",
                        "name": "_articleStorageAddress",
                        "nameLocation": "19996:22:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2221,
                        "src": "19989:29:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 2187,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "19989:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2190,
                        "mutability": "mutable",
                        "name": "_newOwner",
                        "nameLocation": "20036:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2221,
                        "src": "20020:25:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 2189,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20020:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19988:58:5"
                  },
                  "returnParameters": {
                    "id": 2193,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20065:0:5"
                  },
                  "scope": 2850,
                  "src": "19962:347:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    554
                  ],
                  "body": {
                    "id": 2267,
                    "nodeType": "Block",
                    "src": "20438:406:5",
                    "statements": [
                      {
                        "assignments": [
                          2232
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2232,
                            "mutability": "mutable",
                            "name": "article",
                            "nameLocation": "20464:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2267,
                            "src": "20448:23:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                              "typeString": "struct TruthPost.Article"
                            },
                            "typeName": {
                              "id": 2231,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2230,
                                "name": "Article",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 779,
                                "src": "20448:7:5"
                              },
                              "referencedDeclaration": 779,
                              "src": "20448:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2236,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2233,
                            "name": "articleStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 788,
                            "src": "20474:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Article_$779_storage_$",
                              "typeString": "mapping(uint80 => struct TruthPost.Article storage ref)"
                            }
                          },
                          "id": 2235,
                          "indexExpression": {
                            "id": 2234,
                            "name": "_articleStorageAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2224,
                            "src": "20489:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20474:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Article_$779_storage",
                            "typeString": "struct TruthPost.Article storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20448:64:5"
                      },
                      {
                        "assignments": [
                          2238
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2238,
                            "mutability": "mutable",
                            "name": "arbitrationFee",
                            "nameLocation": "20531:14:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2267,
                            "src": "20523:22:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2237,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "20523:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2246,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 2241,
                                "name": "categoryToArbitratorExtraData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 783,
                                "src": "20575:29:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_storage_$64_storage",
                                  "typeString": "bytes storage ref[64] storage ref"
                                }
                              },
                              "id": 2244,
                              "indexExpression": {
                                "expression": {
                                  "id": 2242,
                                  "name": "article",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2232,
                                  "src": "20605:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                    "typeString": "struct TruthPost.Article storage pointer"
                                  }
                                },
                                "id": 2243,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "category",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 778,
                                "src": "20605:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20575:47:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            ],
                            "expression": {
                              "id": 2239,
                              "name": "ARBITRATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 707,
                              "src": "20548:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitrator_$249",
                                "typeString": "contract IArbitrator"
                              }
                            },
                            "id": 2240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "arbitrationCost",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 203,
                            "src": "20548:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory) view external returns (uint256)"
                            }
                          },
                          "id": 2245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20548:75:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20523:100:5"
                      },
                      {
                        "assignments": [
                          2248
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2248,
                            "mutability": "mutable",
                            "name": "challengeTax",
                            "nameLocation": "20641:12:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2267,
                            "src": "20633:20:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2247,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "20633:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2262,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      },
                                      "id": 2255,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 2251,
                                              "name": "article",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2232,
                                              "src": "20665:7:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                                "typeString": "struct TruthPost.Article storage pointer"
                                              }
                                            },
                                            "id": 2252,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "bountyAmount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 776,
                                            "src": "20665:20:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint56",
                                              "typeString": "uint56"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint56",
                                              "typeString": "uint56"
                                            }
                                          ],
                                          "id": 2250,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "20658:6:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint96_$",
                                            "typeString": "type(uint96)"
                                          },
                                          "typeName": {
                                            "id": 2249,
                                            "name": "uint96",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "20658:6:5",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 2253,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "20658:28:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<<",
                                      "rightExpression": {
                                        "id": 2254,
                                        "name": "NUMBER_OF_LEAST_SIGNIFICANT_BITS_TO_IGNORE",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 710,
                                        "src": "20690:42:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "20658:74:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      }
                                    }
                                  ],
                                  "id": 2256,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "20657:76:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 2257,
                                  "name": "challengeTaxRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 320,
                                  "src": "20748:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "20657:107:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2259,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "20656:109:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 2260,
                            "name": "MULTIPLIER_DENOMINATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 308,
                            "src": "20768:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20656:134:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20633:157:5"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2263,
                            "name": "arbitrationFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2238,
                            "src": "20808:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2264,
                            "name": "challengeTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2248,
                            "src": "20825:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20808:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2229,
                        "id": 2266,
                        "nodeType": "Return",
                        "src": "20801:36:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2222,
                    "nodeType": "StructuredDocumentation",
                    "src": "20315:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "64ff9dfa",
                  "id": 2268,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "challengeFee",
                  "nameLocation": "20355:12:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2226,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "20411:8:5"
                  },
                  "parameters": {
                    "id": 2225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2224,
                        "mutability": "mutable",
                        "name": "_articleStorageAddress",
                        "nameLocation": "20375:22:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2268,
                        "src": "20368:29:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 2223,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "20368:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20367:31:5"
                  },
                  "returnParameters": {
                    "id": 2229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2228,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2268,
                        "src": "20429:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2227,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20429:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20428:9:5"
                  },
                  "scope": 2850,
                  "src": "20346:498:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    562
                  ],
                  "body": {
                    "id": 2295,
                    "nodeType": "Block",
                    "src": "20976:183:5",
                    "statements": [
                      {
                        "assignments": [
                          2279
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2279,
                            "mutability": "mutable",
                            "name": "dispute",
                            "nameLocation": "21006:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2295,
                            "src": "20986:27:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                              "typeString": "struct TruthPost.DisputeData"
                            },
                            "typeName": {
                              "id": 2278,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2277,
                                "name": "DisputeData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 747,
                                "src": "20986:11:5"
                              },
                              "referencedDeclaration": 747,
                              "src": "20986:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2283,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2280,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "21016:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$",
                              "typeString": "mapping(uint256 => struct TruthPost.DisputeData storage ref)"
                            }
                          },
                          "id": 2282,
                          "indexExpression": {
                            "id": 2281,
                            "name": "_disputeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2271,
                            "src": "21025:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21016:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DisputeData_$747_storage",
                            "typeString": "struct TruthPost.DisputeData storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20986:50:5"
                      },
                      {
                        "expression": {
                          "id": 2293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2284,
                            "name": "arbitrationFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2275,
                            "src": "21046:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2287,
                                "name": "_disputeID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2271,
                                "src": "21085:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 2288,
                                  "name": "categoryToArbitratorExtraData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 783,
                                  "src": "21097:29:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes_storage_$64_storage",
                                    "typeString": "bytes storage ref[64] storage ref"
                                  }
                                },
                                "id": 2291,
                                "indexExpression": {
                                  "expression": {
                                    "id": 2289,
                                    "name": "dispute",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2279,
                                    "src": "21127:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                      "typeString": "struct TruthPost.DisputeData storage pointer"
                                    }
                                  },
                                  "id": 2290,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "articleCategory",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 738,
                                  "src": "21127:23:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21097:54:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              ],
                              "expression": {
                                "id": 2285,
                                "name": "ARBITRATOR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 707,
                                "src": "21063:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IArbitrator_$249",
                                  "typeString": "contract IArbitrator"
                                }
                              },
                              "id": 2286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "appealCost",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 221,
                              "src": "21063:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (uint256,bytes memory) view external returns (uint256)"
                              }
                            },
                            "id": 2292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21063:89:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21046:106:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2294,
                        "nodeType": "ExpressionStatement",
                        "src": "21046:106:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2269,
                    "nodeType": "StructuredDocumentation",
                    "src": "20850:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "1e26de34",
                  "id": 2296,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "appealFee",
                  "nameLocation": "20890:9:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2273,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "20934:8:5"
                  },
                  "parameters": {
                    "id": 2272,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2271,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "20908:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2296,
                        "src": "20900:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2270,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20900:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20899:20:5"
                  },
                  "returnParameters": {
                    "id": 2276,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2275,
                        "mutability": "mutable",
                        "name": "arbitrationFee",
                        "nameLocation": "20960:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2296,
                        "src": "20952:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2274,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20952:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20951:24:5"
                  },
                  "scope": 2850,
                  "src": "20881:278:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    546
                  ],
                  "body": {
                    "id": 2326,
                    "nodeType": "Block",
                    "src": "21307:190:5",
                    "statements": [
                      {
                        "assignments": [
                          2307
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2307,
                            "mutability": "mutable",
                            "name": "article",
                            "nameLocation": "21333:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2326,
                            "src": "21317:23:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                              "typeString": "struct TruthPost.Article"
                            },
                            "typeName": {
                              "id": 2306,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2305,
                                "name": "Article",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 779,
                                "src": "21317:7:5"
                              },
                              "referencedDeclaration": 779,
                              "src": "21317:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2308,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21317:23:5"
                      },
                      {
                        "body": {
                          "id": 2316,
                          "nodeType": "Block",
                          "src": "21353:67:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 2314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2309,
                                  "name": "article",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2307,
                                  "src": "21367:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                    "typeString": "struct TruthPost.Article storage pointer"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 2310,
                                    "name": "articleStorage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 788,
                                    "src": "21377:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Article_$779_storage_$",
                                      "typeString": "mapping(uint80 => struct TruthPost.Article storage ref)"
                                    }
                                  },
                                  "id": 2313,
                                  "indexExpression": {
                                    "id": 2312,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "21392:16:5",
                                    "subExpression": {
                                      "id": 2311,
                                      "name": "_searchPointer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2299,
                                      "src": "21392:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint80",
                                        "typeString": "uint80"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint80",
                                      "typeString": "uint80"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "21377:32:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Article_$779_storage",
                                    "typeString": "struct TruthPost.Article storage ref"
                                  }
                                },
                                "src": "21367:42:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                  "typeString": "struct TruthPost.Article storage pointer"
                                }
                              },
                              "id": 2315,
                              "nodeType": "ExpressionStatement",
                              "src": "21367:42:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint56",
                            "typeString": "uint56"
                          },
                          "id": 2320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2317,
                              "name": "article",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2307,
                              "src": "21428:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Article_$779_storage_ptr",
                                "typeString": "struct TruthPost.Article storage pointer"
                              }
                            },
                            "id": 2318,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "bountyAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 776,
                            "src": "21428:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint56",
                              "typeString": "uint56"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21452:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "21428:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2321,
                        "nodeType": "DoWhileStatement",
                        "src": "21350:105:5"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          },
                          "id": 2324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2322,
                            "name": "_searchPointer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2299,
                            "src": "21472:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 2323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21489:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "21472:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "functionReturnParameters": 2304,
                        "id": 2325,
                        "nodeType": "Return",
                        "src": "21465:25:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2297,
                    "nodeType": "StructuredDocumentation",
                    "src": "21165:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "15f36ebe",
                  "id": 2327,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "findVacantStorageSlot",
                  "nameLocation": "21205:21:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2301,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "21264:8:5"
                  },
                  "parameters": {
                    "id": 2300,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2299,
                        "mutability": "mutable",
                        "name": "_searchPointer",
                        "nameLocation": "21234:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2327,
                        "src": "21227:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 2298,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "21227:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21226:23:5"
                  },
                  "returnParameters": {
                    "id": 2304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2303,
                        "mutability": "mutable",
                        "name": "vacantSlotIndex",
                        "nameLocation": "21290:15:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2327,
                        "src": "21282:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21282:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21281:25:5"
                  },
                  "scope": 2850,
                  "src": "21196:301:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    622
                  ],
                  "body": {
                    "id": 2460,
                    "nodeType": "Block",
                    "src": "21729:1101:5",
                    "statements": [
                      {
                        "assignments": [
                          2344
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2344,
                            "mutability": "mutable",
                            "name": "dispute",
                            "nameLocation": "21759:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2460,
                            "src": "21739:27:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                              "typeString": "struct TruthPost.DisputeData"
                            },
                            "typeName": {
                              "id": 2343,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2342,
                                "name": "DisputeData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 747,
                                "src": "21739:11:5"
                              },
                              "referencedDeclaration": 747,
                              "src": "21739:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2348,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2345,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "21769:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$",
                              "typeString": "mapping(uint256 => struct TruthPost.DisputeData storage ref)"
                            }
                          },
                          "id": 2347,
                          "indexExpression": {
                            "id": 2346,
                            "name": "_disputeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2330,
                            "src": "21778:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21769:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DisputeData_$747_storage",
                            "typeString": "struct TruthPost.DisputeData storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21739:50:5"
                      },
                      {
                        "condition": {
                          "id": 2351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "21803:17:5",
                          "subExpression": {
                            "expression": {
                              "id": 2349,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2344,
                              "src": "21804:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData storage pointer"
                              }
                            },
                            "id": 2350,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "resolved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 740,
                            "src": "21804:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2359,
                        "nodeType": "IfStatement",
                        "src": "21799:51:5",
                        "trueBody": {
                          "expression": {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2354,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21838:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "21830:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2352,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21830:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21830:10:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2356,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2340,
                                "src": "21842:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory[] memory"
                                }
                              }
                            ],
                            "id": 2357,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "21829:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "tuple(uint256,uint256[] memory[] memory)"
                            }
                          },
                          "functionReturnParameters": 2341,
                          "id": 2358,
                          "nodeType": "Return",
                          "src": "21822:28:5"
                        }
                      },
                      {
                        "assignments": [
                          2361
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2361,
                            "mutability": "mutable",
                            "name": "noOfRounds",
                            "nameLocation": "21868:10:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2460,
                            "src": "21860:18:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2360,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "21860:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2365,
                        "initialValue": {
                          "expression": {
                            "expression": {
                              "id": 2362,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2344,
                              "src": "21881:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData storage pointer"
                              }
                            },
                            "id": 2363,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rounds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 746,
                            "src": "21881:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Round_$770_storage_$dyn_storage",
                              "typeString": "struct TruthPost.Round storage ref[] storage ref"
                            }
                          },
                          "id": 2364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "21881:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21860:42:5"
                      },
                      {
                        "assignments": [
                          2368
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2368,
                            "mutability": "mutable",
                            "name": "finalRuling",
                            "nameLocation": "21926:11:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2460,
                            "src": "21912:25:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            },
                            "typeName": {
                              "id": 2367,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2366,
                                "name": "RulingOptions",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 295,
                                "src": "21912:13:5"
                              },
                              "referencedDeclaration": 295,
                              "src": "21912:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                "typeString": "enum ITruthPost.RulingOptions"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2371,
                        "initialValue": {
                          "expression": {
                            "id": 2369,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2344,
                            "src": "21940:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                              "typeString": "struct TruthPost.DisputeData storage pointer"
                            }
                          },
                          "id": 2370,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "outcome",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 736,
                          "src": "21940:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21912:43:5"
                      },
                      {
                        "expression": {
                          "id": 2379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2372,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2340,
                            "src": "21966:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                              "typeString": "uint256[] memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2377,
                                "name": "noOfRounds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2361,
                                "src": "21992:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "21976:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "baseType": {
                                    "id": 2373,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21980:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2374,
                                  "nodeType": "ArrayTypeName",
                                  "src": "21980:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                    "typeString": "uint256[]"
                                  }
                                },
                                "id": 2375,
                                "nodeType": "ArrayTypeName",
                                "src": "21980:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                                  "typeString": "uint256[][]"
                                }
                              }
                            },
                            "id": 2378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21976:27:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                              "typeString": "uint256[] memory[] memory"
                            }
                          },
                          "src": "21966:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                            "typeString": "uint256[] memory[] memory"
                          }
                        },
                        "id": 2380,
                        "nodeType": "ExpressionStatement",
                        "src": "21966:37:5"
                      },
                      {
                        "body": {
                          "id": 2458,
                          "nodeType": "Block",
                          "src": "22084:740:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 2401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2391,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2340,
                                    "src": "22098:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory[] memory"
                                    }
                                  },
                                  "id": 2393,
                                  "indexExpression": {
                                    "id": 2392,
                                    "name": "roundNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2382,
                                    "src": "22106:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "22098:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2399,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2397,
                                        "name": "NUMBER_OF_RULING_OPTIONS",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 305,
                                        "src": "22135:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 2398,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "22162:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "22135:28:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 2396,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "22121:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (uint256[] memory)"
                                    },
                                    "typeName": {
                                      "baseType": {
                                        "id": 2394,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "22125:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2395,
                                      "nodeType": "ArrayTypeName",
                                      "src": "22125:9:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                        "typeString": "uint256[]"
                                      }
                                    }
                                  },
                                  "id": 2400,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22121:43:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "src": "22098:66:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 2402,
                              "nodeType": "ExpressionStatement",
                              "src": "22098:66:5"
                            },
                            {
                              "assignments": [
                                2405
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2405,
                                  "mutability": "mutable",
                                  "name": "round",
                                  "nameLocation": "22193:5:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2458,
                                  "src": "22179:19:5",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                    "typeString": "struct TruthPost.Round"
                                  },
                                  "typeName": {
                                    "id": 2404,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2403,
                                      "name": "Round",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 770,
                                      "src": "22179:5:5"
                                    },
                                    "referencedDeclaration": 770,
                                    "src": "22179:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                      "typeString": "struct TruthPost.Round"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2410,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 2406,
                                    "name": "dispute",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2344,
                                    "src": "22201:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                      "typeString": "struct TruthPost.DisputeData storage pointer"
                                    }
                                  },
                                  "id": 2407,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rounds",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 746,
                                  "src": "22201:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Round_$770_storage_$dyn_storage",
                                    "typeString": "struct TruthPost.Round storage ref[] storage ref"
                                  }
                                },
                                "id": 2409,
                                "indexExpression": {
                                  "id": 2408,
                                  "name": "roundNumber",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2382,
                                  "src": "22216:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22201:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$770_storage",
                                  "typeString": "struct TruthPost.Round storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "22179:49:5"
                            },
                            {
                              "body": {
                                "id": 2456,
                                "nodeType": "Block",
                                "src": "22331:483:5",
                                "statements": [
                                  {
                                    "assignments": [
                                      2422
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2422,
                                        "mutability": "mutable",
                                        "name": "currentAmount",
                                        "nameLocation": "22357:13:5",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2456,
                                        "src": "22349:21:5",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 2421,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "22349:7:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2431,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 2424,
                                          "name": "round",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2405,
                                          "src": "22416:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                            "typeString": "struct TruthPost.Round storage pointer"
                                          }
                                        },
                                        {
                                          "id": 2425,
                                          "name": "_contributor",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2332,
                                          "src": "22443:12:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 2427,
                                              "name": "rulingOption",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2412,
                                              "src": "22491:12:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 2426,
                                            "name": "RulingOptions",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 295,
                                            "src": "22477:13:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                              "typeString": "type(enum ITruthPost.RulingOptions)"
                                            }
                                          },
                                          "id": 2428,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "22477:27:5",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                                            "typeString": "enum ITruthPost.RulingOptions"
                                          }
                                        },
                                        {
                                          "id": 2429,
                                          "name": "finalRuling",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2368,
                                          "src": "22526:11:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                                            "typeString": "enum ITruthPost.RulingOptions"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                            "typeString": "struct TruthPost.Round storage pointer"
                                          },
                                          {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          },
                                          {
                                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                                            "typeString": "enum ITruthPost.RulingOptions"
                                          },
                                          {
                                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                                            "typeString": "enum ITruthPost.RulingOptions"
                                          }
                                        ],
                                        "id": 2423,
                                        "name": "getWithdrawableAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2596,
                                        "src": "22373:21:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_struct$_Round_$770_storage_ptr_$_t_address_$_t_enum$_RulingOptions_$295_$_t_enum$_RulingOptions_$295_$returns$_t_uint256_$",
                                          "typeString": "function (struct TruthPost.Round storage pointer,address,enum ITruthPost.RulingOptions,enum ITruthPost.RulingOptions) view returns (uint256)"
                                        }
                                      },
                                      "id": 2430,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22373:182:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "22349:206:5"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2434,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2432,
                                        "name": "currentAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2422,
                                        "src": "22577:13:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 2433,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "22593:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "22577:17:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2455,
                                    "nodeType": "IfStatement",
                                    "src": "22573:227:5",
                                    "trueBody": {
                                      "id": 2454,
                                      "nodeType": "Block",
                                      "src": "22596:204:5",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2444,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 2435,
                                              "name": "sum",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2336,
                                              "src": "22618:3:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "+=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "id": 2437,
                                                  "name": "round",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2405,
                                                  "src": "22647:5:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                                    "typeString": "struct TruthPost.Round storage pointer"
                                                  }
                                                },
                                                {
                                                  "id": 2438,
                                                  "name": "_contributor",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2332,
                                                  "src": "22654:12:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                  }
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "id": 2440,
                                                      "name": "rulingOption",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2412,
                                                      "src": "22682:12:5",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "id": 2439,
                                                    "name": "RulingOptions",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 295,
                                                    "src": "22668:13:5",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                                      "typeString": "type(enum ITruthPost.RulingOptions)"
                                                    }
                                                  },
                                                  "id": 2441,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "22668:27:5",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                    "typeString": "enum ITruthPost.RulingOptions"
                                                  }
                                                },
                                                {
                                                  "id": 2442,
                                                  "name": "finalRuling",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2368,
                                                  "src": "22697:11:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                    "typeString": "enum ITruthPost.RulingOptions"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                                    "typeString": "struct TruthPost.Round storage pointer"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                    "typeString": "enum ITruthPost.RulingOptions"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                    "typeString": "enum ITruthPost.RulingOptions"
                                                  }
                                                ],
                                                "id": 2436,
                                                "name": "getWithdrawableAmount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2596,
                                                "src": "22625:21:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Round_$770_storage_ptr_$_t_address_$_t_enum$_RulingOptions_$295_$_t_enum$_RulingOptions_$295_$returns$_t_uint256_$",
                                                  "typeString": "function (struct TruthPost.Round storage pointer,address,enum ITruthPost.RulingOptions,enum ITruthPost.RulingOptions) view returns (uint256)"
                                                }
                                              },
                                              "id": 2443,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "22625:84:5",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "22618:91:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2445,
                                          "nodeType": "ExpressionStatement",
                                          "src": "22618:91:5"
                                        },
                                        {
                                          "expression": {
                                            "id": 2452,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "baseExpression": {
                                                "baseExpression": {
                                                  "id": 2446,
                                                  "name": "amounts",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2340,
                                                  "src": "22731:7:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                                    "typeString": "uint256[] memory[] memory"
                                                  }
                                                },
                                                "id": 2449,
                                                "indexExpression": {
                                                  "id": 2447,
                                                  "name": "roundNumber",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2382,
                                                  "src": "22739:11:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "22731:20:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                  "typeString": "uint256[] memory"
                                                }
                                              },
                                              "id": 2450,
                                              "indexExpression": {
                                                "id": 2448,
                                                "name": "rulingOption",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2412,
                                                "src": "22752:12:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "IndexAccess",
                                              "src": "22731:34:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "id": 2451,
                                              "name": "currentAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2422,
                                              "src": "22768:13:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "22731:50:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2453,
                                          "nodeType": "ExpressionStatement",
                                          "src": "22731:50:5"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2415,
                                  "name": "rulingOption",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2412,
                                  "src": "22273:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 2416,
                                  "name": "NUMBER_OF_RULING_OPTIONS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 305,
                                  "src": "22289:24:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22273:40:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2457,
                              "initializationExpression": {
                                "assignments": [
                                  2412
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 2412,
                                    "mutability": "mutable",
                                    "name": "rulingOption",
                                    "nameLocation": "22255:12:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2457,
                                    "src": "22247:20:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 2411,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "22247:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 2414,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 2413,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22270:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "22247:24:5"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 2419,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "22315:14:5",
                                  "subExpression": {
                                    "id": 2418,
                                    "name": "rulingOption",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2412,
                                    "src": "22315:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2420,
                                "nodeType": "ExpressionStatement",
                                "src": "22315:14:5"
                              },
                              "nodeType": "ForStatement",
                              "src": "22242:572:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2385,
                            "name": "roundNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2382,
                            "src": "22043:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2386,
                            "name": "noOfRounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2361,
                            "src": "22057:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22043:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2459,
                        "initializationExpression": {
                          "assignments": [
                            2382
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2382,
                              "mutability": "mutable",
                              "name": "roundNumber",
                              "nameLocation": "22026:11:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 2459,
                              "src": "22018:19:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2381,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "22018:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2384,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22040:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "22018:23:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "22069:13:5",
                            "subExpression": {
                              "id": 2388,
                              "name": "roundNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2382,
                              "src": "22069:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2390,
                          "nodeType": "ExpressionStatement",
                          "src": "22069:13:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "22013:811:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2328,
                    "nodeType": "StructuredDocumentation",
                    "src": "21503:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "af4a9144",
                  "id": 2461,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalWithdrawableAmount",
                  "nameLocation": "21543:26:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2334,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "21658:8:5"
                  },
                  "parameters": {
                    "id": 2333,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2330,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "21578:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2461,
                        "src": "21570:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2329,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21570:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2332,
                        "mutability": "mutable",
                        "name": "_contributor",
                        "nameLocation": "21606:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2461,
                        "src": "21590:28:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 2331,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "21590:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21569:50:5"
                  },
                  "returnParameters": {
                    "id": 2341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2336,
                        "mutability": "mutable",
                        "name": "sum",
                        "nameLocation": "21692:3:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2461,
                        "src": "21684:11:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2335,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21684:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2340,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "21716:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2461,
                        "src": "21697:26:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[][]"
                        },
                        "typeName": {
                          "baseType": {
                            "baseType": {
                              "id": 2337,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "21697:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2338,
                            "nodeType": "ArrayTypeName",
                            "src": "21697:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                              "typeString": "uint256[]"
                            }
                          },
                          "id": 2339,
                          "nodeType": "ArrayTypeName",
                          "src": "21697:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                            "typeString": "uint256[][]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21683:41:5"
                  },
                  "scope": 2850,
                  "src": "21534:1296:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2595,
                    "nodeType": "Block",
                    "src": "23105:1310:5",
                    "statements": [
                      {
                        "assignments": [
                          2480
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2480,
                            "mutability": "mutable",
                            "name": "givenRuling",
                            "nameLocation": "23129:11:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2595,
                            "src": "23115:25:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            },
                            "typeName": {
                              "id": 2479,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2478,
                                "name": "RulingOptions",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 295,
                                "src": "23115:13:5"
                              },
                              "referencedDeclaration": 295,
                              "src": "23115:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                "typeString": "enum ITruthPost.RulingOptions"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2484,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2482,
                              "name": "_ruling",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2470,
                              "src": "23157:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                "typeString": "enum ITruthPost.RulingOptions"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                "typeString": "enum ITruthPost.RulingOptions"
                              }
                            ],
                            "id": 2481,
                            "name": "RulingOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 295,
                            "src": "23143:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                              "typeString": "type(enum ITruthPost.RulingOptions)"
                            }
                          },
                          "id": 2483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23143:22:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23115:50:5"
                      },
                      {
                        "condition": {
                          "id": 2492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "23180:37:5",
                          "subExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 2485,
                                "name": "_round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2465,
                                "src": "23181:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                  "typeString": "struct TruthPost.Round storage pointer"
                                }
                              },
                              "id": 2486,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "hasPaid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 761,
                              "src": "23181:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$3_storage",
                                "typeString": "bool[3] storage ref"
                              }
                            },
                            "id": 2491,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 2489,
                                  "name": "givenRuling",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2480,
                                  "src": "23204:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                ],
                                "id": 2488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "23196:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 2487,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "23196:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23196:20:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23181:36:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2593,
                          "nodeType": "Block",
                          "src": "23401:1008:5",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_RulingOptions_$295",
                                  "typeString": "enum ITruthPost.RulingOptions"
                                },
                                "id": 2508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2506,
                                  "name": "_ruling",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2470,
                                  "src": "23481:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 2507,
                                  "name": "_finalRuling",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2473,
                                  "src": "23492:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                    "typeString": "enum ITruthPost.RulingOptions"
                                  }
                                },
                                "src": "23481:23:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "id": 2554,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "23879:53:5",
                                  "subExpression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 2545,
                                        "name": "_round",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2465,
                                        "src": "23880:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                          "typeString": "struct TruthPost.Round storage pointer"
                                        }
                                      },
                                      "id": 2546,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "hasPaid",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 761,
                                      "src": "23880:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bool_$3_storage",
                                        "typeString": "bool[3] storage ref"
                                      }
                                    },
                                    "id": 2553,
                                    "indexExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 2550,
                                              "name": "_finalRuling",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2473,
                                              "src": "23917:12:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                "typeString": "enum ITruthPost.RulingOptions"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                "typeString": "enum ITruthPost.RulingOptions"
                                              }
                                            ],
                                            "id": 2549,
                                            "name": "RulingOptions",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 295,
                                            "src": "23903:13:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                              "typeString": "type(enum ITruthPost.RulingOptions)"
                                            }
                                          },
                                          "id": 2551,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "23903:27:5",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                                            "typeString": "enum ITruthPost.RulingOptions"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                                            "typeString": "enum ITruthPost.RulingOptions"
                                          }
                                        ],
                                        "id": 2548,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "23895:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 2547,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "23895:7:5",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 2552,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "23895:36:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "23880:52:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 2591,
                                "nodeType": "IfStatement",
                                "src": "23875:524:5",
                                "trueBody": {
                                  "id": 2590,
                                  "nodeType": "Block",
                                  "src": "23934:465:5",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 2588,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 2555,
                                          "name": "amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2476,
                                          "src": "24093:6:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2587,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 2567,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "expression": {
                                                        "id": 2556,
                                                        "name": "_round",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2465,
                                                        "src": "24123:6:5",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                                          "typeString": "struct TruthPost.Round storage pointer"
                                                        }
                                                      },
                                                      "id": 2557,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "contributions",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 755,
                                                      "src": "24123:20:5",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$3_storage_$",
                                                        "typeString": "mapping(address => uint256[3] storage ref)"
                                                      }
                                                    },
                                                    "id": 2559,
                                                    "indexExpression": {
                                                      "id": 2558,
                                                      "name": "_contributor",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2467,
                                                      "src": "24144:12:5",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "24123:34:5",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                                      "typeString": "uint256[3] storage ref"
                                                    }
                                                  },
                                                  "id": 2564,
                                                  "indexExpression": {
                                                    "arguments": [
                                                      {
                                                        "id": 2562,
                                                        "name": "givenRuling",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2480,
                                                        "src": "24166:11:5",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                          "typeString": "enum ITruthPost.RulingOptions"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                          "typeString": "enum ITruthPost.RulingOptions"
                                                        }
                                                      ],
                                                      "id": 2561,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "nodeType": "ElementaryTypeNameExpression",
                                                      "src": "24158:7:5",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_uint256_$",
                                                        "typeString": "type(uint256)"
                                                      },
                                                      "typeName": {
                                                        "id": 2560,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "24158:7:5",
                                                        "typeDescriptions": {}
                                                      }
                                                    },
                                                    "id": 2563,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "24158:20:5",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "24123:56:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                  "expression": {
                                                    "id": 2565,
                                                    "name": "_round",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2465,
                                                    "src": "24182:6:5",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                                      "typeString": "struct TruthPost.Round storage pointer"
                                                    }
                                                  },
                                                  "id": 2566,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "totalClaimableAfterExpenses",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 769,
                                                  "src": "24182:34:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "24123:93:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 2568,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "24122:95:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "/",
                                          "rightExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 2585,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "baseExpression": {
                                                    "expression": {
                                                      "id": 2569,
                                                      "name": "_round",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2465,
                                                      "src": "24241:6:5",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                                        "typeString": "struct TruthPost.Round storage pointer"
                                                      }
                                                    },
                                                    "id": 2570,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "totalPerRuling",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 767,
                                                    "src": "24241:21:5",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                                      "typeString": "uint256[3] storage ref"
                                                    }
                                                  },
                                                  "id": 2576,
                                                  "indexExpression": {
                                                    "arguments": [
                                                      {
                                                        "expression": {
                                                          "id": 2573,
                                                          "name": "RulingOptions",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 295,
                                                          "src": "24271:13:5",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                                            "typeString": "type(enum ITruthPost.RulingOptions)"
                                                          }
                                                        },
                                                        "id": 2574,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "ChallengeFailed",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 293,
                                                        "src": "24271:29:5",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                          "typeString": "enum ITruthPost.RulingOptions"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                          "typeString": "enum ITruthPost.RulingOptions"
                                                        }
                                                      ],
                                                      "id": 2572,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "nodeType": "ElementaryTypeNameExpression",
                                                      "src": "24263:7:5",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_uint256_$",
                                                        "typeString": "type(uint256)"
                                                      },
                                                      "typeName": {
                                                        "id": 2571,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "24263:7:5",
                                                        "typeDescriptions": {}
                                                      }
                                                    },
                                                    "id": 2575,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "24263:38:5",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "24241:61:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "+",
                                                "rightExpression": {
                                                  "baseExpression": {
                                                    "expression": {
                                                      "id": 2577,
                                                      "name": "_round",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2465,
                                                      "src": "24329:6:5",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                                        "typeString": "struct TruthPost.Round storage pointer"
                                                      }
                                                    },
                                                    "id": 2578,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "totalPerRuling",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 767,
                                                    "src": "24329:21:5",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                                      "typeString": "uint256[3] storage ref"
                                                    }
                                                  },
                                                  "id": 2584,
                                                  "indexExpression": {
                                                    "arguments": [
                                                      {
                                                        "expression": {
                                                          "id": 2581,
                                                          "name": "RulingOptions",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 295,
                                                          "src": "24359:13:5",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                                            "typeString": "type(enum ITruthPost.RulingOptions)"
                                                          }
                                                        },
                                                        "id": 2582,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "Debunked",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 294,
                                                        "src": "24359:22:5",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                          "typeString": "enum ITruthPost.RulingOptions"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                          "typeString": "enum ITruthPost.RulingOptions"
                                                        }
                                                      ],
                                                      "id": 2580,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "nodeType": "ElementaryTypeNameExpression",
                                                      "src": "24351:7:5",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_uint256_$",
                                                        "typeString": "type(uint256)"
                                                      },
                                                      "typeName": {
                                                        "id": 2579,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "24351:7:5",
                                                        "typeDescriptions": {}
                                                      }
                                                    },
                                                    "id": 2583,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "24351:31:5",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "24329:54:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "24241:142:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 2586,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "24240:144:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "24122:262:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "24093:291:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2589,
                                      "nodeType": "ExpressionStatement",
                                      "src": "24093:291:5"
                                    }
                                  ]
                                }
                              },
                              "id": 2592,
                              "nodeType": "IfStatement",
                              "src": "23477:922:5",
                              "trueBody": {
                                "id": 2544,
                                "nodeType": "Block",
                                "src": "23506:363:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2542,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2509,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2476,
                                        "src": "23586:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2518,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "baseExpression": {
                                              "expression": {
                                                "id": 2510,
                                                "name": "_round",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2465,
                                                "src": "23595:6:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                                  "typeString": "struct TruthPost.Round storage pointer"
                                                }
                                              },
                                              "id": 2511,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "totalPerRuling",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 767,
                                              "src": "23595:21:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                                "typeString": "uint256[3] storage ref"
                                              }
                                            },
                                            "id": 2516,
                                            "indexExpression": {
                                              "arguments": [
                                                {
                                                  "id": 2514,
                                                  "name": "givenRuling",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2480,
                                                  "src": "23625:11:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                    "typeString": "enum ITruthPost.RulingOptions"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                    "typeString": "enum ITruthPost.RulingOptions"
                                                  }
                                                ],
                                                "id": 2513,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "23617:7:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                  "id": 2512,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "23617:7:5",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 2515,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "23617:20:5",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "23595:43:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": ">",
                                          "rightExpression": {
                                            "hexValue": "30",
                                            "id": 2517,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "23641:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          "src": "23595:47:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "hexValue": "30",
                                          "id": 2540,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "23853:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "id": 2541,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "23595:259:5",
                                        "trueExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2539,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 2530,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "expression": {
                                                        "id": 2519,
                                                        "name": "_round",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2465,
                                                        "src": "23666:6:5",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                                          "typeString": "struct TruthPost.Round storage pointer"
                                                        }
                                                      },
                                                      "id": 2520,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "contributions",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 755,
                                                      "src": "23666:20:5",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$3_storage_$",
                                                        "typeString": "mapping(address => uint256[3] storage ref)"
                                                      }
                                                    },
                                                    "id": 2522,
                                                    "indexExpression": {
                                                      "id": 2521,
                                                      "name": "_contributor",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2467,
                                                      "src": "23687:12:5",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "23666:34:5",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                                      "typeString": "uint256[3] storage ref"
                                                    }
                                                  },
                                                  "id": 2527,
                                                  "indexExpression": {
                                                    "arguments": [
                                                      {
                                                        "id": 2525,
                                                        "name": "givenRuling",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2480,
                                                        "src": "23709:11:5",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                          "typeString": "enum ITruthPost.RulingOptions"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                          "typeString": "enum ITruthPost.RulingOptions"
                                                        }
                                                      ],
                                                      "id": 2524,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "nodeType": "ElementaryTypeNameExpression",
                                                      "src": "23701:7:5",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_uint256_$",
                                                        "typeString": "type(uint256)"
                                                      },
                                                      "typeName": {
                                                        "id": 2523,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "23701:7:5",
                                                        "typeDescriptions": {}
                                                      }
                                                    },
                                                    "id": 2526,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "23701:20:5",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "23666:56:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                  "expression": {
                                                    "id": 2528,
                                                    "name": "_round",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2465,
                                                    "src": "23725:6:5",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                                      "typeString": "struct TruthPost.Round storage pointer"
                                                    }
                                                  },
                                                  "id": 2529,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "totalClaimableAfterExpenses",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 769,
                                                  "src": "23725:34:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "23666:93:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 2531,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "23665:95:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "/",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "expression": {
                                                "id": 2532,
                                                "name": "_round",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2465,
                                                "src": "23787:6:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                                  "typeString": "struct TruthPost.Round storage pointer"
                                                }
                                              },
                                              "id": 2533,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "totalPerRuling",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 767,
                                              "src": "23787:21:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                                "typeString": "uint256[3] storage ref"
                                              }
                                            },
                                            "id": 2538,
                                            "indexExpression": {
                                              "arguments": [
                                                {
                                                  "id": 2536,
                                                  "name": "givenRuling",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2480,
                                                  "src": "23817:11:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                    "typeString": "enum ITruthPost.RulingOptions"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_enum$_RulingOptions_$295",
                                                    "typeString": "enum ITruthPost.RulingOptions"
                                                  }
                                                ],
                                                "id": 2535,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "23809:7:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                  "id": 2534,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "23809:7:5",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 2537,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "23809:20:5",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "23787:43:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "23665:165:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "23586:268:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2543,
                                    "nodeType": "ExpressionStatement",
                                    "src": "23586:268:5"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 2594,
                        "nodeType": "IfStatement",
                        "src": "23176:1233:5",
                        "trueBody": {
                          "id": 2505,
                          "nodeType": "Block",
                          "src": "23219:176:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 2503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2493,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2476,
                                  "src": "23319:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 2494,
                                        "name": "_round",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2465,
                                        "src": "23328:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                          "typeString": "struct TruthPost.Round storage pointer"
                                        }
                                      },
                                      "id": 2495,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "contributions",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 755,
                                      "src": "23328:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$3_storage_$",
                                        "typeString": "mapping(address => uint256[3] storage ref)"
                                      }
                                    },
                                    "id": 2497,
                                    "indexExpression": {
                                      "id": 2496,
                                      "name": "_contributor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2467,
                                      "src": "23349:12:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "23328:34:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                      "typeString": "uint256[3] storage ref"
                                    }
                                  },
                                  "id": 2502,
                                  "indexExpression": {
                                    "arguments": [
                                      {
                                        "id": 2500,
                                        "name": "givenRuling",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2480,
                                        "src": "23371:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                                          "typeString": "enum ITruthPost.RulingOptions"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                                          "typeString": "enum ITruthPost.RulingOptions"
                                        }
                                      ],
                                      "id": 2499,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "23363:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 2498,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "23363:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2501,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "23363:20:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "23328:56:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23319:65:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2504,
                              "nodeType": "ExpressionStatement",
                              "src": "23319:65:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2462,
                    "nodeType": "StructuredDocumentation",
                    "src": "22836:61:5",
                    "text": "@notice Returns withdrawable amount for given parameters."
                  },
                  "id": 2596,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getWithdrawableAmount",
                  "nameLocation": "22911:21:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2474,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2465,
                        "mutability": "mutable",
                        "name": "_round",
                        "nameLocation": "22956:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2596,
                        "src": "22942:20:5",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                          "typeString": "struct TruthPost.Round"
                        },
                        "typeName": {
                          "id": 2464,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2463,
                            "name": "Round",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 770,
                            "src": "22942:5:5"
                          },
                          "referencedDeclaration": 770,
                          "src": "22942:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                            "typeString": "struct TruthPost.Round"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2467,
                        "mutability": "mutable",
                        "name": "_contributor",
                        "nameLocation": "22980:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2596,
                        "src": "22972:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2466,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "22972:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2470,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "23016:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2596,
                        "src": "23002:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 2469,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2468,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "23002:13:5"
                          },
                          "referencedDeclaration": 295,
                          "src": "23002:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2473,
                        "mutability": "mutable",
                        "name": "_finalRuling",
                        "nameLocation": "23047:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2596,
                        "src": "23033:26:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 2472,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2471,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "23033:13:5"
                          },
                          "referencedDeclaration": 295,
                          "src": "23033:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22932:133:5"
                  },
                  "returnParameters": {
                    "id": 2477,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2476,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "23097:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2596,
                        "src": "23089:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23089:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23088:16:5"
                  },
                  "scope": 2850,
                  "src": "22902:1513:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    644
                  ],
                  "body": {
                    "id": 2637,
                    "nodeType": "Block",
                    "src": "24773:163:5",
                    "statements": [
                      {
                        "assignments": [
                          2621
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2621,
                            "mutability": "mutable",
                            "name": "round",
                            "nameLocation": "24797:5:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2637,
                            "src": "24783:19:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                              "typeString": "struct TruthPost.Round"
                            },
                            "typeName": {
                              "id": 2620,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2619,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 770,
                                "src": "24783:5:5"
                              },
                              "referencedDeclaration": 770,
                              "src": "24783:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                "typeString": "struct TruthPost.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2628,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2622,
                                "name": "disputes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 793,
                                "src": "24805:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$",
                                  "typeString": "mapping(uint256 => struct TruthPost.DisputeData storage ref)"
                                }
                              },
                              "id": 2624,
                              "indexExpression": {
                                "id": 2623,
                                "name": "_disputeID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2599,
                                "src": "24814:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "24805:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage",
                                "typeString": "struct TruthPost.DisputeData storage ref"
                              }
                            },
                            "id": 2625,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rounds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 746,
                            "src": "24805:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Round_$770_storage_$dyn_storage",
                              "typeString": "struct TruthPost.Round storage ref[] storage ref"
                            }
                          },
                          "id": 2627,
                          "indexExpression": {
                            "id": 2626,
                            "name": "_round",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2601,
                            "src": "24833:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24805:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$770_storage",
                            "typeString": "struct TruthPost.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "24783:57:5"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 2629,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2621,
                                "src": "24858:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                  "typeString": "struct TruthPost.Round storage pointer"
                                }
                              },
                              "id": 2630,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "hasPaid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 761,
                              "src": "24858:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$3_storage",
                                "typeString": "bool[3] storage ref"
                              }
                            },
                            {
                              "expression": {
                                "id": 2631,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2621,
                                "src": "24873:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                  "typeString": "struct TruthPost.Round storage pointer"
                                }
                              },
                              "id": 2632,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalPerRuling",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 767,
                              "src": "24873:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                "typeString": "uint256[3] storage ref"
                              }
                            },
                            {
                              "expression": {
                                "id": 2633,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2621,
                                "src": "24895:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                  "typeString": "struct TruthPost.Round storage pointer"
                                }
                              },
                              "id": 2634,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalClaimableAfterExpenses",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 769,
                              "src": "24895:33:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2635,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "24857:72:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_bool_$3_storage_$_t_array$_t_uint256_$3_storage_$_t_uint256_$",
                            "typeString": "tuple(bool[3] storage ref,uint256[3] storage ref,uint256)"
                          }
                        },
                        "functionReturnParameters": 2618,
                        "id": 2636,
                        "nodeType": "Return",
                        "src": "24850:79:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2597,
                    "nodeType": "StructuredDocumentation",
                    "src": "24421:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "8a9bb02a",
                  "id": 2638,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoundInfo",
                  "nameLocation": "24461:12:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2603,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "24548:8:5"
                  },
                  "parameters": {
                    "id": 2602,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2599,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "24482:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2638,
                        "src": "24474:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2598,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "24474:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2601,
                        "mutability": "mutable",
                        "name": "_round",
                        "nameLocation": "24502:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2638,
                        "src": "24494:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2600,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "24494:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "24473:36:5"
                  },
                  "returnParameters": {
                    "id": 2618,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2609,
                        "mutability": "mutable",
                        "name": "hasPaid",
                        "nameLocation": "24629:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2638,
                        "src": "24587:49:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$3_memory_ptr",
                          "typeString": "bool[3]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2604,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "24587:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2608,
                          "length": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2605,
                              "name": "NUMBER_OF_RULING_OPTIONS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "24592:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 2606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24619:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "24592:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "24587:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$3_storage_ptr",
                            "typeString": "bool[3]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2615,
                        "mutability": "mutable",
                        "name": "totalPerRuling",
                        "nameLocation": "24695:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2638,
                        "src": "24650:59:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2610,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "24650:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2614,
                          "length": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2611,
                              "name": "NUMBER_OF_RULING_OPTIONS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "24658:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 2612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24685:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "24658:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "24650:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                            "typeString": "uint256[3]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2617,
                        "mutability": "mutable",
                        "name": "totalClaimableAfterExpenses",
                        "nameLocation": "24731:27:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2638,
                        "src": "24723:35:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2616,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "24723:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "24573:195:5"
                  },
                  "scope": 2850,
                  "src": "24452:484:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    688
                  ],
                  "body": {
                    "id": 2652,
                    "nodeType": "Block",
                    "src": "25060:60:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2649,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2641,
                              "src": "25102:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2647,
                              "name": "ARBITRATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 707,
                              "src": "25077:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitrator_$249",
                                "typeString": "contract IArbitrator"
                              }
                            },
                            "id": 2648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "currentRuling",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 248,
                            "src": "25077:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 2650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25077:36:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2646,
                        "id": 2651,
                        "nodeType": "Return",
                        "src": "25070:43:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2639,
                    "nodeType": "StructuredDocumentation",
                    "src": "24942:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "7f67bd6c",
                  "id": 2653,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLastRoundWinner",
                  "nameLocation": "24982:18:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2643,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "25033:8:5"
                  },
                  "parameters": {
                    "id": 2642,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2641,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "25009:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2653,
                        "src": "25001:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2640,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25001:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "25000:20:5"
                  },
                  "returnParameters": {
                    "id": 2646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2645,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2653,
                        "src": "25051:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2644,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25051:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "25050:9:5"
                  },
                  "scope": 2850,
                  "src": "24973:147:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    680
                  ],
                  "body": {
                    "id": 2710,
                    "nodeType": "Block",
                    "src": "25311:470:5",
                    "statements": [
                      {
                        "assignments": [
                          2668,
                          2670
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2668,
                            "mutability": "mutable",
                            "name": "appealWindowStart",
                            "nameLocation": "25330:17:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2710,
                            "src": "25322:25:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2667,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "25322:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2670,
                            "mutability": "mutable",
                            "name": "appealWindowEnd",
                            "nameLocation": "25357:15:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2710,
                            "src": "25349:23:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2669,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "25349:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2675,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2673,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2656,
                              "src": "25400:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2671,
                              "name": "ARBITRATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 707,
                              "src": "25376:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitrator_$249",
                                "typeString": "contract IArbitrator"
                              }
                            },
                            "id": 2672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "appealPeriod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 231,
                            "src": "25376:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256,uint256)"
                            }
                          },
                          "id": 2674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25376:35:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25321:90:5"
                      },
                      {
                        "assignments": [
                          2677
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2677,
                            "mutability": "mutable",
                            "name": "loserAppealWindowEnd",
                            "nameLocation": "25429:20:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2710,
                            "src": "25421:28:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2676,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "25421:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2690,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2678,
                            "name": "appealWindowStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2668,
                            "src": "25452:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2684,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2681,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2679,
                                              "name": "appealWindowEnd",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2670,
                                              "src": "25487:15:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "id": 2680,
                                              "name": "appealWindowStart",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2668,
                                              "src": "25505:17:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "25487:35:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2682,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "25486:37:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 2683,
                                        "name": "LOSER_APPEAL_PERIOD_MULTIPLIER",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 311,
                                        "src": "25526:30:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "25486:70:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2685,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "25485:72:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 2686,
                                  "name": "MULTIPLIER_DENOMINATOR",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 308,
                                  "src": "25560:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "25485:97:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2688,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "25484:99:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "25452:131:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25421:162:5"
                      },
                      {
                        "assignments": [
                          2692
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2692,
                            "mutability": "mutable",
                            "name": "isWinner",
                            "nameLocation": "25599:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2710,
                            "src": "25594:13:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2691,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "25594:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2700,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          },
                          "id": 2699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2695,
                                    "name": "_disputeID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2656,
                                    "src": "25643:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2694,
                                  "name": "getLastRoundWinner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    2653
                                  ],
                                  "referencedDeclaration": 2653,
                                  "src": "25624:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view returns (uint256)"
                                  }
                                },
                                "id": 2696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25624:30:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2693,
                              "name": "RulingOptions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 295,
                              "src": "25610:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                "typeString": "type(enum ITruthPost.RulingOptions)"
                              }
                            },
                            "id": 2697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25610:45:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2698,
                            "name": "_ruling",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2659,
                            "src": "25659:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            }
                          },
                          "src": "25610:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25594:72:5"
                      },
                      {
                        "expression": {
                          "condition": {
                            "id": 2701,
                            "name": "isWinner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2692,
                            "src": "25683:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "components": [
                              {
                                "id": 2705,
                                "name": "appealWindowStart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2668,
                                "src": "25734:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2706,
                                "name": "loserAppealWindowEnd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2677,
                                "src": "25753:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2707,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "25733:41:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "id": 2708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "25683:91:5",
                          "trueExpression": {
                            "components": [
                              {
                                "id": 2702,
                                "name": "appealWindowStart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2668,
                                "src": "25695:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2703,
                                "name": "appealWindowEnd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2670,
                                "src": "25714:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2704,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "25694:36:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 2666,
                        "id": 2709,
                        "nodeType": "Return",
                        "src": "25676:98:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2654,
                    "nodeType": "StructuredDocumentation",
                    "src": "25126:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "638af3da",
                  "id": 2711,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAppealPeriod",
                  "nameLocation": "25166:15:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2661,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "25263:8:5"
                  },
                  "parameters": {
                    "id": 2660,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2656,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "25190:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2711,
                        "src": "25182:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2655,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25182:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2659,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "25216:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2711,
                        "src": "25202:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 2658,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2657,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "25202:13:5"
                          },
                          "referencedDeclaration": 295,
                          "src": "25202:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "25181:43:5"
                  },
                  "returnParameters": {
                    "id": 2666,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2663,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2711,
                        "src": "25289:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2662,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25289:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2665,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2711,
                        "src": "25298:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2664,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25298:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "25288:18:5"
                  },
                  "scope": 2850,
                  "src": "25157:624:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    667
                  ],
                  "body": {
                    "id": 2757,
                    "nodeType": "Block",
                    "src": "25986:360:5",
                    "statements": [
                      {
                        "assignments": [
                          2725
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2725,
                            "mutability": "mutable",
                            "name": "isWinner",
                            "nameLocation": "26001:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2757,
                            "src": "25996:13:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2724,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "25996:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2729,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          },
                          "id": 2728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2726,
                            "name": "_lastRoundWinner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2718,
                            "src": "26012:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2727,
                            "name": "_ruling",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2715,
                            "src": "26032:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            }
                          },
                          "src": "26012:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25996:43:5"
                      },
                      {
                        "assignments": [
                          2731
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2731,
                            "mutability": "mutable",
                            "name": "DECIMAL_PRECISION",
                            "nameLocation": "26057:17:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2757,
                            "src": "26049:25:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2730,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "26049:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2733,
                        "initialValue": {
                          "hexValue": "31303030",
                          "id": 2732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26077:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26049:32:5"
                      },
                      {
                        "assignments": [
                          2735
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2735,
                            "mutability": "mutable",
                            "name": "multiplier",
                            "nameLocation": "26099:10:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2757,
                            "src": "26091:18:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2734,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "26091:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2740,
                        "initialValue": {
                          "condition": {
                            "id": 2736,
                            "name": "isWinner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2725,
                            "src": "26112:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 2738,
                            "name": "LOSER_STAKE_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "26149:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "26112:59:5",
                          "trueExpression": {
                            "id": 2737,
                            "name": "WINNER_STAKE_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "26123:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26091:80:5"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2748,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2745,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2743,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2741,
                                              "name": "WINNER_STAKE_MULTIPLIER",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 315,
                                              "src": "26191:23:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "id": 2742,
                                              "name": "LOSER_STAKE_MULTIPLIER",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 317,
                                              "src": "26217:22:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "26191:48:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "+",
                                          "rightExpression": {
                                            "id": 2744,
                                            "name": "MULTIPLIER_DENOMINATOR",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 308,
                                            "src": "26242:22:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "26191:73:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 2746,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "26190:75:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2747,
                                      "name": "DECIMAL_PRECISION",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2731,
                                      "src": "26268:17:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "26190:95:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2749,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "26189:97:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2752,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2750,
                                      "name": "multiplier",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2735,
                                      "src": "26302:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 2751,
                                      "name": "MULTIPLIER_DENOMINATOR",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 308,
                                      "src": "26315:22:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "26302:35:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2753,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "26301:37:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "26189:149:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2755,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "26188:151:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2723,
                        "id": 2756,
                        "nodeType": "Return",
                        "src": "26181:158:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2712,
                    "nodeType": "StructuredDocumentation",
                    "src": "25787:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "b4c70581",
                  "id": 2758,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReturnOfInvestmentRatio",
                  "nameLocation": "25827:26:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2720,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "25947:8:5"
                  },
                  "parameters": {
                    "id": 2719,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2715,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "25868:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2758,
                        "src": "25854:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 2714,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2713,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "25854:13:5"
                          },
                          "referencedDeclaration": 295,
                          "src": "25854:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2718,
                        "mutability": "mutable",
                        "name": "_lastRoundWinner",
                        "nameLocation": "25891:16:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2758,
                        "src": "25877:30:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 2717,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2716,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "25877:13:5"
                          },
                          "referencedDeclaration": 295,
                          "src": "25877:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "25853:55:5"
                  },
                  "returnParameters": {
                    "id": 2723,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2722,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2758,
                        "src": "25973:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2721,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25973:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "25972:9:5"
                  },
                  "scope": 2850,
                  "src": "25818:528:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    655
                  ],
                  "body": {
                    "id": 2848,
                    "nodeType": "Block",
                    "src": "26539:696:5",
                    "statements": [
                      {
                        "assignments": [
                          2772
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2772,
                            "mutability": "mutable",
                            "name": "dispute",
                            "nameLocation": "26569:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2848,
                            "src": "26549:27:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                              "typeString": "struct TruthPost.DisputeData"
                            },
                            "typeName": {
                              "id": 2771,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2770,
                                "name": "DisputeData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 747,
                                "src": "26549:11:5"
                              },
                              "referencedDeclaration": 747,
                              "src": "26549:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2776,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2773,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "26579:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeData_$747_storage_$",
                              "typeString": "mapping(uint256 => struct TruthPost.DisputeData storage ref)"
                            }
                          },
                          "id": 2775,
                          "indexExpression": {
                            "id": 2774,
                            "name": "_disputeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2761,
                            "src": "26588:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26579:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DisputeData_$747_storage",
                            "typeString": "struct TruthPost.DisputeData storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26549:50:5"
                      },
                      {
                        "assignments": [
                          2778
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2778,
                            "mutability": "mutable",
                            "name": "lastRoundIndex",
                            "nameLocation": "26617:14:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2848,
                            "src": "26609:22:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2777,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "26609:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2784,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 2779,
                                "name": "dispute",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2772,
                                "src": "26634:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                  "typeString": "struct TruthPost.DisputeData storage pointer"
                                }
                              },
                              "id": 2780,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rounds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 746,
                              "src": "26634:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Round_$770_storage_$dyn_storage",
                                "typeString": "struct TruthPost.Round storage ref[] storage ref"
                              }
                            },
                            "id": 2781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "26634:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 2782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26658:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "26634:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26609:50:5"
                      },
                      {
                        "assignments": [
                          2787
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2787,
                            "mutability": "mutable",
                            "name": "lastRound",
                            "nameLocation": "26683:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2848,
                            "src": "26669:23:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                              "typeString": "struct TruthPost.Round"
                            },
                            "typeName": {
                              "id": 2786,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2785,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 770,
                                "src": "26669:5:5"
                              },
                              "referencedDeclaration": 770,
                              "src": "26669:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                "typeString": "struct TruthPost.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2792,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 2788,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2772,
                              "src": "26695:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                "typeString": "struct TruthPost.DisputeData storage pointer"
                              }
                            },
                            "id": 2789,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rounds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 746,
                            "src": "26695:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Round_$770_storage_$dyn_storage",
                              "typeString": "struct TruthPost.Round storage ref[] storage ref"
                            }
                          },
                          "id": 2791,
                          "indexExpression": {
                            "id": 2790,
                            "name": "lastRoundIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2778,
                            "src": "26710:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26695:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$770_storage",
                            "typeString": "struct TruthPost.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26669:56:5"
                      },
                      {
                        "assignments": [
                          2794
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2794,
                            "mutability": "mutable",
                            "name": "isWinner",
                            "nameLocation": "26741:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2848,
                            "src": "26736:13:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2793,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "26736:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2802,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          },
                          "id": 2801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2797,
                                    "name": "_disputeID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2761,
                                    "src": "26785:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2796,
                                  "name": "getLastRoundWinner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    2653
                                  ],
                                  "referencedDeclaration": 2653,
                                  "src": "26766:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view returns (uint256)"
                                  }
                                },
                                "id": 2798,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26766:30:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2795,
                              "name": "RulingOptions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 295,
                              "src": "26752:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_RulingOptions_$295_$",
                                "typeString": "type(enum ITruthPost.RulingOptions)"
                              }
                            },
                            "id": 2799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26752:45:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2800,
                            "name": "_ruling",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2764,
                            "src": "26801:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$295",
                              "typeString": "enum ITruthPost.RulingOptions"
                            }
                          },
                          "src": "26752:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26736:72:5"
                      },
                      {
                        "assignments": [
                          2804
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2804,
                            "mutability": "mutable",
                            "name": "multiplier",
                            "nameLocation": "26826:10:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2848,
                            "src": "26818:18:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2803,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "26818:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2809,
                        "initialValue": {
                          "condition": {
                            "id": 2805,
                            "name": "isWinner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2794,
                            "src": "26839:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 2807,
                            "name": "LOSER_STAKE_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "26876:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "26839:59:5",
                          "trueExpression": {
                            "id": 2806,
                            "name": "WINNER_STAKE_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "26850:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26818:80:5"
                      },
                      {
                        "assignments": [
                          2811
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2811,
                            "mutability": "mutable",
                            "name": "raisedSoFar",
                            "nameLocation": "26917:11:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2848,
                            "src": "26909:19:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2810,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "26909:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2819,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 2812,
                              "name": "lastRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2787,
                              "src": "26931:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$770_storage_ptr",
                                "typeString": "struct TruthPost.Round storage pointer"
                              }
                            },
                            "id": 2813,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalPerRuling",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 767,
                            "src": "26931:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$3_storage",
                              "typeString": "uint256[3] storage ref"
                            }
                          },
                          "id": 2818,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 2816,
                                "name": "_ruling",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2764,
                                "src": "26964:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RulingOptions_$295",
                                  "typeString": "enum ITruthPost.RulingOptions"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_RulingOptions_$295",
                                  "typeString": "enum ITruthPost.RulingOptions"
                                }
                              ],
                              "id": 2815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "26956:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2814,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "26956:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26956:16:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26931:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26909:64:5"
                      },
                      {
                        "assignments": [
                          2821
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2821,
                            "mutability": "mutable",
                            "name": "basicCost",
                            "nameLocation": "26991:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2848,
                            "src": "26983:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2820,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "26983:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2830,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2824,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2761,
                              "src": "27025:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 2825,
                                "name": "categoryToArbitratorExtraData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 783,
                                "src": "27037:29:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_storage_$64_storage",
                                  "typeString": "bytes storage ref[64] storage ref"
                                }
                              },
                              "id": 2828,
                              "indexExpression": {
                                "expression": {
                                  "id": 2826,
                                  "name": "dispute",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2772,
                                  "src": "27067:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DisputeData_$747_storage_ptr",
                                    "typeString": "struct TruthPost.DisputeData storage pointer"
                                  }
                                },
                                "id": 2827,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "articleCategory",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 738,
                                "src": "27067:23:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "27037:54:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            ],
                            "expression": {
                              "id": 2822,
                              "name": "ARBITRATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 707,
                              "src": "27003:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitrator_$249",
                                "typeString": "contract IArbitrator"
                              }
                            },
                            "id": 2823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "appealCost",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 221,
                            "src": "27003:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,bytes memory) view external returns (uint256)"
                            }
                          },
                          "id": 2829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27003:89:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26983:109:5"
                      },
                      {
                        "assignments": [
                          2832
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2832,
                            "mutability": "mutable",
                            "name": "totalCost",
                            "nameLocation": "27110:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2848,
                            "src": "27102:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2831,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "27102:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2843,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2833,
                            "name": "basicCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2821,
                            "src": "27122:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2840,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2837,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2834,
                                        "name": "basicCost",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2821,
                                        "src": "27136:9:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "id": 2835,
                                            "name": "multiplier",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2804,
                                            "src": "27149:10:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2836,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "27148:12:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "27136:24:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2838,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "27135:26:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 2839,
                                  "name": "MULTIPLIER_DENOMINATOR",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 308,
                                  "src": "27164:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "27135:51:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2841,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "27134:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27122:65:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27102:85:5"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2844,
                            "name": "totalCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2832,
                            "src": "27205:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2845,
                            "name": "raisedSoFar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2811,
                            "src": "27217:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27205:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2769,
                        "id": 2847,
                        "nodeType": "Return",
                        "src": "27198:30:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2759,
                    "nodeType": "StructuredDocumentation",
                    "src": "26352:26:5",
                    "text": "@inheritdoc ITruthPost"
                  },
                  "functionSelector": "a509efeb",
                  "id": 2849,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountRemainsToBeRaised",
                  "nameLocation": "26392:26:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2766,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "26500:8:5"
                  },
                  "parameters": {
                    "id": 2765,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2761,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "26427:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2849,
                        "src": "26419:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2760,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26419:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2764,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "26453:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2849,
                        "src": "26439:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RulingOptions_$295",
                          "typeString": "enum ITruthPost.RulingOptions"
                        },
                        "typeName": {
                          "id": 2763,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2762,
                            "name": "RulingOptions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "26439:13:5"
                          },
                          "referencedDeclaration": 295,
                          "src": "26439:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$295",
                            "typeString": "enum ITruthPost.RulingOptions"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "26418:43:5"
                  },
                  "returnParameters": {
                    "id": 2769,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2768,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2849,
                        "src": "26526:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2767,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26526:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "26525:9:5"
                  },
                  "scope": 2850,
                  "src": "26383:852:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2851,
              "src": "1105:26133:5",
              "usedErrors": []
            }
          ],
          "src": "34:27205:5"
        },
        "id": 5
      },
      "contracts/for-testing-purposes/Arbitrator.sol": {
        "ast": {
          "absolutePath": "contracts/for-testing-purposes/Arbitrator.sol",
          "exportedSymbols": {
            "Arbitrator": [
              3247
            ],
            "IArbitrable": [
              153
            ],
            "IArbitrator": [
              249
            ]
          },
          "id": 3248,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2852,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:25:6"
            },
            {
              "absolutePath": "@kleros/erc-792/contracts/IArbitrable.sol",
              "file": "@kleros/erc-792/contracts/IArbitrable.sol",
              "id": 2853,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3248,
              "sourceUnit": 154,
              "src": "60:51:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@kleros/erc-792/contracts/IArbitrator.sol",
              "file": "@kleros/erc-792/contracts/IArbitrator.sol",
              "id": 2854,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3248,
              "sourceUnit": 250,
              "src": "112:51:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2856,
                    "name": "IArbitrator",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 249,
                    "src": "288:11:6"
                  },
                  "id": 2857,
                  "nodeType": "InheritanceSpecifier",
                  "src": "288:11:6"
                }
              ],
              "canonicalName": "Arbitrator",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2855,
                "nodeType": "StructuredDocumentation",
                "src": "165:99:6",
                "text": "@title An IArbitrator implemetation for testing purposes.\n  @dev DON'T USE ON PRODUCTION."
              },
              "fullyImplemented": true,
              "id": 3247,
              "linearizedBaseContracts": [
                3247,
                249
              ],
              "name": "Arbitrator",
              "nameLocation": "274:10:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "0c340a24",
                  "id": 2861,
                  "mutability": "mutable",
                  "name": "governor",
                  "nameLocation": "319:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3247,
                  "src": "304:36:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "expression": {
                      "id": 2859,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "330:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "330:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 2864,
                  "mutability": "mutable",
                  "name": "arbitrationPrice",
                  "nameLocation": "361:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3247,
                  "src": "344:61:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "315f3030305f3030305f3030305f3030305f3030305f303030",
                    "id": 2863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "380:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1_000_000_000_000_000_000"
                  },
                  "visibility": "internal"
                },
                {
                  "canonicalName": "Arbitrator.Dispute",
                  "id": 2877,
                  "members": [
                    {
                      "constant": false,
                      "id": 2867,
                      "mutability": "mutable",
                      "name": "arbitrated",
                      "nameLocation": "443:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2877,
                      "src": "431:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IArbitrable_$153",
                        "typeString": "contract IArbitrable"
                      },
                      "typeName": {
                        "id": 2866,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2865,
                          "name": "IArbitrable",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 153,
                          "src": "431:11:6"
                        },
                        "referencedDeclaration": 153,
                        "src": "431:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$153",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2869,
                      "mutability": "mutable",
                      "name": "appealDeadline",
                      "nameLocation": "467:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2877,
                      "src": "459:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2868,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "459:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2871,
                      "mutability": "mutable",
                      "name": "numberOfRulingOptions",
                      "nameLocation": "495:21:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2877,
                      "src": "487:29:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2870,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "487:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2873,
                      "mutability": "mutable",
                      "name": "ruling",
                      "nameLocation": "530:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2877,
                      "src": "522:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2872,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "522:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2876,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "556:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2877,
                      "src": "542:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      },
                      "typeName": {
                        "id": 2875,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2874,
                          "name": "DisputeStatus",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 161,
                          "src": "542:13:6"
                        },
                        "referencedDeclaration": 161,
                        "src": "542:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum IArbitrator.DisputeStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Dispute",
                  "nameLocation": "417:7:6",
                  "nodeType": "StructDefinition",
                  "scope": 3247,
                  "src": "410:157:6",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2888,
                    "nodeType": "Block",
                    "src": "595:88:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2880,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "609:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "609:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2882,
                                "name": "governor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2861,
                                "src": "623:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "609:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c792062652063616c6c65642062792074686520676f7665726e6f722e",
                              "id": 2884,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "633:37:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0a67387a01b638629562ce413604ca06df839cc408aaf6c072640f1a5c4f2346",
                                "typeString": "literal_string \"Can only be called by the governor.\""
                              },
                              "value": "Can only be called by the governor."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0a67387a01b638629562ce413604ca06df839cc408aaf6c072640f1a5c4f2346",
                                "typeString": "literal_string \"Can only be called by the governor.\""
                              }
                            ],
                            "id": 2879,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "601:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "601:70:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2886,
                        "nodeType": "ExpressionStatement",
                        "src": "601:70:6"
                      },
                      {
                        "id": 2887,
                        "nodeType": "PlaceholderStatement",
                        "src": "677:1:6"
                      }
                    ]
                  },
                  "id": 2889,
                  "name": "onlyGovernor",
                  "nameLocation": "580:12:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 2878,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "592:2:6"
                  },
                  "src": "571:112:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "564a565d",
                  "id": 2893,
                  "mutability": "mutable",
                  "name": "disputes",
                  "nameLocation": "704:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3247,
                  "src": "687:25:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage",
                    "typeString": "struct Arbitrator.Dispute[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2891,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2890,
                        "name": "Dispute",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2877,
                        "src": "687:7:6"
                      },
                      "referencedDeclaration": 2877,
                      "src": "687:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                        "typeString": "struct Arbitrator.Dispute"
                      }
                    },
                    "id": 2892,
                    "nodeType": "ArrayTypeName",
                    "src": "687:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage_ptr",
                      "typeString": "struct Arbitrator.Dispute[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2904,
                    "nodeType": "Block",
                    "src": "795:47:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 2902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2900,
                            "name": "arbitrationPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2864,
                            "src": "801:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2901,
                            "name": "_arbitrationPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2895,
                            "src": "820:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "801:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2903,
                        "nodeType": "ExpressionStatement",
                        "src": "801:36:6"
                      }
                    ]
                  },
                  "functionSelector": "ffb43c48",
                  "id": 2905,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2898,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2897,
                        "name": "onlyGovernor",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2889,
                        "src": "782:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "782:12:6"
                    }
                  ],
                  "name": "setArbitrationPrice",
                  "nameLocation": "726:19:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2896,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2895,
                        "mutability": "mutable",
                        "name": "_arbitrationPrice",
                        "nameLocation": "754:17:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2905,
                        "src": "746:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2894,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "746:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "745:27:6"
                  },
                  "returnParameters": {
                    "id": 2899,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:0:6"
                  },
                  "scope": 3247,
                  "src": "717:125:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    203
                  ],
                  "body": {
                    "id": 2915,
                    "nodeType": "Block",
                    "src": "928:34:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 2913,
                          "name": "arbitrationPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2864,
                          "src": "941:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2912,
                        "id": 2914,
                        "nodeType": "Return",
                        "src": "934:23:6"
                      }
                    ]
                  },
                  "functionSelector": "f7434ea9",
                  "id": 2916,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "arbitrationCost",
                  "nameLocation": "855:15:6",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2909,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "897:8:6"
                  },
                  "parameters": {
                    "id": 2908,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2907,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2916,
                        "src": "871:12:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2906,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "871:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "870:14:6"
                  },
                  "returnParameters": {
                    "id": 2912,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2911,
                        "mutability": "mutable",
                        "name": "fee",
                        "nameLocation": "923:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2916,
                        "src": "915:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2910,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "915:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "914:13:6"
                  },
                  "scope": 3247,
                  "src": "846:116:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    221
                  ],
                  "body": {
                    "id": 2930,
                    "nodeType": "Block",
                    "src": "1052:43:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "554e55534544",
                              "id": 2927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1081:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_89e49fe053175ec61609573ccb6bb8748bcf5938b8ef47bb6eafa7f5251ad43f",
                                "typeString": "literal_string \"UNUSED\""
                              },
                              "value": "UNUSED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_89e49fe053175ec61609573ccb6bb8748bcf5938b8ef47bb6eafa7f5251ad43f",
                                "typeString": "literal_string \"UNUSED\""
                              }
                            ],
                            "id": 2926,
                            "name": "arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2916,
                            "src": "1065:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 2928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1065:25:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2925,
                        "id": 2929,
                        "nodeType": "Return",
                        "src": "1058:32:6"
                      }
                    ]
                  },
                  "functionSelector": "f23f16e6",
                  "id": 2931,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "appealCost",
                  "nameLocation": "975:10:6",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2922,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1021:8:6"
                  },
                  "parameters": {
                    "id": 2921,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2918,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2931,
                        "src": "986:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2917,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "986:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2920,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2931,
                        "src": "995:12:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2919,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "995:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "985:23:6"
                  },
                  "returnParameters": {
                    "id": 2925,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2924,
                        "mutability": "mutable",
                        "name": "fee",
                        "nameLocation": "1047:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2931,
                        "src": "1039:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2923,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1039:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1038:13:6"
                  },
                  "scope": 3247,
                  "src": "966:129:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    195
                  ],
                  "body": {
                    "id": 2986,
                    "nodeType": "Block",
                    "src": "1217:473:6",
                    "statements": [
                      {
                        "assignments": [
                          2942
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2942,
                            "mutability": "mutable",
                            "name": "arbitrationFee",
                            "nameLocation": "1231:14:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2986,
                            "src": "1223:22:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2941,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1223:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2946,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2944,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2935,
                              "src": "1264:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2943,
                            "name": "arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2916,
                            "src": "1248:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 2945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1248:27:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1223:52:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2948,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1289:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1289:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2950,
                                "name": "arbitrationFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2942,
                                "src": "1302:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1289:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56616c7565206973206c657373207468616e207265717569726564206172626974726174696f6e206665652e",
                              "id": 2952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1318:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ed65b2f49f93967b3a006e2788127dd02ebf255edcbc59f8b4e80c9299e6eca3",
                                "typeString": "literal_string \"Value is less than required arbitration fee.\""
                              },
                              "value": "Value is less than required arbitration fee."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ed65b2f49f93967b3a006e2788127dd02ebf255edcbc59f8b4e80c9299e6eca3",
                                "typeString": "literal_string \"Value is less than required arbitration fee.\""
                              }
                            ],
                            "id": 2947,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1281:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1281:84:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2954,
                        "nodeType": "ExpressionStatement",
                        "src": "1281:84:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 2960,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "1434:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2961,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "1434:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2959,
                                    "name": "IArbitrable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 153,
                                    "src": "1422:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IArbitrable_$153_$",
                                      "typeString": "type(contract IArbitrable)"
                                    }
                                  },
                                  "id": 2962,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1422:23:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IArbitrable_$153",
                                    "typeString": "contract IArbitrable"
                                  }
                                },
                                {
                                  "id": 2963,
                                  "name": "_choices",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2933,
                                  "src": "1478:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 2964,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1504:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "expression": {
                                    "id": 2965,
                                    "name": "DisputeStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 161,
                                    "src": "1523:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                                      "typeString": "type(enum IArbitrator.DisputeStatus)"
                                    }
                                  },
                                  "id": 2966,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Waiting",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 158,
                                  "src": "1523:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_DisputeStatus_$161",
                                    "typeString": "enum IArbitrator.DisputeStatus"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 2967,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1570:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IArbitrable_$153",
                                    "typeString": "contract IArbitrable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_DisputeStatus_$161",
                                    "typeString": "enum IArbitrator.DisputeStatus"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2958,
                                "name": "Dispute",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2877,
                                "src": "1392:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Dispute_$2877_storage_ptr_$",
                                  "typeString": "type(struct Arbitrator.Dispute storage pointer)"
                                }
                              },
                              "id": 2968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "arbitrated",
                                "numberOfRulingOptions",
                                "ruling",
                                "status",
                                "appealDeadline"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "1392:188:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dispute_$2877_memory_ptr",
                                "typeString": "struct Arbitrator.Dispute memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Dispute_$2877_memory_ptr",
                                "typeString": "struct Arbitrator.Dispute memory"
                              }
                            ],
                            "expression": {
                              "id": 2955,
                              "name": "disputes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2893,
                              "src": "1371:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage",
                                "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                              }
                            },
                            "id": 2957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1371:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage_ptr_$_t_struct$_Dispute_$2877_storage_$returns$__$bound_to$_t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Arbitrator.Dispute storage ref[] storage pointer,struct Arbitrator.Dispute storage ref)"
                            }
                          },
                          "id": 2969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1371:215:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2970,
                        "nodeType": "ExpressionStatement",
                        "src": "1371:215:6"
                      },
                      {
                        "expression": {
                          "id": 2976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2971,
                            "name": "disputeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2939,
                            "src": "1592:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2972,
                                "name": "disputes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2893,
                                "src": "1604:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage",
                                  "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                                }
                              },
                              "id": 2973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "1604:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 2974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1622:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "1604:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1592:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2977,
                        "nodeType": "ExpressionStatement",
                        "src": "1592:31:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2979,
                              "name": "disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2939,
                              "src": "1650:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2981,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1673:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2982,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1673:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2980,
                                "name": "IArbitrable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153,
                                "src": "1661:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IArbitrable_$153_$",
                                  "typeString": "type(contract IArbitrable)"
                                }
                              },
                              "id": 2983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1661:23:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitrable_$153",
                                "typeString": "contract IArbitrable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IArbitrable_$153",
                                "typeString": "contract IArbitrable"
                              }
                            ],
                            "id": 2978,
                            "name": "DisputeCreation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "1634:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_IArbitrable_$153_$returns$__$",
                              "typeString": "function (uint256,contract IArbitrable)"
                            }
                          },
                          "id": 2984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1634:51:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2985,
                        "nodeType": "EmitStatement",
                        "src": "1629:56:6"
                      }
                    ]
                  },
                  "functionSelector": "c13517e1",
                  "id": 2987,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createDispute",
                  "nameLocation": "1108:13:6",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2937,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1180:8:6"
                  },
                  "parameters": {
                    "id": 2936,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2933,
                        "mutability": "mutable",
                        "name": "_choices",
                        "nameLocation": "1130:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2987,
                        "src": "1122:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2932,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1122:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2935,
                        "mutability": "mutable",
                        "name": "_extraData",
                        "nameLocation": "1153:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2987,
                        "src": "1140:23:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2934,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1140:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1121:43:6"
                  },
                  "returnParameters": {
                    "id": 2940,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2939,
                        "mutability": "mutable",
                        "name": "disputeID",
                        "nameLocation": "1206:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2987,
                        "src": "1198:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2938,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1198:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1197:19:6"
                  },
                  "scope": 3247,
                  "src": "1099:591:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3050,
                    "nodeType": "Block",
                    "src": "1812:431:6",
                    "statements": [
                      {
                        "assignments": [
                          3000
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3000,
                            "mutability": "mutable",
                            "name": "dispute",
                            "nameLocation": "1834:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 3050,
                            "src": "1818:23:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                              "typeString": "struct Arbitrator.Dispute"
                            },
                            "typeName": {
                              "id": 2999,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2998,
                                "name": "Dispute",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2877,
                                "src": "1818:7:6"
                              },
                              "referencedDeclaration": 2877,
                              "src": "1818:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                "typeString": "struct Arbitrator.Dispute"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3004,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3001,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2893,
                            "src": "1844:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage",
                              "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                            }
                          },
                          "id": 3003,
                          "indexExpression": {
                            "id": 3002,
                            "name": "_disputeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2989,
                            "src": "1853:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1844:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$2877_storage",
                            "typeString": "struct Arbitrator.Dispute storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1818:46:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3006,
                                "name": "_ruling",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2991,
                                "src": "1878:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 3007,
                                  "name": "dispute",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3000,
                                  "src": "1889:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                    "typeString": "struct Arbitrator.Dispute storage pointer"
                                  }
                                },
                                "id": 3008,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "numberOfRulingOptions",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2871,
                                "src": "1889:29:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1878:40:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642072756c696e672e",
                              "id": 3010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1920:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6",
                                "typeString": "literal_string \"Invalid ruling.\""
                              },
                              "value": "Invalid ruling."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6",
                                "typeString": "literal_string \"Invalid ruling.\""
                              }
                            ],
                            "id": 3005,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1870:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1870:68:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3012,
                        "nodeType": "ExpressionStatement",
                        "src": "1870:68:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_DisputeStatus_$161",
                                "typeString": "enum IArbitrator.DisputeStatus"
                              },
                              "id": 3018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3014,
                                  "name": "dispute",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3000,
                                  "src": "1952:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                    "typeString": "struct Arbitrator.Dispute storage pointer"
                                  }
                                },
                                "id": 3015,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2876,
                                "src": "1952:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DisputeStatus_$161",
                                  "typeString": "enum IArbitrator.DisputeStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3016,
                                  "name": "DisputeStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 161,
                                  "src": "1970:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                                    "typeString": "type(enum IArbitrator.DisputeStatus)"
                                  }
                                },
                                "id": 3017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Waiting",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 158,
                                "src": "1970:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DisputeStatus_$161",
                                  "typeString": "enum IArbitrator.DisputeStatus"
                                }
                              },
                              "src": "1952:39:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5468652064697370757465206d7573742062652077616974696e6720666f72206172626974726174696f6e2e",
                              "id": 3019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1993:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634",
                                "typeString": "literal_string \"The dispute must be waiting for arbitration.\""
                              },
                              "value": "The dispute must be waiting for arbitration."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634",
                                "typeString": "literal_string \"The dispute must be waiting for arbitration.\""
                              }
                            ],
                            "id": 3013,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1944:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1944:96:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3021,
                        "nodeType": "ExpressionStatement",
                        "src": "1944:96:6"
                      },
                      {
                        "expression": {
                          "id": 3026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3022,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3000,
                              "src": "2047:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                "typeString": "struct Arbitrator.Dispute storage pointer"
                              }
                            },
                            "id": 3024,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "ruling",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2873,
                            "src": "2047:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3025,
                            "name": "_ruling",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2991,
                            "src": "2064:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2047:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3027,
                        "nodeType": "ExpressionStatement",
                        "src": "2047:24:6"
                      },
                      {
                        "expression": {
                          "id": 3033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3028,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3000,
                              "src": "2077:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                "typeString": "struct Arbitrator.Dispute storage pointer"
                              }
                            },
                            "id": 3030,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2876,
                            "src": "2077:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$161",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3031,
                              "name": "DisputeStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2094:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                                "typeString": "type(enum IArbitrator.DisputeStatus)"
                              }
                            },
                            "id": 3032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Appealable",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 159,
                            "src": "2094:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$161",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            }
                          },
                          "src": "2077:41:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum IArbitrator.DisputeStatus"
                          }
                        },
                        "id": 3034,
                        "nodeType": "ExpressionStatement",
                        "src": "2077:41:6"
                      },
                      {
                        "expression": {
                          "id": 3042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3035,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3000,
                              "src": "2124:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                "typeString": "struct Arbitrator.Dispute storage pointer"
                              }
                            },
                            "id": 3037,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "appealDeadline",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2869,
                            "src": "2124:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3038,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2149:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2149:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3040,
                              "name": "_appealWindow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2993,
                              "src": "2167:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2149:31:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2124:56:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3043,
                        "nodeType": "ExpressionStatement",
                        "src": "2124:56:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3045,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2989,
                              "src": "2207:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3046,
                                "name": "dispute",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3000,
                                "src": "2219:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                  "typeString": "struct Arbitrator.Dispute storage pointer"
                                }
                              },
                              "id": 3047,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arbitrated",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2867,
                              "src": "2219:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitrable_$153",
                                "typeString": "contract IArbitrable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IArbitrable_$153",
                                "typeString": "contract IArbitrable"
                              }
                            ],
                            "id": 3044,
                            "name": "AppealPossible",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 177,
                            "src": "2192:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_IArbitrable_$153_$returns$__$",
                              "typeString": "function (uint256,contract IArbitrable)"
                            }
                          },
                          "id": 3048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2192:46:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3049,
                        "nodeType": "EmitStatement",
                        "src": "2187:51:6"
                      }
                    ]
                  },
                  "functionSelector": "bc97d0f3",
                  "id": 3051,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2996,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2995,
                        "name": "onlyGovernor",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2889,
                        "src": "1799:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1799:12:6"
                    }
                  ],
                  "name": "giveRuling",
                  "nameLocation": "1703:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2994,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2989,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "1727:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 3051,
                        "src": "1719:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2988,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1719:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2991,
                        "mutability": "mutable",
                        "name": "_ruling",
                        "nameLocation": "1751:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 3051,
                        "src": "1743:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2990,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1743:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2993,
                        "mutability": "mutable",
                        "name": "_appealWindow",
                        "nameLocation": "1772:13:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 3051,
                        "src": "1764:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2992,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1764:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1713:76:6"
                  },
                  "returnParameters": {
                    "id": 2997,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1812:0:6"
                  },
                  "scope": 3247,
                  "src": "1694:549:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    211
                  ],
                  "body": {
                    "id": 3120,
                    "nodeType": "Block",
                    "src": "2332:544:6",
                    "statements": [
                      {
                        "assignments": [
                          3061
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3061,
                            "mutability": "mutable",
                            "name": "dispute",
                            "nameLocation": "2354:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 3120,
                            "src": "2338:23:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                              "typeString": "struct Arbitrator.Dispute"
                            },
                            "typeName": {
                              "id": 3060,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3059,
                                "name": "Dispute",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2877,
                                "src": "2338:7:6"
                              },
                              "referencedDeclaration": 2877,
                              "src": "2338:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                "typeString": "struct Arbitrator.Dispute"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3065,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3062,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2893,
                            "src": "2364:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage",
                              "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                            }
                          },
                          "id": 3064,
                          "indexExpression": {
                            "id": 3063,
                            "name": "_disputeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3053,
                            "src": "2373:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2364:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$2877_storage",
                            "typeString": "struct Arbitrator.Dispute storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2338:46:6"
                      },
                      {
                        "assignments": [
                          3067
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3067,
                            "mutability": "mutable",
                            "name": "appealFee",
                            "nameLocation": "2398:9:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 3120,
                            "src": "2390:17:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3066,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2390:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3072,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3069,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3053,
                              "src": "2421:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3070,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3055,
                              "src": "2433:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 3068,
                            "name": "appealCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2931,
                            "src": "2410:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 3071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2410:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2390:54:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_DisputeStatus_$161",
                                "typeString": "enum IArbitrator.DisputeStatus"
                              },
                              "id": 3078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3074,
                                  "name": "dispute",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3061,
                                  "src": "2458:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                    "typeString": "struct Arbitrator.Dispute storage pointer"
                                  }
                                },
                                "id": 3075,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2876,
                                "src": "2458:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DisputeStatus_$161",
                                  "typeString": "enum IArbitrator.DisputeStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3076,
                                  "name": "DisputeStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 161,
                                  "src": "2476:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                                    "typeString": "type(enum IArbitrator.DisputeStatus)"
                                  }
                                },
                                "id": 3077,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Appealable",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 159,
                                "src": "2476:24:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DisputeStatus_$161",
                                  "typeString": "enum IArbitrator.DisputeStatus"
                                }
                              },
                              "src": "2458:42:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5468652064697370757465206d7573742062652061707065616c61626c652e",
                              "id": 3079,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2502:33:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1",
                                "typeString": "literal_string \"The dispute must be appealable.\""
                              },
                              "value": "The dispute must be appealable."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1",
                                "typeString": "literal_string \"The dispute must be appealable.\""
                              }
                            ],
                            "id": 3073,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2450:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2450:86:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3081,
                        "nodeType": "ExpressionStatement",
                        "src": "2450:86:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3083,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2550:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3084,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "2550:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 3085,
                                  "name": "dispute",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3061,
                                  "src": "2568:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                    "typeString": "struct Arbitrator.Dispute storage pointer"
                                  }
                                },
                                "id": 3086,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "appealDeadline",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2869,
                                "src": "2568:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2550:40:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5468652061707065616c206d757374206f63637572206265666f72652074686520656e64206f66207468652061707065616c20706572696f642e",
                              "id": 3088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2592:60:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_785e30534d9aba417fa2efee2cef6269679d346420799f1ee0b4c1d9e65f4259",
                                "typeString": "literal_string \"The appeal must occur before the end of the appeal period.\""
                              },
                              "value": "The appeal must occur before the end of the appeal period."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_785e30534d9aba417fa2efee2cef6269679d346420799f1ee0b4c1d9e65f4259",
                                "typeString": "literal_string \"The appeal must occur before the end of the appeal period.\""
                              }
                            ],
                            "id": 3082,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2542:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:111:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3090,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:111:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3092,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2667:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2667:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 3094,
                                "name": "appealFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3067,
                                "src": "2680:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2667:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56616c7565206973206c657373207468616e2072657175697265642061707065616c20666565",
                              "id": 3096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2691:40:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4694def74d735a2c889563bbe682a7dedbe5ed436ba455a7b4f1b1153e6eb3c0",
                                "typeString": "literal_string \"Value is less than required appeal fee\""
                              },
                              "value": "Value is less than required appeal fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4694def74d735a2c889563bbe682a7dedbe5ed436ba455a7b4f1b1153e6eb3c0",
                                "typeString": "literal_string \"Value is less than required appeal fee\""
                              }
                            ],
                            "id": 3091,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2659:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2659:73:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3098,
                        "nodeType": "ExpressionStatement",
                        "src": "2659:73:6"
                      },
                      {
                        "expression": {
                          "id": 3103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3099,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3061,
                              "src": "2739:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                "typeString": "struct Arbitrator.Dispute storage pointer"
                              }
                            },
                            "id": 3101,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "appealDeadline",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2869,
                            "src": "2739:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 3102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2764:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2739:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3104,
                        "nodeType": "ExpressionStatement",
                        "src": "2739:26:6"
                      },
                      {
                        "expression": {
                          "id": 3110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3105,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3061,
                              "src": "2771:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                "typeString": "struct Arbitrator.Dispute storage pointer"
                              }
                            },
                            "id": 3107,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2876,
                            "src": "2771:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$161",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3108,
                              "name": "DisputeStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2788:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                                "typeString": "type(enum IArbitrator.DisputeStatus)"
                              }
                            },
                            "id": 3109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Waiting",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 158,
                            "src": "2788:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$161",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            }
                          },
                          "src": "2771:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum IArbitrator.DisputeStatus"
                          }
                        },
                        "id": 3111,
                        "nodeType": "ExpressionStatement",
                        "src": "2771:38:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3113,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3053,
                              "src": "2835:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3115,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2859:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3116,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2859:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3114,
                                "name": "IArbitrable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153,
                                "src": "2847:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IArbitrable_$153_$",
                                  "typeString": "type(contract IArbitrable)"
                                }
                              },
                              "id": 3117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2847:23:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitrable_$153",
                                "typeString": "contract IArbitrable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IArbitrable_$153",
                                "typeString": "contract IArbitrable"
                              }
                            ],
                            "id": 3112,
                            "name": "AppealDecision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "2820:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_IArbitrable_$153_$returns$__$",
                              "typeString": "function (uint256,contract IArbitrable)"
                            }
                          },
                          "id": 3118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2820:51:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3119,
                        "nodeType": "EmitStatement",
                        "src": "2815:56:6"
                      }
                    ]
                  },
                  "functionSelector": "49912f88",
                  "id": 3121,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "appeal",
                  "nameLocation": "2256:6:6",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3057,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2323:8:6"
                  },
                  "parameters": {
                    "id": 3056,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3053,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "2271:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 3121,
                        "src": "2263:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3052,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2263:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3055,
                        "mutability": "mutable",
                        "name": "_extraData",
                        "nameLocation": "2296:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 3121,
                        "src": "2283:23:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3054,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2283:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2262:45:6"
                  },
                  "returnParameters": {
                    "id": 3058,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2332:0:6"
                  },
                  "scope": 3247,
                  "src": "2247:629:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3168,
                    "nodeType": "Block",
                    "src": "2932:373:6",
                    "statements": [
                      {
                        "assignments": [
                          3128
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3128,
                            "mutability": "mutable",
                            "name": "dispute",
                            "nameLocation": "2954:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 3168,
                            "src": "2938:23:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                              "typeString": "struct Arbitrator.Dispute"
                            },
                            "typeName": {
                              "id": 3127,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3126,
                                "name": "Dispute",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2877,
                                "src": "2938:7:6"
                              },
                              "referencedDeclaration": 2877,
                              "src": "2938:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                "typeString": "struct Arbitrator.Dispute"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3132,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3129,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2893,
                            "src": "2964:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage",
                              "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                            }
                          },
                          "id": 3131,
                          "indexExpression": {
                            "id": 3130,
                            "name": "_disputeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3123,
                            "src": "2973:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2964:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$2877_storage",
                            "typeString": "struct Arbitrator.Dispute storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2938:46:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_DisputeStatus_$161",
                                "typeString": "enum IArbitrator.DisputeStatus"
                              },
                              "id": 3138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3134,
                                  "name": "dispute",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3128,
                                  "src": "2998:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                    "typeString": "struct Arbitrator.Dispute storage pointer"
                                  }
                                },
                                "id": 3135,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2876,
                                "src": "2998:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DisputeStatus_$161",
                                  "typeString": "enum IArbitrator.DisputeStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3136,
                                  "name": "DisputeStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 161,
                                  "src": "3016:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                                    "typeString": "type(enum IArbitrator.DisputeStatus)"
                                  }
                                },
                                "id": 3137,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Appealable",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 159,
                                "src": "3016:24:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DisputeStatus_$161",
                                  "typeString": "enum IArbitrator.DisputeStatus"
                                }
                              },
                              "src": "2998:42:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5468652064697370757465206d7573742062652061707065616c61626c652e",
                              "id": 3139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3042:33:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1",
                                "typeString": "literal_string \"The dispute must be appealable.\""
                              },
                              "value": "The dispute must be appealable."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1",
                                "typeString": "literal_string \"The dispute must be appealable.\""
                              }
                            ],
                            "id": 3133,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2990:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2990:86:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3141,
                        "nodeType": "ExpressionStatement",
                        "src": "2990:86:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3143,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "3090:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3090:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 3145,
                                  "name": "dispute",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3128,
                                  "src": "3109:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                    "typeString": "struct Arbitrator.Dispute storage pointer"
                                  }
                                },
                                "id": 3146,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "appealDeadline",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2869,
                                "src": "3109:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3090:41:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5468652064697370757465206d757374206265206578656375746564206166746572206974732061707065616c20706572696f642068617320656e6465642e",
                              "id": 3148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3133:65:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4ffb16c8c515bb19f47e2c39c4abe69591900df2f6712a42bdbaeaacd81aaa88",
                                "typeString": "literal_string \"The dispute must be executed after its appeal period has ended.\""
                              },
                              "value": "The dispute must be executed after its appeal period has ended."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4ffb16c8c515bb19f47e2c39c4abe69591900df2f6712a42bdbaeaacd81aaa88",
                                "typeString": "literal_string \"The dispute must be executed after its appeal period has ended.\""
                              }
                            ],
                            "id": 3142,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3082:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3082:117:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3150,
                        "nodeType": "ExpressionStatement",
                        "src": "3082:117:6"
                      },
                      {
                        "expression": {
                          "id": 3156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3151,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3128,
                              "src": "3206:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                "typeString": "struct Arbitrator.Dispute storage pointer"
                              }
                            },
                            "id": 3153,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2876,
                            "src": "3206:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$161",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3154,
                              "name": "DisputeStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "3223:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                                "typeString": "type(enum IArbitrator.DisputeStatus)"
                              }
                            },
                            "id": 3155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Solved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 160,
                            "src": "3223:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$161",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            }
                          },
                          "src": "3206:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum IArbitrator.DisputeStatus"
                          }
                        },
                        "id": 3157,
                        "nodeType": "ExpressionStatement",
                        "src": "3206:37:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3163,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3123,
                              "src": "3273:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3164,
                                "name": "dispute",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3128,
                                "src": "3285:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                  "typeString": "struct Arbitrator.Dispute storage pointer"
                                }
                              },
                              "id": 3165,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ruling",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2873,
                              "src": "3285:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 3158,
                                "name": "dispute",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3128,
                                "src": "3249:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                  "typeString": "struct Arbitrator.Dispute storage pointer"
                                }
                              },
                              "id": 3161,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arbitrated",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2867,
                              "src": "3249:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitrable_$153",
                                "typeString": "contract IArbitrable"
                              }
                            },
                            "id": 3162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 152,
                            "src": "3249:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 3166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3249:51:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3167,
                        "nodeType": "ExpressionStatement",
                        "src": "3249:51:6"
                      }
                    ]
                  },
                  "functionSelector": "8bb04875",
                  "id": 3169,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "executeRuling",
                  "nameLocation": "2889:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3124,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3123,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "2911:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 3169,
                        "src": "2903:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3122,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2903:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2902:20:6"
                  },
                  "returnParameters": {
                    "id": 3125,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2932:0:6"
                  },
                  "scope": 3247,
                  "src": "2880:425:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    240
                  ],
                  "body": {
                    "id": 3207,
                    "nodeType": "Block",
                    "src": "3404:343:6",
                    "statements": [
                      {
                        "assignments": [
                          3180
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3180,
                            "mutability": "mutable",
                            "name": "dispute",
                            "nameLocation": "3426:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 3207,
                            "src": "3410:23:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                              "typeString": "struct Arbitrator.Dispute"
                            },
                            "typeName": {
                              "id": 3179,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3178,
                                "name": "Dispute",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2877,
                                "src": "3410:7:6"
                              },
                              "referencedDeclaration": 2877,
                              "src": "3410:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                "typeString": "struct Arbitrator.Dispute"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3184,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3181,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2893,
                            "src": "3436:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage",
                              "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                            }
                          },
                          "id": 3183,
                          "indexExpression": {
                            "id": 3182,
                            "name": "_disputeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3171,
                            "src": "3445:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3436:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$2877_storage",
                            "typeString": "struct Arbitrator.Dispute storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3410:46:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$161",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            },
                            "id": 3191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3185,
                                  "name": "disputes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2893,
                                  "src": "3466:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage",
                                    "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                                  }
                                },
                                "id": 3187,
                                "indexExpression": {
                                  "id": 3186,
                                  "name": "_disputeID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3171,
                                  "src": "3475:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3466:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dispute_$2877_storage",
                                  "typeString": "struct Arbitrator.Dispute storage ref"
                                }
                              },
                              "id": 3188,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2876,
                              "src": "3466:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_DisputeStatus_$161",
                                "typeString": "enum IArbitrator.DisputeStatus"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 3189,
                                "name": "DisputeStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 161,
                                "src": "3497:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                                  "typeString": "type(enum IArbitrator.DisputeStatus)"
                                }
                              },
                              "id": 3190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Appealable",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 159,
                              "src": "3497:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_DisputeStatus_$161",
                                "typeString": "enum IArbitrator.DisputeStatus"
                              }
                            },
                            "src": "3466:55:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3192,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3525:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "3525:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "expression": {
                                "id": 3194,
                                "name": "dispute",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3180,
                                "src": "3544:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                  "typeString": "struct Arbitrator.Dispute storage pointer"
                                }
                              },
                              "id": 3195,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "appealDeadline",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2869,
                              "src": "3544:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3525:41:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3466:100:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 3201,
                                "name": "disputes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2893,
                                "src": "3715:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage",
                                  "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                                }
                              },
                              "id": 3203,
                              "indexExpression": {
                                "id": 3202,
                                "name": "_disputeID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3171,
                                "src": "3724:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3715:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dispute_$2877_storage",
                                "typeString": "struct Arbitrator.Dispute storage ref"
                              }
                            },
                            "id": 3204,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2876,
                            "src": "3715:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$161",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            }
                          },
                          "functionReturnParameters": 3177,
                          "id": 3205,
                          "nodeType": "Return",
                          "src": "3708:34:6"
                        },
                        "id": 3206,
                        "nodeType": "IfStatement",
                        "src": "3462:280:6",
                        "trueBody": {
                          "expression": {
                            "expression": {
                              "id": 3198,
                              "name": "DisputeStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "3677:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                                "typeString": "type(enum IArbitrator.DisputeStatus)"
                              }
                            },
                            "id": 3199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Solved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 160,
                            "src": "3677:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$161",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            }
                          },
                          "functionReturnParameters": 3177,
                          "id": 3200,
                          "nodeType": "Return",
                          "src": "3670:27:6"
                        }
                      }
                    ]
                  },
                  "functionSelector": "10f169e8",
                  "id": 3208,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "disputeStatus",
                  "nameLocation": "3318:13:6",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3173,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3364:8:6"
                  },
                  "parameters": {
                    "id": 3172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3171,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "3340:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 3208,
                        "src": "3332:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3170,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3332:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3331:20:6"
                  },
                  "returnParameters": {
                    "id": 3177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3176,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "3396:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 3208,
                        "src": "3382:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum IArbitrator.DisputeStatus"
                        },
                        "typeName": {
                          "id": 3175,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3174,
                            "name": "DisputeStatus",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 161,
                            "src": "3382:13:6"
                          },
                          "referencedDeclaration": 161,
                          "src": "3382:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum IArbitrator.DisputeStatus"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3381:22:6"
                  },
                  "scope": 3247,
                  "src": "3309:438:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    248
                  ],
                  "body": {
                    "id": 3221,
                    "nodeType": "Block",
                    "src": "3840:45:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3216,
                              "name": "disputes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2893,
                              "src": "3853:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage",
                                "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                              }
                            },
                            "id": 3218,
                            "indexExpression": {
                              "id": 3217,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3210,
                              "src": "3862:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3853:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$2877_storage",
                              "typeString": "struct Arbitrator.Dispute storage ref"
                            }
                          },
                          "id": 3219,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ruling",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2873,
                          "src": "3853:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3215,
                        "id": 3220,
                        "nodeType": "Return",
                        "src": "3846:34:6"
                      }
                    ]
                  },
                  "functionSelector": "1c3db16d",
                  "id": 3222,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "currentRuling",
                  "nameLocation": "3760:13:6",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3212,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3806:8:6"
                  },
                  "parameters": {
                    "id": 3211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3210,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "3782:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 3222,
                        "src": "3774:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3209,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3774:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3773:20:6"
                  },
                  "returnParameters": {
                    "id": 3215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3214,
                        "mutability": "mutable",
                        "name": "ruling",
                        "nameLocation": "3832:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 3222,
                        "src": "3824:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3213,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3824:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3823:16:6"
                  },
                  "scope": 3247,
                  "src": "3751:134:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    231
                  ],
                  "body": {
                    "id": 3245,
                    "nodeType": "Block",
                    "src": "3989:111:6",
                    "statements": [
                      {
                        "assignments": [
                          3234
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3234,
                            "mutability": "mutable",
                            "name": "dispute",
                            "nameLocation": "4011:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 3245,
                            "src": "3995:23:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                              "typeString": "struct Arbitrator.Dispute"
                            },
                            "typeName": {
                              "id": 3233,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3232,
                                "name": "Dispute",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2877,
                                "src": "3995:7:6"
                              },
                              "referencedDeclaration": 2877,
                              "src": "3995:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                "typeString": "struct Arbitrator.Dispute"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3238,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3235,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2893,
                            "src": "4021:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dispute_$2877_storage_$dyn_storage",
                              "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                            }
                          },
                          "id": 3237,
                          "indexExpression": {
                            "id": 3236,
                            "name": "_disputeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3224,
                            "src": "4030:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4021:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$2877_storage",
                            "typeString": "struct Arbitrator.Dispute storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3995:46:6"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 3239,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4055:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4055:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3241,
                                "name": "dispute",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3234,
                                "src": "4072:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dispute_$2877_storage_ptr",
                                  "typeString": "struct Arbitrator.Dispute storage pointer"
                                }
                              },
                              "id": 3242,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "appealDeadline",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2869,
                              "src": "4072:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3243,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4054:41:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 3231,
                        "id": 3244,
                        "nodeType": "Return",
                        "src": "4047:48:6"
                      }
                    ]
                  },
                  "functionSelector": "afe15cfb",
                  "id": 3246,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "appealPeriod",
                  "nameLocation": "3898:12:6",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3226,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3943:8:6"
                  },
                  "parameters": {
                    "id": 3225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3224,
                        "mutability": "mutable",
                        "name": "_disputeID",
                        "nameLocation": "3919:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 3246,
                        "src": "3911:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3911:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3910:20:6"
                  },
                  "returnParameters": {
                    "id": 3231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3228,
                        "mutability": "mutable",
                        "name": "start",
                        "nameLocation": "3969:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 3246,
                        "src": "3961:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3227,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3961:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3230,
                        "mutability": "mutable",
                        "name": "end",
                        "nameLocation": "3984:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 3246,
                        "src": "3976:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3229,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3976:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3960:28:6"
                  },
                  "scope": 3247,
                  "src": "3889:211:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 3248,
              "src": "265:3837:6",
              "usedErrors": []
            }
          ],
          "src": "33:4070:6"
        },
        "id": 6
      }
    }
  }
}
